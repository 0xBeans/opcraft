{"mappings":"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","sources":["../../node_modules/@ethersproject/bignumber/node_modules/bn.js/lib/bn.js","../../node_modules/@ethersproject/rlp/src.ts/index.ts","../../node_modules/@ethersproject/bytes/src.ts/index.ts","../../node_modules/@ethersproject/logger/src.ts/index.ts","../../node_modules/@ethersproject/logger/src.ts/_version.ts","../../node_modules/@ethersproject/bytes/src.ts/_version.ts","../../node_modules/@ethersproject/rlp/src.ts/_version.ts","../../node_modules/@ethersproject/base64/src.ts/index.ts","../../node_modules/@ethersproject/base64/src.ts/browser-base64.ts","../../node_modules/@ethersproject/signing-key/node_modules/bn.js/lib/bn.js","../../node_modules/hash.js/lib/hash/utils.js","../../node_modules/minimalistic-assert/index.js","../../node_modules/inherits/inherits_browser.js","../../node_modules/hash.js/lib/hash/common.js","../../node_modules/hash.js/lib/hash/sha.js","../../node_modules/hash.js/lib/hash/sha/1.js","../../node_modules/hash.js/lib/hash/sha/common.js","../../node_modules/hash.js/lib/hash/sha/224.js","../../node_modules/hash.js/lib/hash/sha/256.js","../../node_modules/hash.js/lib/hash/sha/384.js","../../node_modules/hash.js/lib/hash/sha/512.js","../../node_modules/hash.js/lib/hash/ripemd.js","../../node_modules/hash.js/lib/hash/hmac.js","../../node_modules/mobx/src/utils/global.ts","../../node_modules/mobx/src/utils/utils.ts","../../node_modules/mobx/src/api/decorators.ts","../../node_modules/mobx/src/core/atom.ts","../../node_modules/mobx/src/types/actionannotation.ts","../../node_modules/mobx/src/types/modifiers.ts","../../node_modules/mobx/src/utils/comparer.ts","../../node_modules/mobx/src/api/flow.ts","../../node_modules/mobx/src/types/overrideannotation.ts","../../node_modules/mobx/src/types/flowannotation.ts","../../node_modules/mobx/src/types/computedannotation.ts","../../node_modules/mobx/src/types/observableannotation.ts","../../node_modules/mobx/src/types/autoannotation.ts","../../node_modules/mobx/src/api/observable.ts","../../node_modules/mobx/src/api/computed.ts","../../node_modules/mobx/src/core/action.ts","../../node_modules/mobx/src/types/observablearray.ts","../../node_modules/mobx/src/types/observablevalue.ts","../../node_modules/mobx/src/core/computedvalue.ts","../../node_modules/mobx/src/core/derivation.ts","../../node_modules/mobx/src/core/reaction.ts","../../node_modules/mobx/src/core/globalstate.ts","../../node_modules/mobx/src/core/observable.ts","../../node_modules/mobx/src/core/spy.ts","../../node_modules/mobx/src/api/action.ts","../../node_modules/mobx/src/types/intercept-utils.ts","../../node_modules/mobx/src/api/autorun.ts","../../node_modules/mobx/src/api/become-observed.ts","../../node_modules/mobx/src/api/configure.ts","../../node_modules/mobx/src/api/extendobservable.ts","../../node_modules/mobx/src/api/extras.ts","../../node_modules/mobx/src/api/intercept-read.ts","../../node_modules/mobx/src/api/iscomputed.ts","../../node_modules/mobx/src/api/isobservable.ts","../../node_modules/mobx/src/api/object-api.ts","../../node_modules/mobx/src/api/tojs.ts","../../node_modules/mobx/src/types/listen-utils.ts","../../node_modules/mobx/src/api/makeObservable.ts","../../node_modules/mobx/src/types/observablemap.ts","../../node_modules/mobx/src/types/observableset.ts","../../node_modules/mobx/src/types/observableobject.ts","../../node_modules/mobx/src/types/legacyobservablearray.ts","../../node_modules/mobx/src/types/type-utils.ts","../../node_modules/mobx/src/utils/eq.ts","../../node_modules/mobx/src/utils/iterable.ts","../../node_modules/mobx/src/api/annotation.ts","../../node_modules/mobx/src/mobx.ts","../../node_modules/proxy-deep/index.js","../../node_modules/rxjs/node_modules/tslib/tslib.es6.js","../../node_modules/rxjs/src/internal/util/isFunction.ts","../../node_modules/rxjs/src/internal/util/createErrorClass.ts","../../node_modules/rxjs/src/internal/util/UnsubscriptionError.ts","../../node_modules/rxjs/src/internal/util/arrRemove.ts","../../node_modules/rxjs/src/internal/Subscription.ts","../../node_modules/rxjs/src/internal/config.ts","../../node_modules/rxjs/src/internal/scheduler/timeoutProvider.ts","../../node_modules/rxjs/src/internal/util/reportUnhandledError.ts","../../node_modules/rxjs/src/internal/util/noop.ts","../../node_modules/rxjs/src/internal/NotificationFactories.ts","../../node_modules/rxjs/src/internal/util/errorContext.ts","../../node_modules/rxjs/src/internal/Subscriber.ts","../../node_modules/rxjs/src/internal/symbol/observable.ts","../../node_modules/rxjs/src/internal/util/identity.ts","../../node_modules/rxjs/src/internal/util/pipe.ts","../../node_modules/rxjs/src/internal/Observable.ts","../../node_modules/rxjs/src/internal/util/ObjectUnsubscribedError.ts","../../node_modules/rxjs/src/internal/Subject.ts","../../node_modules/rxjs/src/internal/scheduler/dateTimestampProvider.ts","../../node_modules/rxjs/src/internal/ReplaySubject.ts","../../node_modules/rxjs/src/internal/util/lift.ts","../../node_modules/rxjs/src/internal/operators/OperatorSubscriber.ts","../../node_modules/rxjs/src/internal/operators/map.ts","../../node_modules/rxjs/src/internal/util/isArrayLike.ts","../../node_modules/rxjs/src/internal/util/isPromise.ts","../../node_modules/rxjs/src/internal/util/isInteropObservable.ts","../../node_modules/rxjs/src/internal/util/isAsyncIterable.ts","../../node_modules/rxjs/src/internal/util/throwUnobservableError.ts","../../node_modules/rxjs/src/internal/symbol/iterator.ts","../../node_modules/rxjs/src/internal/util/isIterable.ts","../../node_modules/rxjs/src/internal/util/isReadableStreamLike.ts","../../node_modules/rxjs/src/internal/observable/innerFrom.ts","../../node_modules/rxjs/src/internal/util/executeSchedule.ts","../../node_modules/rxjs/src/internal/operators/mergeInternals.ts","../../node_modules/rxjs/src/internal/operators/mergeMap.ts","../../node_modules/rxjs/src/internal/operators/concatAll.ts","../../node_modules/rxjs/src/internal/operators/mergeAll.ts","../../node_modules/rxjs/src/internal/util/isScheduler.ts","../../node_modules/rxjs/src/internal/util/args.ts","../../node_modules/rxjs/src/internal/operators/observeOn.ts","../../node_modules/rxjs/src/internal/operators/subscribeOn.ts","../../node_modules/rxjs/src/internal/scheduled/scheduleObservable.ts","../../node_modules/rxjs/src/internal/scheduled/schedulePromise.ts","../../node_modules/rxjs/src/internal/scheduled/scheduleArray.ts","../../node_modules/rxjs/src/internal/scheduled/scheduleIterable.ts","../../node_modules/rxjs/src/internal/scheduled/scheduleAsyncIterable.ts","../../node_modules/rxjs/src/internal/scheduled/scheduleReadableStreamLike.ts","../../node_modules/rxjs/src/internal/scheduled/scheduled.ts","../../node_modules/rxjs/src/internal/observable/from.ts","../../node_modules/rxjs/src/internal/observable/concat.ts","../../node_modules/rxjs/src/internal/observable/empty.ts","../../node_modules/rxjs/src/internal/util/mapOneOrManyArgs.ts","../../node_modules/rxjs/src/internal/observable/fromEvent.ts","../../node_modules/rxjs/src/internal/observable/of.ts","../../node_modules/rxjs/src/internal/observable/range.ts","../../node_modules/rxjs/src/internal/operators/concatMap.ts","../../node_modules/rxjs/src/internal/scheduler/Action.ts","../../node_modules/rxjs/src/internal/scheduler/intervalProvider.ts","../../node_modules/rxjs/src/internal/scheduler/AsyncAction.ts","../../node_modules/rxjs/src/internal/Scheduler.ts","../../node_modules/rxjs/src/internal/scheduler/async.ts","../../node_modules/rxjs/src/internal/scheduler/AsyncScheduler.ts","../../node_modules/rxjs/src/internal/operators/take.ts","../../node_modules/rxjs/src/internal/operators/mapTo.ts","../../node_modules/rxjs/src/internal/operators/delayWhen.ts","../../node_modules/rxjs/src/internal/operators/ignoreElements.ts","../../node_modules/rxjs/src/internal/observable/timer.ts","../../node_modules/rxjs/src/internal/util/isDate.ts","../../node_modules/rxjs/src/internal/operators/delay.ts","../../node_modules/rxjs/src/internal/operators/endWith.ts","../../node_modules/rxjs/src/internal/operators/filter.ts","../../node_modules/rxjs/src/internal/util/EmptyError.ts","../../node_modules/rxjs/src/internal/operators/defaultIfEmpty.ts","../../node_modules/rxjs/src/internal/operators/throwIfEmpty.ts","../../node_modules/rxjs/src/internal/operators/first.ts","../../node_modules/rxjs/src/internal/operators/scanInternals.ts","../../node_modules/rxjs/src/internal/operators/scan.ts","../../node_modules/@ethersproject/bignumber/src.ts/bignumber.ts","../../node_modules/@ethersproject/bignumber/src.ts/_version.ts","../../node_modules/@ethersproject/bignumber/src.ts/fixednumber.ts","../../node_modules/@ethersproject/properties/src.ts/index.ts","../../node_modules/@ethersproject/properties/src.ts/_version.ts","../../node_modules/@ethersproject/abi/src.ts/_version.ts","../../node_modules/@ethersproject/abi/src.ts/fragments.ts","../../node_modules/@ethersproject/abi/src.ts/abi-coder.ts","../../node_modules/@ethersproject/abi/src.ts/coders/abstract-coder.ts","../../node_modules/@ethersproject/address/src.ts/index.ts","../../node_modules/process/browser.js","../../node_modules/js-sha3/src/sha3.js","../../node_modules/@ethersproject/keccak256/src.ts/index.ts","../../node_modules/@ethersproject/address/src.ts/_version.ts","../../node_modules/@ethersproject/abi/src.ts/coders/address.ts","../../node_modules/@ethersproject/abi/src.ts/coders/array.ts","../../node_modules/@ethersproject/abi/src.ts/coders/anonymous.ts","../../node_modules/@ethersproject/abi/src.ts/coders/boolean.ts","../../node_modules/@ethersproject/abi/src.ts/coders/bytes.ts","../../node_modules/@ethersproject/abi/src.ts/coders/fixed-bytes.ts","../../node_modules/@ethersproject/abi/src.ts/coders/null.ts","../../node_modules/@ethersproject/constants/src.ts/addresses.ts","../../node_modules/@ethersproject/constants/src.ts/bignumbers.ts","../../node_modules/@ethersproject/constants/src.ts/hashes.ts","../../node_modules/@ethersproject/constants/src.ts/strings.ts","../../node_modules/@ethersproject/abi/src.ts/coders/number.ts","../../node_modules/@ethersproject/strings/src.ts/utf8.ts","../../node_modules/@ethersproject/strings/src.ts/_version.ts","../../node_modules/@ethersproject/strings/src.ts/bytes32.ts","../../node_modules/@ethersproject/strings/src.ts/idna.ts","../../node_modules/@ethersproject/abi/src.ts/coders/string.ts","../../node_modules/@ethersproject/abi/src.ts/coders/tuple.ts","../../node_modules/@ethersproject/hash/src.ts/id.ts","../../node_modules/@ethersproject/hash/src.ts/namehash.ts","../../node_modules/@ethersproject/hash/src.ts/_version.ts","../../node_modules/@ethersproject/hash/src.ts/ens-normalize/decoder.ts","../../node_modules/@ethersproject/hash/src.ts/ens-normalize/lib.ts","../../node_modules/@ethersproject/hash/src.ts/ens-normalize/include.ts","../../node_modules/@ethersproject/hash/src.ts/message.ts","../../node_modules/@ethersproject/hash/src.ts/typed-data.ts","../../node_modules/@ethersproject/abi/src.ts/interface.ts","../../node_modules/@ethersproject/abstract-provider/src.ts/index.ts","../../node_modules/@ethersproject/abstract-provider/src.ts/_version.ts","../../node_modules/@ethersproject/abstract-signer/src.ts/index.ts","../../node_modules/@ethersproject/abstract-signer/src.ts/_version.ts","../../node_modules/hash.js/lib/hash.js","../../node_modules/node_modules/minimalistic-assert/index.js","../../node_modules/node_modules/minimalistic-crypto-utils/lib/utils.js","../../node_modules/node_modules/elliptic/lib/elliptic/utils.js","../../node_modules/node_modules/elliptic/lib/elliptic/curve/base.js","../../node_modules/node_modules/inherits/inherits_browser.js","../../node_modules/node_modules/elliptic/lib/elliptic/curve/short.js","../../node_modules/node_modules/elliptic/lib/elliptic/curve/index.js","../../node_modules/node_modules/elliptic/lib/elliptic/curves.js","../../node_modules/node_modules/hmac-drbg/lib/hmac-drbg.js","../../node_modules/node_modules/elliptic/lib/elliptic/ec/key.js","../../node_modules/node_modules/elliptic/lib/elliptic/ec/signature.js","../../node_modules/node_modules/elliptic/lib/elliptic/ec/index.js","../../node_modules/@ethersproject/signing-key/lib.esm/elliptic.js","../../node_modules/node_modules/elliptic/lib/elliptic.js","../../node_modules/@ethersproject/signing-key/src.ts/_version.ts","../../node_modules/@ethersproject/signing-key/src.ts/index.ts","../../node_modules/@ethersproject/transactions/src.ts/_version.ts","../../node_modules/@ethersproject/transactions/src.ts/index.ts","../../node_modules/@ethersproject/contracts/src.ts/index.ts","../../node_modules/@ethersproject/contracts/src.ts/_version.ts","../../node_modules/@ethersproject/basex/src.ts/index.ts","../../node_modules/@ethersproject/sha2/src.ts/types.ts","../../node_modules/@ethersproject/pbkdf2/src.ts/browser-pbkdf2.ts","../../node_modules/@ethersproject/sha2/src.ts/_version.ts","../../node_modules/@ethersproject/sha2/src.ts/browser-sha2.ts","../../node_modules/@ethersproject/wordlists/src.ts/_version.ts","../../node_modules/@ethersproject/wordlists/src.ts/wordlist.ts","../../node_modules/@ethersproject/wordlists/src.ts/lang-en.ts","../../node_modules/@ethersproject/wordlists/src.ts/browser-wordlists.ts","../../node_modules/@ethersproject/hdnode/src.ts/_version.ts","../../node_modules/@ethersproject/hdnode/src.ts/index.ts","../../node_modules/@ethersproject/random/src.ts/browser-random.ts","../../node_modules/@ethersproject/random/src.ts/_version.ts","../../node_modules/@ethersproject/random/src.ts/shuffle.ts","../../node_modules/aes-js/index.js","../../node_modules/@ethersproject/json-wallets/src.ts/_version.ts","../../node_modules/@ethersproject/json-wallets/src.ts/utils.ts","../../node_modules/@ethersproject/json-wallets/src.ts/crowdsale.ts","../../node_modules/@ethersproject/json-wallets/src.ts/inspect.ts","../../node_modules/scrypt-js/scrypt.js","../../node_modules/@ethersproject/json-wallets/src.ts/keystore.ts","../../node_modules/@ethersproject/json-wallets/src.ts/index.ts","../../node_modules/@ethersproject/wallet/src.ts/index.ts","../../node_modules/@ethersproject/wallet/src.ts/_version.ts","../../node_modules/@ethersproject/networks/src.ts/_version.ts","../../node_modules/@ethersproject/networks/src.ts/index.ts","../../node_modules/@ethersproject/web/src.ts/index.ts","../../node_modules/@ethersproject/web/src.ts/browser-geturl.ts","../../node_modules/@ethersproject/web/src.ts/_version.ts","../../node_modules/bech32/index.js","../../node_modules/@ethersproject/providers/src.ts/_version.ts","../../node_modules/@ethersproject/providers/src.ts/formatter.ts","../../node_modules/@ethersproject/providers/src.ts/base-provider.ts","../../node_modules/@ethersproject/providers/src.ts/json-rpc-provider.ts","../../node_modules/@ethersproject/providers/src.ts/browser-ws.ts","../../node_modules/@ethersproject/providers/src.ts/websocket-provider.ts","../../node_modules/@ethersproject/providers/src.ts/url-json-rpc-provider.ts","../../node_modules/@ethersproject/providers/src.ts/alchemy-provider.ts","../../node_modules/@ethersproject/providers/src.ts/ankr-provider.ts","../../node_modules/@ethersproject/providers/src.ts/cloudflare-provider.ts","../../node_modules/@ethersproject/providers/src.ts/etherscan-provider.ts","../../node_modules/@ethersproject/providers/src.ts/fallback-provider.ts","../../node_modules/@ethersproject/providers/src.ts/browser-ipc-provider.ts","../../node_modules/@ethersproject/providers/src.ts/infura-provider.ts","../../node_modules/@ethersproject/providers/src.ts/json-rpc-batch-provider.ts","../../node_modules/@ethersproject/providers/src.ts/nodesmith-provider.ts","../../node_modules/@ethersproject/providers/src.ts/pocket-provider.ts","../../node_modules/@ethersproject/providers/src.ts/web3-provider.ts","../../node_modules/@ethersproject/providers/src.ts/index.ts","../../node_modules/@ethersproject/solidity/src.ts/_version.ts","../../node_modules/@ethersproject/solidity/src.ts/index.ts","../../node_modules/@ethersproject/units/src.ts/_version.ts","../../node_modules/@ethersproject/units/src.ts/index.ts","../../node_modules/ethers/src.ts/_version.ts","../../node_modules/ethers/src.ts/ethers.ts","../../node_modules/ethers/src.ts/index.ts","../../node_modules/ethers/src.ts/utils.ts","../../node_modules/@latticexyz/utils/src/deferred.ts","../../node_modules/@latticexyz/utils/src/rx.ts","../../node_modules/rxjs/src/internal/operators/timestamp.ts","../../node_modules/@latticexyz/utils/src/mobx.ts","../../node_modules/@latticexyz/utils/src/sleep.ts","../../node_modules/@latticexyz/utils/src/promise.ts","../../node_modules/@latticexyz/utils/src/iterable.ts","../../node_modules/@latticexyz/utils/src/pack.ts","../../node_modules/@latticexyz/utils/src/eth.ts","../../node_modules/@protobuf-ts/runtime/build/es2015/base64.js","../../node_modules/@protobuf-ts/runtime/build/es2015/binary-format-contract.js","../../node_modules/@protobuf-ts/runtime/build/es2015/json-format-contract.js","../../node_modules/@protobuf-ts/runtime/build/es2015/message-type-contract.js","../../node_modules/@protobuf-ts/runtime/build/es2015/lower-camel-case.js","../../node_modules/@protobuf-ts/runtime/build/es2015/reflection-info.js","../../node_modules/@protobuf-ts/runtime/build/es2015/oneof.js","../../node_modules/@protobuf-ts/runtime/build/es2015/reflection-type-check.js","../../node_modules/@protobuf-ts/runtime/build/es2015/json-typings.js","../../node_modules/@protobuf-ts/runtime/build/es2015/goog-varint.js","../../node_modules/@protobuf-ts/runtime/build/es2015/pb-long.js","../../node_modules/@protobuf-ts/runtime/build/es2015/assert.js","../../node_modules/@protobuf-ts/runtime/build/es2015/reflection-long-convert.js","../../node_modules/@protobuf-ts/runtime/build/es2015/reflection-json-reader.js","../../node_modules/@protobuf-ts/runtime/build/es2015/reflection-json-writer.js","../../node_modules/@protobuf-ts/runtime/build/es2015/reflection-scalar-default.js","../../node_modules/@protobuf-ts/runtime/build/es2015/reflection-binary-reader.js","../../node_modules/@protobuf-ts/runtime/build/es2015/reflection-binary-writer.js","../../node_modules/@protobuf-ts/runtime/build/es2015/reflection-create.js","../../node_modules/@protobuf-ts/runtime/build/es2015/reflection-merge-partial.js","../../node_modules/@protobuf-ts/runtime/build/es2015/reflection-equals.js","../../node_modules/@protobuf-ts/runtime/build/es2015/binary-writer.js","../../node_modules/@protobuf-ts/runtime/build/es2015/binary-reader.js","../../node_modules/@protobuf-ts/runtime/build/es2015/message-type.js","../../node_modules/@protobuf-ts/runtime-rpc/build/es2015/reflection-info.js","../../node_modules/@protobuf-ts/runtime-rpc/build/es2015/service-type.js","../../node_modules/@protobuf-ts/runtime-rpc/build/es2015/rpc-error.js","../../node_modules/@protobuf-ts/runtime-rpc/build/es2015/rpc-options.js","../../node_modules/@protobuf-ts/runtime-rpc/build/es2015/deferred.js","../../node_modules/@protobuf-ts/runtime-rpc/build/es2015/rpc-output-stream.js","../../node_modules/@protobuf-ts/runtime-rpc/build/es2015/server-streaming-call.js","../../node_modules/@protobuf-ts/runtime-rpc/build/es2015/unary-call.js","../../node_modules/@protobuf-ts/runtime-rpc/build/es2015/rpc-interceptor.js","../../node_modules/@protobuf-ts/grpcweb-transport/build/es2015/goog-grpc-status-code.js","../../node_modules/@protobuf-ts/grpcweb-transport/build/es2015/grpc-web-format.js","../../node_modules/@protobuf-ts/grpcweb-transport/build/es2015/grpc-web-transport.js","../../node_modules/@latticexyz/services/protobuf/ts/ecs-snapshot/ecs-snapshot.ts","../../node_modules/@latticexyz/services/protobuf/ts/ecs-snapshot/ecs-snapshot.client.ts","../../node_modules/@latticexyz/services/protobuf/ts/ecs-stream/ecs-stream.ts","../../node_modules/@latticexyz/services/protobuf/ts/ecs-stream/ecs-stream.client.ts","../../node_modules/@latticexyz/solecs/abi/Component.json","../../node_modules/@latticexyz/solecs/abi/World.json","../../node_modules/@latticexyz/network/src/initCache.ts","../../node_modules/@latticexyz/network/src/workers/CacheStore.ts","../../node_modules/@latticexyz/network/src/networkUtils.ts","../../node_modules/@latticexyz/network/src/createProvider.ts","../../node_modules/@latticexyz/network/src/types.ts","../../node_modules/@latticexyz/network/src/createDecoder.ts","../../node_modules/@latticexyz/network/src/createTopics.ts","../../node_modules/@latticexyz/network/src/workers/constants.ts","../../node_modules/@latticexyz/network/src/workers/syncUtils.ts","../../node_modules/@latticexyz/network/src/createBlockNumberStream.ts","../../node_modules/@latticexyz/network/src/workers/SyncWorker.ts","../../node_modules/@latticexyz/utils/src/hash.ts","../../node_modules/@latticexyz/network/src/workers/Sync.worker.ts","../../node_modules/@latticexyz/utils/src/worker.ts"],"sourcesContent":["(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","\"use strict\";\n\n//See: https://github.com/ethereum/wiki/wiki/RLP\n\nimport { arrayify, BytesLike, hexlify, isBytesLike } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction arrayifyInteger(value: number): Array<number> {\n    const result = [];\n    while (value) {\n        result.unshift(value & 0xff);\n        value >>= 8;\n    }\n    return result;\n}\n\nfunction unarrayifyInteger(data: Uint8Array, offset: number, length: number): number {\n    let result = 0;\n    for (let i = 0; i < length; i++) {\n        result = (result * 256) + data[offset + i];\n    }\n    return result;\n}\n\nfunction _encode(object: Array<any> | string): Array<number> {\n    if (Array.isArray(object)) {\n        let payload: Array<number> = [];\n        object.forEach(function(child) {\n            payload = payload.concat(_encode(child));\n        });\n\n        if (payload.length <= 55) {\n            payload.unshift(0xc0 + payload.length)\n            return payload;\n        }\n\n        const length = arrayifyInteger(payload.length);\n        length.unshift(0xf7 + length.length);\n\n        return length.concat(payload);\n\n    }\n\n    if (!isBytesLike(object)) {\n        logger.throwArgumentError(\"RLP object must be BytesLike\", \"object\", object);\n    }\n\n    const data: Array<number> = Array.prototype.slice.call(arrayify(object));\n\n    if (data.length === 1 && data[0] <= 0x7f) {\n        return data;\n\n    } else if (data.length <= 55) {\n        data.unshift(0x80 + data.length);\n        return data;\n    }\n\n    const length = arrayifyInteger(data.length);\n    length.unshift(0xb7 + length.length);\n\n    return length.concat(data);\n}\n\nexport function encode(object: any): string {\n    return hexlify(_encode(object));\n}\n\ntype Decoded = {\n    result: any;\n    consumed: number;\n};\n\nfunction _decodeChildren(data: Uint8Array, offset: number, childOffset: number, length: number): Decoded {\n    const result = [];\n\n    while (childOffset < offset + 1 + length) {\n        const decoded = _decode(data, childOffset);\n\n        result.push(decoded.result);\n\n        childOffset += decoded.consumed;\n        if (childOffset > offset + 1 + length) {\n            logger.throwError(\"child data too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n    }\n\n    return {consumed: (1 + length), result: result};\n}\n\n// returns { consumed: number, result: Object }\nfunction _decode(data: Uint8Array, offset: number): { consumed: number, result: any } {\n    if (data.length === 0) {\n        logger.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, { });\n    }\n\n    // Array with extra length prefix\n    if (data[offset] >= 0xf8) {\n        const lengthLength = data[offset] - 0xf7;\n        if (offset + 1 + lengthLength > data.length) {\n            logger.throwError(\"data short segment too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            logger.throwError(\"data long segment too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);\n\n    } else if (data[offset] >= 0xc0) {\n        const length = data[offset] - 0xc0;\n        if (offset + 1 + length > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        return _decodeChildren(data, offset, offset + 1, length);\n\n    } else if (data[offset] >= 0xb8) {\n        const lengthLength = data[offset] - 0xb7;\n        if (offset + 1 + lengthLength > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const result = hexlify(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));\n        return { consumed: (1 + lengthLength + length), result: result }\n\n    } else if (data[offset] >= 0x80) {\n        const length = data[offset] - 0x80;\n        if (offset + 1 + length > data.length) {\n            logger.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const result = hexlify(data.slice(offset + 1, offset + 1 + length));\n        return { consumed: (1 + length), result: result }\n    }\n    return { consumed: 1, result: hexlify(data[offset]) };\n}\n\nexport function decode(data: BytesLike): any {\n    const bytes = arrayify(data);\n    const decoded = _decode(bytes, 0);\n    if (decoded.consumed !== bytes.length) {\n        logger.throwArgumentError(\"invalid rlp data\", \"data\", data);\n    }\n    return decoded.result;\n}\n\n","\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\nexport type Bytes = ArrayLike<number>;\n\nexport type BytesLike = Bytes | string;\n\nexport type DataOptions = {\n    allowMissingPrefix?: boolean;\n    hexPad?: \"left\" | \"right\" | null;\n};\n\nexport interface Hexable {\n    toHexString(): string;\n}\n\n\n/*\nexport interface HexString {\n    length: number;\n    substring: (start: number, end?: number) => string;\n\n    [index: number]: string;\n}\n*/\n\nexport type SignatureLike  = {\n    r: string;\n    s?: string;\n    _vs?: string,\n    recoveryParam?: number;\n    v?: number;\n} | BytesLike;\n\nexport interface Signature {\n    r: string;\n\n    s: string;\n    _vs: string,\n\n    recoveryParam: number;\n    v: number;\n\n    yParityAndS: string\n    compact: string;\n}\n\n///////////////////////////////\n\n\nfunction isHexable(value: any): value is Hexable {\n    return !!(value.toHexString);\n}\n\nfunction addSlice(array: Uint8Array): Uint8Array {\n    if (array.slice) { return array; }\n\n    array.slice = function() {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    }\n\n    return array;\n}\n\nexport function isBytesLike(value: any): value is BytesLike {\n    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));\n}\n\nfunction isInteger(value: number) {\n    return (typeof(value) === \"number\" && value == value && (value % 1) === 0);\n}\n\nexport function isBytes(value: any): value is Bytes {\n    if (value == null) { return false; }\n\n    if (value.constructor === Uint8Array) { return true; }\n    if (typeof(value) === \"string\") { return false; }\n    if (!isInteger(value.length) || value.length < 0) { return false; }\n\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (!isInteger(v) || v < 0 || v >= 256) { return false; }\n    }\n    return true;\n}\n\n\nexport function arrayify(value: BytesLike | Hexable | number, options?: DataOptions): Uint8Array {\n    if (!options) { options = { }; }\n\n    if (typeof(value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) { result.push(0); }\n\n        return addSlice(new Uint8Array(result));\n    }\n\n    if (options.allowMissingPrefix && typeof(value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n         value = \"0x\" + value;\n    }\n\n    if (isHexable(value)) { value = value.toHexString(); }\n\n    if (isHexString(value)) {\n        let hex = (<string>value).substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0\" + hex;\n            } else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            } else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n\n        return addSlice(new Uint8Array(result));\n    }\n\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\n\nexport function concat(items: ReadonlyArray<BytesLike>): Uint8Array {\n    const objects = items.map(item => arrayify(item));\n    const length = objects.reduce((accum, item) => (accum + item.length), 0);\n\n    const result = new Uint8Array(length);\n\n    objects.reduce((offset, object) => {\n        result.set(object, offset);\n        return offset + object.length;\n    }, 0);\n\n    return addSlice(result);\n}\n\nexport function stripZeros(value: BytesLike): Uint8Array {\n    let result: Uint8Array = arrayify(value);\n\n    if (result.length === 0) { return result; }\n\n    // Find the first non-zero entry\n    let start = 0;\n    while (start < result.length && result[start] === 0) { start++ }\n\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n\n    return result;\n}\n\nexport function zeroPad(value: BytesLike, length: number): Uint8Array {\n    value = arrayify(value);\n\n    if (value.length > length) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    }\n\n    const result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\n\n\nexport function isHexString(value: any, length?: number): boolean {\n    if (typeof(value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false\n    }\n    if (length && value.length !== 2 + 2 * length) { return false; }\n    return true;\n}\n\nconst HexCharacters: string = \"0123456789abcdef\";\n\nexport function hexlify(value: BytesLike | Hexable | number | bigint, options?: DataOptions): string {\n    if (!options) { options = { }; }\n\n    if (typeof(value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid hexlify value\");\n\n        let hex = \"\";\n        while (value) {\n            hex = HexCharacters[value & 0xf] + hex;\n            value = Math.floor(value / 16);\n        }\n\n        if (hex.length) {\n            if (hex.length % 2) { hex = \"0\" + hex; }\n            return \"0x\" + hex;\n        }\n\n        return \"0x00\";\n    }\n\n    if (typeof(value) === \"bigint\") {\n        value = value.toString(16);\n        if (value.length % 2) { return (\"0x0\" + value); }\n        return \"0x\" + value;\n    }\n\n    if (options.allowMissingPrefix && typeof(value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n         value = \"0x\" + value;\n    }\n\n    if (isHexable(value)) { return value.toHexString(); }\n\n    if (isHexString(value)) {\n        if ((<string>value).length % 2) {\n            if (options.hexPad === \"left\") {\n                value = \"0x0\" + (<string>value).substring(2);\n            } else if (options.hexPad === \"right\") {\n                value += \"0\";\n            } else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        return (<string>value).toLowerCase();\n    }\n\n    if (isBytes(value)) {\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n             let v = value[i];\n             result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n        }\n        return result;\n    }\n\n    return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\nexport function hexDataLength(data: BytesLike) {\n    if (typeof(data) !== \"string\") {\n        data = hexlify(data);\n    } else if (!isHexString(data) || (data.length % 2)) {\n        return null;\n    }\n\n    return (data.length - 2) / 2;\n}\n\nexport function hexDataSlice(data: BytesLike, offset: number, endOffset?: number): string {\n    if (typeof(data) !== \"string\") {\n        data = hexlify(data);\n    } else if (!isHexString(data) || (data.length % 2)) {\n        logger.throwArgumentError(\"invalid hexData\", \"value\", data );\n    }\n\n    offset = 2 + 2 * offset;\n\n    if (endOffset != null) {\n        return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n    }\n\n    return \"0x\" + data.substring(offset);\n}\n\nexport function hexConcat(items: ReadonlyArray<BytesLike>): string {\n    let result = \"0x\";\n    items.forEach((item) => {\n        result += hexlify(item).substring(2);\n    });\n    return result;\n}\n\nexport function hexValue(value: BytesLike | Hexable | number | bigint): string {\n    const trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n    if (trimmed === \"0x\") { return \"0x0\"; }\n    return trimmed;\n}\n\nexport function hexStripZeros(value: BytesLike): string {\n    if (typeof(value) !== \"string\") { value = hexlify(value); }\n\n    if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    value = value.substring(2);\n    let offset = 0;\n    while (offset < value.length && value[offset] === \"0\") { offset++; }\n    return \"0x\" + value.substring(offset);\n}\n\nexport function hexZeroPad(value: BytesLike, length: number): string {\n    if (typeof(value) !== \"string\") {\n        value = hexlify(value);\n    } else if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n\n    if (value.length > 2 * length + 2) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n    }\n\n    while (value.length < 2 * length + 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n\n    return value;\n}\n\nexport function splitSignature(signature: SignatureLike): Signature {\n\n    const result = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0,\n        yParityAndS: \"0x\",\n        compact: \"0x\"\n    };\n\n    if (isBytesLike(signature)) {\n        let bytes: Uint8Array = arrayify(signature);\n\n        // Get the r, s and v\n        if (bytes.length === 64) {\n            // EIP-2098; pull the v from the top bit of s and clear it\n            result.v = 27 + (bytes[32] >> 7);\n            bytes[32] &= 0x7f;\n\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n\n        } else if (bytes.length === 65) {\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n            result.v = bytes[64];\n        } else {\n\n            logger.throwArgumentError(\"invalid signature string\", \"signature\", signature);\n        }\n\n\n        // Allow a recid to be used as the v\n        if (result.v < 27) {\n            if (result.v === 0 || result.v === 1) {\n                result.v += 27;\n            } else {\n                logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n            }\n        }\n\n        // Compute recoveryParam from v\n        result.recoveryParam = 1 - (result.v % 2);\n\n        // Compute _vs from recoveryParam and s\n        if (result.recoveryParam) { bytes[32] |= 0x80; }\n        result._vs = hexlify(bytes.slice(32, 64))\n\n    } else {\n        result.r = signature.r;\n        result.s = signature.s;\n        result.v = signature.v;\n        result.recoveryParam = signature.recoveryParam;\n        result._vs = signature._vs;\n\n        // If the _vs is available, use it to populate missing s, v and recoveryParam\n        // and verify non-missing s, v and recoveryParam\n        if (result._vs != null) {\n            const vs = zeroPad(arrayify(result._vs), 32);\n            result._vs = hexlify(vs);\n\n            // Set or check the recid\n            const recoveryParam = ((vs[0] >= 128) ? 1: 0);\n            if (result.recoveryParam == null) {\n                result.recoveryParam = recoveryParam;\n            } else if (result.recoveryParam !== recoveryParam) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n\n            // Set or check the s\n            vs[0] &= 0x7f;\n            const s = hexlify(vs);\n            if (result.s == null) {\n                result.s = s;\n            } else if (result.s !== s) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n        }\n\n        // Use recid and v to populate each other\n        if (result.recoveryParam == null) {\n            if (result.v == null) {\n                logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n            } else if (result.v === 0 || result.v === 1) {\n                result.recoveryParam = result.v;\n            } else {\n                result.recoveryParam = 1 - (result.v % 2);\n            }\n        } else {\n            if (result.v == null) {\n                result.v = 27 + result.recoveryParam;\n            } else {\n                const recId = (result.v === 0 || result.v === 1) ? result.v :(1 - (result.v % 2));\n                if (result.recoveryParam !== recId) {\n                    logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n                }\n            }\n        }\n\n        if (result.r == null || !isHexString(result.r)) {\n            logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n        } else {\n            result.r = hexZeroPad(result.r, 32);\n        }\n\n        if (result.s == null || !isHexString(result.s)) {\n            logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n        } else {\n            result.s = hexZeroPad(result.s, 32);\n        }\n\n        const vs = arrayify(result.s);\n        if (vs[0] >= 128) {\n            logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n        }\n        if (result.recoveryParam) { vs[0] |= 0x80; }\n        const _vs = hexlify(vs);\n\n        if (result._vs) {\n            if (!isHexString(result._vs)) {\n                logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n            }\n            result._vs = hexZeroPad(result._vs, 32);\n        }\n\n        // Set or check the _vs\n        if (result._vs == null) {\n            result._vs = _vs;\n        } else if (result._vs !== _vs) {\n            logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n        }\n    }\n\n    result.yParityAndS = result._vs;\n    result.compact = result.r + result.yParityAndS.substring(2);\n\n    return result;\n}\n\nexport function joinSignature(signature: SignatureLike): string {\n    signature = splitSignature(signature);\n\n    return hexlify(concat([\n         signature.r,\n         signature.s,\n         (signature.recoveryParam ? \"0x1c\": \"0x1b\")\n    ]));\n}\n\n","\"use strict\";\n\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\n\nconst LogLevels: { [ name: string ]: number } = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\n\nimport { version } from \"./_version\";\n\nlet _globalLogger: Logger = null;\n\nfunction _checkNormalize(): string {\n    try {\n        const missing: Array<string> = [ ];\n\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                };\n            } catch(error) {\n                missing.push(form);\n            }\n        });\n\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\")\n        }\n    } catch (error) {\n        return error.message;\n    }\n\n    return null;\n}\n\nconst _normalizeError = _checkNormalize();\n\nexport enum LogLevel {\n    DEBUG    = \"DEBUG\",\n    INFO     = \"INFO\",\n    WARNING  = \"WARNING\",\n    ERROR    = \"ERROR\",\n    OFF      = \"OFF\"\n}\n\n\nexport enum ErrorCode {\n\n    ///////////////////\n    // Generic Errors\n\n    // Unknown Error\n    UNKNOWN_ERROR = \"UNKNOWN_ERROR\",\n\n    // Not Implemented\n    NOT_IMPLEMENTED = \"NOT_IMPLEMENTED\",\n\n    // Unsupported Operation\n    //   - operation\n    UNSUPPORTED_OPERATION = \"UNSUPPORTED_OPERATION\",\n\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    NETWORK_ERROR = \"NETWORK_ERROR\",\n\n    // Some sort of bad response from the server\n    SERVER_ERROR = \"SERVER_ERROR\",\n\n    // Timeout\n    TIMEOUT = \"TIMEOUT\",\n\n    ///////////////////\n    // Operational  Errors\n\n    // Buffer Overrun\n    BUFFER_OVERRUN = \"BUFFER_OVERRUN\",\n\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    NUMERIC_FAULT = \"NUMERIC_FAULT\",\n\n\n    ///////////////////\n    // Argument Errors\n\n    // Missing new operator to an object\n    //  - name: The name of the class\n    MISSING_NEW = \"MISSING_NEW\",\n\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    INVALID_ARGUMENT = \"INVALID_ARGUMENT\",\n\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    MISSING_ARGUMENT = \"MISSING_ARGUMENT\",\n\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    UNEXPECTED_ARGUMENT = \"UNEXPECTED_ARGUMENT\",\n\n\n    ///////////////////\n    // Blockchain Errors\n\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    CALL_EXCEPTION = \"CALL_EXCEPTION\",\n\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    INSUFFICIENT_FUNDS = \"INSUFFICIENT_FUNDS\",\n\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    NONCE_EXPIRED = \"NONCE_EXPIRED\",\n\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    REPLACEMENT_UNDERPRICED = \"REPLACEMENT_UNDERPRICED\",\n\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    UNPREDICTABLE_GAS_LIMIT = \"UNPREDICTABLE_GAS_LIMIT\",\n\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    TRANSACTION_REPLACED = \"TRANSACTION_REPLACED\",\n\n\n    ///////////////////\n    // Interaction Errors\n\n    // The user rejected the action, such as signing a message or sending\n    // a transaction\n    ACTION_REJECTED = \"ACTION_REJECTED\",\n};\n\nconst HEX = \"0123456789abcdef\";\n\nexport class Logger {\n    readonly version: string;\n\n    static errors = ErrorCode;\n\n    static levels = LogLevel;\n\n    constructor(version: string) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n\n    _log(logLevel: LogLevel, args: Array<any>): void {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) { return; }\n        console.log.apply(console, args);\n    }\n\n    debug(...args: Array<any>): void {\n        this._log(Logger.levels.DEBUG, args);\n    }\n\n    info(...args: Array<any>): void {\n        this._log(Logger.levels.INFO, args);\n    }\n\n    warn(...args: Array<any>): void {\n        this._log(Logger.levels.WARNING, args);\n    }\n\n    makeError(message: string, code?: ErrorCode, params?: any): Error {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, { });\n        }\n\n        if (!code) { code = Logger.errors.UNKNOWN_ERROR; }\n        if (!params) { params = {}; }\n\n        const messageDetails: Array<string> = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                      hex += HEX[value[i] >> 4];\n                      hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                } else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            } catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${ code }`);\n        messageDetails.push(`version=${ this.version }`);\n\n        const reason = message;\n\n        let url = \"\";\n\n        switch (code) {\n            case ErrorCode.NUMERIC_FAULT: {\n                url = \"NUMERIC_FAULT\";\n                const fault = message;\n\n                switch (fault) {\n                    case \"overflow\": case \"underflow\": case \"division-by-zero\":\n                        url += \"-\" + fault;\n                        break;\n                    case \"negative-power\": case \"negative-width\":\n                        url += \"-unsupported\";\n                        break;\n                    case \"unbound-bitwise-result\":\n                        url += \"-unbound-result\";\n                        break;\n                }\n                break;\n            }\n            case ErrorCode.CALL_EXCEPTION:\n            case ErrorCode.INSUFFICIENT_FUNDS:\n            case ErrorCode.MISSING_NEW:\n            case ErrorCode.NONCE_EXPIRED:\n            case ErrorCode.REPLACEMENT_UNDERPRICED:\n            case ErrorCode.TRANSACTION_REPLACED:\n            case ErrorCode.UNPREDICTABLE_GAS_LIMIT:\n                url = code;\n                break;\n        }\n\n        if (url) {\n            message += \" [ See: https:/\\/links.ethers.org/v5-errors-\" + url + \" ]\";\n        }\n\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n\n        // @TODO: Any??\n        const error: any = new Error(message);\n        error.reason = reason;\n        error.code = code\n\n        Object.keys(params).forEach(function(key) {\n            error[key] = params[key];\n        });\n\n        return error;\n    }\n\n    throwError(message: string, code?: ErrorCode, params?: any): never {\n        throw this.makeError(message, code, params);\n    }\n\n    throwArgumentError(message: string, name: string, value: any): never {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n\n    assert(condition: any, message: string, code?: ErrorCode, params?: any): void {\n        if (!!condition) { return; }\n        this.throwError(message, code, params);\n    }\n\n    assertArgument(condition: any, message: string, name: string, value: any): void {\n        if (!!condition) { return; }\n        this.throwArgumentError(message, name, value);\n    }\n\n    checkNormalize(message?: string): void {\n        if (message == null) { message = \"platform missing String.prototype.normalize\"; }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n\n    checkSafeUint53(value: number, message?: string): void {\n        if (typeof(value) !== \"number\") { return; }\n\n        if (message == null) { message = \"value not safe\"; }\n\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n\n    checkArgumentCount(count: number, expectedCount: number, message?: string): void {\n        if (message) {\n            message = \": \" + message;\n        } else {\n            message = \"\";\n        }\n\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n\n    checkNew(target: any, kind: any): void {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n\n    checkAbstract(target: any, kind: any): void {\n        if (target === kind) {\n            this.throwError(\n                \"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\",\n                Logger.errors.UNSUPPORTED_OPERATION,\n                { name: target.name, operation: \"new\" }\n            );\n        } else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n\n    static globalLogger(): Logger {\n        if (!_globalLogger) { _globalLogger = new Logger(version); }\n        return _globalLogger;\n    }\n\n    static setCensorship(censorship: boolean, permanent?: boolean): void {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n\n        if (_permanentCensorErrors) {\n            if (!censorship) { return; }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n\n    static setLogLevel(logLevel: LogLevel): void {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n\n    static from(version: string): Logger {\n        return new Logger(version);\n    }\n}\n","export const version = \"logger/5.7.0\";\n","export const version = \"bytes/5.7.0\";\n","export const version = \"rlp/5.7.0\";\n","\"use strict\";\n\nexport { decode, encode } from \"./base64\";\n","\"use strict\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nexport function decode(textData: string): Uint8Array {\n    textData = atob(textData);\n    const data = [];\n    for (let i = 0; i < textData.length; i++) {\n        data.push(textData.charCodeAt(i));\n    }\n    return arrayify(data);\n}\n\nexport function encode(data: BytesLike): string {\n    data = arrayify(data);\n    let textData = \"\";\n    for (let i = 0; i < data.length; i++) {\n        textData += String.fromCharCode(data[i]);\n    }\n    return btoa(textData);\n}\n\n\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","declare const window: any\ndeclare const self: any\n\nconst mockGlobal = {}\n\nexport function getGlobal() {\n    if (typeof globalThis !== \"undefined\") {\n        return globalThis\n    }\n    if (typeof window !== \"undefined\") {\n        return window\n    }\n    if (typeof global !== \"undefined\") {\n        return global\n    }\n    if (typeof self !== \"undefined\") {\n        return self\n    }\n    return mockGlobal\n}\n","import { globalState, die } from \"../internal\"\n\n// We shorten anything used > 5 times\nexport const assign = Object.assign\nexport const getDescriptor = Object.getOwnPropertyDescriptor\nexport const defineProperty = Object.defineProperty\nexport const objectPrototype = Object.prototype\n\nexport const EMPTY_ARRAY = []\nObject.freeze(EMPTY_ARRAY)\n\nexport const EMPTY_OBJECT = {}\nObject.freeze(EMPTY_OBJECT)\n\nexport interface Lambda {\n    (): void\n    name?: string\n}\n\nconst hasProxy = typeof Proxy !== \"undefined\"\nconst plainObjectString = Object.toString()\n\nexport function assertProxies() {\n    if (!hasProxy) {\n        die(\n            __DEV__\n                ? \"`Proxy` objects are not available in the current environment. Please configure MobX to enable a fallback implementation.`\"\n                : \"Proxy not available\"\n        )\n    }\n}\n\nexport function warnAboutProxyRequirement(msg: string) {\n    if (__DEV__ && globalState.verifyProxies) {\n        die(\n            \"MobX is currently configured to be able to run in ES5 mode, but in ES5 MobX won't be able to \" +\n                msg\n        )\n    }\n}\n\nexport function getNextId() {\n    return ++globalState.mobxGuid\n}\n\n/**\n * Makes sure that the provided function is invoked at most once.\n */\nexport function once(func: Lambda): Lambda {\n    let invoked = false\n    return function () {\n        if (invoked) {\n            return\n        }\n        invoked = true\n        return (func as any).apply(this, arguments)\n    }\n}\n\nexport const noop = () => {}\n\nexport function isFunction(fn: any): fn is Function {\n    return typeof fn === \"function\"\n}\n\nexport function isString(value: any): value is string {\n    return typeof value === \"string\"\n}\n\nexport function isStringish(value: any): value is string | number | symbol {\n    const t = typeof value\n    switch (t) {\n        case \"string\":\n        case \"symbol\":\n        case \"number\":\n            return true\n    }\n    return false\n}\n\nexport function isObject(value: any): value is Object {\n    return value !== null && typeof value === \"object\"\n}\n\nexport function isPlainObject(value: any) {\n    if (!isObject(value)) {\n        return false\n    }\n    const proto = Object.getPrototypeOf(value)\n    if (proto == null) {\n        return true\n    }\n    const protoConstructor = Object.hasOwnProperty.call(proto, \"constructor\") && proto.constructor\n    return (\n        typeof protoConstructor === \"function\" && protoConstructor.toString() === plainObjectString\n    )\n}\n\n// https://stackoverflow.com/a/37865170\nexport function isGenerator(obj: any): boolean {\n    const constructor = obj?.constructor\n    if (!constructor) {\n        return false\n    }\n    if (\n        \"GeneratorFunction\" === constructor.name ||\n        \"GeneratorFunction\" === constructor.displayName\n    ) {\n        return true\n    }\n    return false\n}\n\nexport function addHiddenProp(object: any, propName: PropertyKey, value: any) {\n    defineProperty(object, propName, {\n        enumerable: false,\n        writable: true,\n        configurable: true,\n        value\n    })\n}\n\nexport function addHiddenFinalProp(object: any, propName: PropertyKey, value: any) {\n    defineProperty(object, propName, {\n        enumerable: false,\n        writable: false,\n        configurable: true,\n        value\n    })\n}\n\nexport function createInstanceofPredicate<T>(\n    name: string,\n    theClass: new (...args: any[]) => T\n): (x: any) => x is T {\n    const propName = \"isMobX\" + name\n    theClass.prototype[propName] = true\n    return function (x) {\n        return isObject(x) && x[propName] === true\n    } as any\n}\n\nexport function isES6Map(thing: any): thing is Map<any, any> {\n    return thing instanceof Map\n}\n\nexport function isES6Set(thing: any): thing is Set<any> {\n    return thing instanceof Set\n}\n\nconst hasGetOwnPropertySymbols = typeof Object.getOwnPropertySymbols !== \"undefined\"\n\n/**\n * Returns the following: own enumerable keys and symbols.\n */\nexport function getPlainObjectKeys(object: any) {\n    const keys = Object.keys(object)\n    // Not supported in IE, so there are not going to be symbol props anyway...\n    if (!hasGetOwnPropertySymbols) {\n        return keys\n    }\n    const symbols = Object.getOwnPropertySymbols(object)\n    if (!symbols.length) {\n        return keys\n    }\n    return [...keys, ...symbols.filter(s => objectPrototype.propertyIsEnumerable.call(object, s))]\n}\n\n// From Immer utils\n// Returns all own keys, including non-enumerable and symbolic\nexport const ownKeys: (target: any) => Array<string | symbol> =\n    typeof Reflect !== \"undefined\" && Reflect.ownKeys\n        ? Reflect.ownKeys\n        : hasGetOwnPropertySymbols\n        ? obj => Object.getOwnPropertyNames(obj).concat(Object.getOwnPropertySymbols(obj) as any)\n        : /* istanbul ignore next */ Object.getOwnPropertyNames\n\nexport function stringifyKey(key: any): string {\n    if (typeof key === \"string\") {\n        return key\n    }\n    if (typeof key === \"symbol\") {\n        return key.toString()\n    }\n    return new String(key).toString()\n}\n\nexport function toPrimitive(value: any) {\n    return value === null ? null : typeof value === \"object\" ? \"\" + value : value\n}\n\nexport function hasProp(target: Object, prop: PropertyKey): boolean {\n    return objectPrototype.hasOwnProperty.call(target, prop)\n}\n\n// From Immer utils\nexport const getOwnPropertyDescriptors =\n    Object.getOwnPropertyDescriptors ||\n    function getOwnPropertyDescriptors(target: any) {\n        // Polyfill needed for Hermes and IE, see https://github.com/facebook/hermes/issues/274\n        const res: any = {}\n        // Note: without polyfill for ownKeys, symbols won't be picked up\n        ownKeys(target).forEach(key => {\n            res[key] = getDescriptor(target, key)\n        })\n        return res\n    }\n","import { Annotation, addHiddenProp, AnnotationsMap, hasProp, die, isOverride } from \"../internal\"\n\nexport const storedAnnotationsSymbol = Symbol(\"mobx-stored-annotations\")\n\n/**\n * Creates a function that acts as\n * - decorator\n * - annotation object\n */\nexport function createDecoratorAnnotation(annotation: Annotation): PropertyDecorator & Annotation {\n    function decorator(target, property) {\n        storeAnnotation(target, property, annotation)\n    }\n    return Object.assign(decorator, annotation)\n}\n\n/**\n * Stores annotation to prototype,\n * so it can be inspected later by `makeObservable` called from constructor\n */\nexport function storeAnnotation(prototype: any, key: PropertyKey, annotation: Annotation) {\n    if (!hasProp(prototype, storedAnnotationsSymbol)) {\n        addHiddenProp(prototype, storedAnnotationsSymbol, {\n            // Inherit annotations\n            ...prototype[storedAnnotationsSymbol]\n        })\n    }\n    // @override must override something\n    if (__DEV__ && isOverride(annotation) && !hasProp(prototype[storedAnnotationsSymbol], key)) {\n        const fieldName = `${prototype.constructor.name}.prototype.${key.toString()}`\n        die(\n            `'${fieldName}' is decorated with 'override', ` +\n                `but no such decorated member was found on prototype.`\n        )\n    }\n    // Cannot re-decorate\n    assertNotDecorated(prototype, annotation, key)\n\n    // Ignore override\n    if (!isOverride(annotation)) {\n        prototype[storedAnnotationsSymbol][key] = annotation\n    }\n}\n\nfunction assertNotDecorated(prototype: object, annotation: Annotation, key: PropertyKey) {\n    if (__DEV__ && !isOverride(annotation) && hasProp(prototype[storedAnnotationsSymbol], key)) {\n        const fieldName = `${prototype.constructor.name}.prototype.${key.toString()}`\n        const currentAnnotationType = prototype[storedAnnotationsSymbol][key].annotationType_\n        const requestedAnnotationType = annotation.annotationType_\n        die(\n            `Cannot apply '@${requestedAnnotationType}' to '${fieldName}':` +\n                `\\nThe field is already decorated with '@${currentAnnotationType}'.` +\n                `\\nRe-decorating fields is not allowed.` +\n                `\\nUse '@override' decorator for methods overridden by subclass.`\n        )\n    }\n}\n\n/**\n * Collects annotations from prototypes and stores them on target (instance)\n */\nexport function collectStoredAnnotations(target): AnnotationsMap<any, any> {\n    if (!hasProp(target, storedAnnotationsSymbol)) {\n        if (__DEV__ && !target[storedAnnotationsSymbol]) {\n            die(\n                `No annotations were passed to makeObservable, but no decorated members have been found either`\n            )\n        }\n        // We need a copy as we will remove annotation from the list once it's applied.\n        addHiddenProp(target, storedAnnotationsSymbol, { ...target[storedAnnotationsSymbol] })\n    }\n    return target[storedAnnotationsSymbol]\n}\n","import {\n    IDerivationState_,\n    IObservable,\n    IDerivation,\n    createInstanceofPredicate,\n    endBatch,\n    getNextId,\n    noop,\n    onBecomeObserved,\n    onBecomeUnobserved,\n    propagateChanged,\n    reportObserved,\n    startBatch,\n    Lambda\n} from \"../internal\"\n\nexport const $mobx = Symbol(\"mobx administration\")\n\nexport interface IAtom extends IObservable {\n    reportObserved(): boolean\n    reportChanged()\n}\n\nexport class Atom implements IAtom {\n    isPendingUnobservation_ = false // for effective unobserving. BaseAtom has true, for extra optimization, so its onBecomeUnobserved never gets called, because it's not needed\n    isBeingObserved_ = false\n    observers_ = new Set<IDerivation>()\n\n    diffValue_ = 0\n    lastAccessedBy_ = 0\n    lowestObserverState_ = IDerivationState_.NOT_TRACKING_\n    /**\n     * Create a new atom. For debugging purposes it is recommended to give it a name.\n     * The onBecomeObserved and onBecomeUnobserved callbacks can be used for resource management.\n     */\n    constructor(public name_ = __DEV__ ? \"Atom@\" + getNextId() : \"Atom\") {}\n\n    // onBecomeObservedListeners\n    public onBOL: Set<Lambda> | undefined\n    // onBecomeUnobservedListeners\n    public onBUOL: Set<Lambda> | undefined\n\n    public onBO() {\n        if (this.onBOL) {\n            this.onBOL.forEach(listener => listener())\n        }\n    }\n\n    public onBUO() {\n        if (this.onBUOL) {\n            this.onBUOL.forEach(listener => listener())\n        }\n    }\n\n    /**\n     * Invoke this method to notify mobx that your atom has been used somehow.\n     * Returns true if there is currently a reactive context.\n     */\n    public reportObserved(): boolean {\n        return reportObserved(this)\n    }\n\n    /**\n     * Invoke this method _after_ this method has changed to signal mobx that all its observers should invalidate.\n     */\n    public reportChanged() {\n        startBatch()\n        propagateChanged(this)\n        endBatch()\n    }\n\n    toString() {\n        return this.name_\n    }\n}\n\nexport const isAtom = createInstanceofPredicate(\"Atom\", Atom)\n\nexport function createAtom(\n    name: string,\n    onBecomeObservedHandler: () => void = noop,\n    onBecomeUnobservedHandler: () => void = noop\n): IAtom {\n    const atom = new Atom(name)\n    // default `noop` listener will not initialize the hook Set\n    if (onBecomeObservedHandler !== noop) {\n        onBecomeObserved(atom, onBecomeObservedHandler)\n    }\n\n    if (onBecomeUnobservedHandler !== noop) {\n        onBecomeUnobserved(atom, onBecomeUnobservedHandler)\n    }\n    return atom\n}\n","import {\n    ObservableObjectAdministration,\n    createAction,\n    isAction,\n    defineProperty,\n    die,\n    isFunction,\n    Annotation,\n    globalState,\n    MakeResult\n} from \"../internal\"\n\nexport function createActionAnnotation(name: string, options?: object): Annotation {\n    return {\n        annotationType_: name,\n        options_: options,\n        make_,\n        extend_\n    }\n}\n\nfunction make_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    source: object\n): MakeResult {\n    // bound\n    if (this.options_?.bound) {\n        return this.extend_(adm, key, descriptor, false) === null\n            ? MakeResult.Cancel\n            : MakeResult.Break\n    }\n    // own\n    if (source === adm.target_) {\n        return this.extend_(adm, key, descriptor, false) === null\n            ? MakeResult.Cancel\n            : MakeResult.Continue\n    }\n    // prototype\n    if (isAction(descriptor.value)) {\n        // A prototype could have been annotated already by other constructor,\n        // rest of the proto chain must be annotated already\n        return MakeResult.Break\n    }\n    const actionDescriptor = createActionDescriptor(adm, this, key, descriptor, false)\n    defineProperty(source, key, actionDescriptor)\n    return MakeResult.Continue\n}\n\nfunction extend_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    proxyTrap: boolean\n): boolean | null {\n    const actionDescriptor = createActionDescriptor(adm, this, key, descriptor)\n    return adm.defineProperty_(key, actionDescriptor, proxyTrap)\n}\n\nfunction assertActionDescriptor(\n    adm: ObservableObjectAdministration,\n    { annotationType_ }: Annotation,\n    key: PropertyKey,\n    { value }: PropertyDescriptor\n) {\n    if (__DEV__ && !isFunction(value)) {\n        die(\n            `Cannot apply '${annotationType_}' to '${adm.name_}.${key.toString()}':` +\n                `\\n'${annotationType_}' can only be used on properties with a function value.`\n        )\n    }\n}\n\nexport function createActionDescriptor(\n    adm: ObservableObjectAdministration,\n    annotation: Annotation,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    // provides ability to disable safeDescriptors for prototypes\n    safeDescriptors: boolean = globalState.safeDescriptors\n) {\n    assertActionDescriptor(adm, annotation, key, descriptor)\n    let { value } = descriptor\n    if (annotation.options_?.bound) {\n        value = value.bind(adm.proxy_ ?? adm.target_)\n    }\n    return {\n        value: createAction(\n            annotation.options_?.name ?? key.toString(),\n            value,\n            annotation.options_?.autoAction ?? false,\n            // https://github.com/mobxjs/mobx/discussions/3140\n            annotation.options_?.bound ? adm.proxy_ ?? adm.target_ : undefined\n        ),\n        // Non-configurable for classes\n        // prevents accidental field redefinition in subclass\n        configurable: safeDescriptors ? adm.isPlainObject_ : true,\n        // https://github.com/mobxjs/mobx/pull/2641#issuecomment-737292058\n        enumerable: false,\n        // Non-obsevable, therefore non-writable\n        // Also prevents rewriting in subclass constructor\n        writable: safeDescriptors ? false : true\n    }\n}\n","import {\n    deepEqual,\n    isES6Map,\n    isES6Set,\n    isObservable,\n    isObservableArray,\n    isObservableMap,\n    isObservableSet,\n    isObservableObject,\n    isPlainObject,\n    observable,\n    die,\n    isAction,\n    autoAction,\n    flow,\n    isFlow,\n    isGenerator\n} from \"../internal\"\n\nexport interface IEnhancer<T> {\n    (newValue: T, oldValue: T | undefined, name: string): T\n}\n\nexport function deepEnhancer(v, _, name) {\n    // it is an observable already, done\n    if (isObservable(v)) {\n        return v\n    }\n\n    // something that can be converted and mutated?\n    if (Array.isArray(v)) {\n        return observable.array(v, { name })\n    }\n    if (isPlainObject(v)) {\n        return observable.object(v, undefined, { name })\n    }\n    if (isES6Map(v)) {\n        return observable.map(v, { name })\n    }\n    if (isES6Set(v)) {\n        return observable.set(v, { name })\n    }\n    if (typeof v === \"function\" && !isAction(v) && !isFlow(v)) {\n        if (isGenerator(v)) {\n            return flow(v)\n        } else {\n            return autoAction(name, v)\n        }\n    }\n    return v\n}\n\nexport function shallowEnhancer(v, _, name): any {\n    if (v === undefined || v === null) {\n        return v\n    }\n    if (isObservableObject(v) || isObservableArray(v) || isObservableMap(v) || isObservableSet(v)) {\n        return v\n    }\n    if (Array.isArray(v)) {\n        return observable.array(v, { name, deep: false })\n    }\n    if (isPlainObject(v)) {\n        return observable.object(v, undefined, { name, deep: false })\n    }\n    if (isES6Map(v)) {\n        return observable.map(v, { name, deep: false })\n    }\n    if (isES6Set(v)) {\n        return observable.set(v, { name, deep: false })\n    }\n\n    if (__DEV__) {\n        die(\n            \"The shallow modifier / decorator can only used in combination with arrays, objects, maps and sets\"\n        )\n    }\n}\n\nexport function referenceEnhancer(newValue?) {\n    // never turn into an observable\n    return newValue\n}\n\nexport function refStructEnhancer(v, oldValue): any {\n    if (__DEV__ && isObservable(v)) {\n        die(`observable.struct should not be used with observable values`)\n    }\n    if (deepEqual(v, oldValue)) {\n        return oldValue\n    }\n    return v\n}\n","import { deepEqual } from \"../internal\"\n\nexport interface IEqualsComparer<T> {\n    (a: T, b: T): boolean\n}\n\nfunction identityComparer(a: any, b: any): boolean {\n    return a === b\n}\n\nfunction structuralComparer(a: any, b: any): boolean {\n    return deepEqual(a, b)\n}\n\nfunction shallowComparer(a: any, b: any): boolean {\n    return deepEqual(a, b, 1)\n}\n\nfunction defaultComparer(a: any, b: any): boolean {\n    if (Object.is) {\n        return Object.is(a, b)\n    }\n\n    return a === b ? a !== 0 || 1 / a === 1 / b : a !== a && b !== b\n}\n\nexport const comparer = {\n    identity: identityComparer,\n    structural: structuralComparer,\n    default: defaultComparer,\n    shallow: shallowComparer\n}\n","import {\n    action,\n    noop,\n    die,\n    isFunction,\n    Annotation,\n    isStringish,\n    storeAnnotation,\n    createFlowAnnotation,\n    createDecoratorAnnotation\n} from \"../internal\"\n\nexport const FLOW = \"flow\"\n\nlet generatorId = 0\n\nexport function FlowCancellationError() {\n    this.message = \"FLOW_CANCELLED\"\n}\nFlowCancellationError.prototype = Object.create(Error.prototype)\n\nexport function isFlowCancellationError(error: Error) {\n    return error instanceof FlowCancellationError\n}\n\nexport type CancellablePromise<T> = Promise<T> & { cancel(): void }\n\ninterface Flow extends Annotation, PropertyDecorator {\n    <R, Args extends any[]>(\n        generator: (...args: Args) => Generator<any, R, any> | AsyncGenerator<any, R, any>\n    ): (...args: Args) => CancellablePromise<R>\n    bound: Annotation & PropertyDecorator\n}\n\nconst flowAnnotation = createFlowAnnotation(\"flow\")\nconst flowBoundAnnotation = createFlowAnnotation(\"flow.bound\", { bound: true })\n\nexport const flow: Flow = Object.assign(\n    function flow(arg1, arg2?) {\n        // @flow\n        if (isStringish(arg2)) {\n            return storeAnnotation(arg1, arg2, flowAnnotation)\n        }\n        // flow(fn)\n        if (__DEV__ && arguments.length !== 1) {\n            die(`Flow expects single argument with generator function`)\n        }\n        const generator = arg1\n        const name = generator.name || \"<unnamed flow>\"\n\n        // Implementation based on https://github.com/tj/co/blob/master/index.js\n        const res = function () {\n            const ctx = this\n            const args = arguments\n            const runId = ++generatorId\n            const gen = action(`${name} - runid: ${runId} - init`, generator).apply(ctx, args)\n            let rejector: (error: any) => void\n            let pendingPromise: CancellablePromise<any> | undefined = undefined\n\n            const promise = new Promise(function (resolve, reject) {\n                let stepId = 0\n                rejector = reject\n\n                function onFulfilled(res: any) {\n                    pendingPromise = undefined\n                    let ret\n                    try {\n                        ret = action(\n                            `${name} - runid: ${runId} - yield ${stepId++}`,\n                            gen.next\n                        ).call(gen, res)\n                    } catch (e) {\n                        return reject(e)\n                    }\n\n                    next(ret)\n                }\n\n                function onRejected(err: any) {\n                    pendingPromise = undefined\n                    let ret\n                    try {\n                        ret = action(\n                            `${name} - runid: ${runId} - yield ${stepId++}`,\n                            gen.throw!\n                        ).call(gen, err)\n                    } catch (e) {\n                        return reject(e)\n                    }\n                    next(ret)\n                }\n\n                function next(ret: any) {\n                    if (isFunction(ret?.then)) {\n                        // an async iterator\n                        ret.then(next, reject)\n                        return\n                    }\n                    if (ret.done) {\n                        return resolve(ret.value)\n                    }\n                    pendingPromise = Promise.resolve(ret.value) as any\n                    return pendingPromise!.then(onFulfilled, onRejected)\n                }\n\n                onFulfilled(undefined) // kick off the process\n            }) as any\n\n            promise.cancel = action(`${name} - runid: ${runId} - cancel`, function () {\n                try {\n                    if (pendingPromise) {\n                        cancelPromise(pendingPromise)\n                    }\n                    // Finally block can return (or yield) stuff..\n                    const res = gen.return!(undefined as any)\n                    // eat anything that promise would do, it's cancelled!\n                    const yieldedPromise = Promise.resolve(res.value)\n                    yieldedPromise.then(noop, noop)\n                    cancelPromise(yieldedPromise) // maybe it can be cancelled :)\n                    // reject our original promise\n                    rejector(new FlowCancellationError())\n                } catch (e) {\n                    rejector(e) // there could be a throwing finally block\n                }\n            })\n            return promise\n        }\n        res.isMobXFlow = true\n        return res\n    } as any,\n    flowAnnotation\n)\n\nflow.bound = createDecoratorAnnotation(flowBoundAnnotation)\n\nfunction cancelPromise(promise) {\n    if (isFunction(promise.cancel)) {\n        promise.cancel()\n    }\n}\n\nexport function flowResult<T>(\n    result: T\n): T extends Generator<any, infer R, any>\n    ? CancellablePromise<R>\n    : T extends CancellablePromise<any>\n    ? T\n    : never {\n    return result as any // just tricking TypeScript :)\n}\n\nexport function isFlow(fn: any): boolean {\n    return fn?.isMobXFlow === true\n}\n","import {\n    die,\n    Annotation,\n    hasProp,\n    createDecoratorAnnotation,\n    ObservableObjectAdministration,\n    MakeResult\n} from \"../internal\"\n\nconst OVERRIDE = \"override\"\n\nexport const override: Annotation & PropertyDecorator = createDecoratorAnnotation({\n    annotationType_: OVERRIDE,\n    make_,\n    extend_\n})\n\nexport function isOverride(annotation: Annotation): boolean {\n    return annotation.annotationType_ === OVERRIDE\n}\n\nfunction make_(adm: ObservableObjectAdministration, key): MakeResult {\n    // Must not be plain object\n    if (__DEV__ && adm.isPlainObject_) {\n        die(\n            `Cannot apply '${this.annotationType_}' to '${adm.name_}.${key.toString()}':` +\n                `\\n'${this.annotationType_}' cannot be used on plain objects.`\n        )\n    }\n    // Must override something\n    if (__DEV__ && !hasProp(adm.appliedAnnotations_!, key)) {\n        die(\n            `'${adm.name_}.${key.toString()}' is annotated with '${this.annotationType_}', ` +\n                `but no such annotated member was found on prototype.`\n        )\n    }\n    return MakeResult.Cancel\n}\n\nfunction extend_(adm, key, descriptor, proxyTrap): boolean {\n    die(`'${this.annotationType_}' can only be used with 'makeObservable'`)\n}\n","import {\n    ObservableObjectAdministration,\n    Annotation,\n    defineProperty,\n    die,\n    flow,\n    isFlow,\n    isFunction,\n    globalState,\n    MakeResult,\n    hasProp\n} from \"../internal\"\n\nexport function createFlowAnnotation(name: string, options?: object): Annotation {\n    return {\n        annotationType_: name,\n        options_: options,\n        make_,\n        extend_\n    }\n}\n\nfunction make_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    source: object\n): MakeResult {\n    // own\n    if (source === adm.target_) {\n        return this.extend_(adm, key, descriptor, false) === null\n            ? MakeResult.Cancel\n            : MakeResult.Continue\n    }\n    // prototype\n    // bound - must annotate protos to support super.flow()\n    if (this.options_?.bound && (!hasProp(adm.target_, key) || !isFlow(adm.target_[key]))) {\n        if (this.extend_(adm, key, descriptor, false) === null) {\n            return MakeResult.Cancel\n        }\n    }\n    if (isFlow(descriptor.value)) {\n        // A prototype could have been annotated already by other constructor,\n        // rest of the proto chain must be annotated already\n        return MakeResult.Break\n    }\n    const flowDescriptor = createFlowDescriptor(adm, this, key, descriptor, false, false)\n    defineProperty(source, key, flowDescriptor)\n    return MakeResult.Continue\n}\n\nfunction extend_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    proxyTrap: boolean\n): boolean | null {\n    const flowDescriptor = createFlowDescriptor(adm, this, key, descriptor, this.options_?.bound)\n    return adm.defineProperty_(key, flowDescriptor, proxyTrap)\n}\n\nfunction assertFlowDescriptor(\n    adm: ObservableObjectAdministration,\n    { annotationType_ }: Annotation,\n    key: PropertyKey,\n    { value }: PropertyDescriptor\n) {\n    if (__DEV__ && !isFunction(value)) {\n        die(\n            `Cannot apply '${annotationType_}' to '${adm.name_}.${key.toString()}':` +\n                `\\n'${annotationType_}' can only be used on properties with a generator function value.`\n        )\n    }\n}\n\nfunction createFlowDescriptor(\n    adm: ObservableObjectAdministration,\n    annotation: Annotation,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    bound: boolean,\n    // provides ability to disable safeDescriptors for prototypes\n    safeDescriptors: boolean = globalState.safeDescriptors\n): PropertyDescriptor {\n    assertFlowDescriptor(adm, annotation, key, descriptor)\n    let { value } = descriptor\n    // In case of flow.bound, the descriptor can be from already annotated prototype\n    if (!isFlow(value)) {\n        value = flow(value)\n    }\n    if (bound) {\n        // We do not keep original function around, so we bind the existing flow\n        value = value.bind(adm.proxy_ ?? adm.target_)\n        // This is normally set by `flow`, but `bind` returns new function...\n        value.isMobXFlow = true\n    }\n    return {\n        value,\n        // Non-configurable for classes\n        // prevents accidental field redefinition in subclass\n        configurable: safeDescriptors ? adm.isPlainObject_ : true,\n        // https://github.com/mobxjs/mobx/pull/2641#issuecomment-737292058\n        enumerable: false,\n        // Non-obsevable, therefore non-writable\n        // Also prevents rewriting in subclass constructor\n        writable: safeDescriptors ? false : true\n    }\n}\n","import { ObservableObjectAdministration, die, Annotation, MakeResult } from \"../internal\"\n\nexport function createComputedAnnotation(name: string, options?: object): Annotation {\n    return {\n        annotationType_: name,\n        options_: options,\n        make_,\n        extend_\n    }\n}\n\nfunction make_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor\n): MakeResult {\n    return this.extend_(adm, key, descriptor, false) === null ? MakeResult.Cancel : MakeResult.Break\n}\n\nfunction extend_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    proxyTrap: boolean\n): boolean | null {\n    assertComputedDescriptor(adm, this, key, descriptor)\n    return adm.defineComputedProperty_(\n        key,\n        {\n            ...this.options_,\n            get: descriptor.get,\n            set: descriptor.set\n        },\n        proxyTrap\n    )\n}\n\nfunction assertComputedDescriptor(\n    adm: ObservableObjectAdministration,\n    { annotationType_ }: Annotation,\n    key: PropertyKey,\n    { get }: PropertyDescriptor\n) {\n    if (__DEV__ && !get) {\n        die(\n            `Cannot apply '${annotationType_}' to '${adm.name_}.${key.toString()}':` +\n                `\\n'${annotationType_}' can only be used on getter(+setter) properties.`\n        )\n    }\n}\n","import {\n    ObservableObjectAdministration,\n    deepEnhancer,\n    die,\n    Annotation,\n    MakeResult\n} from \"../internal\"\n\nexport function createObservableAnnotation(name: string, options?: object): Annotation {\n    return {\n        annotationType_: name,\n        options_: options,\n        make_,\n        extend_\n    }\n}\n\nfunction make_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor\n): MakeResult {\n    return this.extend_(adm, key, descriptor, false) === null ? MakeResult.Cancel : MakeResult.Break\n}\n\nfunction extend_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    proxyTrap: boolean\n): boolean | null {\n    assertObservableDescriptor(adm, this, key, descriptor)\n    return adm.defineObservableProperty_(\n        key,\n        descriptor.value,\n        this.options_?.enhancer ?? deepEnhancer,\n        proxyTrap\n    )\n}\n\nfunction assertObservableDescriptor(\n    adm: ObservableObjectAdministration,\n    { annotationType_ }: Annotation,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor\n) {\n    if (__DEV__ && !(\"value\" in descriptor)) {\n        die(\n            `Cannot apply '${annotationType_}' to '${adm.name_}.${key.toString()}':` +\n                `\\n'${annotationType_}' cannot be used on getter/setter properties`\n        )\n    }\n}\n","import {\n    ObservableObjectAdministration,\n    observable,\n    Annotation,\n    defineProperty,\n    createAction,\n    globalState,\n    flow,\n    computed,\n    autoAction,\n    isGenerator,\n    MakeResult\n} from \"../internal\"\n\nconst AUTO = \"true\"\n\nexport const autoAnnotation: Annotation = createAutoAnnotation()\n\nexport function createAutoAnnotation(options?: object): Annotation {\n    return {\n        annotationType_: AUTO,\n        options_: options,\n        make_,\n        extend_\n    }\n}\n\nfunction make_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    source: object\n): MakeResult {\n    // getter -> computed\n    if (descriptor.get) {\n        return computed.make_(adm, key, descriptor, source)\n    }\n    // lone setter -> action setter\n    if (descriptor.set) {\n        // TODO make action applicable to setter and delegate to action.make_\n        const set = createAction(key.toString(), descriptor.set) as (v: any) => void\n        // own\n        if (source === adm.target_) {\n            return adm.defineProperty_(key, {\n                configurable: globalState.safeDescriptors ? adm.isPlainObject_ : true,\n                set\n            }) === null\n                ? MakeResult.Cancel\n                : MakeResult.Continue\n        }\n        // proto\n        defineProperty(source, key, {\n            configurable: true,\n            set\n        })\n        return MakeResult.Continue\n    }\n    // function on proto -> autoAction/flow\n    if (source !== adm.target_ && typeof descriptor.value === \"function\") {\n        if (isGenerator(descriptor.value)) {\n            const flowAnnotation = this.options_?.autoBind ? flow.bound : flow\n            return flowAnnotation.make_(adm, key, descriptor, source)\n        }\n        const actionAnnotation = this.options_?.autoBind ? autoAction.bound : autoAction\n        return actionAnnotation.make_(adm, key, descriptor, source)\n    }\n    // other -> observable\n    // Copy props from proto as well, see test:\n    // \"decorate should work with Object.create\"\n    let observableAnnotation = this.options_?.deep === false ? observable.ref : observable\n    // if function respect autoBind option\n    if (typeof descriptor.value === \"function\" && this.options_?.autoBind) {\n        descriptor.value = descriptor.value.bind(adm.proxy_ ?? adm.target_)\n    }\n    return observableAnnotation.make_(adm, key, descriptor, source)\n}\n\nfunction extend_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    proxyTrap: boolean\n): boolean | null {\n    // getter -> computed\n    if (descriptor.get) {\n        return computed.extend_(adm, key, descriptor, proxyTrap)\n    }\n    // lone setter -> action setter\n    if (descriptor.set) {\n        // TODO make action applicable to setter and delegate to action.extend_\n        return adm.defineProperty_(\n            key,\n            {\n                configurable: globalState.safeDescriptors ? adm.isPlainObject_ : true,\n                set: createAction(key.toString(), descriptor.set) as (v: any) => void\n            },\n            proxyTrap\n        )\n    }\n    // other -> observable\n    // if function respect autoBind option\n    if (typeof descriptor.value === \"function\" && this.options_?.autoBind) {\n        descriptor.value = descriptor.value.bind(adm.proxy_ ?? adm.target_)\n    }\n    let observableAnnotation = this.options_?.deep === false ? observable.ref : observable\n    return observableAnnotation.extend_(adm, key, descriptor, proxyTrap)\n}\n","import {\n    IEnhancer,\n    IEqualsComparer,\n    IObservableArray,\n    IObservableMapInitialValues,\n    IObservableSetInitialValues,\n    IObservableValue,\n    ObservableMap,\n    ObservableSet,\n    ObservableValue,\n    asDynamicObservableObject,\n    createObservableArray,\n    deepEnhancer,\n    extendObservable,\n    isES6Map,\n    isES6Set,\n    isObservable,\n    isPlainObject,\n    referenceEnhancer,\n    Annotation,\n    shallowEnhancer,\n    refStructEnhancer,\n    AnnotationsMap,\n    asObservableObject,\n    storeAnnotation,\n    createDecoratorAnnotation,\n    createLegacyArray,\n    globalState,\n    assign,\n    isStringish,\n    createObservableAnnotation,\n    createAutoAnnotation\n} from \"../internal\"\n\nexport const OBSERVABLE = \"observable\"\nexport const OBSERVABLE_REF = \"observable.ref\"\nexport const OBSERVABLE_SHALLOW = \"observable.shallow\"\nexport const OBSERVABLE_STRUCT = \"observable.struct\"\n\nexport type CreateObservableOptions = {\n    name?: string\n    equals?: IEqualsComparer<any>\n    deep?: boolean\n    defaultDecorator?: Annotation\n    proxy?: boolean\n    autoBind?: boolean\n}\n\n// Predefined bags of create observable options, to avoid allocating temporarily option objects\n// in the majority of cases\nexport const defaultCreateObservableOptions: CreateObservableOptions = {\n    deep: true,\n    name: undefined,\n    defaultDecorator: undefined,\n    proxy: true\n}\nObject.freeze(defaultCreateObservableOptions)\n\nexport function asCreateObservableOptions(thing: any): CreateObservableOptions {\n    return thing || defaultCreateObservableOptions\n}\n\nconst observableAnnotation = createObservableAnnotation(OBSERVABLE)\nconst observableRefAnnotation = createObservableAnnotation(OBSERVABLE_REF, {\n    enhancer: referenceEnhancer\n})\nconst observableShallowAnnotation = createObservableAnnotation(OBSERVABLE_SHALLOW, {\n    enhancer: shallowEnhancer\n})\nconst observableStructAnnotation = createObservableAnnotation(OBSERVABLE_STRUCT, {\n    enhancer: refStructEnhancer\n})\nconst observableDecoratorAnnotation = createDecoratorAnnotation(observableAnnotation)\n\nexport function getEnhancerFromOptions(options: CreateObservableOptions): IEnhancer<any> {\n    return options.deep === true\n        ? deepEnhancer\n        : options.deep === false\n        ? referenceEnhancer\n        : getEnhancerFromAnnotation(options.defaultDecorator)\n}\n\nexport function getAnnotationFromOptions(\n    options?: CreateObservableOptions\n): Annotation | undefined {\n    return options ? options.defaultDecorator ?? createAutoAnnotation(options) : undefined\n}\n\nexport function getEnhancerFromAnnotation(annotation?: Annotation): IEnhancer<any> {\n    return !annotation ? deepEnhancer : annotation.options_?.enhancer ?? deepEnhancer\n}\n\n/**\n * Turns an object, array or function into a reactive structure.\n * @param v the value which should become observable.\n */\nfunction createObservable(v: any, arg2?: any, arg3?: any) {\n    // @observable someProp;\n    if (isStringish(arg2)) {\n        storeAnnotation(v, arg2, observableAnnotation)\n        return\n    }\n\n    // already observable - ignore\n    if (isObservable(v)) {\n        return v\n    }\n\n    // plain object\n    if (isPlainObject(v)) {\n        return observable.object(v, arg2, arg3)\n    }\n\n    // Array\n    if (Array.isArray(v)) {\n        return observable.array(v, arg2)\n    }\n\n    // Map\n    if (isES6Map(v)) {\n        return observable.map(v, arg2)\n    }\n\n    // Set\n    if (isES6Set(v)) {\n        return observable.set(v, arg2)\n    }\n\n    // other object - ignore\n    if (typeof v === \"object\" && v !== null) {\n        return v\n    }\n\n    // anything else\n    return observable.box(v, arg2)\n}\nObject.assign(createObservable, observableDecoratorAnnotation)\n\nexport interface IObservableValueFactory {\n    <T>(value: T, options?: CreateObservableOptions): IObservableValue<T>\n    <T>(value?: T, options?: CreateObservableOptions): IObservableValue<T | undefined>\n}\n\nexport interface IObservableFactory extends Annotation, PropertyDecorator {\n    <T = any>(value: T[], options?: CreateObservableOptions): IObservableArray<T>\n    <T = any>(value: Set<T>, options?: CreateObservableOptions): ObservableSet<T>\n    <K = any, V = any>(value: Map<K, V>, options?: CreateObservableOptions): ObservableMap<K, V>\n    <T extends object>(\n        value: T,\n        decorators?: AnnotationsMap<T, never>,\n        options?: CreateObservableOptions\n    ): T\n\n    box: IObservableValueFactory\n    array: <T = any>(initialValues?: T[], options?: CreateObservableOptions) => IObservableArray<T>\n    set: <T = any>(\n        initialValues?: IObservableSetInitialValues<T>,\n        options?: CreateObservableOptions\n    ) => ObservableSet<T>\n    map: <K = any, V = any>(\n        initialValues?: IObservableMapInitialValues<K, V>,\n        options?: CreateObservableOptions\n    ) => ObservableMap<K, V>\n    object: <T = any>(\n        props: T,\n        decorators?: AnnotationsMap<T, never>,\n        options?: CreateObservableOptions\n    ) => T\n\n    /**\n     * Decorator that creates an observable that only observes the references, but doesn't try to turn the assigned value into an observable.ts.\n     */\n    ref: Annotation & PropertyDecorator\n    /**\n     * Decorator that creates an observable converts its value (objects, maps or arrays) into a shallow observable structure\n     */\n    shallow: Annotation & PropertyDecorator\n    deep: Annotation & PropertyDecorator\n    struct: Annotation & PropertyDecorator\n}\n\nconst observableFactories: IObservableFactory = {\n    box<T = any>(value: T, options?: CreateObservableOptions): IObservableValue<T> {\n        const o = asCreateObservableOptions(options)\n        return new ObservableValue(value, getEnhancerFromOptions(o), o.name, true, o.equals)\n    },\n    array<T = any>(initialValues?: T[], options?: CreateObservableOptions): IObservableArray<T> {\n        const o = asCreateObservableOptions(options)\n        return (\n            globalState.useProxies === false || o.proxy === false\n                ? createLegacyArray\n                : createObservableArray\n        )(initialValues, getEnhancerFromOptions(o), o.name)\n    },\n    map<K = any, V = any>(\n        initialValues?: IObservableMapInitialValues<K, V>,\n        options?: CreateObservableOptions\n    ): ObservableMap<K, V> {\n        const o = asCreateObservableOptions(options)\n        return new ObservableMap<K, V>(initialValues, getEnhancerFromOptions(o), o.name)\n    },\n    set<T = any>(\n        initialValues?: IObservableSetInitialValues<T>,\n        options?: CreateObservableOptions\n    ): ObservableSet<T> {\n        const o = asCreateObservableOptions(options)\n        return new ObservableSet<T>(initialValues, getEnhancerFromOptions(o), o.name)\n    },\n    object<T extends object = any>(\n        props: T,\n        decorators?: AnnotationsMap<T, never>,\n        options?: CreateObservableOptions\n    ): T {\n        return extendObservable(\n            globalState.useProxies === false || options?.proxy === false\n                ? asObservableObject({}, options)\n                : asDynamicObservableObject({}, options),\n            props,\n            decorators\n        )\n    },\n    ref: createDecoratorAnnotation(observableRefAnnotation),\n    shallow: createDecoratorAnnotation(observableShallowAnnotation),\n    deep: observableDecoratorAnnotation,\n    struct: createDecoratorAnnotation(observableStructAnnotation)\n} as any\n\n// eslint-disable-next-line\nexport var observable: IObservableFactory = assign(createObservable, observableFactories)\n","import {\n    ComputedValue,\n    IComputedValueOptions,\n    Annotation,\n    storeAnnotation,\n    createDecoratorAnnotation,\n    isStringish,\n    isPlainObject,\n    isFunction,\n    die,\n    IComputedValue,\n    createComputedAnnotation,\n    comparer\n} from \"../internal\"\n\nexport const COMPUTED = \"computed\"\nexport const COMPUTED_STRUCT = \"computed.struct\"\n\nexport interface IComputedFactory extends Annotation, PropertyDecorator {\n    // @computed(opts)\n    <T>(options: IComputedValueOptions<T>): Annotation & PropertyDecorator\n    // computed(fn, opts)\n    <T>(func: () => T, options?: IComputedValueOptions<T>): IComputedValue<T>\n\n    struct: Annotation & PropertyDecorator\n}\n\nconst computedAnnotation = createComputedAnnotation(COMPUTED)\nconst computedStructAnnotation = createComputedAnnotation(COMPUTED_STRUCT, {\n    equals: comparer.structural\n})\n\n/**\n * Decorator for class properties: @computed get value() { return expr; }.\n * For legacy purposes also invokable as ES5 observable created: `computed(() => expr)`;\n */\nexport const computed: IComputedFactory = function computed(arg1, arg2) {\n    if (isStringish(arg2)) {\n        // @computed\n        return storeAnnotation(arg1, arg2, computedAnnotation)\n    }\n    if (isPlainObject(arg1)) {\n        // @computed({ options })\n        return createDecoratorAnnotation(createComputedAnnotation(COMPUTED, arg1))\n    }\n\n    // computed(expr, options?)\n    if (__DEV__) {\n        if (!isFunction(arg1)) {\n            die(\"First argument to `computed` should be an expression.\")\n        }\n        if (isFunction(arg2)) {\n            die(\n                \"A setter as second argument is no longer supported, use `{ set: fn }` option instead\"\n            )\n        }\n    }\n    const opts: IComputedValueOptions<any> = isPlainObject(arg2) ? arg2 : {}\n    opts.get = arg1\n    opts.name ||= arg1.name || \"\" /* for generated name */\n\n    return new ComputedValue(opts)\n} as any\n\nObject.assign(computed, computedAnnotation)\n\ncomputed.struct = createDecoratorAnnotation(computedStructAnnotation)\n","import {\n    IDerivation,\n    endBatch,\n    globalState,\n    isSpyEnabled,\n    spyReportEnd,\n    spyReportStart,\n    startBatch,\n    untrackedEnd,\n    untrackedStart,\n    isFunction,\n    allowStateReadsStart,\n    allowStateReadsEnd,\n    ACTION,\n    EMPTY_ARRAY,\n    die,\n    getDescriptor\n} from \"../internal\"\n\n// we don't use globalState for these in order to avoid possible issues with multiple\n// mobx versions\nlet currentActionId = 0\nlet nextActionId = 1\nconst isFunctionNameConfigurable = getDescriptor(() => {}, \"name\")?.configurable ?? false\n\n// we can safely recycle this object\nconst tmpNameDescriptor: PropertyDescriptor = {\n    value: \"action\",\n    configurable: true,\n    writable: false,\n    enumerable: false\n}\n\nexport function createAction(\n    actionName: string,\n    fn: Function,\n    autoAction: boolean = false,\n    ref?: Object\n): Function {\n    if (__DEV__) {\n        if (!isFunction(fn)) {\n            die(\"`action` can only be invoked on functions\")\n        }\n        if (typeof actionName !== \"string\" || !actionName) {\n            die(`actions should have valid names, got: '${actionName}'`)\n        }\n    }\n    function res() {\n        return executeAction(actionName, autoAction, fn, ref || this, arguments)\n    }\n    res.isMobxAction = true\n    if (isFunctionNameConfigurable) {\n        tmpNameDescriptor.value = actionName\n        Object.defineProperty(res, \"name\", tmpNameDescriptor)\n    }\n    return res\n}\n\nexport function executeAction(\n    actionName: string,\n    canRunAsDerivation: boolean,\n    fn: Function,\n    scope?: any,\n    args?: IArguments\n) {\n    const runInfo = _startAction(actionName, canRunAsDerivation, scope, args)\n    try {\n        return fn.apply(scope, args)\n    } catch (err) {\n        runInfo.error_ = err\n        throw err\n    } finally {\n        _endAction(runInfo)\n    }\n}\n\nexport interface IActionRunInfo {\n    prevDerivation_: IDerivation | null\n    prevAllowStateChanges_: boolean\n    prevAllowStateReads_: boolean\n    notifySpy_: boolean\n    startTime_: number\n    error_?: any\n    parentActionId_: number\n    actionId_: number\n    runAsAction_?: boolean\n}\n\nexport function _startAction(\n    actionName: string,\n    canRunAsDerivation: boolean, // true for autoAction\n    scope: any,\n    args?: IArguments\n): IActionRunInfo {\n    const notifySpy_ = __DEV__ && isSpyEnabled() && !!actionName\n    let startTime_: number = 0\n    if (__DEV__ && notifySpy_) {\n        startTime_ = Date.now()\n        const flattenedArgs = args ? Array.from(args) : EMPTY_ARRAY\n        spyReportStart({\n            type: ACTION,\n            name: actionName,\n            object: scope,\n            arguments: flattenedArgs\n        })\n    }\n    const prevDerivation_ = globalState.trackingDerivation\n    const runAsAction = !canRunAsDerivation || !prevDerivation_\n    startBatch()\n    let prevAllowStateChanges_ = globalState.allowStateChanges // by default preserve previous allow\n    if (runAsAction) {\n        untrackedStart()\n        prevAllowStateChanges_ = allowStateChangesStart(true)\n    }\n    const prevAllowStateReads_ = allowStateReadsStart(true)\n    const runInfo = {\n        runAsAction_: runAsAction,\n        prevDerivation_,\n        prevAllowStateChanges_,\n        prevAllowStateReads_,\n        notifySpy_,\n        startTime_,\n        actionId_: nextActionId++,\n        parentActionId_: currentActionId\n    }\n    currentActionId = runInfo.actionId_\n    return runInfo\n}\n\nexport function _endAction(runInfo: IActionRunInfo) {\n    if (currentActionId !== runInfo.actionId_) {\n        die(30)\n    }\n    currentActionId = runInfo.parentActionId_\n\n    if (runInfo.error_ !== undefined) {\n        globalState.suppressReactionErrors = true\n    }\n    allowStateChangesEnd(runInfo.prevAllowStateChanges_)\n    allowStateReadsEnd(runInfo.prevAllowStateReads_)\n    endBatch()\n    if (runInfo.runAsAction_) {\n        untrackedEnd(runInfo.prevDerivation_)\n    }\n    if (__DEV__ && runInfo.notifySpy_) {\n        spyReportEnd({ time: Date.now() - runInfo.startTime_ })\n    }\n    globalState.suppressReactionErrors = false\n}\n\nexport function allowStateChanges<T>(allowStateChanges: boolean, func: () => T): T {\n    const prev = allowStateChangesStart(allowStateChanges)\n    try {\n        return func()\n    } finally {\n        allowStateChangesEnd(prev)\n    }\n}\n\nexport function allowStateChangesStart(allowStateChanges: boolean) {\n    const prev = globalState.allowStateChanges\n    globalState.allowStateChanges = allowStateChanges\n    return prev\n}\n\nexport function allowStateChangesEnd(prev: boolean) {\n    globalState.allowStateChanges = prev\n}\n","import {\n    $mobx,\n    Atom,\n    EMPTY_ARRAY,\n    IAtom,\n    IEnhancer,\n    IInterceptable,\n    IInterceptor,\n    IListenable,\n    Lambda,\n    addHiddenFinalProp,\n    checkIfStateModificationsAreAllowed,\n    createInstanceofPredicate,\n    getNextId,\n    hasInterceptors,\n    hasListeners,\n    interceptChange,\n    isObject,\n    isSpyEnabled,\n    notifyListeners,\n    registerInterceptor,\n    registerListener,\n    spyReportEnd,\n    spyReportStart,\n    allowStateChangesStart,\n    allowStateChangesEnd,\n    assertProxies,\n    reserveArrayBuffer,\n    hasProp,\n    die,\n    globalState\n} from \"../internal\"\n\nconst SPLICE = \"splice\"\nexport const UPDATE = \"update\"\nexport const MAX_SPLICE_SIZE = 10000 // See e.g. https://github.com/mobxjs/mobx/issues/859\n\nexport interface IObservableArray<T = any> extends Array<T> {\n    spliceWithArray(index: number, deleteCount?: number, newItems?: T[]): T[]\n    clear(): T[]\n    replace(newItems: T[]): T[]\n    remove(value: T): boolean\n    toJSON(): T[]\n}\n\ninterface IArrayBaseChange<T> {\n    object: IObservableArray<T>\n    observableKind: \"array\"\n    debugObjectName: string\n    index: number\n}\n\nexport type IArrayDidChange<T = any> = IArrayUpdate<T> | IArraySplice<T>\n\nexport interface IArrayUpdate<T = any> extends IArrayBaseChange<T> {\n    type: \"update\"\n    newValue: T\n    oldValue: T\n}\n\nexport interface IArraySplice<T = any> extends IArrayBaseChange<T> {\n    type: \"splice\"\n    added: T[]\n    addedCount: number\n    removed: T[]\n    removedCount: number\n}\n\nexport interface IArrayWillChange<T = any> {\n    object: IObservableArray<T>\n    index: number\n    type: \"update\"\n    newValue: T\n}\n\nexport interface IArrayWillSplice<T = any> {\n    object: IObservableArray<T>\n    index: number\n    type: \"splice\"\n    added: T[]\n    removedCount: number\n}\n\nconst arrayTraps = {\n    get(target, name) {\n        const adm: ObservableArrayAdministration = target[$mobx]\n        if (name === $mobx) {\n            return adm\n        }\n        if (name === \"length\") {\n            return adm.getArrayLength_()\n        }\n        if (typeof name === \"string\" && !isNaN(name as any)) {\n            return adm.get_(parseInt(name))\n        }\n        if (hasProp(arrayExtensions, name)) {\n            return arrayExtensions[name]\n        }\n        return target[name]\n    },\n    set(target, name, value): boolean {\n        const adm: ObservableArrayAdministration = target[$mobx]\n        if (name === \"length\") {\n            adm.setArrayLength_(value)\n        }\n        if (typeof name === \"symbol\" || isNaN(name)) {\n            target[name] = value\n        } else {\n            // numeric string\n            adm.set_(parseInt(name), value)\n        }\n        return true\n    },\n    preventExtensions() {\n        die(15)\n    }\n}\n\nexport class ObservableArrayAdministration\n    implements IInterceptable<IArrayWillChange<any> | IArrayWillSplice<any>>, IListenable\n{\n    atom_: IAtom\n    readonly values_: any[] = [] // this is the prop that gets proxied, so can't replace it!\n    interceptors_\n    changeListeners_\n    enhancer_: (newV: any, oldV: any | undefined) => any\n    dehancer: any\n    proxy_!: IObservableArray<any>\n    lastKnownLength_ = 0\n\n    constructor(\n        name = __DEV__ ? \"ObservableArray@\" + getNextId() : \"ObservableArray\",\n        enhancer: IEnhancer<any>,\n        public owned_: boolean,\n        public legacyMode_: boolean\n    ) {\n        this.atom_ = new Atom(name)\n        this.enhancer_ = (newV, oldV) =>\n            enhancer(newV, oldV, __DEV__ ? name + \"[..]\" : \"ObservableArray[..]\")\n    }\n\n    dehanceValue_(value: any): any {\n        if (this.dehancer !== undefined) {\n            return this.dehancer(value)\n        }\n        return value\n    }\n\n    dehanceValues_(values: any[]): any[] {\n        if (this.dehancer !== undefined && values.length > 0) {\n            return values.map(this.dehancer) as any\n        }\n        return values\n    }\n\n    intercept_(handler: IInterceptor<IArrayWillChange<any> | IArrayWillSplice<any>>): Lambda {\n        return registerInterceptor<IArrayWillChange<any> | IArrayWillSplice<any>>(this, handler)\n    }\n\n    observe_(\n        listener: (changeData: IArrayDidChange<any>) => void,\n        fireImmediately = false\n    ): Lambda {\n        if (fireImmediately) {\n            listener(<IArraySplice<any>>{\n                observableKind: \"array\",\n                object: this.proxy_ as any,\n                debugObjectName: this.atom_.name_,\n                type: \"splice\",\n                index: 0,\n                added: this.values_.slice(),\n                addedCount: this.values_.length,\n                removed: [],\n                removedCount: 0\n            })\n        }\n        return registerListener(this, listener)\n    }\n\n    getArrayLength_(): number {\n        this.atom_.reportObserved()\n        return this.values_.length\n    }\n\n    setArrayLength_(newLength: number) {\n        if (typeof newLength !== \"number\" || isNaN(newLength) || newLength < 0) {\n            die(\"Out of range: \" + newLength)\n        }\n        let currentLength = this.values_.length\n        if (newLength === currentLength) {\n            return\n        } else if (newLength > currentLength) {\n            const newItems = new Array(newLength - currentLength)\n            for (let i = 0; i < newLength - currentLength; i++) {\n                newItems[i] = undefined\n            } // No Array.fill everywhere...\n            this.spliceWithArray_(currentLength, 0, newItems)\n        } else {\n            this.spliceWithArray_(newLength, currentLength - newLength)\n        }\n    }\n\n    updateArrayLength_(oldLength: number, delta: number) {\n        if (oldLength !== this.lastKnownLength_) {\n            die(16)\n        }\n        this.lastKnownLength_ += delta\n        if (this.legacyMode_ && delta > 0) {\n            reserveArrayBuffer(oldLength + delta + 1)\n        }\n    }\n\n    spliceWithArray_(index: number, deleteCount?: number, newItems?: any[]): any[] {\n        checkIfStateModificationsAreAllowed(this.atom_)\n        const length = this.values_.length\n\n        if (index === undefined) {\n            index = 0\n        } else if (index > length) {\n            index = length\n        } else if (index < 0) {\n            index = Math.max(0, length + index)\n        }\n\n        if (arguments.length === 1) {\n            deleteCount = length - index\n        } else if (deleteCount === undefined || deleteCount === null) {\n            deleteCount = 0\n        } else {\n            deleteCount = Math.max(0, Math.min(deleteCount, length - index))\n        }\n\n        if (newItems === undefined) {\n            newItems = EMPTY_ARRAY\n        }\n\n        if (hasInterceptors(this)) {\n            const change = interceptChange<IArrayWillSplice<any>>(this as any, {\n                object: this.proxy_ as any,\n                type: SPLICE,\n                index,\n                removedCount: deleteCount,\n                added: newItems\n            })\n            if (!change) {\n                return EMPTY_ARRAY\n            }\n            deleteCount = change.removedCount\n            newItems = change.added\n        }\n\n        newItems =\n            newItems.length === 0 ? newItems : newItems.map(v => this.enhancer_(v, undefined))\n        if (this.legacyMode_ || __DEV__) {\n            const lengthDelta = newItems.length - deleteCount\n            this.updateArrayLength_(length, lengthDelta) // checks if internal array wasn't modified\n        }\n        const res = this.spliceItemsIntoValues_(index, deleteCount, newItems)\n\n        if (deleteCount !== 0 || newItems.length !== 0) {\n            this.notifyArraySplice_(index, newItems, res)\n        }\n        return this.dehanceValues_(res)\n    }\n\n    spliceItemsIntoValues_(index: number, deleteCount: number, newItems: any[]): any[] {\n        if (newItems.length < MAX_SPLICE_SIZE) {\n            return this.values_.splice(index, deleteCount, ...newItems)\n        } else {\n            // The items removed by the splice\n            const res = this.values_.slice(index, index + deleteCount)\n            // The items that that should remain at the end of the array\n            let oldItems = this.values_.slice(index + deleteCount)\n            // New length is the previous length + addition count - deletion count\n            this.values_.length += newItems.length - deleteCount\n            for (let i = 0; i < newItems.length; i++) {\n                this.values_[index + i] = newItems[i]\n            }\n            for (let i = 0; i < oldItems.length; i++) {\n                this.values_[index + newItems.length + i] = oldItems[i]\n            }\n            return res\n        }\n    }\n\n    notifyArrayChildUpdate_(index: number, newValue: any, oldValue: any) {\n        const notifySpy = !this.owned_ && isSpyEnabled()\n        const notify = hasListeners(this)\n        const change: IArrayDidChange | null =\n            notify || notifySpy\n                ? ({\n                      observableKind: \"array\",\n                      object: this.proxy_,\n                      type: UPDATE,\n                      debugObjectName: this.atom_.name_,\n                      index,\n                      newValue,\n                      oldValue\n                  } as const)\n                : null\n\n        // The reason why this is on right hand side here (and not above), is this way the uglifier will drop it, but it won't\n        // cause any runtime overhead in development mode without NODE_ENV set, unless spying is enabled\n        if (__DEV__ && notifySpy) {\n            spyReportStart(change!)\n        }\n        this.atom_.reportChanged()\n        if (notify) {\n            notifyListeners(this, change)\n        }\n        if (__DEV__ && notifySpy) {\n            spyReportEnd()\n        }\n    }\n\n    notifyArraySplice_(index: number, added: any[], removed: any[]) {\n        const notifySpy = !this.owned_ && isSpyEnabled()\n        const notify = hasListeners(this)\n        const change: IArraySplice | null =\n            notify || notifySpy\n                ? ({\n                      observableKind: \"array\",\n                      object: this.proxy_,\n                      debugObjectName: this.atom_.name_,\n                      type: SPLICE,\n                      index,\n                      removed,\n                      added,\n                      removedCount: removed.length,\n                      addedCount: added.length\n                  } as const)\n                : null\n\n        if (__DEV__ && notifySpy) {\n            spyReportStart(change!)\n        }\n        this.atom_.reportChanged()\n        // conform: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/observe\n        if (notify) {\n            notifyListeners(this, change)\n        }\n        if (__DEV__ && notifySpy) {\n            spyReportEnd()\n        }\n    }\n\n    get_(index: number): any | undefined {\n        if (index < this.values_.length) {\n            this.atom_.reportObserved()\n            return this.dehanceValue_(this.values_[index])\n        }\n        console.warn(\n            __DEV__\n                ? `[mobx] Out of bounds read: ${index}`\n                : `[mobx.array] Attempt to read an array index (${index}) that is out of bounds (${this.values_.length}). Please check length first. Out of bound indices will not be tracked by MobX`\n        )\n    }\n\n    set_(index: number, newValue: any) {\n        const values = this.values_\n        if (index < values.length) {\n            // update at index in range\n            checkIfStateModificationsAreAllowed(this.atom_)\n            const oldValue = values[index]\n            if (hasInterceptors(this)) {\n                const change = interceptChange<IArrayWillChange<any>>(this as any, {\n                    type: UPDATE,\n                    object: this.proxy_ as any, // since \"this\" is the real array we need to pass its proxy\n                    index,\n                    newValue\n                })\n                if (!change) {\n                    return\n                }\n                newValue = change.newValue\n            }\n            newValue = this.enhancer_(newValue, oldValue)\n            const changed = newValue !== oldValue\n            if (changed) {\n                values[index] = newValue\n                this.notifyArrayChildUpdate_(index, newValue, oldValue)\n            }\n        } else if (index === values.length) {\n            // add a new item\n            this.spliceWithArray_(index, 0, [newValue])\n        } else {\n            // out of bounds\n            die(17, index, values.length)\n        }\n    }\n}\n\nexport function createObservableArray<T>(\n    initialValues: T[] | undefined,\n    enhancer: IEnhancer<T>,\n    name = __DEV__ ? \"ObservableArray@\" + getNextId() : \"ObservableArray\",\n    owned = false\n): IObservableArray<T> {\n    assertProxies()\n    const adm = new ObservableArrayAdministration(name, enhancer, owned, false)\n    addHiddenFinalProp(adm.values_, $mobx, adm)\n    const proxy = new Proxy(adm.values_, arrayTraps) as any\n    adm.proxy_ = proxy\n    if (initialValues && initialValues.length) {\n        const prev = allowStateChangesStart(true)\n        adm.spliceWithArray_(0, 0, initialValues)\n        allowStateChangesEnd(prev)\n    }\n    return proxy\n}\n\n// eslint-disable-next-line\nexport var arrayExtensions = {\n    clear(): any[] {\n        return this.splice(0)\n    },\n\n    replace(newItems: any[]) {\n        const adm: ObservableArrayAdministration = this[$mobx]\n        return adm.spliceWithArray_(0, adm.values_.length, newItems)\n    },\n\n    // Used by JSON.stringify\n    toJSON(): any[] {\n        return this.slice()\n    },\n\n    /*\n     * functions that do alter the internal structure of the array, (based on lib.es6.d.ts)\n     * since these functions alter the inner structure of the array, the have side effects.\n     * Because the have side effects, they should not be used in computed function,\n     * and for that reason the do not call dependencyState.notifyObserved\n     */\n    splice(index: number, deleteCount?: number, ...newItems: any[]): any[] {\n        const adm: ObservableArrayAdministration = this[$mobx]\n        switch (arguments.length) {\n            case 0:\n                return []\n            case 1:\n                return adm.spliceWithArray_(index)\n            case 2:\n                return adm.spliceWithArray_(index, deleteCount)\n        }\n        return adm.spliceWithArray_(index, deleteCount, newItems)\n    },\n\n    spliceWithArray(index: number, deleteCount?: number, newItems?: any[]): any[] {\n        return (this[$mobx] as ObservableArrayAdministration).spliceWithArray_(\n            index,\n            deleteCount,\n            newItems\n        )\n    },\n\n    push(...items: any[]): number {\n        const adm: ObservableArrayAdministration = this[$mobx]\n        adm.spliceWithArray_(adm.values_.length, 0, items)\n        return adm.values_.length\n    },\n\n    pop() {\n        return this.splice(Math.max(this[$mobx].values_.length - 1, 0), 1)[0]\n    },\n\n    shift() {\n        return this.splice(0, 1)[0]\n    },\n\n    unshift(...items: any[]): number {\n        const adm: ObservableArrayAdministration = this[$mobx]\n        adm.spliceWithArray_(0, 0, items)\n        return adm.values_.length\n    },\n\n    reverse(): any[] {\n        // reverse by default mutates in place before returning the result\n        // which makes it both a 'derivation' and a 'mutation'.\n        if (globalState.trackingDerivation) {\n            die(37, \"reverse\")\n        }\n        this.replace(this.slice().reverse())\n        return this\n    },\n\n    sort(): any[] {\n        // sort by default mutates in place before returning the result\n        // which goes against all good practices. Let's not change the array in place!\n        if (globalState.trackingDerivation) {\n            die(37, \"sort\")\n        }\n        const copy = this.slice()\n        copy.sort.apply(copy, arguments)\n        this.replace(copy)\n        return this\n    },\n\n    remove(value: any): boolean {\n        const adm: ObservableArrayAdministration = this[$mobx]\n        const idx = adm.dehanceValues_(adm.values_).indexOf(value)\n        if (idx > -1) {\n            this.splice(idx, 1)\n            return true\n        }\n        return false\n    }\n}\n\n/**\n * Wrap function from prototype\n * Without this, everything works as well, but this works\n * faster as everything works on unproxied values\n */\naddArrayExtension(\"concat\", simpleFunc)\naddArrayExtension(\"flat\", simpleFunc)\naddArrayExtension(\"includes\", simpleFunc)\naddArrayExtension(\"indexOf\", simpleFunc)\naddArrayExtension(\"join\", simpleFunc)\naddArrayExtension(\"lastIndexOf\", simpleFunc)\naddArrayExtension(\"slice\", simpleFunc)\naddArrayExtension(\"toString\", simpleFunc)\naddArrayExtension(\"toLocaleString\", simpleFunc)\n// map\naddArrayExtension(\"every\", mapLikeFunc)\naddArrayExtension(\"filter\", mapLikeFunc)\naddArrayExtension(\"find\", mapLikeFunc)\naddArrayExtension(\"findIndex\", mapLikeFunc)\naddArrayExtension(\"flatMap\", mapLikeFunc)\naddArrayExtension(\"forEach\", mapLikeFunc)\naddArrayExtension(\"map\", mapLikeFunc)\naddArrayExtension(\"some\", mapLikeFunc)\n// reduce\naddArrayExtension(\"reduce\", reduceLikeFunc)\naddArrayExtension(\"reduceRight\", reduceLikeFunc)\n\nfunction addArrayExtension(funcName, funcFactory) {\n    if (typeof Array.prototype[funcName] === \"function\") {\n        arrayExtensions[funcName] = funcFactory(funcName)\n    }\n}\n\n// Report and delegate to dehanced array\nfunction simpleFunc(funcName) {\n    return function () {\n        const adm: ObservableArrayAdministration = this[$mobx]\n        adm.atom_.reportObserved()\n        const dehancedValues = adm.dehanceValues_(adm.values_)\n        return dehancedValues[funcName].apply(dehancedValues, arguments)\n    }\n}\n\n// Make sure callbacks recieve correct array arg #2326\nfunction mapLikeFunc(funcName) {\n    return function (callback, thisArg) {\n        const adm: ObservableArrayAdministration = this[$mobx]\n        adm.atom_.reportObserved()\n        const dehancedValues = adm.dehanceValues_(adm.values_)\n        return dehancedValues[funcName]((element, index) => {\n            return callback.call(thisArg, element, index, this)\n        })\n    }\n}\n\n// Make sure callbacks recieve correct array arg #2326\nfunction reduceLikeFunc(funcName) {\n    return function () {\n        const adm: ObservableArrayAdministration = this[$mobx]\n        adm.atom_.reportObserved()\n        const dehancedValues = adm.dehanceValues_(adm.values_)\n        // #2432 - reduce behavior depends on arguments.length\n        const callback = arguments[0]\n        arguments[0] = (accumulator, currentValue, index) => {\n            return callback(accumulator, currentValue, index, this)\n        }\n        return dehancedValues[funcName].apply(dehancedValues, arguments)\n    }\n}\n\nconst isObservableArrayAdministration = createInstanceofPredicate(\n    \"ObservableArrayAdministration\",\n    ObservableArrayAdministration\n)\n\nexport function isObservableArray(thing): thing is IObservableArray<any> {\n    return isObject(thing) && isObservableArrayAdministration(thing[$mobx])\n}\n","import {\n    Atom,\n    IEnhancer,\n    IInterceptable,\n    IEqualsComparer,\n    IInterceptor,\n    IListenable,\n    Lambda,\n    checkIfStateModificationsAreAllowed,\n    comparer,\n    createInstanceofPredicate,\n    getNextId,\n    hasInterceptors,\n    hasListeners,\n    interceptChange,\n    isSpyEnabled,\n    notifyListeners,\n    registerInterceptor,\n    registerListener,\n    spyReport,\n    spyReportEnd,\n    spyReportStart,\n    toPrimitive,\n    globalState,\n    IUNCHANGED,\n    UPDATE\n} from \"../internal\"\n\nexport interface IValueWillChange<T> {\n    object: IObservableValue<T>\n    type: \"update\"\n    newValue: T\n}\n\nexport type IValueDidChange<T = any> = {\n    type: \"update\"\n    observableKind: \"value\"\n    object: IObservableValue<T>\n    debugObjectName: string\n    newValue: unknown\n    oldValue: unknown\n}\nexport type IBoxDidChange<T = any> =\n    | {\n          type: \"create\"\n          observableKind: \"value\"\n          object: IObservableValue<T>\n          debugObjectName: string\n          newValue: unknown\n      }\n    | IValueDidChange<T>\n\nexport interface IObservableValue<T> {\n    get(): T\n    set(value: T): void\n    intercept_(handler: IInterceptor<IValueWillChange<T>>): Lambda\n    observe_(listener: (change: IValueDidChange<T>) => void, fireImmediately?: boolean): Lambda\n}\n\nconst CREATE = \"create\"\n\nexport class ObservableValue<T>\n    extends Atom\n    implements IObservableValue<T>, IInterceptable<IValueWillChange<T>>, IListenable\n{\n    hasUnreportedChange_ = false\n    interceptors_\n    changeListeners_\n    value_\n    dehancer: any\n\n    constructor(\n        value: T,\n        public enhancer: IEnhancer<T>,\n        public name_ = __DEV__ ? \"ObservableValue@\" + getNextId() : \"ObservableValue\",\n        notifySpy = true,\n        private equals: IEqualsComparer<any> = comparer.default\n    ) {\n        super(name_)\n        this.value_ = enhancer(value, undefined, name_)\n        if (__DEV__ && notifySpy && isSpyEnabled()) {\n            // only notify spy if this is a stand-alone observable\n            spyReport({\n                type: CREATE,\n                object: this,\n                observableKind: \"value\",\n                debugObjectName: this.name_,\n                newValue: \"\" + this.value_\n            })\n        }\n    }\n\n    private dehanceValue(value: T): T {\n        if (this.dehancer !== undefined) {\n            return this.dehancer(value)\n        }\n        return value\n    }\n\n    public set(newValue: T) {\n        const oldValue = this.value_\n        newValue = this.prepareNewValue_(newValue) as any\n        if (newValue !== globalState.UNCHANGED) {\n            const notifySpy = isSpyEnabled()\n            if (__DEV__ && notifySpy) {\n                spyReportStart({\n                    type: UPDATE,\n                    object: this,\n                    observableKind: \"value\",\n                    debugObjectName: this.name_,\n                    newValue,\n                    oldValue\n                })\n            }\n            this.setNewValue_(newValue)\n            if (__DEV__ && notifySpy) {\n                spyReportEnd()\n            }\n        }\n    }\n\n    private prepareNewValue_(newValue): T | IUNCHANGED {\n        checkIfStateModificationsAreAllowed(this)\n        if (hasInterceptors(this)) {\n            const change = interceptChange<IValueWillChange<T>>(this, {\n                object: this,\n                type: UPDATE,\n                newValue\n            })\n            if (!change) {\n                return globalState.UNCHANGED\n            }\n            newValue = change.newValue\n        }\n        // apply modifier\n        newValue = this.enhancer(newValue, this.value_, this.name_)\n        return this.equals(this.value_, newValue) ? globalState.UNCHANGED : newValue\n    }\n\n    setNewValue_(newValue: T) {\n        const oldValue = this.value_\n        this.value_ = newValue\n        this.reportChanged()\n        if (hasListeners(this)) {\n            notifyListeners(this, {\n                type: UPDATE,\n                object: this,\n                newValue,\n                oldValue\n            })\n        }\n    }\n\n    public get(): T {\n        this.reportObserved()\n        return this.dehanceValue(this.value_)\n    }\n\n    intercept_(handler: IInterceptor<IValueWillChange<T>>): Lambda {\n        return registerInterceptor(this, handler)\n    }\n\n    observe_(listener: (change: IValueDidChange<T>) => void, fireImmediately?: boolean): Lambda {\n        if (fireImmediately) {\n            listener({\n                observableKind: \"value\",\n                debugObjectName: this.name_,\n                object: this,\n                type: UPDATE,\n                newValue: this.value_,\n                oldValue: undefined\n            })\n        }\n        return registerListener(this, listener)\n    }\n\n    raw() {\n        // used by MST ot get undehanced value\n        return this.value_\n    }\n\n    toJSON() {\n        return this.get()\n    }\n\n    toString() {\n        return `${this.name_}[${this.value_}]`\n    }\n\n    valueOf(): T {\n        return toPrimitive(this.get())\n    }\n\n    [Symbol.toPrimitive]() {\n        return this.valueOf()\n    }\n}\n\nexport const isObservableValue = createInstanceofPredicate(\"ObservableValue\", ObservableValue) as (\n    x: any\n) => x is IObservableValue<any>\n","import {\n    CaughtException,\n    IDerivation,\n    IDerivationState_,\n    IEqualsComparer,\n    IObservable,\n    Lambda,\n    TraceMode,\n    autorun,\n    clearObserving,\n    comparer,\n    createAction,\n    createInstanceofPredicate,\n    endBatch,\n    getNextId,\n    globalState,\n    isCaughtException,\n    isSpyEnabled,\n    propagateChangeConfirmed,\n    propagateMaybeChanged,\n    reportObserved,\n    shouldCompute,\n    spyReport,\n    startBatch,\n    toPrimitive,\n    trackDerivedFunction,\n    untrackedEnd,\n    untrackedStart,\n    UPDATE,\n    die,\n    allowStateChangesStart,\n    allowStateChangesEnd\n} from \"../internal\"\n\nexport interface IComputedValue<T> {\n    get(): T\n    set(value: T): void\n    observe_(listener: (change: IComputedDidChange<T>) => void, fireImmediately?: boolean): Lambda\n}\n\nexport interface IComputedValueOptions<T> {\n    get?: () => T\n    set?: (value: T) => void\n    name?: string\n    equals?: IEqualsComparer<T>\n    context?: any\n    requiresReaction?: boolean\n    keepAlive?: boolean\n}\n\nexport type IComputedDidChange<T = any> = {\n    type: \"update\"\n    observableKind: \"computed\"\n    object: unknown\n    debugObjectName: string\n    newValue: T\n    oldValue: T | undefined\n}\n\n/**\n * A node in the state dependency root that observes other nodes, and can be observed itself.\n *\n * ComputedValue will remember the result of the computation for the duration of the batch, or\n * while being observed.\n *\n * During this time it will recompute only when one of its direct dependencies changed,\n * but only when it is being accessed with `ComputedValue.get()`.\n *\n * Implementation description:\n * 1. First time it's being accessed it will compute and remember result\n *    give back remembered result until 2. happens\n * 2. First time any deep dependency change, propagate POSSIBLY_STALE to all observers, wait for 3.\n * 3. When it's being accessed, recompute if any shallow dependency changed.\n *    if result changed: propagate STALE to all observers, that were POSSIBLY_STALE from the last step.\n *    go to step 2. either way\n *\n * If at any point it's outside batch and it isn't observed: reset everything and go to 1.\n */\nexport class ComputedValue<T> implements IObservable, IComputedValue<T>, IDerivation {\n    dependenciesState_ = IDerivationState_.NOT_TRACKING_\n    observing_: IObservable[] = [] // nodes we are looking at. Our value depends on these nodes\n    newObserving_ = null // during tracking it's an array with new observed observers\n    isBeingObserved_ = false\n    isPendingUnobservation_: boolean = false\n    observers_ = new Set<IDerivation>()\n    diffValue_ = 0\n    runId_ = 0\n    lastAccessedBy_ = 0\n    lowestObserverState_ = IDerivationState_.UP_TO_DATE_\n    unboundDepsCount_ = 0\n    protected value_: T | undefined | CaughtException = new CaughtException(null)\n    name_: string\n    triggeredBy_?: string\n    isComputing_: boolean = false // to check for cycles\n    isRunningSetter_: boolean = false\n    derivation: () => T // N.B: unminified as it is used by MST\n    setter_?: (value: T) => void\n    isTracing_: TraceMode = TraceMode.NONE\n    scope_: Object | undefined\n    private equals_: IEqualsComparer<any>\n    private requiresReaction_: boolean | undefined\n    keepAlive_: boolean\n\n    /**\n     * Create a new computed value based on a function expression.\n     *\n     * The `name` property is for debug purposes only.\n     *\n     * The `equals` property specifies the comparer function to use to determine if a newly produced\n     * value differs from the previous value. Two comparers are provided in the library; `defaultComparer`\n     * compares based on identity comparison (===), and `structuralComparer` deeply compares the structure.\n     * Structural comparison can be convenient if you always produce a new aggregated object and\n     * don't want to notify observers if it is structurally the same.\n     * This is useful for working with vectors, mouse coordinates etc.\n     */\n    constructor(options: IComputedValueOptions<T>) {\n        if (!options.get) {\n            die(31)\n        }\n        this.derivation = options.get!\n        this.name_ = options.name || (__DEV__ ? \"ComputedValue@\" + getNextId() : \"ComputedValue\")\n        if (options.set) {\n            this.setter_ = createAction(\n                __DEV__ ? this.name_ + \"-setter\" : \"ComputedValue-setter\",\n                options.set\n            ) as any\n        }\n        this.equals_ =\n            options.equals ||\n            ((options as any).compareStructural || (options as any).struct\n                ? comparer.structural\n                : comparer.default)\n        this.scope_ = options.context\n        this.requiresReaction_ = options.requiresReaction\n        this.keepAlive_ = !!options.keepAlive\n    }\n\n    onBecomeStale_() {\n        propagateMaybeChanged(this)\n    }\n\n    public onBOL: Set<Lambda> | undefined\n    public onBUOL: Set<Lambda> | undefined\n\n    public onBO() {\n        if (this.onBOL) {\n            this.onBOL.forEach(listener => listener())\n        }\n    }\n\n    public onBUO() {\n        if (this.onBUOL) {\n            this.onBUOL.forEach(listener => listener())\n        }\n    }\n\n    /**\n     * Returns the current value of this computed value.\n     * Will evaluate its computation first if needed.\n     */\n    public get(): T {\n        if (this.isComputing_) {\n            die(32, this.name_, this.derivation)\n        }\n        if (\n            globalState.inBatch === 0 &&\n            // !globalState.trackingDerivatpion &&\n            this.observers_.size === 0 &&\n            !this.keepAlive_\n        ) {\n            if (shouldCompute(this)) {\n                this.warnAboutUntrackedRead_()\n                startBatch() // See perf test 'computed memoization'\n                this.value_ = this.computeValue_(false)\n                endBatch()\n            }\n        } else {\n            reportObserved(this)\n            if (shouldCompute(this)) {\n                let prevTrackingContext = globalState.trackingContext\n                if (this.keepAlive_ && !prevTrackingContext) {\n                    globalState.trackingContext = this\n                }\n                if (this.trackAndCompute()) {\n                    propagateChangeConfirmed(this)\n                }\n                globalState.trackingContext = prevTrackingContext\n            }\n        }\n        const result = this.value_!\n\n        if (isCaughtException(result)) {\n            throw result.cause\n        }\n        return result\n    }\n\n    public set(value: T) {\n        if (this.setter_) {\n            if (this.isRunningSetter_) {\n                die(33, this.name_)\n            }\n            this.isRunningSetter_ = true\n            try {\n                this.setter_.call(this.scope_, value)\n            } finally {\n                this.isRunningSetter_ = false\n            }\n        } else {\n            die(34, this.name_)\n        }\n    }\n\n    trackAndCompute(): boolean {\n        // N.B: unminified as it is used by MST\n        const oldValue = this.value_\n        const wasSuspended =\n            /* see #1208 */ this.dependenciesState_ === IDerivationState_.NOT_TRACKING_\n        const newValue = this.computeValue_(true)\n\n        const changed =\n            wasSuspended ||\n            isCaughtException(oldValue) ||\n            isCaughtException(newValue) ||\n            !this.equals_(oldValue, newValue)\n\n        if (changed) {\n            this.value_ = newValue\n\n            if (__DEV__ && isSpyEnabled()) {\n                spyReport({\n                    observableKind: \"computed\",\n                    debugObjectName: this.name_,\n                    object: this.scope_,\n                    type: \"update\",\n                    oldValue,\n                    newValue\n                } as IComputedDidChange)\n            }\n        }\n\n        return changed\n    }\n\n    computeValue_(track: boolean) {\n        this.isComputing_ = true\n        // don't allow state changes during computation\n        const prev = allowStateChangesStart(false)\n        let res: T | CaughtException\n        if (track) {\n            res = trackDerivedFunction(this, this.derivation, this.scope_)\n        } else {\n            if (globalState.disableErrorBoundaries === true) {\n                res = this.derivation.call(this.scope_)\n            } else {\n                try {\n                    res = this.derivation.call(this.scope_)\n                } catch (e) {\n                    res = new CaughtException(e)\n                }\n            }\n        }\n        allowStateChangesEnd(prev)\n        this.isComputing_ = false\n        return res\n    }\n\n    suspend_() {\n        if (!this.keepAlive_) {\n            clearObserving(this)\n            this.value_ = undefined // don't hold on to computed value!\n            if (__DEV__ && this.isTracing_ !== TraceMode.NONE) {\n                console.log(\n                    `[mobx.trace] Computed value '${this.name_}' was suspended and it will recompute on the next access.`\n                )\n            }\n        }\n    }\n\n    observe_(listener: (change: IComputedDidChange<T>) => void, fireImmediately?: boolean): Lambda {\n        let firstTime = true\n        let prevValue: T | undefined = undefined\n        return autorun(() => {\n            // TODO: why is this in a different place than the spyReport() function? in all other observables it's called in the same place\n            let newValue = this.get()\n            if (!firstTime || fireImmediately) {\n                const prevU = untrackedStart()\n                listener({\n                    observableKind: \"computed\",\n                    debugObjectName: this.name_,\n                    type: UPDATE,\n                    object: this,\n                    newValue,\n                    oldValue: prevValue\n                })\n                untrackedEnd(prevU)\n            }\n            firstTime = false\n            prevValue = newValue\n        })\n    }\n\n    warnAboutUntrackedRead_() {\n        if (!__DEV__) {\n            return\n        }\n        if (this.isTracing_ !== TraceMode.NONE) {\n            console.log(\n                `[mobx.trace] Computed value '${this.name_}' is being read outside a reactive context. Doing a full recompute.`\n            )\n        }\n        if (\n            typeof this.requiresReaction_ === \"boolean\"\n                ? this.requiresReaction_\n                : globalState.computedRequiresReaction\n        ) {\n            console.warn(\n                `[mobx] Computed value '${this.name_}' is being read outside a reactive context. Doing a full recompute.`\n            )\n        }\n    }\n\n    toString() {\n        return `${this.name_}[${this.derivation.toString()}]`\n    }\n\n    valueOf(): T {\n        return toPrimitive(this.get())\n    }\n\n    [Symbol.toPrimitive]() {\n        return this.valueOf()\n    }\n}\n\nexport const isComputedValue = createInstanceofPredicate(\"ComputedValue\", ComputedValue)\n","import {\n    IAtom,\n    IDepTreeNode,\n    IObservable,\n    addObserver,\n    globalState,\n    isComputedValue,\n    removeObserver\n} from \"../internal\"\n\nexport enum IDerivationState_ {\n    // before being run or (outside batch and not being observed)\n    // at this point derivation is not holding any data about dependency tree\n    NOT_TRACKING_ = -1,\n    // no shallow dependency changed since last computation\n    // won't recalculate derivation\n    // this is what makes mobx fast\n    UP_TO_DATE_ = 0,\n    // some deep dependency changed, but don't know if shallow dependency changed\n    // will require to check first if UP_TO_DATE or POSSIBLY_STALE\n    // currently only ComputedValue will propagate POSSIBLY_STALE\n    //\n    // having this state is second big optimization:\n    // don't have to recompute on every dependency change, but only when it's needed\n    POSSIBLY_STALE_ = 1,\n    // A shallow dependency has changed since last computation and the derivation\n    // will need to recompute when it's needed next.\n    STALE_ = 2\n}\n\nexport enum TraceMode {\n    NONE,\n    LOG,\n    BREAK\n}\n\n/**\n * A derivation is everything that can be derived from the state (all the atoms) in a pure manner.\n * See https://medium.com/@mweststrate/becoming-fully-reactive-an-in-depth-explanation-of-mobservable-55995262a254#.xvbh6qd74\n */\nexport interface IDerivation extends IDepTreeNode {\n    observing_: IObservable[]\n    newObserving_: null | IObservable[]\n    dependenciesState_: IDerivationState_\n    /**\n     * Id of the current run of a derivation. Each time the derivation is tracked\n     * this number is increased by one. This number is globally unique\n     */\n    runId_: number\n    /**\n     * amount of dependencies used by the derivation in this run, which has not been bound yet.\n     */\n    unboundDepsCount_: number\n    onBecomeStale_(): void\n    isTracing_: TraceMode\n\n    /**\n     *  warn if the derivation has no dependencies after creation/update\n     */\n    requiresObservable_?: boolean\n}\n\nexport class CaughtException {\n    constructor(public cause: any) {\n        // Empty\n    }\n}\n\nexport function isCaughtException(e: any): e is CaughtException {\n    return e instanceof CaughtException\n}\n\n/**\n * Finds out whether any dependency of the derivation has actually changed.\n * If dependenciesState is 1 then it will recalculate dependencies,\n * if any dependency changed it will propagate it by changing dependenciesState to 2.\n *\n * By iterating over the dependencies in the same order that they were reported and\n * stopping on the first change, all the recalculations are only called for ComputedValues\n * that will be tracked by derivation. That is because we assume that if the first x\n * dependencies of the derivation doesn't change then the derivation should run the same way\n * up until accessing x-th dependency.\n */\nexport function shouldCompute(derivation: IDerivation): boolean {\n    switch (derivation.dependenciesState_) {\n        case IDerivationState_.UP_TO_DATE_:\n            return false\n        case IDerivationState_.NOT_TRACKING_:\n        case IDerivationState_.STALE_:\n            return true\n        case IDerivationState_.POSSIBLY_STALE_: {\n            // state propagation can occur outside of action/reactive context #2195\n            const prevAllowStateReads = allowStateReadsStart(true)\n            const prevUntracked = untrackedStart() // no need for those computeds to be reported, they will be picked up in trackDerivedFunction.\n            const obs = derivation.observing_,\n                l = obs.length\n            for (let i = 0; i < l; i++) {\n                const obj = obs[i]\n                if (isComputedValue(obj)) {\n                    if (globalState.disableErrorBoundaries) {\n                        obj.get()\n                    } else {\n                        try {\n                            obj.get()\n                        } catch (e) {\n                            // we are not interested in the value *or* exception at this moment, but if there is one, notify all\n                            untrackedEnd(prevUntracked)\n                            allowStateReadsEnd(prevAllowStateReads)\n                            return true\n                        }\n                    }\n                    // if ComputedValue `obj` actually changed it will be computed and propagated to its observers.\n                    // and `derivation` is an observer of `obj`\n                    // invariantShouldCompute(derivation)\n                    if ((derivation.dependenciesState_ as any) === IDerivationState_.STALE_) {\n                        untrackedEnd(prevUntracked)\n                        allowStateReadsEnd(prevAllowStateReads)\n                        return true\n                    }\n                }\n            }\n            changeDependenciesStateTo0(derivation)\n            untrackedEnd(prevUntracked)\n            allowStateReadsEnd(prevAllowStateReads)\n            return false\n        }\n    }\n}\n\nexport function isComputingDerivation() {\n    return globalState.trackingDerivation !== null // filter out actions inside computations\n}\n\nexport function checkIfStateModificationsAreAllowed(atom: IAtom) {\n    if (!__DEV__) {\n        return\n    }\n    const hasObservers = atom.observers_.size > 0\n    // Should not be possible to change observed state outside strict mode, except during initialization, see #563\n    if (\n        !globalState.allowStateChanges &&\n        (hasObservers || globalState.enforceActions === \"always\")\n    ) {\n        console.warn(\n            \"[MobX] \" +\n                (globalState.enforceActions\n                    ? \"Since strict-mode is enabled, changing (observed) observable values without using an action is not allowed. Tried to modify: \"\n                    : \"Side effects like changing state are not allowed at this point. Are you trying to modify state from, for example, a computed value or the render function of a React component? You can wrap side effects in 'runInAction' (or decorate functions with 'action') if needed. Tried to modify: \") +\n                atom.name_\n        )\n    }\n}\n\nexport function checkIfStateReadsAreAllowed(observable: IObservable) {\n    if (__DEV__ && !globalState.allowStateReads && globalState.observableRequiresReaction) {\n        console.warn(\n            `[mobx] Observable '${observable.name_}' being read outside a reactive context.`\n        )\n    }\n}\n\n/**\n * Executes the provided function `f` and tracks which observables are being accessed.\n * The tracking information is stored on the `derivation` object and the derivation is registered\n * as observer of any of the accessed observables.\n */\nexport function trackDerivedFunction<T>(derivation: IDerivation, f: () => T, context: any) {\n    const prevAllowStateReads = allowStateReadsStart(true)\n    // pre allocate array allocation + room for variation in deps\n    // array will be trimmed by bindDependencies\n    changeDependenciesStateTo0(derivation)\n    derivation.newObserving_ = new Array(derivation.observing_.length + 100)\n    derivation.unboundDepsCount_ = 0\n    derivation.runId_ = ++globalState.runId\n    const prevTracking = globalState.trackingDerivation\n    globalState.trackingDerivation = derivation\n    globalState.inBatch++\n    let result\n    if (globalState.disableErrorBoundaries === true) {\n        result = f.call(context)\n    } else {\n        try {\n            result = f.call(context)\n        } catch (e) {\n            result = new CaughtException(e)\n        }\n    }\n    globalState.inBatch--\n    globalState.trackingDerivation = prevTracking\n    bindDependencies(derivation)\n\n    warnAboutDerivationWithoutDependencies(derivation)\n    allowStateReadsEnd(prevAllowStateReads)\n    return result\n}\n\nfunction warnAboutDerivationWithoutDependencies(derivation: IDerivation) {\n    if (!__DEV__) {\n        return\n    }\n\n    if (derivation.observing_.length !== 0) {\n        return\n    }\n\n    if (\n        typeof derivation.requiresObservable_ === \"boolean\"\n            ? derivation.requiresObservable_\n            : globalState.reactionRequiresObservable\n    ) {\n        console.warn(\n            `[mobx] Derivation '${derivation.name_}' is created/updated without reading any observable value.`\n        )\n    }\n}\n\n/**\n * diffs newObserving with observing.\n * update observing to be newObserving with unique observables\n * notify observers that become observed/unobserved\n */\nfunction bindDependencies(derivation: IDerivation) {\n    // invariant(derivation.dependenciesState !== IDerivationState.NOT_TRACKING, \"INTERNAL ERROR bindDependencies expects derivation.dependenciesState !== -1\");\n    const prevObserving = derivation.observing_\n    const observing = (derivation.observing_ = derivation.newObserving_!)\n    let lowestNewObservingDerivationState = IDerivationState_.UP_TO_DATE_\n\n    // Go through all new observables and check diffValue: (this list can contain duplicates):\n    //   0: first occurrence, change to 1 and keep it\n    //   1: extra occurrence, drop it\n    let i0 = 0,\n        l = derivation.unboundDepsCount_\n    for (let i = 0; i < l; i++) {\n        const dep = observing[i]\n        if (dep.diffValue_ === 0) {\n            dep.diffValue_ = 1\n            if (i0 !== i) {\n                observing[i0] = dep\n            }\n            i0++\n        }\n\n        // Upcast is 'safe' here, because if dep is IObservable, `dependenciesState` will be undefined,\n        // not hitting the condition\n        if ((dep as any as IDerivation).dependenciesState_ > lowestNewObservingDerivationState) {\n            lowestNewObservingDerivationState = (dep as any as IDerivation).dependenciesState_\n        }\n    }\n    observing.length = i0\n\n    derivation.newObserving_ = null // newObserving shouldn't be needed outside tracking (statement moved down to work around FF bug, see #614)\n\n    // Go through all old observables and check diffValue: (it is unique after last bindDependencies)\n    //   0: it's not in new observables, unobserve it\n    //   1: it keeps being observed, don't want to notify it. change to 0\n    l = prevObserving.length\n    while (l--) {\n        const dep = prevObserving[l]\n        if (dep.diffValue_ === 0) {\n            removeObserver(dep, derivation)\n        }\n        dep.diffValue_ = 0\n    }\n\n    // Go through all new observables and check diffValue: (now it should be unique)\n    //   0: it was set to 0 in last loop. don't need to do anything.\n    //   1: it wasn't observed, let's observe it. set back to 0\n    while (i0--) {\n        const dep = observing[i0]\n        if (dep.diffValue_ === 1) {\n            dep.diffValue_ = 0\n            addObserver(dep, derivation)\n        }\n    }\n\n    // Some new observed derivations may become stale during this derivation computation\n    // so they have had no chance to propagate staleness (#916)\n    if (lowestNewObservingDerivationState !== IDerivationState_.UP_TO_DATE_) {\n        derivation.dependenciesState_ = lowestNewObservingDerivationState\n        derivation.onBecomeStale_()\n    }\n}\n\nexport function clearObserving(derivation: IDerivation) {\n    // invariant(globalState.inBatch > 0, \"INTERNAL ERROR clearObserving should be called only inside batch\");\n    const obs = derivation.observing_\n    derivation.observing_ = []\n    let i = obs.length\n    while (i--) {\n        removeObserver(obs[i], derivation)\n    }\n\n    derivation.dependenciesState_ = IDerivationState_.NOT_TRACKING_\n}\n\nexport function untracked<T>(action: () => T): T {\n    const prev = untrackedStart()\n    try {\n        return action()\n    } finally {\n        untrackedEnd(prev)\n    }\n}\n\nexport function untrackedStart(): IDerivation | null {\n    const prev = globalState.trackingDerivation\n    globalState.trackingDerivation = null\n    return prev\n}\n\nexport function untrackedEnd(prev: IDerivation | null) {\n    globalState.trackingDerivation = prev\n}\n\nexport function allowStateReadsStart(allowStateReads: boolean) {\n    const prev = globalState.allowStateReads\n    globalState.allowStateReads = allowStateReads\n    return prev\n}\n\nexport function allowStateReadsEnd(prev: boolean) {\n    globalState.allowStateReads = prev\n}\n\n/**\n * needed to keep `lowestObserverState` correct. when changing from (2 or 1) to 0\n *\n */\nexport function changeDependenciesStateTo0(derivation: IDerivation) {\n    if (derivation.dependenciesState_ === IDerivationState_.UP_TO_DATE_) {\n        return\n    }\n    derivation.dependenciesState_ = IDerivationState_.UP_TO_DATE_\n\n    const obs = derivation.observing_\n    let i = obs.length\n    while (i--) {\n        obs[i].lowestObserverState_ = IDerivationState_.UP_TO_DATE_\n    }\n}\n","import {\n    $mobx,\n    IDerivation,\n    IDerivationState_,\n    IObservable,\n    Lambda,\n    TraceMode,\n    clearObserving,\n    createInstanceofPredicate,\n    endBatch,\n    getNextId,\n    globalState,\n    isCaughtException,\n    isSpyEnabled,\n    shouldCompute,\n    spyReport,\n    spyReportEnd,\n    spyReportStart,\n    startBatch,\n    trace,\n    trackDerivedFunction\n} from \"../internal\"\n\n/**\n * Reactions are a special kind of derivations. Several things distinguishes them from normal reactive computations\n *\n * 1) They will always run, whether they are used by other computations or not.\n * This means that they are very suitable for triggering side effects like logging, updating the DOM and making network requests.\n * 2) They are not observable themselves\n * 3) They will always run after any 'normal' derivations\n * 4) They are allowed to change the state and thereby triggering themselves again, as long as they make sure the state propagates to a stable state in a reasonable amount of iterations.\n *\n * The state machine of a Reaction is as follows:\n *\n * 1) after creating, the reaction should be started by calling `runReaction` or by scheduling it (see also `autorun`)\n * 2) the `onInvalidate` handler should somehow result in a call to `this.track(someFunction)`\n * 3) all observables accessed in `someFunction` will be observed by this reaction.\n * 4) as soon as some of the dependencies has changed the Reaction will be rescheduled for another run (after the current mutation or transaction). `isScheduled` will yield true once a dependency is stale and during this period\n * 5) `onInvalidate` will be called, and we are back at step 1.\n *\n */\n\nexport interface IReactionPublic {\n    dispose(): void\n    trace(enterBreakPoint?: boolean): void\n}\n\nexport interface IReactionDisposer {\n    (): void\n    $mobx: Reaction\n}\n\nexport class Reaction implements IDerivation, IReactionPublic {\n    observing_: IObservable[] = [] // nodes we are looking at. Our value depends on these nodes\n    newObserving_: IObservable[] = []\n    dependenciesState_ = IDerivationState_.NOT_TRACKING_\n    diffValue_ = 0\n    runId_ = 0\n    unboundDepsCount_ = 0\n    isDisposed_ = false\n    isScheduled_ = false\n    isTrackPending_ = false\n    isRunning_ = false\n    isTracing_: TraceMode = TraceMode.NONE\n\n    constructor(\n        public name_: string = __DEV__ ? \"Reaction@\" + getNextId() : \"Reaction\",\n        private onInvalidate_: () => void,\n        private errorHandler_?: (error: any, derivation: IDerivation) => void,\n        public requiresObservable_?\n    ) {}\n\n    onBecomeStale_() {\n        this.schedule_()\n    }\n\n    schedule_() {\n        if (!this.isScheduled_) {\n            this.isScheduled_ = true\n            globalState.pendingReactions.push(this)\n            runReactions()\n        }\n    }\n\n    isScheduled() {\n        return this.isScheduled_\n    }\n\n    /**\n     * internal, use schedule() if you intend to kick off a reaction\n     */\n    runReaction_() {\n        if (!this.isDisposed_) {\n            startBatch()\n            this.isScheduled_ = false\n            const prev = globalState.trackingContext\n            globalState.trackingContext = this\n            if (shouldCompute(this)) {\n                this.isTrackPending_ = true\n\n                try {\n                    this.onInvalidate_()\n                    if (__DEV__ && this.isTrackPending_ && isSpyEnabled()) {\n                        // onInvalidate didn't trigger track right away..\n                        spyReport({\n                            name: this.name_,\n                            type: \"scheduled-reaction\"\n                        })\n                    }\n                } catch (e) {\n                    this.reportExceptionInDerivation_(e)\n                }\n            }\n            globalState.trackingContext = prev\n            endBatch()\n        }\n    }\n\n    track(fn: () => void) {\n        if (this.isDisposed_) {\n            return\n            // console.warn(\"Reaction already disposed\") // Note: Not a warning / error in mobx 4 either\n        }\n        startBatch()\n        const notify = isSpyEnabled()\n        let startTime\n        if (__DEV__ && notify) {\n            startTime = Date.now()\n            spyReportStart({\n                name: this.name_,\n                type: \"reaction\"\n            })\n        }\n        this.isRunning_ = true\n        const prevReaction = globalState.trackingContext // reactions could create reactions...\n        globalState.trackingContext = this\n        const result = trackDerivedFunction(this, fn, undefined)\n        globalState.trackingContext = prevReaction\n        this.isRunning_ = false\n        this.isTrackPending_ = false\n        if (this.isDisposed_) {\n            // disposed during last run. Clean up everything that was bound after the dispose call.\n            clearObserving(this)\n        }\n        if (isCaughtException(result)) {\n            this.reportExceptionInDerivation_(result.cause)\n        }\n        if (__DEV__ && notify) {\n            spyReportEnd({\n                time: Date.now() - startTime\n            })\n        }\n        endBatch()\n    }\n\n    reportExceptionInDerivation_(error: any) {\n        if (this.errorHandler_) {\n            this.errorHandler_(error, this)\n            return\n        }\n\n        if (globalState.disableErrorBoundaries) {\n            throw error\n        }\n\n        const message = __DEV__\n            ? `[mobx] Encountered an uncaught exception that was thrown by a reaction or observer component, in: '${this}'`\n            : `[mobx] uncaught error in '${this}'`\n        if (!globalState.suppressReactionErrors) {\n            console.error(message, error)\n            /** If debugging brought you here, please, read the above message :-). Tnx! */\n        } else if (__DEV__) { console.warn(`[mobx] (error in reaction '${this.name_}' suppressed, fix error of causing action below)`) } // prettier-ignore\n\n        if (__DEV__ && isSpyEnabled()) {\n            spyReport({\n                type: \"error\",\n                name: this.name_,\n                message,\n                error: \"\" + error\n            })\n        }\n\n        globalState.globalReactionErrorHandlers.forEach(f => f(error, this))\n    }\n\n    dispose() {\n        if (!this.isDisposed_) {\n            this.isDisposed_ = true\n            if (!this.isRunning_) {\n                // if disposed while running, clean up later. Maybe not optimal, but rare case\n                startBatch()\n                clearObserving(this)\n                endBatch()\n            }\n        }\n    }\n\n    getDisposer_(): IReactionDisposer {\n        const r = this.dispose.bind(this) as IReactionDisposer\n        r[$mobx] = this\n        return r\n    }\n\n    toString() {\n        return `Reaction[${this.name_}]`\n    }\n\n    trace(enterBreakPoint: boolean = false) {\n        trace(this, enterBreakPoint)\n    }\n}\n\nexport function onReactionError(handler: (error: any, derivation: IDerivation) => void): Lambda {\n    globalState.globalReactionErrorHandlers.push(handler)\n    return () => {\n        const idx = globalState.globalReactionErrorHandlers.indexOf(handler)\n        if (idx >= 0) {\n            globalState.globalReactionErrorHandlers.splice(idx, 1)\n        }\n    }\n}\n\n/**\n * Magic number alert!\n * Defines within how many times a reaction is allowed to re-trigger itself\n * until it is assumed that this is gonna be a never ending loop...\n */\nconst MAX_REACTION_ITERATIONS = 100\n\nlet reactionScheduler: (fn: () => void) => void = f => f()\n\nexport function runReactions() {\n    // Trampolining, if runReactions are already running, new reactions will be picked up\n    if (globalState.inBatch > 0 || globalState.isRunningReactions) {\n        return\n    }\n    reactionScheduler(runReactionsHelper)\n}\n\nfunction runReactionsHelper() {\n    globalState.isRunningReactions = true\n    const allReactions = globalState.pendingReactions\n    let iterations = 0\n\n    // While running reactions, new reactions might be triggered.\n    // Hence we work with two variables and check whether\n    // we converge to no remaining reactions after a while.\n    while (allReactions.length > 0) {\n        if (++iterations === MAX_REACTION_ITERATIONS) {\n            console.error(\n                __DEV__\n                    ? `Reaction doesn't converge to a stable state after ${MAX_REACTION_ITERATIONS} iterations.` +\n                          ` Probably there is a cycle in the reactive function: ${allReactions[0]}`\n                    : `[mobx] cycle in reaction: ${allReactions[0]}`\n            )\n            allReactions.splice(0) // clear reactions\n        }\n        let remainingReactions = allReactions.splice(0)\n        for (let i = 0, l = remainingReactions.length; i < l; i++) {\n            remainingReactions[i].runReaction_()\n        }\n    }\n    globalState.isRunningReactions = false\n}\n\nexport const isReaction = createInstanceofPredicate(\"Reaction\", Reaction)\n\nexport function setReactionScheduler(fn: (f: () => void) => void) {\n    const baseScheduler = reactionScheduler\n    reactionScheduler = f => fn(() => baseScheduler(f))\n}\n","import { IDerivation, IObservable, Reaction, die, getGlobal } from \"../internal\"\nimport { ComputedValue } from \"./computedvalue\"\n\n/**\n * These values will persist if global state is reset\n */\nconst persistentKeys: (keyof MobXGlobals)[] = [\n    \"mobxGuid\",\n    \"spyListeners\",\n    \"enforceActions\",\n    \"computedRequiresReaction\",\n    \"reactionRequiresObservable\",\n    \"observableRequiresReaction\",\n    \"allowStateReads\",\n    \"disableErrorBoundaries\",\n    \"runId\",\n    \"UNCHANGED\",\n    \"useProxies\"\n]\n\nexport type IUNCHANGED = {}\n\nexport class MobXGlobals {\n    /**\n     * MobXGlobals version.\n     * MobX compatiblity with other versions loaded in memory as long as this version matches.\n     * It indicates that the global state still stores similar information\n     *\n     * N.B: this version is unrelated to the package version of MobX, and is only the version of the\n     * internal state storage of MobX, and can be the same across many different package versions\n     */\n    version = 6\n\n    /**\n     * globally unique token to signal unchanged\n     */\n    UNCHANGED: IUNCHANGED = {}\n\n    /**\n     * Currently running derivation\n     */\n    trackingDerivation: IDerivation | null = null\n\n    /**\n     * Currently running reaction. This determines if we currently have a reactive context.\n     * (Tracking derivation is also set for temporal tracking of computed values inside actions,\n     * but trackingReaction can only be set by a form of Reaction)\n     */\n    trackingContext: Reaction | ComputedValue<any> | null = null\n\n    /**\n     * Each time a derivation is tracked, it is assigned a unique run-id\n     */\n    runId = 0\n\n    /**\n     * 'guid' for general purpose. Will be persisted amongst resets.\n     */\n    mobxGuid = 0\n\n    /**\n     * Are we in a batch block? (and how many of them)\n     */\n    inBatch: number = 0\n\n    /**\n     * Observables that don't have observers anymore, and are about to be\n     * suspended, unless somebody else accesses it in the same batch\n     *\n     * @type {IObservable[]}\n     */\n    pendingUnobservations: IObservable[] = []\n\n    /**\n     * List of scheduled, not yet executed, reactions.\n     */\n    pendingReactions: Reaction[] = []\n\n    /**\n     * Are we currently processing reactions?\n     */\n    isRunningReactions = false\n\n    /**\n     * Is it allowed to change observables at this point?\n     * In general, MobX doesn't allow that when running computations and React.render.\n     * To ensure that those functions stay pure.\n     */\n    allowStateChanges = false\n\n    /**\n     * Is it allowed to read observables at this point?\n     * Used to hold the state needed for `observableRequiresReaction`\n     */\n    allowStateReads = true\n\n    /**\n     * If strict mode is enabled, state changes are by default not allowed\n     */\n    enforceActions: boolean | \"always\" = true\n\n    /**\n     * Spy callbacks\n     */\n    spyListeners: { (change: any): void }[] = []\n\n    /**\n     * Globally attached error handlers that react specifically to errors in reactions\n     */\n    globalReactionErrorHandlers: ((error: any, derivation: IDerivation) => void)[] = []\n\n    /**\n     * Warn if computed values are accessed outside a reactive context\n     */\n    computedRequiresReaction = false\n\n    /**\n     * (Experimental)\n     * Warn if you try to create to derivation / reactive context without accessing any observable.\n     */\n    reactionRequiresObservable = false\n\n    /**\n     * (Experimental)\n     * Warn if observables are accessed outside a reactive context\n     */\n    observableRequiresReaction = false\n\n    /*\n     * Don't catch and rethrow exceptions. This is useful for inspecting the state of\n     * the stack when an exception occurs while debugging.\n     */\n    disableErrorBoundaries = false\n\n    /*\n     * If true, we are already handling an exception in an action. Any errors in reactions should be suppressed, as\n     * they are not the cause, see: https://github.com/mobxjs/mobx/issues/1836\n     */\n    suppressReactionErrors = false\n\n    useProxies = true\n    /*\n     * print warnings about code that would fail if proxies weren't available\n     */\n    verifyProxies = false\n\n    /**\n     * False forces all object's descriptors to\n     * writable: true\n     * configurable: true\n     */\n    safeDescriptors = true\n}\n\nlet canMergeGlobalState = true\nlet isolateCalled = false\n\nexport let globalState: MobXGlobals = (function () {\n    let global = getGlobal()\n    if (global.__mobxInstanceCount > 0 && !global.__mobxGlobals) {\n        canMergeGlobalState = false\n    }\n    if (global.__mobxGlobals && global.__mobxGlobals.version !== new MobXGlobals().version) {\n        canMergeGlobalState = false\n    }\n\n    if (!canMergeGlobalState) {\n        // Because this is a IIFE we need to let isolateCalled a chance to change\n        // so we run it after the event loop completed at least 1 iteration\n        setTimeout(() => {\n            if (!isolateCalled) {\n                die(35)\n            }\n        }, 1)\n        return new MobXGlobals()\n    } else if (global.__mobxGlobals) {\n        global.__mobxInstanceCount += 1\n        if (!global.__mobxGlobals.UNCHANGED) {\n            global.__mobxGlobals.UNCHANGED = {}\n        } // make merge backward compatible\n        return global.__mobxGlobals\n    } else {\n        global.__mobxInstanceCount = 1\n        return (global.__mobxGlobals = new MobXGlobals())\n    }\n})()\n\nexport function isolateGlobalState() {\n    if (\n        globalState.pendingReactions.length ||\n        globalState.inBatch ||\n        globalState.isRunningReactions\n    ) {\n        die(36)\n    }\n    isolateCalled = true\n    if (canMergeGlobalState) {\n        let global = getGlobal()\n        if (--global.__mobxInstanceCount === 0) {\n            global.__mobxGlobals = undefined\n        }\n        globalState = new MobXGlobals()\n    }\n}\n\nexport function getGlobalState(): any {\n    return globalState\n}\n\n/**\n * For testing purposes only; this will break the internal state of existing observables,\n * but can be used to get back at a stable state after throwing errors\n */\nexport function resetGlobalState() {\n    const defaultGlobals = new MobXGlobals()\n    for (let key in defaultGlobals) {\n        if (persistentKeys.indexOf(key as any) === -1) {\n            globalState[key] = defaultGlobals[key]\n        }\n    }\n    globalState.allowStateChanges = !globalState.enforceActions\n}\n","import {\n    Lambda,\n    ComputedValue,\n    IDependencyTree,\n    IDerivation,\n    IDerivationState_,\n    TraceMode,\n    getDependencyTree,\n    globalState,\n    runReactions,\n    checkIfStateReadsAreAllowed\n} from \"../internal\"\n\nexport interface IDepTreeNode {\n    name_: string\n    observing_?: IObservable[]\n}\n\nexport interface IObservable extends IDepTreeNode {\n    diffValue_: number\n    /**\n     * Id of the derivation *run* that last accessed this observable.\n     * If this id equals the *run* id of the current derivation,\n     * the dependency is already established\n     */\n    lastAccessedBy_: number\n    isBeingObserved_: boolean\n\n    lowestObserverState_: IDerivationState_ // Used to avoid redundant propagations\n    isPendingUnobservation_: boolean // Used to push itself to global.pendingUnobservations at most once per batch.\n\n    observers_: Set<IDerivation>\n\n    onBUO(): void\n    onBO(): void\n\n    onBUOL: Set<Lambda> | undefined\n    onBOL: Set<Lambda> | undefined\n}\n\nexport function hasObservers(observable: IObservable): boolean {\n    return observable.observers_ && observable.observers_.size > 0\n}\n\nexport function getObservers(observable: IObservable): Set<IDerivation> {\n    return observable.observers_\n}\n\n// function invariantObservers(observable: IObservable) {\n//     const list = observable.observers\n//     const map = observable.observersIndexes\n//     const l = list.length\n//     for (let i = 0; i < l; i++) {\n//         const id = list[i].__mapid\n//         if (i) {\n//             invariant(map[id] === i, \"INTERNAL ERROR maps derivation.__mapid to index in list\") // for performance\n//         } else {\n//             invariant(!(id in map), \"INTERNAL ERROR observer on index 0 shouldn't be held in map.\") // for performance\n//         }\n//     }\n//     invariant(\n//         list.length === 0 || Object.keys(map).length === list.length - 1,\n//         \"INTERNAL ERROR there is no junk in map\"\n//     )\n// }\nexport function addObserver(observable: IObservable, node: IDerivation) {\n    // invariant(node.dependenciesState !== -1, \"INTERNAL ERROR, can add only dependenciesState !== -1\");\n    // invariant(observable._observers.indexOf(node) === -1, \"INTERNAL ERROR add already added node\");\n    // invariantObservers(observable);\n\n    observable.observers_.add(node)\n    if (observable.lowestObserverState_ > node.dependenciesState_) {\n        observable.lowestObserverState_ = node.dependenciesState_\n    }\n\n    // invariantObservers(observable);\n    // invariant(observable._observers.indexOf(node) !== -1, \"INTERNAL ERROR didn't add node\");\n}\n\nexport function removeObserver(observable: IObservable, node: IDerivation) {\n    // invariant(globalState.inBatch > 0, \"INTERNAL ERROR, remove should be called only inside batch\");\n    // invariant(observable._observers.indexOf(node) !== -1, \"INTERNAL ERROR remove already removed node\");\n    // invariantObservers(observable);\n    observable.observers_.delete(node)\n    if (observable.observers_.size === 0) {\n        // deleting last observer\n        queueForUnobservation(observable)\n    }\n    // invariantObservers(observable);\n    // invariant(observable._observers.indexOf(node) === -1, \"INTERNAL ERROR remove already removed node2\");\n}\n\nexport function queueForUnobservation(observable: IObservable) {\n    if (observable.isPendingUnobservation_ === false) {\n        // invariant(observable._observers.length === 0, \"INTERNAL ERROR, should only queue for unobservation unobserved observables\");\n        observable.isPendingUnobservation_ = true\n        globalState.pendingUnobservations.push(observable)\n    }\n}\n\n/**\n * Batch starts a transaction, at least for purposes of memoizing ComputedValues when nothing else does.\n * During a batch `onBecomeUnobserved` will be called at most once per observable.\n * Avoids unnecessary recalculations.\n */\nexport function startBatch() {\n    globalState.inBatch++\n}\n\nexport function endBatch() {\n    if (--globalState.inBatch === 0) {\n        runReactions()\n        // the batch is actually about to finish, all unobserving should happen here.\n        const list = globalState.pendingUnobservations\n        for (let i = 0; i < list.length; i++) {\n            const observable = list[i]\n            observable.isPendingUnobservation_ = false\n            if (observable.observers_.size === 0) {\n                if (observable.isBeingObserved_) {\n                    // if this observable had reactive observers, trigger the hooks\n                    observable.isBeingObserved_ = false\n                    observable.onBUO()\n                }\n                if (observable instanceof ComputedValue) {\n                    // computed values are automatically teared down when the last observer leaves\n                    // this process happens recursively, this computed might be the last observabe of another, etc..\n                    observable.suspend_()\n                }\n            }\n        }\n        globalState.pendingUnobservations = []\n    }\n}\n\nexport function reportObserved(observable: IObservable): boolean {\n    checkIfStateReadsAreAllowed(observable)\n\n    const derivation = globalState.trackingDerivation\n    if (derivation !== null) {\n        /**\n         * Simple optimization, give each derivation run an unique id (runId)\n         * Check if last time this observable was accessed the same runId is used\n         * if this is the case, the relation is already known\n         */\n        if (derivation.runId_ !== observable.lastAccessedBy_) {\n            observable.lastAccessedBy_ = derivation.runId_\n            // Tried storing newObserving, or observing, or both as Set, but performance didn't come close...\n            derivation.newObserving_![derivation.unboundDepsCount_++] = observable\n            if (!observable.isBeingObserved_ && globalState.trackingContext) {\n                observable.isBeingObserved_ = true\n                observable.onBO()\n            }\n        }\n        return true\n    } else if (observable.observers_.size === 0 && globalState.inBatch > 0) {\n        queueForUnobservation(observable)\n    }\n\n    return false\n}\n\n// function invariantLOS(observable: IObservable, msg: string) {\n//     // it's expensive so better not run it in produciton. but temporarily helpful for testing\n//     const min = getObservers(observable).reduce((a, b) => Math.min(a, b.dependenciesState), 2)\n//     if (min >= observable.lowestObserverState) return // <- the only assumption about `lowestObserverState`\n//     throw new Error(\n//         \"lowestObserverState is wrong for \" +\n//             msg +\n//             \" because \" +\n//             min +\n//             \" < \" +\n//             observable.lowestObserverState\n//     )\n// }\n\n/**\n * NOTE: current propagation mechanism will in case of self reruning autoruns behave unexpectedly\n * It will propagate changes to observers from previous run\n * It's hard or maybe impossible (with reasonable perf) to get it right with current approach\n * Hopefully self reruning autoruns aren't a feature people should depend on\n * Also most basic use cases should be ok\n */\n\n// Called by Atom when its value changes\nexport function propagateChanged(observable: IObservable) {\n    // invariantLOS(observable, \"changed start\");\n    if (observable.lowestObserverState_ === IDerivationState_.STALE_) {\n        return\n    }\n    observable.lowestObserverState_ = IDerivationState_.STALE_\n\n    // Ideally we use for..of here, but the downcompiled version is really slow...\n    observable.observers_.forEach(d => {\n        if (d.dependenciesState_ === IDerivationState_.UP_TO_DATE_) {\n            if (__DEV__ && d.isTracing_ !== TraceMode.NONE) {\n                logTraceInfo(d, observable)\n            }\n            d.onBecomeStale_()\n        }\n        d.dependenciesState_ = IDerivationState_.STALE_\n    })\n    // invariantLOS(observable, \"changed end\");\n}\n\n// Called by ComputedValue when it recalculate and its value changed\nexport function propagateChangeConfirmed(observable: IObservable) {\n    // invariantLOS(observable, \"confirmed start\");\n    if (observable.lowestObserverState_ === IDerivationState_.STALE_) {\n        return\n    }\n    observable.lowestObserverState_ = IDerivationState_.STALE_\n\n    observable.observers_.forEach(d => {\n        if (d.dependenciesState_ === IDerivationState_.POSSIBLY_STALE_) {\n            d.dependenciesState_ = IDerivationState_.STALE_\n            if (__DEV__ && d.isTracing_ !== TraceMode.NONE) {\n                logTraceInfo(d, observable)\n            }\n        } else if (\n            d.dependenciesState_ === IDerivationState_.UP_TO_DATE_ // this happens during computing of `d`, just keep lowestObserverState up to date.\n        ) {\n            observable.lowestObserverState_ = IDerivationState_.UP_TO_DATE_\n        }\n    })\n    // invariantLOS(observable, \"confirmed end\");\n}\n\n// Used by computed when its dependency changed, but we don't wan't to immediately recompute.\nexport function propagateMaybeChanged(observable: IObservable) {\n    // invariantLOS(observable, \"maybe start\");\n    if (observable.lowestObserverState_ !== IDerivationState_.UP_TO_DATE_) {\n        return\n    }\n    observable.lowestObserverState_ = IDerivationState_.POSSIBLY_STALE_\n\n    observable.observers_.forEach(d => {\n        if (d.dependenciesState_ === IDerivationState_.UP_TO_DATE_) {\n            d.dependenciesState_ = IDerivationState_.POSSIBLY_STALE_\n            d.onBecomeStale_()\n        }\n    })\n    // invariantLOS(observable, \"maybe end\");\n}\n\nfunction logTraceInfo(derivation: IDerivation, observable: IObservable) {\n    console.log(\n        `[mobx.trace] '${derivation.name_}' is invalidated due to a change in: '${observable.name_}'`\n    )\n    if (derivation.isTracing_ === TraceMode.BREAK) {\n        const lines = []\n        printDepTree(getDependencyTree(derivation), lines, 1)\n\n        // prettier-ignore\n        new Function(\n`debugger;\n/*\nTracing '${derivation.name_}'\n\nYou are entering this break point because derivation '${derivation.name_}' is being traced and '${observable.name_}' is now forcing it to update.\nJust follow the stacktrace you should now see in the devtools to see precisely what piece of your code is causing this update\nThe stackframe you are looking for is at least ~6-8 stack-frames up.\n\n${derivation instanceof ComputedValue ? derivation.derivation.toString().replace(/[*]\\//g, \"/\") : \"\"}\n\nThe dependencies for this derivation are:\n\n${lines.join(\"\\n\")}\n*/\n    `)()\n    }\n}\n\nfunction printDepTree(tree: IDependencyTree, lines: string[], depth: number) {\n    if (lines.length >= 1000) {\n        lines.push(\"(and many more)\")\n        return\n    }\n    lines.push(`${\"\\t\".repeat(depth - 1)}${tree.name}`)\n    if (tree.dependencies) {\n        tree.dependencies.forEach(child => printDepTree(child, lines, depth + 1))\n    }\n}\n","import { IComputedDidChange } from \"./computedvalue\"\nimport { IValueDidChange, IBoxDidChange } from \"./../types/observablevalue\"\nimport { IObjectDidChange } from \"./../types/observableobject\"\nimport { IArrayDidChange } from \"./../types/observablearray\"\nimport { Lambda, globalState, once, ISetDidChange, IMapDidChange } from \"../internal\"\n\nexport function isSpyEnabled() {\n    return __DEV__ && !!globalState.spyListeners.length\n}\n\nexport type PureSpyEvent =\n    | { type: \"action\"; name: string; object: unknown; arguments: unknown[] }\n    | { type: \"scheduled-reaction\"; name: string }\n    | { type: \"reaction\"; name: string }\n    | { type: \"error\"; name: string; message: string; error: string }\n    | IComputedDidChange<unknown>\n    | IObjectDidChange<unknown>\n    | IArrayDidChange<unknown>\n    | IMapDidChange<unknown, unknown>\n    | ISetDidChange<unknown>\n    | IValueDidChange<unknown>\n    | IBoxDidChange<unknown>\n    | { type: \"report-end\"; spyReportEnd: true; time?: number }\n\ntype SpyEvent = PureSpyEvent & { spyReportStart?: true }\n\nexport function spyReport(event: SpyEvent) {\n    if (!__DEV__) {\n        return\n    } // dead code elimination can do the rest\n    if (!globalState.spyListeners.length) {\n        return\n    }\n    const listeners = globalState.spyListeners\n    for (let i = 0, l = listeners.length; i < l; i++) {\n        listeners[i](event)\n    }\n}\n\nexport function spyReportStart(event: PureSpyEvent) {\n    if (!__DEV__) {\n        return\n    }\n    const change = { ...event, spyReportStart: true as const }\n    spyReport(change)\n}\n\nconst END_EVENT: SpyEvent = { type: \"report-end\", spyReportEnd: true }\n\nexport function spyReportEnd(change?: { time?: number }) {\n    if (!__DEV__) {\n        return\n    }\n    if (change) {\n        spyReport({ ...change, type: \"report-end\", spyReportEnd: true })\n    } else {\n        spyReport(END_EVENT)\n    }\n}\n\nexport function spy(listener: (change: SpyEvent) => void): Lambda {\n    if (!__DEV__) {\n        console.warn(`[mobx.spy] Is a no-op in production builds`)\n        return function () {}\n    } else {\n        globalState.spyListeners.push(listener)\n        return once(() => {\n            globalState.spyListeners = globalState.spyListeners.filter(l => l !== listener)\n        })\n    }\n}\n","import {\n    createAction,\n    executeAction,\n    Annotation,\n    storeAnnotation,\n    die,\n    isFunction,\n    isStringish,\n    createDecoratorAnnotation,\n    createActionAnnotation\n} from \"../internal\"\n\nexport const ACTION = \"action\"\nexport const ACTION_BOUND = \"action.bound\"\nexport const AUTOACTION = \"autoAction\"\nexport const AUTOACTION_BOUND = \"autoAction.bound\"\n\nconst DEFAULT_ACTION_NAME = \"<unnamed action>\"\n\nconst actionAnnotation = createActionAnnotation(ACTION)\nconst actionBoundAnnotation = createActionAnnotation(ACTION_BOUND, {\n    bound: true\n})\nconst autoActionAnnotation = createActionAnnotation(AUTOACTION, {\n    autoAction: true\n})\nconst autoActionBoundAnnotation = createActionAnnotation(AUTOACTION_BOUND, {\n    autoAction: true,\n    bound: true\n})\n\nexport interface IActionFactory extends Annotation, PropertyDecorator {\n    // nameless actions\n    <T extends Function | undefined | null>(fn: T): T\n    // named actions\n    <T extends Function | undefined | null>(name: string, fn: T): T\n\n    // named decorator\n    (customName: string): PropertyDecorator & Annotation\n\n    // decorator (name no longer supported)\n    bound: Annotation & PropertyDecorator\n}\n\nfunction createActionFactory(autoAction: boolean): IActionFactory {\n    const res: IActionFactory = function action(arg1, arg2?): any {\n        // action(fn() {})\n        if (isFunction(arg1)) {\n            return createAction(arg1.name || DEFAULT_ACTION_NAME, arg1, autoAction)\n        }\n        // action(\"name\", fn() {})\n        if (isFunction(arg2)) {\n            return createAction(arg1, arg2, autoAction)\n        }\n        // @action\n        if (isStringish(arg2)) {\n            return storeAnnotation(arg1, arg2, autoAction ? autoActionAnnotation : actionAnnotation)\n        }\n        // action(\"name\") & @action(\"name\")\n        if (isStringish(arg1)) {\n            return createDecoratorAnnotation(\n                createActionAnnotation(autoAction ? AUTOACTION : ACTION, {\n                    name: arg1,\n                    autoAction\n                })\n            )\n        }\n\n        if (__DEV__) {\n            die(\"Invalid arguments for `action`\")\n        }\n    } as IActionFactory\n    return res\n}\n\nexport const action: IActionFactory = createActionFactory(false)\nObject.assign(action, actionAnnotation)\nexport const autoAction: IActionFactory = createActionFactory(true)\nObject.assign(autoAction, autoActionAnnotation)\n\naction.bound = createDecoratorAnnotation(actionBoundAnnotation)\nautoAction.bound = createDecoratorAnnotation(autoActionBoundAnnotation)\n\nexport function runInAction<T>(fn: () => T): T {\n    return executeAction(fn.name || DEFAULT_ACTION_NAME, false, fn, this, undefined)\n}\n\nexport function isAction(thing: any) {\n    return isFunction(thing) && thing.isMobxAction === true\n}\n","import { Lambda, once, untrackedEnd, untrackedStart, die } from \"../internal\"\n\nexport type IInterceptor<T> = (change: T) => T | null\n\nexport interface IInterceptable<T> {\n    interceptors_: IInterceptor<T>[] | undefined\n}\n\nexport function hasInterceptors(interceptable: IInterceptable<any>) {\n    return interceptable.interceptors_ !== undefined && interceptable.interceptors_.length > 0\n}\n\nexport function registerInterceptor<T>(\n    interceptable: IInterceptable<T>,\n    handler: IInterceptor<T>\n): Lambda {\n    const interceptors = interceptable.interceptors_ || (interceptable.interceptors_ = [])\n    interceptors.push(handler)\n    return once(() => {\n        const idx = interceptors.indexOf(handler)\n        if (idx !== -1) {\n            interceptors.splice(idx, 1)\n        }\n    })\n}\n\nexport function interceptChange<T>(\n    interceptable: IInterceptable<T | null>,\n    change: T | null\n): T | null {\n    const prevU = untrackedStart()\n    try {\n        // Interceptor can modify the array, copy it to avoid concurrent modification, see #1950\n        const interceptors = [...(interceptable.interceptors_ || [])]\n        for (let i = 0, l = interceptors.length; i < l; i++) {\n            change = interceptors[i](change)\n            if (change && !(change as any).type) {\n                die(14)\n            }\n            if (!change) {\n                break\n            }\n        }\n        return change\n    } finally {\n        untrackedEnd(prevU)\n    }\n}\n","import {\n    EMPTY_OBJECT,\n    IEqualsComparer,\n    IReactionDisposer,\n    IReactionPublic,\n    Lambda,\n    Reaction,\n    action,\n    comparer,\n    getNextId,\n    isAction,\n    isFunction,\n    isPlainObject,\n    die,\n    allowStateChanges\n} from \"../internal\"\n\nexport interface IAutorunOptions {\n    delay?: number\n    name?: string\n    /**\n     * Experimental.\n     * Warns if the view doesn't track observables\n     */\n    requiresObservable?: boolean\n    scheduler?: (callback: () => void) => any\n    onError?: (error: any) => void\n}\n\n/**\n * Creates a named reactive view and keeps it alive, so that the view is always\n * updated if one of the dependencies changes, even when the view is not further used by something else.\n * @param view The reactive view\n * @returns disposer function, which can be used to stop the view from being updated in the future.\n */\nexport function autorun(\n    view: (r: IReactionPublic) => any,\n    opts: IAutorunOptions = EMPTY_OBJECT\n): IReactionDisposer {\n    if (__DEV__) {\n        if (!isFunction(view)) {\n            die(\"Autorun expects a function as first argument\")\n        }\n        if (isAction(view)) {\n            die(\"Autorun does not accept actions since actions are untrackable\")\n        }\n    }\n\n    const name: string =\n        opts?.name ?? (__DEV__ ? (view as any).name || \"Autorun@\" + getNextId() : \"Autorun\")\n    const runSync = !opts.scheduler && !opts.delay\n    let reaction: Reaction\n\n    if (runSync) {\n        // normal autorun\n        reaction = new Reaction(\n            name,\n            function (this: Reaction) {\n                this.track(reactionRunner)\n            },\n            opts.onError,\n            opts.requiresObservable\n        )\n    } else {\n        const scheduler = createSchedulerFromOptions(opts)\n        // debounced autorun\n        let isScheduled = false\n\n        reaction = new Reaction(\n            name,\n            () => {\n                if (!isScheduled) {\n                    isScheduled = true\n                    scheduler(() => {\n                        isScheduled = false\n                        if (!reaction.isDisposed_) {\n                            reaction.track(reactionRunner)\n                        }\n                    })\n                }\n            },\n            opts.onError,\n            opts.requiresObservable\n        )\n    }\n\n    function reactionRunner() {\n        view(reaction)\n    }\n\n    reaction.schedule_()\n    return reaction.getDisposer_()\n}\n\nexport type IReactionOptions<T, FireImmediately extends boolean> = IAutorunOptions & {\n    fireImmediately?: FireImmediately\n    equals?: IEqualsComparer<T>\n}\n\nconst run = (f: Lambda) => f()\n\nfunction createSchedulerFromOptions(opts: IAutorunOptions) {\n    return opts.scheduler\n        ? opts.scheduler\n        : opts.delay\n        ? (f: Lambda) => setTimeout(f, opts.delay!)\n        : run\n}\n\nexport function reaction<T, FireImmediately extends boolean = false>(\n    expression: (r: IReactionPublic) => T,\n    effect: (\n        arg: T,\n        prev: FireImmediately extends true ? T | undefined : T,\n        r: IReactionPublic\n    ) => void,\n    opts: IReactionOptions<T, FireImmediately> = EMPTY_OBJECT\n): IReactionDisposer {\n    if (__DEV__) {\n        if (!isFunction(expression) || !isFunction(effect)) {\n            die(\"First and second argument to reaction should be functions\")\n        }\n        if (!isPlainObject(opts)) {\n            die(\"Third argument of reactions should be an object\")\n        }\n    }\n    const name = opts.name ?? (__DEV__ ? \"Reaction@\" + getNextId() : \"Reaction\")\n    const effectAction = action(\n        name,\n        opts.onError ? wrapErrorHandler(opts.onError, effect) : effect\n    )\n    const runSync = !opts.scheduler && !opts.delay\n    const scheduler = createSchedulerFromOptions(opts)\n\n    let firstTime = true\n    let isScheduled = false\n    let value: T\n    let oldValue: T | undefined\n\n    const equals: IEqualsComparer<T> = (opts as any).compareStructural\n        ? comparer.structural\n        : opts.equals || comparer.default\n\n    const r = new Reaction(\n        name,\n        () => {\n            if (firstTime || runSync) {\n                reactionRunner()\n            } else if (!isScheduled) {\n                isScheduled = true\n                scheduler!(reactionRunner)\n            }\n        },\n        opts.onError,\n        opts.requiresObservable\n    )\n\n    function reactionRunner() {\n        isScheduled = false\n        if (r.isDisposed_) {\n            return\n        }\n        let changed: boolean = false\n        r.track(() => {\n            const nextValue = allowStateChanges(false, () => expression(r))\n            changed = firstTime || !equals(value, nextValue)\n            oldValue = value\n            value = nextValue\n        })\n\n        // This casting is nesessary as TS cannot infer proper type in current funciton implementation\n        type OldValue = FireImmediately extends true ? T | undefined : T\n        if (firstTime && opts.fireImmediately!) {\n            effectAction(value, oldValue as OldValue, r)\n        } else if (!firstTime && changed) {\n            effectAction(value, oldValue as OldValue, r)\n        }\n        firstTime = false\n    }\n\n    r.schedule_()\n    return r.getDisposer_()\n}\n\nfunction wrapErrorHandler(errorHandler, baseFn) {\n    return function () {\n        try {\n            return baseFn.apply(this, arguments)\n        } catch (e) {\n            errorHandler.call(this, e)\n        }\n    }\n}\n","import {\n    IComputedValue,\n    IObservable,\n    IObservableArray,\n    Lambda,\n    ObservableMap,\n    getAtom,\n    ObservableSet,\n    isFunction,\n    IObservableValue\n} from \"../internal\"\n\nconst ON_BECOME_OBSERVED = \"onBO\"\nconst ON_BECOME_UNOBSERVED = \"onBUO\"\n\nexport function onBecomeObserved(\n    value:\n        | IObservable\n        | IComputedValue<any>\n        | IObservableArray<any>\n        | ObservableMap<any, any>\n        | ObservableSet<any>\n        | IObservableValue<any>,\n    listener: Lambda\n): Lambda\nexport function onBecomeObserved<K, V = any>(\n    value: ObservableMap<K, V> | Object,\n    property: K,\n    listener: Lambda\n): Lambda\nexport function onBecomeObserved(thing, arg2, arg3?): Lambda {\n    return interceptHook(ON_BECOME_OBSERVED, thing, arg2, arg3)\n}\n\nexport function onBecomeUnobserved(\n    value:\n        | IObservable\n        | IComputedValue<any>\n        | IObservableArray<any>\n        | ObservableMap<any, any>\n        | ObservableSet<any>\n        | IObservableValue<any>,\n    listener: Lambda\n): Lambda\nexport function onBecomeUnobserved<K, V = any>(\n    value: ObservableMap<K, V> | Object,\n    property: K,\n    listener: Lambda\n): Lambda\nexport function onBecomeUnobserved(thing, arg2, arg3?): Lambda {\n    return interceptHook(ON_BECOME_UNOBSERVED, thing, arg2, arg3)\n}\n\nfunction interceptHook(hook: \"onBO\" | \"onBUO\", thing, arg2, arg3) {\n    const atom: IObservable =\n        typeof arg3 === \"function\" ? getAtom(thing, arg2) : (getAtom(thing) as any)\n    const cb = isFunction(arg3) ? arg3 : arg2\n    const listenersKey = `${hook}L` as \"onBOL\" | \"onBUOL\"\n\n    if (atom[listenersKey]) {\n        atom[listenersKey]!.add(cb)\n    } else {\n        atom[listenersKey] = new Set<Lambda>([cb])\n    }\n\n    return function () {\n        const hookListeners = atom[listenersKey]\n        if (hookListeners) {\n            hookListeners.delete(cb)\n            if (hookListeners.size === 0) {\n                delete atom[listenersKey]\n            }\n        }\n    }\n}\n","import { globalState, isolateGlobalState, setReactionScheduler } from \"../internal\"\n\nconst NEVER = \"never\"\nconst ALWAYS = \"always\"\nconst OBSERVED = \"observed\"\n// const IF_AVAILABLE = \"ifavailable\"\n\nexport function configure(options: {\n    enforceActions?: \"never\" | \"always\" | \"observed\"\n    computedRequiresReaction?: boolean\n    /**\n     * Warn if you try to create to derivation / reactive context without accessing any observable.\n     */\n    reactionRequiresObservable?: boolean\n    /**\n     * Warn if observables are accessed outside a reactive context\n     */\n    observableRequiresReaction?: boolean\n    isolateGlobalState?: boolean\n    disableErrorBoundaries?: boolean\n    safeDescriptors?: boolean\n    reactionScheduler?: (f: () => void) => void\n    useProxies?: \"always\" | \"never\" | \"ifavailable\"\n}): void {\n    if (options.isolateGlobalState === true) {\n        isolateGlobalState()\n    }\n    const { useProxies, enforceActions } = options\n    if (useProxies !== undefined) {\n        globalState.useProxies =\n            useProxies === ALWAYS\n                ? true\n                : useProxies === NEVER\n                ? false\n                : typeof Proxy !== \"undefined\"\n    }\n    if (useProxies === \"ifavailable\") {\n        globalState.verifyProxies = true\n    }\n    if (enforceActions !== undefined) {\n        const ea = enforceActions === ALWAYS ? ALWAYS : enforceActions === OBSERVED\n        globalState.enforceActions = ea\n        globalState.allowStateChanges = ea === true || ea === ALWAYS ? false : true\n    }\n    ;[\n        \"computedRequiresReaction\",\n        \"reactionRequiresObservable\",\n        \"observableRequiresReaction\",\n        \"disableErrorBoundaries\",\n        \"safeDescriptors\"\n    ].forEach(key => {\n        if (key in options) {\n            globalState[key] = !!options[key]\n        }\n    })\n    globalState.allowStateReads = !globalState.observableRequiresReaction\n    if (__DEV__ && globalState.disableErrorBoundaries === true) {\n        console.warn(\n            \"WARNING: Debug feature only. MobX will NOT recover from errors when `disableErrorBoundaries` is enabled.\"\n        )\n    }\n    if (options.reactionScheduler) {\n        setReactionScheduler(options.reactionScheduler)\n    }\n}\n","import {\n    CreateObservableOptions,\n    isObservableMap,\n    AnnotationsMap,\n    startBatch,\n    endBatch,\n    asObservableObject,\n    isPlainObject,\n    ObservableObjectAdministration,\n    isObservable,\n    die,\n    getOwnPropertyDescriptors,\n    $mobx,\n    ownKeys\n} from \"../internal\"\n\nexport function extendObservable<A extends Object, B extends Object>(\n    target: A,\n    properties: B,\n    annotations?: AnnotationsMap<B, never>,\n    options?: CreateObservableOptions\n): A & B {\n    if (__DEV__) {\n        if (arguments.length > 4) {\n            die(\"'extendObservable' expected 2-4 arguments\")\n        }\n        if (typeof target !== \"object\") {\n            die(\"'extendObservable' expects an object as first argument\")\n        }\n        if (isObservableMap(target)) {\n            die(\"'extendObservable' should not be used on maps, use map.merge instead\")\n        }\n        if (!isPlainObject(properties)) {\n            die(`'extendObservable' only accepts plain objects as second argument`)\n        }\n        if (isObservable(properties) || isObservable(annotations)) {\n            die(`Extending an object with another observable (object) is not supported`)\n        }\n    }\n    // Pull descriptors first, so we don't have to deal with props added by administration ($mobx)\n    const descriptors = getOwnPropertyDescriptors(properties)\n\n    const adm: ObservableObjectAdministration = asObservableObject(target, options)[$mobx]\n    startBatch()\n    try {\n        ownKeys(descriptors).forEach(key => {\n            adm.extend_(\n                key,\n                descriptors[key as any],\n                // must pass \"undefined\" for { key: undefined }\n                !annotations ? true : key in annotations ? annotations[key] : true\n            )\n        })\n    } finally {\n        endBatch()\n    }\n    return target as any\n}\n","import { IDepTreeNode, getAtom, getObservers, hasObservers } from \"../internal\"\n\nexport interface IDependencyTree {\n    name: string\n    dependencies?: IDependencyTree[]\n}\n\nexport interface IObserverTree {\n    name: string\n    observers?: IObserverTree[]\n}\n\nexport function getDependencyTree(thing: any, property?: string): IDependencyTree {\n    return nodeToDependencyTree(getAtom(thing, property))\n}\n\nfunction nodeToDependencyTree(node: IDepTreeNode): IDependencyTree {\n    const result: IDependencyTree = {\n        name: node.name_\n    }\n    if (node.observing_ && node.observing_.length > 0) {\n        result.dependencies = unique(node.observing_).map(nodeToDependencyTree)\n    }\n    return result\n}\n\nexport function getObserverTree(thing: any, property?: string): IObserverTree {\n    return nodeToObserverTree(getAtom(thing, property))\n}\n\nfunction nodeToObserverTree(node: IDepTreeNode): IObserverTree {\n    const result: IObserverTree = {\n        name: node.name_\n    }\n    if (hasObservers(node as any)) {\n        result.observers = Array.from(<any>getObservers(node as any)).map(<any>nodeToObserverTree)\n    }\n    return result\n}\n\nfunction unique<T>(list: T[]): T[] {\n    return Array.from(new Set(list))\n}\n","import {\n    IObservableArray,\n    IObservableValue,\n    Lambda,\n    ObservableMap,\n    getAdministration,\n    isObservableArray,\n    isObservableMap,\n    isObservableObject,\n    isObservableValue,\n    ObservableSet,\n    die,\n    isStringish\n} from \"../internal\"\n\nexport type ReadInterceptor<T> = (value: any) => T\n\n/** Experimental feature right now, tested indirectly via Mobx-State-Tree */\nexport function interceptReads<T>(value: IObservableValue<T>, handler: ReadInterceptor<T>): Lambda\nexport function interceptReads<T>(\n    observableArray: IObservableArray<T>,\n    handler: ReadInterceptor<T>\n): Lambda\nexport function interceptReads<K, V>(\n    observableMap: ObservableMap<K, V>,\n    handler: ReadInterceptor<V>\n): Lambda\nexport function interceptReads<V>(\n    observableSet: ObservableSet<V>,\n    handler: ReadInterceptor<V>\n): Lambda\nexport function interceptReads(\n    object: Object,\n    property: string,\n    handler: ReadInterceptor<any>\n): Lambda\nexport function interceptReads(thing, propOrHandler?, handler?): Lambda {\n    let target\n    if (isObservableMap(thing) || isObservableArray(thing) || isObservableValue(thing)) {\n        target = getAdministration(thing)\n    } else if (isObservableObject(thing)) {\n        if (__DEV__ && !isStringish(propOrHandler)) {\n            return die(\n                `InterceptReads can only be used with a specific property, not with an object in general`\n            )\n        }\n        target = getAdministration(thing, propOrHandler)\n    } else if (__DEV__) {\n        return die(`Expected observable map, object or array as first array`)\n    }\n    if (__DEV__ && target.dehancer !== undefined) {\n        return die(`An intercept reader was already established`)\n    }\n    target.dehancer = typeof propOrHandler === \"function\" ? propOrHandler : handler\n    return () => {\n        target.dehancer = undefined\n    }\n}\n","import { $mobx, getAtom, isComputedValue, isObservableObject, die, isStringish } from \"../internal\"\n\nexport function _isComputed(value, property?: PropertyKey): boolean {\n    if (property === undefined) {\n        return isComputedValue(value)\n    }\n    if (isObservableObject(value) === false) {\n        return false\n    }\n    if (!value[$mobx].values_.has(property)) {\n        return false\n    }\n    const atom = getAtom(value, property)\n    return isComputedValue(atom)\n}\n\nexport function isComputed(value: any): boolean {\n    if (__DEV__ && arguments.length > 1) {\n        return die(\n            `isComputed expects only 1 argument. Use isComputedProp to inspect the observability of a property`\n        )\n    }\n    return _isComputed(value)\n}\n\nexport function isComputedProp(value: any, propName: PropertyKey): boolean {\n    if (__DEV__ && !isStringish(propName)) {\n        return die(`isComputed expected a property name as second argument`)\n    }\n    return _isComputed(value, propName)\n}\n","import {\n    $mobx,\n    isAtom,\n    isComputedValue,\n    isObservableArray,\n    isObservableMap,\n    isObservableObject,\n    isReaction,\n    die,\n    isStringish\n} from \"../internal\"\n\nfunction _isObservable(value, property?: PropertyKey): boolean {\n    if (!value) {\n        return false\n    }\n    if (property !== undefined) {\n        if (__DEV__ && (isObservableMap(value) || isObservableArray(value))) {\n            return die(\n                \"isObservable(object, propertyName) is not supported for arrays and maps. Use map.has or array.length instead.\"\n            )\n        }\n        if (isObservableObject(value)) {\n            return value[$mobx].values_.has(property)\n        }\n        return false\n    }\n    // For first check, see #701\n    return (\n        isObservableObject(value) ||\n        !!value[$mobx] ||\n        isAtom(value) ||\n        isReaction(value) ||\n        isComputedValue(value)\n    )\n}\n\nexport function isObservable(value: any): boolean {\n    if (__DEV__ && arguments.length !== 1) {\n        die(\n            `isObservable expects only 1 argument. Use isObservableProp to inspect the observability of a property`\n        )\n    }\n    return _isObservable(value)\n}\n\nexport function isObservableProp(value: any, propName: PropertyKey): boolean {\n    if (__DEV__ && !isStringish(propName)) {\n        return die(`expected a property name as second argument`)\n    }\n    return _isObservable(value, propName)\n}\n","import {\n    $mobx,\n    IIsObservableObject,\n    IObservableArray,\n    ObservableMap,\n    ObservableSet,\n    ObservableObjectAdministration,\n    endBatch,\n    isObservableArray,\n    isObservableMap,\n    isObservableSet,\n    isObservableObject,\n    startBatch,\n    die\n} from \"../internal\"\n\nexport function keys<K>(map: ObservableMap<K, any>): ReadonlyArray<K>\nexport function keys<T>(ar: IObservableArray<T>): ReadonlyArray<number>\nexport function keys<T>(set: ObservableSet<T>): ReadonlyArray<T>\nexport function keys<T extends Object>(obj: T): ReadonlyArray<PropertyKey>\nexport function keys(obj: any): any {\n    if (isObservableObject(obj)) {\n        return (\n            (obj as any as IIsObservableObject)[$mobx] as ObservableObjectAdministration\n        ).keys_()\n    }\n    if (isObservableMap(obj) || isObservableSet(obj)) {\n        return Array.from(obj.keys())\n    }\n    if (isObservableArray(obj)) {\n        return obj.map((_, index) => index)\n    }\n    die(5)\n}\n\nexport function values<K, T>(map: ObservableMap<K, T>): ReadonlyArray<T>\nexport function values<T>(set: ObservableSet<T>): ReadonlyArray<T>\nexport function values<T>(ar: IObservableArray<T>): ReadonlyArray<T>\nexport function values<T = any>(obj: T): ReadonlyArray<T extends object ? T[keyof T] : any>\nexport function values(obj: any): string[] {\n    if (isObservableObject(obj)) {\n        return keys(obj).map(key => obj[key])\n    }\n    if (isObservableMap(obj)) {\n        return keys(obj).map(key => obj.get(key))\n    }\n    if (isObservableSet(obj)) {\n        return Array.from(obj.values())\n    }\n    if (isObservableArray(obj)) {\n        return obj.slice()\n    }\n    die(6)\n}\n\nexport function entries<K, T>(map: ObservableMap<K, T>): ReadonlyArray<[K, T]>\nexport function entries<T>(set: ObservableSet<T>): ReadonlyArray<[T, T]>\nexport function entries<T>(ar: IObservableArray<T>): ReadonlyArray<[number, T]>\nexport function entries<T = any>(\n    obj: T\n): ReadonlyArray<[string, T extends object ? T[keyof T] : any]>\nexport function entries(obj: any): any {\n    if (isObservableObject(obj)) {\n        return keys(obj).map(key => [key, obj[key]])\n    }\n    if (isObservableMap(obj)) {\n        return keys(obj).map(key => [key, obj.get(key)])\n    }\n    if (isObservableSet(obj)) {\n        return Array.from(obj.entries())\n    }\n    if (isObservableArray(obj)) {\n        return obj.map((key, index) => [index, key])\n    }\n    die(7)\n}\n\nexport function set<V>(obj: ObservableMap<PropertyKey, V>, values: { [key: string]: V })\nexport function set<K, V>(obj: ObservableMap<K, V>, key: K, value: V)\nexport function set<T>(obj: ObservableSet<T>, value: T)\nexport function set<T>(obj: IObservableArray<T>, index: number, value: T)\nexport function set<T extends Object>(obj: T, values: { [key: string]: any })\nexport function set<T extends Object>(obj: T, key: PropertyKey, value: any)\nexport function set(obj: any, key: any, value?: any): void {\n    if (arguments.length === 2 && !isObservableSet(obj)) {\n        startBatch()\n        const values = key\n        try {\n            for (let key in values) {\n                set(obj, key, values[key])\n            }\n        } finally {\n            endBatch()\n        }\n        return\n    }\n    if (isObservableObject(obj)) {\n        ;(obj as any as IIsObservableObject)[$mobx].set_(key, value)\n    } else if (isObservableMap(obj)) {\n        obj.set(key, value)\n    } else if (isObservableSet(obj)) {\n        obj.add(key)\n    } else if (isObservableArray(obj)) {\n        if (typeof key !== \"number\") {\n            key = parseInt(key, 10)\n        }\n        if (key < 0) {\n            die(`Invalid index: '${key}'`)\n        }\n        startBatch()\n        if (key >= obj.length) {\n            obj.length = key + 1\n        }\n        obj[key] = value\n        endBatch()\n    } else {\n        die(8)\n    }\n}\n\nexport function remove<K, V>(obj: ObservableMap<K, V>, key: K)\nexport function remove<T>(obj: ObservableSet<T>, key: T)\nexport function remove<T>(obj: IObservableArray<T>, index: number)\nexport function remove<T extends Object>(obj: T, key: string)\nexport function remove(obj: any, key: any): void {\n    if (isObservableObject(obj)) {\n        ;(obj as any as IIsObservableObject)[$mobx].delete_(key)\n    } else if (isObservableMap(obj)) {\n        obj.delete(key)\n    } else if (isObservableSet(obj)) {\n        obj.delete(key)\n    } else if (isObservableArray(obj)) {\n        if (typeof key !== \"number\") {\n            key = parseInt(key, 10)\n        }\n        obj.splice(key, 1)\n    } else {\n        die(9)\n    }\n}\n\nexport function has<K>(obj: ObservableMap<K, any>, key: K): boolean\nexport function has<T>(obj: ObservableSet<T>, key: T): boolean\nexport function has<T>(obj: IObservableArray<T>, index: number): boolean\nexport function has<T extends Object>(obj: T, key: string): boolean\nexport function has(obj: any, key: any): boolean {\n    if (isObservableObject(obj)) {\n        return (obj as any as IIsObservableObject)[$mobx].has_(key)\n    } else if (isObservableMap(obj)) {\n        return obj.has(key)\n    } else if (isObservableSet(obj)) {\n        return obj.has(key)\n    } else if (isObservableArray(obj)) {\n        return key >= 0 && key < obj.length\n    }\n    die(10)\n}\n\nexport function get<K, V>(obj: ObservableMap<K, V>, key: K): V | undefined\nexport function get<T>(obj: IObservableArray<T>, index: number): T | undefined\nexport function get<T extends Object>(obj: T, key: string): any\nexport function get(obj: any, key: any): any {\n    if (!has(obj, key)) {\n        return undefined\n    }\n    if (isObservableObject(obj)) {\n        return (obj as any as IIsObservableObject)[$mobx].get_(key)\n    } else if (isObservableMap(obj)) {\n        return obj.get(key)\n    } else if (isObservableArray(obj)) {\n        return obj[key]\n    }\n    die(11)\n}\n\nexport function apiDefineProperty(obj: Object, key: PropertyKey, descriptor: PropertyDescriptor) {\n    if (isObservableObject(obj)) {\n        return (obj as any as IIsObservableObject)[$mobx].defineProperty_(key, descriptor)\n    }\n    die(39)\n}\n\nexport function apiOwnKeys(obj: Object) {\n    if (isObservableObject(obj)) {\n        return (obj as any as IIsObservableObject)[$mobx].ownKeys_()\n    }\n    die(38)\n}\n","import {\n    isObservable,\n    isObservableArray,\n    isObservableValue,\n    isObservableMap,\n    isObservableSet,\n    isComputedValue,\n    die,\n    apiOwnKeys,\n    objectPrototype\n} from \"../internal\"\n\nfunction cache<K, V>(map: Map<any, any>, key: K, value: V): V {\n    map.set(key, value)\n    return value\n}\n\nfunction toJSHelper(source, __alreadySeen: Map<any, any>) {\n    if (\n        source == null ||\n        typeof source !== \"object\" ||\n        source instanceof Date ||\n        !isObservable(source)\n    ) {\n        return source\n    }\n\n    if (isObservableValue(source) || isComputedValue(source)) {\n        return toJSHelper(source.get(), __alreadySeen)\n    }\n    if (__alreadySeen.has(source)) {\n        return __alreadySeen.get(source)\n    }\n    if (isObservableArray(source)) {\n        const res = cache(__alreadySeen, source, new Array(source.length))\n        source.forEach((value, idx) => {\n            res[idx] = toJSHelper(value, __alreadySeen)\n        })\n        return res\n    }\n    if (isObservableSet(source)) {\n        const res = cache(__alreadySeen, source, new Set())\n        source.forEach(value => {\n            res.add(toJSHelper(value, __alreadySeen))\n        })\n        return res\n    }\n    if (isObservableMap(source)) {\n        const res = cache(__alreadySeen, source, new Map())\n        source.forEach((value, key) => {\n            res.set(key, toJSHelper(value, __alreadySeen))\n        })\n        return res\n    } else {\n        // must be observable object\n        const res = cache(__alreadySeen, source, {})\n        apiOwnKeys(source).forEach((key: any) => {\n            if (objectPrototype.propertyIsEnumerable.call(source, key)) {\n                res[key] = toJSHelper(source[key], __alreadySeen)\n            }\n        })\n        return res\n    }\n}\n\n/**\n * Recursively converts an observable to it's non-observable native counterpart.\n * It does NOT recurse into non-observables, these are left as they are, even if they contain observables.\n * Computed and other non-enumerable properties are completely ignored.\n * Complex scenarios require custom solution, eg implementing `toJSON` or using `serializr` lib.\n */\nexport function toJS<T>(source: T, options?: any): T {\n    if (__DEV__ && options) {\n        die(\"toJS no longer supports options\")\n    }\n    return toJSHelper(source, new Map())\n}\n","import { Lambda, once, untrackedEnd, untrackedStart } from \"../internal\"\n\nexport interface IListenable {\n    changeListeners_: Function[] | undefined\n}\n\nexport function hasListeners(listenable: IListenable) {\n    return listenable.changeListeners_ !== undefined && listenable.changeListeners_.length > 0\n}\n\nexport function registerListener(listenable: IListenable, handler: Function): Lambda {\n    const listeners = listenable.changeListeners_ || (listenable.changeListeners_ = [])\n    listeners.push(handler)\n    return once(() => {\n        const idx = listeners.indexOf(handler)\n        if (idx !== -1) {\n            listeners.splice(idx, 1)\n        }\n    })\n}\n\nexport function notifyListeners<T>(listenable: IListenable, change: T) {\n    const prevU = untrackedStart()\n    let listeners = listenable.changeListeners_\n    if (!listeners) {\n        return\n    }\n    listeners = listeners.slice()\n    for (let i = 0, l = listeners.length; i < l; i++) {\n        listeners[i](change)\n    }\n    untrackedEnd(prevU)\n}\n","import {\n    $mobx,\n    asObservableObject,\n    AnnotationsMap,\n    endBatch,\n    startBatch,\n    CreateObservableOptions,\n    ObservableObjectAdministration,\n    collectStoredAnnotations,\n    isPlainObject,\n    isObservableObject,\n    die,\n    ownKeys,\n    extendObservable,\n    addHiddenProp,\n    storedAnnotationsSymbol\n} from \"../internal\"\n\n// Hack based on https://github.com/Microsoft/TypeScript/issues/14829#issuecomment-322267089\n// We need this, because otherwise, AdditionalKeys is going to be inferred to be any\n// set of superfluous keys. But, we rather want to get a compile error unless AdditionalKeys is\n// _explicity_ passed as generic argument\n// Fixes: https://github.com/mobxjs/mobx/issues/2325#issuecomment-691070022\ntype NoInfer<T> = [T][T extends any ? 0 : never]\n\nexport function makeObservable<T extends object, AdditionalKeys extends PropertyKey = never>(\n    target: T,\n    annotations?: AnnotationsMap<T, NoInfer<AdditionalKeys>>,\n    options?: CreateObservableOptions\n): T {\n    const adm: ObservableObjectAdministration = asObservableObject(target, options)[$mobx]\n    startBatch()\n    try {\n        if (__DEV__ && annotations && target[storedAnnotationsSymbol]) {\n            die(\n                `makeObservable second arg must be nullish when using decorators. Mixing @decorator syntax with annotations is not supported.`\n            )\n        }\n        // Default to decorators\n        annotations ??= collectStoredAnnotations(target)\n\n        // Annotate\n        ownKeys(annotations).forEach(key => adm.make_(key, annotations![key]))\n    } finally {\n        endBatch()\n    }\n    return target\n}\n\n// proto[keysSymbol] = new Set<PropertyKey>()\nconst keysSymbol = Symbol(\"mobx-keys\")\n\nexport function makeAutoObservable<T extends object, AdditionalKeys extends PropertyKey = never>(\n    target: T,\n    overrides?: AnnotationsMap<T, NoInfer<AdditionalKeys>>,\n    options?: CreateObservableOptions\n): T {\n    if (__DEV__) {\n        if (!isPlainObject(target) && !isPlainObject(Object.getPrototypeOf(target))) {\n            die(`'makeAutoObservable' can only be used for classes that don't have a superclass`)\n        }\n        if (isObservableObject(target)) {\n            die(`makeAutoObservable can only be used on objects not already made observable`)\n        }\n    }\n\n    // Optimization: avoid visiting protos\n    // Assumes that annotation.make_/.extend_ works the same for plain objects\n    if (isPlainObject(target)) {\n        return extendObservable(target, target, overrides, options)\n    }\n\n    const adm: ObservableObjectAdministration = asObservableObject(target, options)[$mobx]\n\n    // Optimization: cache keys on proto\n    // Assumes makeAutoObservable can be called only once per object and can't be used in subclass\n    if (!target[keysSymbol]) {\n        const proto = Object.getPrototypeOf(target)\n        const keys = new Set([...ownKeys(target), ...ownKeys(proto)])\n        keys.delete(\"constructor\")\n        keys.delete($mobx)\n        addHiddenProp(proto, keysSymbol, keys)\n    }\n\n    startBatch()\n    try {\n        target[keysSymbol].forEach(key =>\n            adm.make_(\n                key,\n                // must pass \"undefined\" for { key: undefined }\n                !overrides ? true : key in overrides ? overrides[key] : true\n            )\n        )\n    } finally {\n        endBatch()\n    }\n    return target\n}\n","import {\n    $mobx,\n    IEnhancer,\n    IInterceptable,\n    IInterceptor,\n    IListenable,\n    Lambda,\n    ObservableValue,\n    checkIfStateModificationsAreAllowed,\n    createAtom,\n    createInstanceofPredicate,\n    deepEnhancer,\n    getNextId,\n    getPlainObjectKeys,\n    hasInterceptors,\n    hasListeners,\n    interceptChange,\n    isES6Map,\n    isPlainObject,\n    isSpyEnabled,\n    makeIterable,\n    notifyListeners,\n    referenceEnhancer,\n    registerInterceptor,\n    registerListener,\n    spyReportEnd,\n    spyReportStart,\n    stringifyKey,\n    transaction,\n    untracked,\n    onBecomeUnobserved,\n    globalState,\n    die,\n    isFunction,\n    UPDATE,\n    IAtom,\n    PureSpyEvent,\n    allowStateChanges\n} from \"../internal\"\n\nexport interface IKeyValueMap<V = any> {\n    [key: string]: V\n}\n\nexport type IMapEntry<K = any, V = any> = [K, V]\nexport type IReadonlyMapEntry<K = any, V = any> = readonly [K, V]\nexport type IMapEntries<K = any, V = any> = IMapEntry<K, V>[]\nexport type IReadonlyMapEntries<K = any, V = any> = IReadonlyMapEntry<K, V>[]\n\nexport type IMapDidChange<K = any, V = any> = { observableKind: \"map\"; debugObjectName: string } & (\n    | {\n          object: ObservableMap<K, V>\n          name: K // actual the key or index, but this is based on the ancient .observe proposal for consistency\n          type: \"update\"\n          newValue: V\n          oldValue: V\n      }\n    | {\n          object: ObservableMap<K, V>\n          name: K\n          type: \"add\"\n          newValue: V\n      }\n    | {\n          object: ObservableMap<K, V>\n          name: K\n          type: \"delete\"\n          oldValue: V\n      }\n)\n\nexport interface IMapWillChange<K = any, V = any> {\n    object: ObservableMap<K, V>\n    type: \"update\" | \"add\" | \"delete\"\n    name: K\n    newValue?: V\n}\n\nconst ObservableMapMarker = {}\n\nexport const ADD = \"add\"\nexport const DELETE = \"delete\"\n\nexport type IObservableMapInitialValues<K = any, V = any> =\n    | IMapEntries<K, V>\n    | IReadonlyMapEntries<K, V>\n    | IKeyValueMap<V>\n    | Map<K, V>\n\n// just extend Map? See also https://gist.github.com/nestharus/13b4d74f2ef4a2f4357dbd3fc23c1e54\n// But: https://github.com/mobxjs/mobx/issues/1556\nexport class ObservableMap<K = any, V = any>\n    implements Map<K, V>, IInterceptable<IMapWillChange<K, V>>, IListenable {\n    [$mobx] = ObservableMapMarker\n    data_: Map<K, ObservableValue<V>>\n    hasMap_: Map<K, ObservableValue<boolean>> // hasMap, not hashMap >-).\n    keysAtom_: IAtom\n    interceptors_\n    changeListeners_\n    dehancer: any\n\n    constructor(\n        initialData?: IObservableMapInitialValues<K, V>,\n        public enhancer_: IEnhancer<V> = deepEnhancer,\n        public name_ = __DEV__ ? \"ObservableMap@\" + getNextId() : \"ObservableMap\"\n    ) {\n        if (!isFunction(Map)) {\n            die(18)\n        }\n        this.keysAtom_ = createAtom(__DEV__ ? `${this.name_}.keys()` : \"ObservableMap.keys()\")\n        this.data_ = new Map()\n        this.hasMap_ = new Map()\n        allowStateChanges(true, () => {\n            this.merge(initialData)\n        })\n    }\n\n    private has_(key: K): boolean {\n        return this.data_.has(key)\n    }\n\n    has(key: K): boolean {\n        if (!globalState.trackingDerivation) {\n            return this.has_(key)\n        }\n\n        let entry = this.hasMap_.get(key)\n        if (!entry) {\n            const newEntry = (entry = new ObservableValue(\n                this.has_(key),\n                referenceEnhancer,\n                __DEV__ ? `${this.name_}.${stringifyKey(key)}?` : \"ObservableMap.key?\",\n                false\n            ))\n            this.hasMap_.set(key, newEntry)\n            onBecomeUnobserved(newEntry, () => this.hasMap_.delete(key))\n        }\n\n        return entry.get()\n    }\n\n    set(key: K, value: V) {\n        const hasKey = this.has_(key)\n        if (hasInterceptors(this)) {\n            const change = interceptChange<IMapWillChange<K, V>>(this, {\n                type: hasKey ? UPDATE : ADD,\n                object: this,\n                newValue: value,\n                name: key\n            })\n            if (!change) {\n                return this\n            }\n            value = change.newValue!\n        }\n        if (hasKey) {\n            this.updateValue_(key, value)\n        } else {\n            this.addValue_(key, value)\n        }\n        return this\n    }\n\n    delete(key: K): boolean {\n        checkIfStateModificationsAreAllowed(this.keysAtom_)\n        if (hasInterceptors(this)) {\n            const change = interceptChange<IMapWillChange<K, V>>(this, {\n                type: DELETE,\n                object: this,\n                name: key\n            })\n            if (!change) {\n                return false\n            }\n        }\n        if (this.has_(key)) {\n            const notifySpy = isSpyEnabled()\n            const notify = hasListeners(this)\n            const change: IMapDidChange<K, V> | null =\n                notify || notifySpy\n                    ? {\n                          observableKind: \"map\",\n                          debugObjectName: this.name_,\n                          type: DELETE,\n                          object: this,\n                          oldValue: (<any>this.data_.get(key)).value_,\n                          name: key\n                      }\n                    : null\n\n            if (__DEV__ && notifySpy) {\n                spyReportStart(change! as PureSpyEvent)\n            } // TODO fix type\n            transaction(() => {\n                this.keysAtom_.reportChanged()\n                this.hasMap_.get(key)?.setNewValue_(false)\n                const observable = this.data_.get(key)!\n                observable.setNewValue_(undefined as any)\n                this.data_.delete(key)\n            })\n            if (notify) {\n                notifyListeners(this, change)\n            }\n            if (__DEV__ && notifySpy) {\n                spyReportEnd()\n            }\n            return true\n        }\n        return false\n    }\n\n    private updateValue_(key: K, newValue: V | undefined) {\n        const observable = this.data_.get(key)!\n        newValue = (observable as any).prepareNewValue_(newValue) as V\n        if (newValue !== globalState.UNCHANGED) {\n            const notifySpy = isSpyEnabled()\n            const notify = hasListeners(this)\n            const change: IMapDidChange<K, V> | null =\n                notify || notifySpy\n                    ? {\n                          observableKind: \"map\",\n                          debugObjectName: this.name_,\n                          type: UPDATE,\n                          object: this,\n                          oldValue: (observable as any).value_,\n                          name: key,\n                          newValue\n                      }\n                    : null\n            if (__DEV__ && notifySpy) {\n                spyReportStart(change! as PureSpyEvent)\n            } // TODO fix type\n            observable.setNewValue_(newValue as V)\n            if (notify) {\n                notifyListeners(this, change)\n            }\n            if (__DEV__ && notifySpy) {\n                spyReportEnd()\n            }\n        }\n    }\n\n    private addValue_(key: K, newValue: V) {\n        checkIfStateModificationsAreAllowed(this.keysAtom_)\n        transaction(() => {\n            const observable = new ObservableValue(\n                newValue,\n                this.enhancer_,\n                __DEV__ ? `${this.name_}.${stringifyKey(key)}` : \"ObservableMap.key\",\n                false\n            )\n            this.data_.set(key, observable)\n            newValue = (observable as any).value_ // value might have been changed\n            this.hasMap_.get(key)?.setNewValue_(true)\n            this.keysAtom_.reportChanged()\n        })\n        const notifySpy = isSpyEnabled()\n        const notify = hasListeners(this)\n        const change: IMapDidChange<K, V> | null =\n            notify || notifySpy\n                ? {\n                      observableKind: \"map\",\n                      debugObjectName: this.name_,\n                      type: ADD,\n                      object: this,\n                      name: key,\n                      newValue\n                  }\n                : null\n        if (__DEV__ && notifySpy) {\n            spyReportStart(change! as PureSpyEvent)\n        } // TODO fix type\n        if (notify) {\n            notifyListeners(this, change)\n        }\n        if (__DEV__ && notifySpy) {\n            spyReportEnd()\n        }\n    }\n\n    get(key: K): V | undefined {\n        if (this.has(key)) {\n            return this.dehanceValue_(this.data_.get(key)!.get())\n        }\n        return this.dehanceValue_(undefined)\n    }\n\n    private dehanceValue_<X extends V | undefined>(value: X): X {\n        if (this.dehancer !== undefined) {\n            return this.dehancer(value)\n        }\n        return value\n    }\n\n    keys(): IterableIterator<K> {\n        this.keysAtom_.reportObserved()\n        return this.data_.keys()\n    }\n\n    values(): IterableIterator<V> {\n        const self = this\n        const keys = this.keys()\n        return makeIterable({\n            next() {\n                const { done, value } = keys.next()\n                return {\n                    done,\n                    value: done ? (undefined as any) : self.get(value)\n                }\n            }\n        })\n    }\n\n    entries(): IterableIterator<IMapEntry<K, V>> {\n        const self = this\n        const keys = this.keys()\n        return makeIterable({\n            next() {\n                const { done, value } = keys.next()\n                return {\n                    done,\n                    value: done ? (undefined as any) : ([value, self.get(value)!] as [K, V])\n                }\n            }\n        })\n    }\n\n    [Symbol.iterator]() {\n        return this.entries()\n    }\n\n    forEach(callback: (value: V, key: K, object: Map<K, V>) => void, thisArg?) {\n        for (const [key, value] of this) {\n            callback.call(thisArg, value, key, this)\n        }\n    }\n\n    /** Merge another object into this object, returns this. */\n    merge(other?: IObservableMapInitialValues<K, V>): ObservableMap<K, V> {\n        if (isObservableMap(other)) {\n            other = new Map(other)\n        }\n        transaction(() => {\n            if (isPlainObject(other)) {\n                getPlainObjectKeys(other).forEach((key: any) =>\n                    this.set(key as K, (other as IKeyValueMap)[key])\n                )\n            } else if (Array.isArray(other)) {\n                other.forEach(([key, value]) => this.set(key, value))\n            } else if (isES6Map(other)) {\n                if (other.constructor !== Map) {\n                    die(19, other)\n                }\n                other.forEach((value, key) => this.set(key, value))\n            } else if (other !== null && other !== undefined) {\n                die(20, other)\n            }\n        })\n        return this\n    }\n\n    clear() {\n        transaction(() => {\n            untracked(() => {\n                for (const key of this.keys()) {\n                    this.delete(key)\n                }\n            })\n        })\n    }\n\n    replace(values: IObservableMapInitialValues<K, V>): ObservableMap<K, V> {\n        // Implementation requirements:\n        // - respect ordering of replacement map\n        // - allow interceptors to run and potentially prevent individual operations\n        // - don't recreate observables that already exist in original map (so we don't destroy existing subscriptions)\n        // - don't _keysAtom.reportChanged if the keys of resulting map are indentical (order matters!)\n        // - note that result map may differ from replacement map due to the interceptors\n        transaction(() => {\n            // Convert to map so we can do quick key lookups\n            const replacementMap = convertToMap(values)\n            const orderedData = new Map()\n            // Used for optimization\n            let keysReportChangedCalled = false\n            // Delete keys that don't exist in replacement map\n            // if the key deletion is prevented by interceptor\n            // add entry at the beginning of the result map\n            for (const key of this.data_.keys()) {\n                // Concurrently iterating/deleting keys\n                // iterator should handle this correctly\n                if (!replacementMap.has(key)) {\n                    const deleted = this.delete(key)\n                    // Was the key removed?\n                    if (deleted) {\n                        // _keysAtom.reportChanged() was already called\n                        keysReportChangedCalled = true\n                    } else {\n                        // Delete prevented by interceptor\n                        const value = this.data_.get(key)\n                        orderedData.set(key, value)\n                    }\n                }\n            }\n            // Merge entries\n            for (const [key, value] of replacementMap.entries()) {\n                // We will want to know whether a new key is added\n                const keyExisted = this.data_.has(key)\n                // Add or update value\n                this.set(key, value)\n                // The addition could have been prevent by interceptor\n                if (this.data_.has(key)) {\n                    // The update could have been prevented by interceptor\n                    // and also we want to preserve existing values\n                    // so use value from _data map (instead of replacement map)\n                    const value = this.data_.get(key)\n                    orderedData.set(key, value)\n                    // Was a new key added?\n                    if (!keyExisted) {\n                        // _keysAtom.reportChanged() was already called\n                        keysReportChangedCalled = true\n                    }\n                }\n            }\n            // Check for possible key order change\n            if (!keysReportChangedCalled) {\n                if (this.data_.size !== orderedData.size) {\n                    // If size differs, keys are definitely modified\n                    this.keysAtom_.reportChanged()\n                } else {\n                    const iter1 = this.data_.keys()\n                    const iter2 = orderedData.keys()\n                    let next1 = iter1.next()\n                    let next2 = iter2.next()\n                    while (!next1.done) {\n                        if (next1.value !== next2.value) {\n                            this.keysAtom_.reportChanged()\n                            break\n                        }\n                        next1 = iter1.next()\n                        next2 = iter2.next()\n                    }\n                }\n            }\n            // Use correctly ordered map\n            this.data_ = orderedData\n        })\n        return this\n    }\n\n    get size(): number {\n        this.keysAtom_.reportObserved()\n        return this.data_.size\n    }\n\n    toString(): string {\n        return \"[object ObservableMap]\"\n    }\n\n    toJSON(): [K, V][] {\n        return Array.from(this)\n    }\n\n    get [Symbol.toStringTag]() {\n        return \"Map\"\n    }\n\n    /**\n     * Observes this object. Triggers for the events 'add', 'update' and 'delete'.\n     * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/observe\n     * for callback details\n     */\n    observe_(listener: (changes: IMapDidChange<K, V>) => void, fireImmediately?: boolean): Lambda {\n        if (__DEV__ && fireImmediately === true) {\n            die(\"`observe` doesn't support fireImmediately=true in combination with maps.\")\n        }\n        return registerListener(this, listener)\n    }\n\n    intercept_(handler: IInterceptor<IMapWillChange<K, V>>): Lambda {\n        return registerInterceptor(this, handler)\n    }\n}\n\n// eslint-disable-next-line\nexport var isObservableMap = createInstanceofPredicate(\"ObservableMap\", ObservableMap) as (\n    thing: any\n) => thing is ObservableMap<any, any>\n\nfunction convertToMap(dataStructure: any): Map<any, any> {\n    if (isES6Map(dataStructure) || isObservableMap(dataStructure)) {\n        return dataStructure\n    } else if (Array.isArray(dataStructure)) {\n        return new Map(dataStructure)\n    } else if (isPlainObject(dataStructure)) {\n        const map = new Map()\n        for (const key in dataStructure) {\n            map.set(key, dataStructure[key])\n        }\n        return map\n    } else {\n        return die(21, dataStructure)\n    }\n}\n","import {\n    $mobx,\n    createAtom,\n    deepEnhancer,\n    getNextId,\n    IEnhancer,\n    isSpyEnabled,\n    hasListeners,\n    IListenable,\n    registerListener,\n    Lambda,\n    spyReportStart,\n    notifyListeners,\n    spyReportEnd,\n    createInstanceofPredicate,\n    hasInterceptors,\n    interceptChange,\n    IInterceptable,\n    IInterceptor,\n    registerInterceptor,\n    checkIfStateModificationsAreAllowed,\n    untracked,\n    makeIterable,\n    transaction,\n    isES6Set,\n    IAtom,\n    DELETE,\n    ADD,\n    die,\n    isFunction\n} from \"../internal\"\n\nconst ObservableSetMarker = {}\n\nexport type IObservableSetInitialValues<T> = Set<T> | readonly T[]\n\nexport type ISetDidChange<T = any> =\n    | {\n          object: ObservableSet<T>\n          observableKind: \"set\"\n          debugObjectName: string\n          type: \"add\"\n          newValue: T\n      }\n    | {\n          object: ObservableSet<T>\n          observableKind: \"set\"\n          debugObjectName: string\n          type: \"delete\"\n          oldValue: T\n      }\n\nexport type ISetWillChange<T = any> =\n    | {\n          type: \"delete\"\n          object: ObservableSet<T>\n          oldValue: T\n      }\n    | {\n          type: \"add\"\n          object: ObservableSet<T>\n          newValue: T\n      }\n\nexport class ObservableSet<T = any> implements Set<T>, IInterceptable<ISetWillChange>, IListenable {\n    [$mobx] = ObservableSetMarker\n    private data_: Set<any> = new Set()\n    private atom_: IAtom\n    changeListeners_\n    interceptors_\n    dehancer: any\n    enhancer_: (newV: any, oldV: any | undefined) => any\n\n    constructor(\n        initialData?: IObservableSetInitialValues<T>,\n        enhancer: IEnhancer<T> = deepEnhancer,\n        public name_ = __DEV__ ? \"ObservableSet@\" + getNextId() : \"ObservableSet\"\n    ) {\n        if (!isFunction(Set)) {\n            die(22)\n        }\n        this.atom_ = createAtom(this.name_)\n        this.enhancer_ = (newV, oldV) => enhancer(newV, oldV, name_)\n        if (initialData) {\n            this.replace(initialData)\n        }\n    }\n\n    private dehanceValue_<X extends T | undefined>(value: X): X {\n        if (this.dehancer !== undefined) {\n            return this.dehancer(value)\n        }\n        return value\n    }\n\n    clear() {\n        transaction(() => {\n            untracked(() => {\n                for (const value of this.data_.values()) {\n                    this.delete(value)\n                }\n            })\n        })\n    }\n\n    forEach(callbackFn: (value: T, value2: T, set: Set<T>) => void, thisArg?: any) {\n        for (const value of this) {\n            callbackFn.call(thisArg, value, value, this)\n        }\n    }\n\n    get size() {\n        this.atom_.reportObserved()\n        return this.data_.size\n    }\n\n    add(value: T) {\n        checkIfStateModificationsAreAllowed(this.atom_)\n        if (hasInterceptors(this)) {\n            const change = interceptChange<ISetWillChange<T>>(this, {\n                type: ADD,\n                object: this,\n                newValue: value\n            })\n            if (!change) {\n                return this\n            }\n            // ideally, value = change.value would be done here, so that values can be\n            // changed by interceptor. Same applies for other Set and Map api's.\n        }\n        if (!this.has(value)) {\n            transaction(() => {\n                this.data_.add(this.enhancer_(value, undefined))\n                this.atom_.reportChanged()\n            })\n            const notifySpy = __DEV__ && isSpyEnabled()\n            const notify = hasListeners(this)\n            const change =\n                notify || notifySpy\n                    ? <ISetDidChange<T>>{\n                          observableKind: \"set\",\n                          debugObjectName: this.name_,\n                          type: ADD,\n                          object: this,\n                          newValue: value\n                      }\n                    : null\n            if (notifySpy && __DEV__) {\n                spyReportStart(change!)\n            }\n            if (notify) {\n                notifyListeners(this, change)\n            }\n            if (notifySpy && __DEV__) {\n                spyReportEnd()\n            }\n        }\n\n        return this\n    }\n\n    delete(value: T) {\n        if (hasInterceptors(this)) {\n            const change = interceptChange<ISetWillChange<T>>(this, {\n                type: DELETE,\n                object: this,\n                oldValue: value\n            })\n            if (!change) {\n                return false\n            }\n        }\n        if (this.has(value)) {\n            const notifySpy = __DEV__ && isSpyEnabled()\n            const notify = hasListeners(this)\n            const change =\n                notify || notifySpy\n                    ? <ISetDidChange<T>>{\n                          observableKind: \"set\",\n                          debugObjectName: this.name_,\n                          type: DELETE,\n                          object: this,\n                          oldValue: value\n                      }\n                    : null\n\n            if (notifySpy && __DEV__) {\n                spyReportStart(change!)\n            }\n            transaction(() => {\n                this.atom_.reportChanged()\n                this.data_.delete(value)\n            })\n            if (notify) {\n                notifyListeners(this, change)\n            }\n            if (notifySpy && __DEV__) {\n                spyReportEnd()\n            }\n            return true\n        }\n        return false\n    }\n\n    has(value: T) {\n        this.atom_.reportObserved()\n        return this.data_.has(this.dehanceValue_(value))\n    }\n\n    entries() {\n        let nextIndex = 0\n        const keys = Array.from(this.keys())\n        const values = Array.from(this.values())\n        return makeIterable<[T, T]>({\n            next() {\n                const index = nextIndex\n                nextIndex += 1\n                return index < values.length\n                    ? { value: [keys[index], values[index]], done: false }\n                    : { done: true }\n            }\n        } as any)\n    }\n\n    keys(): IterableIterator<T> {\n        return this.values()\n    }\n\n    values(): IterableIterator<T> {\n        this.atom_.reportObserved()\n        const self = this\n        let nextIndex = 0\n        const observableValues = Array.from(this.data_.values())\n        return makeIterable<T>({\n            next() {\n                return nextIndex < observableValues.length\n                    ? { value: self.dehanceValue_(observableValues[nextIndex++]), done: false }\n                    : { done: true }\n            }\n        } as any)\n    }\n\n    replace(other: ObservableSet<T> | IObservableSetInitialValues<T>): ObservableSet<T> {\n        if (isObservableSet(other)) {\n            other = new Set(other)\n        }\n\n        transaction(() => {\n            if (Array.isArray(other)) {\n                this.clear()\n                other.forEach(value => this.add(value))\n            } else if (isES6Set(other)) {\n                this.clear()\n                other.forEach(value => this.add(value))\n            } else if (other !== null && other !== undefined) {\n                die(\"Cannot initialize set from \" + other)\n            }\n        })\n\n        return this\n    }\n    observe_(listener: (changes: ISetDidChange<T>) => void, fireImmediately?: boolean): Lambda {\n        // ... 'fireImmediately' could also be true?\n        if (__DEV__ && fireImmediately === true) {\n            die(\"`observe` doesn't support fireImmediately=true in combination with sets.\")\n        }\n        return registerListener(this, listener)\n    }\n\n    intercept_(handler: IInterceptor<ISetWillChange<T>>): Lambda {\n        return registerInterceptor(this, handler)\n    }\n\n    toJSON(): T[] {\n        return Array.from(this)\n    }\n\n    toString(): string {\n        return \"[object ObservableSet]\"\n    }\n\n    [Symbol.iterator]() {\n        return this.values()\n    }\n\n    get [Symbol.toStringTag]() {\n        return \"Set\"\n    }\n}\n\n// eslint-disable-next-line\nexport var isObservableSet = createInstanceofPredicate(\"ObservableSet\", ObservableSet) as (\n    thing: any\n) => thing is ObservableSet<any>\n","import {\n    CreateObservableOptions,\n    getAnnotationFromOptions,\n    propagateChanged,\n    isAnnotation,\n    $mobx,\n    Atom,\n    Annotation,\n    ComputedValue,\n    IAtom,\n    IComputedValueOptions,\n    IEnhancer,\n    IInterceptable,\n    IListenable,\n    Lambda,\n    ObservableValue,\n    addHiddenProp,\n    createInstanceofPredicate,\n    endBatch,\n    getNextId,\n    hasInterceptors,\n    hasListeners,\n    interceptChange,\n    isObject,\n    isPlainObject,\n    isSpyEnabled,\n    notifyListeners,\n    referenceEnhancer,\n    registerInterceptor,\n    registerListener,\n    spyReportEnd,\n    spyReportStart,\n    startBatch,\n    stringifyKey,\n    globalState,\n    ADD,\n    UPDATE,\n    die,\n    hasProp,\n    getDescriptor,\n    storedAnnotationsSymbol,\n    ownKeys,\n    isOverride,\n    defineProperty,\n    autoAnnotation,\n    getAdministration,\n    getDebugName,\n    objectPrototype,\n    MakeResult\n} from \"../internal\"\n\nconst descriptorCache = Object.create(null)\n\nexport type IObjectDidChange<T = any> = {\n    observableKind: \"object\"\n    name: PropertyKey\n    object: T\n    debugObjectName: string\n} & (\n    | {\n          type: \"add\"\n          newValue: any\n      }\n    | {\n          type: \"update\"\n          oldValue: any\n          newValue: any\n      }\n    | {\n          type: \"remove\"\n          oldValue: any\n      }\n)\n\nexport type IObjectWillChange<T = any> =\n    | {\n          object: T\n          type: \"update\" | \"add\"\n          name: PropertyKey\n          newValue: any\n      }\n    | {\n          object: T\n          type: \"remove\"\n          name: PropertyKey\n      }\n\nconst REMOVE = \"remove\"\n\nexport class ObservableObjectAdministration\n    implements IInterceptable<IObjectWillChange>, IListenable\n{\n    keysAtom_: IAtom\n    changeListeners_\n    interceptors_\n    proxy_: any\n    isPlainObject_: boolean\n    appliedAnnotations_?: object\n    private pendingKeys_: undefined | Map<PropertyKey, ObservableValue<boolean>>\n\n    constructor(\n        public target_: any,\n        public values_ = new Map<PropertyKey, ObservableValue<any> | ComputedValue<any>>(),\n        public name_: string,\n        // Used anytime annotation is not explicitely provided\n        public defaultAnnotation_: Annotation = autoAnnotation\n    ) {\n        this.keysAtom_ = new Atom(__DEV__ ? `${this.name_}.keys` : \"ObservableObject.keys\")\n        // Optimization: we use this frequently\n        this.isPlainObject_ = isPlainObject(this.target_)\n        if (__DEV__ && !isAnnotation(this.defaultAnnotation_)) {\n            die(`defaultAnnotation must be valid annotation`)\n        }\n        if (__DEV__) {\n            // Prepare structure for tracking which fields were already annotated\n            this.appliedAnnotations_ = {}\n        }\n    }\n\n    getObservablePropValue_(key: PropertyKey): any {\n        return this.values_.get(key)!.get()\n    }\n\n    setObservablePropValue_(key: PropertyKey, newValue): boolean | null {\n        const observable = this.values_.get(key)\n        if (observable instanceof ComputedValue) {\n            observable.set(newValue)\n            return true\n        }\n\n        // intercept\n        if (hasInterceptors(this)) {\n            const change = interceptChange<IObjectWillChange>(this, {\n                type: UPDATE,\n                object: this.proxy_ || this.target_,\n                name: key,\n                newValue\n            })\n            if (!change) {\n                return null\n            }\n            newValue = (change as any).newValue\n        }\n        newValue = (observable as any).prepareNewValue_(newValue)\n\n        // notify spy & observers\n        if (newValue !== globalState.UNCHANGED) {\n            const notify = hasListeners(this)\n            const notifySpy = __DEV__ && isSpyEnabled()\n            const change: IObjectDidChange | null =\n                notify || notifySpy\n                    ? {\n                          type: UPDATE,\n                          observableKind: \"object\",\n                          debugObjectName: this.name_,\n                          object: this.proxy_ || this.target_,\n                          oldValue: (observable as any).value_,\n                          name: key,\n                          newValue\n                      }\n                    : null\n\n            if (__DEV__ && notifySpy) {\n                spyReportStart(change!)\n            }\n            ;(observable as ObservableValue<any>).setNewValue_(newValue)\n            if (notify) {\n                notifyListeners(this, change)\n            }\n            if (__DEV__ && notifySpy) {\n                spyReportEnd()\n            }\n        }\n        return true\n    }\n\n    get_(key: PropertyKey): any {\n        if (globalState.trackingDerivation && !hasProp(this.target_, key)) {\n            // Key doesn't exist yet, subscribe for it in case it's added later\n            this.has_(key)\n        }\n        return this.target_[key]\n    }\n\n    /**\n     * @param {PropertyKey} key\n     * @param {any} value\n     * @param {Annotation|boolean} annotation true - use default annotation, false - copy as is\n     * @param {boolean} proxyTrap whether it's called from proxy trap\n     * @returns {boolean|null} true on success, false on failure (proxyTrap + non-configurable), null when cancelled by interceptor\n     */\n    set_(key: PropertyKey, value: any, proxyTrap: boolean = false): boolean | null {\n        // Don't use .has(key) - we care about own\n        if (hasProp(this.target_, key)) {\n            // Existing prop\n            if (this.values_.has(key)) {\n                // Observable (can be intercepted)\n                return this.setObservablePropValue_(key, value)\n            } else if (proxyTrap) {\n                // Non-observable - proxy\n                return Reflect.set(this.target_, key, value)\n            } else {\n                // Non-observable\n                this.target_[key] = value\n                return true\n            }\n        } else {\n            // New prop\n            return this.extend_(\n                key,\n                { value, enumerable: true, writable: true, configurable: true },\n                this.defaultAnnotation_,\n                proxyTrap\n            )\n        }\n    }\n\n    // Trap for \"in\"\n    has_(key: PropertyKey): boolean {\n        if (!globalState.trackingDerivation) {\n            // Skip key subscription outside derivation\n            return key in this.target_\n        }\n        this.pendingKeys_ ||= new Map()\n        let entry = this.pendingKeys_.get(key)\n        if (!entry) {\n            entry = new ObservableValue(\n                key in this.target_,\n                referenceEnhancer,\n                __DEV__ ? `${this.name_}.${stringifyKey(key)}?` : \"ObservableObject.key?\",\n                false\n            )\n            this.pendingKeys_.set(key, entry)\n        }\n        return entry.get()\n    }\n\n    /**\n     * @param {PropertyKey} key\n     * @param {Annotation|boolean} annotation true - use default annotation, false - ignore prop\n     */\n    make_(key: PropertyKey, annotation: Annotation | boolean): void {\n        if (annotation === true) {\n            annotation = this.defaultAnnotation_\n        }\n        if (annotation === false) {\n            return\n        }\n        assertAnnotable(this, annotation, key)\n        if (!(key in this.target_)) {\n            // Throw on missing key, except for decorators:\n            // Decorator annotations are collected from whole prototype chain.\n            // When called from super() some props may not exist yet.\n            // However we don't have to worry about missing prop,\n            // because the decorator must have been applied to something.\n            if (this.target_[storedAnnotationsSymbol]?.[key]) {\n                return // will be annotated by subclass constructor\n            } else {\n                die(1, annotation.annotationType_, `${this.name_}.${key.toString()}`)\n            }\n        }\n        let source = this.target_\n        while (source && source !== objectPrototype) {\n            const descriptor = getDescriptor(source, key)\n            if (descriptor) {\n                const outcome = annotation.make_(this, key, descriptor, source)\n                if (outcome === MakeResult.Cancel) {\n                    return\n                }\n                if (outcome === MakeResult.Break) {\n                    break\n                }\n            }\n            source = Object.getPrototypeOf(source)\n        }\n        recordAnnotationApplied(this, annotation, key)\n    }\n\n    /**\n     * @param {PropertyKey} key\n     * @param {PropertyDescriptor} descriptor\n     * @param {Annotation|boolean} annotation true - use default annotation, false - copy as is\n     * @param {boolean} proxyTrap whether it's called from proxy trap\n     * @returns {boolean|null} true on success, false on failure (proxyTrap + non-configurable), null when cancelled by interceptor\n     */\n    extend_(\n        key: PropertyKey,\n        descriptor: PropertyDescriptor,\n        annotation: Annotation | boolean,\n        proxyTrap: boolean = false\n    ): boolean | null {\n        if (annotation === true) {\n            annotation = this.defaultAnnotation_\n        }\n        if (annotation === false) {\n            return this.defineProperty_(key, descriptor, proxyTrap)\n        }\n        assertAnnotable(this, annotation, key)\n        const outcome = annotation.extend_(this, key, descriptor, proxyTrap)\n        if (outcome) {\n            recordAnnotationApplied(this, annotation, key)\n        }\n        return outcome\n    }\n\n    /**\n     * @param {PropertyKey} key\n     * @param {PropertyDescriptor} descriptor\n     * @param {boolean} proxyTrap whether it's called from proxy trap\n     * @returns {boolean|null} true on success, false on failure (proxyTrap + non-configurable), null when cancelled by interceptor\n     */\n    defineProperty_(\n        key: PropertyKey,\n        descriptor: PropertyDescriptor,\n        proxyTrap: boolean = false\n    ): boolean | null {\n        try {\n            startBatch()\n\n            // Delete\n            const deleteOutcome = this.delete_(key)\n            if (!deleteOutcome) {\n                // Failure or intercepted\n                return deleteOutcome\n            }\n\n            // ADD interceptor\n            if (hasInterceptors(this)) {\n                const change = interceptChange<IObjectWillChange>(this, {\n                    object: this.proxy_ || this.target_,\n                    name: key,\n                    type: ADD,\n                    newValue: descriptor.value\n                })\n                if (!change) {\n                    return null\n                }\n                const { newValue } = change as any\n                if (descriptor.value !== newValue) {\n                    descriptor = {\n                        ...descriptor,\n                        value: newValue\n                    }\n                }\n            }\n\n            // Define\n            if (proxyTrap) {\n                if (!Reflect.defineProperty(this.target_, key, descriptor)) {\n                    return false\n                }\n            } else {\n                defineProperty(this.target_, key, descriptor)\n            }\n\n            // Notify\n            this.notifyPropertyAddition_(key, descriptor.value)\n        } finally {\n            endBatch()\n        }\n        return true\n    }\n\n    // If original descriptor becomes relevant, move this to annotation directly\n    defineObservableProperty_(\n        key: PropertyKey,\n        value: any,\n        enhancer: IEnhancer<any>,\n        proxyTrap: boolean = false\n    ): boolean | null {\n        try {\n            startBatch()\n\n            // Delete\n            const deleteOutcome = this.delete_(key)\n            if (!deleteOutcome) {\n                // Failure or intercepted\n                return deleteOutcome\n            }\n\n            // ADD interceptor\n            if (hasInterceptors(this)) {\n                const change = interceptChange<IObjectWillChange>(this, {\n                    object: this.proxy_ || this.target_,\n                    name: key,\n                    type: ADD,\n                    newValue: value\n                })\n                if (!change) {\n                    return null\n                }\n                value = (change as any).newValue\n            }\n\n            const cachedDescriptor = getCachedObservablePropDescriptor(key)\n            const descriptor = {\n                configurable: globalState.safeDescriptors ? this.isPlainObject_ : true,\n                enumerable: true,\n                get: cachedDescriptor.get,\n                set: cachedDescriptor.set\n            }\n\n            // Define\n            if (proxyTrap) {\n                if (!Reflect.defineProperty(this.target_, key, descriptor)) {\n                    return false\n                }\n            } else {\n                defineProperty(this.target_, key, descriptor)\n            }\n\n            const observable = new ObservableValue(\n                value,\n                enhancer,\n                __DEV__ ? `${this.name_}.${key.toString()}` : \"ObservableObject.key\",\n                false\n            )\n\n            this.values_.set(key, observable)\n\n            // Notify (value possibly changed by ObservableValue)\n            this.notifyPropertyAddition_(key, observable.value_)\n        } finally {\n            endBatch()\n        }\n        return true\n    }\n\n    // If original descriptor becomes relevant, move this to annotation directly\n    defineComputedProperty_(\n        key: PropertyKey,\n        options: IComputedValueOptions<any>,\n        proxyTrap: boolean = false\n    ): boolean | null {\n        try {\n            startBatch()\n\n            // Delete\n            const deleteOutcome = this.delete_(key)\n            if (!deleteOutcome) {\n                // Failure or intercepted\n                return deleteOutcome\n            }\n\n            // ADD interceptor\n            if (hasInterceptors(this)) {\n                const change = interceptChange<IObjectWillChange>(this, {\n                    object: this.proxy_ || this.target_,\n                    name: key,\n                    type: ADD,\n                    newValue: undefined\n                })\n                if (!change) {\n                    return null\n                }\n            }\n            options.name ||= __DEV__ ? `${this.name_}.${key.toString()}` : \"ObservableObject.key\"\n            options.context = this.proxy_ || this.target_\n            const cachedDescriptor = getCachedObservablePropDescriptor(key)\n            const descriptor = {\n                configurable: globalState.safeDescriptors ? this.isPlainObject_ : true,\n                enumerable: false,\n                get: cachedDescriptor.get,\n                set: cachedDescriptor.set\n            }\n\n            // Define\n            if (proxyTrap) {\n                if (!Reflect.defineProperty(this.target_, key, descriptor)) {\n                    return false\n                }\n            } else {\n                defineProperty(this.target_, key, descriptor)\n            }\n\n            this.values_.set(key, new ComputedValue(options))\n\n            // Notify\n            this.notifyPropertyAddition_(key, undefined)\n        } finally {\n            endBatch()\n        }\n        return true\n    }\n\n    /**\n     * @param {PropertyKey} key\n     * @param {PropertyDescriptor} descriptor\n     * @param {boolean} proxyTrap whether it's called from proxy trap\n     * @returns {boolean|null} true on success, false on failure (proxyTrap + non-configurable), null when cancelled by interceptor\n     */\n    delete_(key: PropertyKey, proxyTrap: boolean = false): boolean | null {\n        // No such prop\n        if (!hasProp(this.target_, key)) {\n            return true\n        }\n\n        // Intercept\n        if (hasInterceptors(this)) {\n            const change = interceptChange<IObjectWillChange>(this, {\n                object: this.proxy_ || this.target_,\n                name: key,\n                type: REMOVE\n            })\n            // Cancelled\n            if (!change) {\n                return null\n            }\n        }\n\n        // Delete\n        try {\n            startBatch()\n            const notify = hasListeners(this)\n            const notifySpy = __DEV__ && isSpyEnabled()\n            const observable = this.values_.get(key)\n            // Value needed for spies/listeners\n            let value = undefined\n            // Optimization: don't pull the value unless we will need it\n            if (!observable && (notify || notifySpy)) {\n                value = getDescriptor(this.target_, key)?.value\n            }\n            // delete prop (do first, may fail)\n            if (proxyTrap) {\n                if (!Reflect.deleteProperty(this.target_, key)) {\n                    return false\n                }\n            } else {\n                delete this.target_[key]\n            }\n            // Allow re-annotating this field\n            if (__DEV__) {\n                delete this.appliedAnnotations_![key]\n            }\n            // Clear observable\n            if (observable) {\n                this.values_.delete(key)\n                // for computed, value is undefined\n                if (observable instanceof ObservableValue) {\n                    value = observable.value_\n                }\n                // Notify: autorun(() => obj[key]), see #1796\n                propagateChanged(observable)\n            }\n            // Notify \"keys/entries/values\" observers\n            this.keysAtom_.reportChanged()\n\n            // Notify \"has\" observers\n            // \"in\" as it may still exist in proto\n            this.pendingKeys_?.get(key)?.set(key in this.target_)\n\n            // Notify spies/listeners\n            if (notify || notifySpy) {\n                const change: IObjectDidChange = {\n                    type: REMOVE,\n                    observableKind: \"object\",\n                    object: this.proxy_ || this.target_,\n                    debugObjectName: this.name_,\n                    oldValue: value,\n                    name: key\n                }\n                if (__DEV__ && notifySpy) {\n                    spyReportStart(change!)\n                }\n                if (notify) {\n                    notifyListeners(this, change)\n                }\n                if (__DEV__ && notifySpy) {\n                    spyReportEnd()\n                }\n            }\n        } finally {\n            endBatch()\n        }\n        return true\n    }\n\n    /**\n     * Observes this object. Triggers for the events 'add', 'update' and 'delete'.\n     * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/observe\n     * for callback details\n     */\n    observe_(callback: (changes: IObjectDidChange) => void, fireImmediately?: boolean): Lambda {\n        if (__DEV__ && fireImmediately === true) {\n            die(\"`observe` doesn't support the fire immediately property for observable objects.\")\n        }\n        return registerListener(this, callback)\n    }\n\n    intercept_(handler): Lambda {\n        return registerInterceptor(this, handler)\n    }\n\n    notifyPropertyAddition_(key: PropertyKey, value: any) {\n        const notify = hasListeners(this)\n        const notifySpy = __DEV__ && isSpyEnabled()\n        if (notify || notifySpy) {\n            const change: IObjectDidChange | null =\n                notify || notifySpy\n                    ? ({\n                          type: ADD,\n                          observableKind: \"object\",\n                          debugObjectName: this.name_,\n                          object: this.proxy_ || this.target_,\n                          name: key,\n                          newValue: value\n                      } as const)\n                    : null\n\n            if (__DEV__ && notifySpy) {\n                spyReportStart(change!)\n            }\n            if (notify) {\n                notifyListeners(this, change)\n            }\n            if (__DEV__ && notifySpy) {\n                spyReportEnd()\n            }\n        }\n\n        this.pendingKeys_?.get(key)?.set(true)\n\n        // Notify \"keys/entries/values\" observers\n        this.keysAtom_.reportChanged()\n    }\n\n    ownKeys_(): ArrayLike<string | symbol> {\n        this.keysAtom_.reportObserved()\n        return ownKeys(this.target_)\n    }\n\n    keys_(): PropertyKey[] {\n        // Returns enumerable && own, but unfortunately keysAtom will report on ANY key change.\n        // There is no way to distinguish between Object.keys(object) and Reflect.ownKeys(object) - both are handled by ownKeys trap.\n        // We can either over-report in Object.keys(object) or under-report in Reflect.ownKeys(object)\n        // We choose to over-report in Object.keys(object), because:\n        // - typically it's used with simple data objects\n        // - when symbolic/non-enumerable keys are relevant Reflect.ownKeys works as expected\n        this.keysAtom_.reportObserved()\n        return Object.keys(this.target_)\n    }\n}\n\nexport interface IIsObservableObject {\n    $mobx: ObservableObjectAdministration\n}\n\nexport function asObservableObject(\n    target: any,\n    options?: CreateObservableOptions\n): IIsObservableObject {\n    if (__DEV__ && options && isObservableObject(target)) {\n        die(`Options can't be provided for already observable objects.`)\n    }\n\n    if (hasProp(target, $mobx)) {\n        if (__DEV__ && !(getAdministration(target) instanceof ObservableObjectAdministration)) {\n            die(\n                `Cannot convert '${getDebugName(target)}' into observable object:` +\n                    `\\nThe target is already observable of different type.` +\n                    `\\nExtending builtins is not supported.`\n            )\n        }\n        return target\n    }\n\n    if (__DEV__ && !Object.isExtensible(target)) {\n        die(\"Cannot make the designated object observable; it is not extensible\")\n    }\n\n    const name =\n        options?.name ??\n        (__DEV__\n            ? `${\n                  isPlainObject(target) ? \"ObservableObject\" : target.constructor.name\n              }@${getNextId()}`\n            : \"ObservableObject\")\n\n    const adm = new ObservableObjectAdministration(\n        target,\n        new Map(),\n        String(name),\n        getAnnotationFromOptions(options)\n    )\n\n    addHiddenProp(target, $mobx, adm)\n\n    return target\n}\n\nconst isObservableObjectAdministration = createInstanceofPredicate(\n    \"ObservableObjectAdministration\",\n    ObservableObjectAdministration\n)\n\nfunction getCachedObservablePropDescriptor(key) {\n    return (\n        descriptorCache[key] ||\n        (descriptorCache[key] = {\n            get() {\n                return this[$mobx].getObservablePropValue_(key)\n            },\n            set(value) {\n                return this[$mobx].setObservablePropValue_(key, value)\n            }\n        })\n    )\n}\n\nexport function isObservableObject(thing: any): boolean {\n    if (isObject(thing)) {\n        return isObservableObjectAdministration((thing as any)[$mobx])\n    }\n    return false\n}\n\nexport function recordAnnotationApplied(\n    adm: ObservableObjectAdministration,\n    annotation: Annotation,\n    key: PropertyKey\n) {\n    if (__DEV__) {\n        adm.appliedAnnotations_![key] = annotation\n    }\n    // Remove applied decorator annotation so we don't try to apply it again in subclass constructor\n    delete adm.target_[storedAnnotationsSymbol]?.[key]\n}\n\nfunction assertAnnotable(\n    adm: ObservableObjectAdministration,\n    annotation: Annotation,\n    key: PropertyKey\n) {\n    // Valid annotation\n    if (__DEV__ && !isAnnotation(annotation)) {\n        die(`Cannot annotate '${adm.name_}.${key.toString()}': Invalid annotation.`)\n    }\n\n    /*\n    // Configurable, not sealed, not frozen\n    // Possibly not needed, just a little better error then the one thrown by engine.\n    // Cases where this would be useful the most (subclass field initializer) are not interceptable by this.\n    if (__DEV__) {\n        const configurable = getDescriptor(adm.target_, key)?.configurable\n        const frozen = Object.isFrozen(adm.target_)\n        const sealed = Object.isSealed(adm.target_)\n        if (!configurable || frozen || sealed) {\n            const fieldName = `${adm.name_}.${key.toString()}`\n            const requestedAnnotationType = annotation.annotationType_\n            let error = `Cannot apply '${requestedAnnotationType}' to '${fieldName}':`\n            if (frozen) {\n                error += `\\nObject is frozen.`\n            }\n            if (sealed) {\n                error += `\\nObject is sealed.`\n            }\n            if (!configurable) {\n                error += `\\nproperty is not configurable.`\n                // Mention only if caused by us to avoid confusion\n                if (hasProp(adm.appliedAnnotations!, key)) {\n                    error += `\\nTo prevent accidental re-definition of a field by a subclass, `\n                    error += `all annotated fields of non-plain objects (classes) are not configurable.`\n                }\n            }\n            die(error)\n        }\n    }\n    */\n\n    // Not annotated\n    if (__DEV__ && !isOverride(annotation) && hasProp(adm.appliedAnnotations_!, key)) {\n        const fieldName = `${adm.name_}.${key.toString()}`\n        const currentAnnotationType = adm.appliedAnnotations_![key].annotationType_\n        const requestedAnnotationType = annotation.annotationType_\n        die(\n            `Cannot apply '${requestedAnnotationType}' to '${fieldName}':` +\n                `\\nThe field is already annotated with '${currentAnnotationType}'.` +\n                `\\nRe-annotating fields is not allowed.` +\n                `\\nUse 'override' annotation for methods overridden by subclass.`\n        )\n    }\n}\n","import {\n    getNextId,\n    addHiddenFinalProp,\n    allowStateChangesStart,\n    allowStateChangesEnd,\n    makeIterable,\n    addHiddenProp,\n    ObservableArrayAdministration,\n    $mobx,\n    arrayExtensions,\n    IEnhancer,\n    isObservableArray,\n    IObservableArray,\n    defineProperty\n} from \"../internal\"\n\n// Bug in safari 9.* (or iOS 9 safari mobile). See #364\nconst ENTRY_0 = createArrayEntryDescriptor(0)\n\nconst safariPrototypeSetterInheritanceBug = (() => {\n    let v = false\n    const p = {}\n    Object.defineProperty(p, \"0\", {\n        set: () => {\n            v = true\n        }\n    })\n    Object.create(p)[\"0\"] = 1\n    return v === false\n})()\n\n/**\n * This array buffer contains two lists of properties, so that all arrays\n * can recycle their property definitions, which significantly improves performance of creating\n * properties on the fly.\n */\nlet OBSERVABLE_ARRAY_BUFFER_SIZE = 0\n\n// Typescript workaround to make sure ObservableArray extends Array\nclass StubArray {}\nfunction inherit(ctor, proto) {\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(ctor.prototype, proto)\n    } else if (ctor.prototype.__proto__ !== undefined) {\n        ctor.prototype.__proto__ = proto\n    } else {\n        ctor.prototype = proto\n    }\n}\ninherit(StubArray, Array.prototype)\n\n// Weex proto freeze protection was here,\n// but it is unclear why the hack is need as MobX never changed the prototype\n// anyway, so removed it in V6\n\nclass LegacyObservableArray<T> extends StubArray {\n    constructor(\n        initialValues: T[] | undefined,\n        enhancer: IEnhancer<T>,\n        name = __DEV__ ? \"ObservableArray@\" + getNextId() : \"ObservableArray\",\n        owned = false\n    ) {\n        super()\n\n        const adm = new ObservableArrayAdministration(name, enhancer, owned, true)\n        adm.proxy_ = this as any\n        addHiddenFinalProp(this, $mobx, adm)\n\n        if (initialValues && initialValues.length) {\n            const prev = allowStateChangesStart(true)\n            // @ts-ignore\n            this.spliceWithArray(0, 0, initialValues)\n            allowStateChangesEnd(prev)\n        }\n\n        if (safariPrototypeSetterInheritanceBug) {\n            // Seems that Safari won't use numeric prototype setter untill any * numeric property is\n            // defined on the instance. After that it works fine, even if this property is deleted.\n            Object.defineProperty(this, \"0\", ENTRY_0)\n        }\n    }\n\n    concat(...arrays: T[][]): T[] {\n        ;(this[$mobx] as ObservableArrayAdministration).atom_.reportObserved()\n        return Array.prototype.concat.apply(\n            (this as any).slice(),\n            //@ts-ignore\n            arrays.map(a => (isObservableArray(a) ? a.slice() : a))\n        )\n    }\n\n    get length(): number {\n        return (this[$mobx] as ObservableArrayAdministration).getArrayLength_()\n    }\n\n    set length(newLength: number) {\n        ;(this[$mobx] as ObservableArrayAdministration).setArrayLength_(newLength)\n    }\n\n    get [Symbol.toStringTag]() {\n        return \"Array\"\n    }\n\n    [Symbol.iterator]() {\n        const self = this\n        let nextIndex = 0\n        return makeIterable({\n            next() {\n                return nextIndex < self.length\n                    ? { value: self[nextIndex++], done: false }\n                    : { done: true, value: undefined }\n            }\n        })\n    }\n}\n\nObject.entries(arrayExtensions).forEach(([prop, fn]) => {\n    if (prop !== \"concat\") {\n        addHiddenProp(LegacyObservableArray.prototype, prop, fn)\n    }\n})\n\nfunction createArrayEntryDescriptor(index: number) {\n    return {\n        enumerable: false,\n        configurable: true,\n        get: function () {\n            return this[$mobx].get_(index)\n        },\n        set: function (value) {\n            this[$mobx].set_(index, value)\n        }\n    }\n}\n\nfunction createArrayBufferItem(index: number) {\n    defineProperty(LegacyObservableArray.prototype, \"\" + index, createArrayEntryDescriptor(index))\n}\n\nexport function reserveArrayBuffer(max: number) {\n    if (max > OBSERVABLE_ARRAY_BUFFER_SIZE) {\n        for (let index = OBSERVABLE_ARRAY_BUFFER_SIZE; index < max + 100; index++) {\n            createArrayBufferItem(index)\n        }\n        OBSERVABLE_ARRAY_BUFFER_SIZE = max\n    }\n}\n\nreserveArrayBuffer(1000)\n\nexport function createLegacyArray<T>(\n    initialValues: T[] | undefined,\n    enhancer: IEnhancer<T>,\n    name?: string\n): IObservableArray<T> {\n    return new LegacyObservableArray(initialValues, enhancer, name) as any\n}\n","import { isAction } from \"../api/action\"\nimport {\n    $mobx,\n    IDepTreeNode,\n    isAtom,\n    isComputedValue,\n    isObservableArray,\n    isObservableMap,\n    isObservableObject,\n    isReaction,\n    isObservableSet,\n    die,\n    isFunction\n} from \"../internal\"\n\nexport function getAtom(thing: any, property?: PropertyKey): IDepTreeNode {\n    if (typeof thing === \"object\" && thing !== null) {\n        if (isObservableArray(thing)) {\n            if (property !== undefined) {\n                die(23)\n            }\n            return (thing as any)[$mobx].atom_\n        }\n        if (isObservableSet(thing)) {\n            return (thing as any)[$mobx]\n        }\n        if (isObservableMap(thing)) {\n            if (property === undefined) {\n                return thing.keysAtom_\n            }\n            const observable = thing.data_.get(property) || thing.hasMap_.get(property)\n            if (!observable) {\n                die(25, property, getDebugName(thing))\n            }\n            return observable\n        }\n        if (property && !thing[$mobx]) {\n            thing[property]\n        } // See #1072\n        if (isObservableObject(thing)) {\n            if (!property) {\n                return die(26)\n            }\n            const observable = (thing as any)[$mobx].values_.get(property)\n            if (!observable) {\n                die(27, property, getDebugName(thing))\n            }\n            return observable\n        }\n        if (isAtom(thing) || isComputedValue(thing) || isReaction(thing)) {\n            return thing\n        }\n    } else if (isFunction(thing)) {\n        if (isReaction(thing[$mobx])) {\n            // disposer function\n            return thing[$mobx]\n        }\n    }\n    die(28)\n}\n\nexport function getAdministration(thing: any, property?: string) {\n    if (!thing) {\n        die(29)\n    }\n    if (property !== undefined) {\n        return getAdministration(getAtom(thing, property))\n    }\n    if (isAtom(thing) || isComputedValue(thing) || isReaction(thing)) {\n        return thing\n    }\n    if (isObservableMap(thing) || isObservableSet(thing)) {\n        return thing\n    }\n    if (thing[$mobx]) {\n        return thing[$mobx]\n    }\n    die(24, thing)\n}\n\nexport function getDebugName(thing: any, property?: string): string {\n    let named\n    if (property !== undefined) {\n        named = getAtom(thing, property)\n    } else if (isAction(thing)) {\n        return thing.name\n    } else if (isObservableObject(thing) || isObservableMap(thing) || isObservableSet(thing)) {\n        named = getAdministration(thing)\n    } else {\n        // valid for arrays as well\n        named = getAtom(thing)\n    }\n    return named.name_\n}\n","import {\n    isES6Map,\n    isObservableArray,\n    isObservableMap,\n    isES6Set,\n    isObservableSet,\n    hasProp,\n    isFunction,\n    objectPrototype\n} from \"../internal\"\n\ndeclare const Symbol\nconst toString = objectPrototype.toString\n\nexport function deepEqual(a: any, b: any, depth: number = -1): boolean {\n    return eq(a, b, depth)\n}\n\n// Copied from https://github.com/jashkenas/underscore/blob/5c237a7c682fb68fd5378203f0bf22dce1624854/underscore.js#L1186-L1289\n// Internal recursive comparison function for `isEqual`.\nfunction eq(a: any, b: any, depth: number, aStack?: any[], bStack?: any[]) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) {\n        return a !== 0 || 1 / a === 1 / b\n    }\n    // `null` or `undefined` only equal to itself (strict comparison).\n    if (a == null || b == null) {\n        return false\n    }\n    // `NaN`s are equivalent, but non-reflexive.\n    if (a !== a) {\n        return b !== b\n    }\n    // Exhaust primitive checks\n    const type = typeof a\n    if (type !== \"function\" && type !== \"object\" && typeof b != \"object\") {\n        return false\n    }\n\n    // Compare `[[Class]]` names.\n    const className = toString.call(a)\n    if (className !== toString.call(b)) {\n        return false\n    }\n    switch (className) {\n        // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n        case \"[object RegExp]\":\n        // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n        case \"[object String]\":\n            // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n            // equivalent to `new String(\"5\")`.\n            return \"\" + a === \"\" + b\n        case \"[object Number]\":\n            // `NaN`s are equivalent, but non-reflexive.\n            // Object(NaN) is equivalent to NaN.\n            if (+a !== +a) {\n                return +b !== +b\n            }\n            // An `egal` comparison is performed for other numeric values.\n            return +a === 0 ? 1 / +a === 1 / b : +a === +b\n        case \"[object Date]\":\n        case \"[object Boolean]\":\n            // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n            // millisecond representations. Note that invalid dates with millisecond representations\n            // of `NaN` are not equivalent.\n            return +a === +b\n        case \"[object Symbol]\":\n            return (\n                typeof Symbol !== \"undefined\" && Symbol.valueOf.call(a) === Symbol.valueOf.call(b)\n            )\n        case \"[object Map]\":\n        case \"[object Set]\":\n            // Maps and Sets are unwrapped to arrays of entry-pairs, adding an incidental level.\n            // Hide this extra level by increasing the depth.\n            if (depth >= 0) {\n                depth++\n            }\n            break\n    }\n    // Unwrap any wrapped objects.\n    a = unwrap(a)\n    b = unwrap(b)\n\n    const areArrays = className === \"[object Array]\"\n    if (!areArrays) {\n        if (typeof a != \"object\" || typeof b != \"object\") {\n            return false\n        }\n\n        // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n        // from different frames are.\n        const aCtor = a.constructor,\n            bCtor = b.constructor\n        if (\n            aCtor !== bCtor &&\n            !(\n                isFunction(aCtor) &&\n                aCtor instanceof aCtor &&\n                isFunction(bCtor) &&\n                bCtor instanceof bCtor\n            ) &&\n            \"constructor\" in a &&\n            \"constructor\" in b\n        ) {\n            return false\n        }\n    }\n\n    if (depth === 0) {\n        return false\n    } else if (depth < 0) {\n        depth = -1\n    }\n\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || []\n    bStack = bStack || []\n    let length = aStack.length\n    while (length--) {\n        // Linear search. Performance is inversely proportional to the number of\n        // unique nested structures.\n        if (aStack[length] === a) {\n            return bStack[length] === b\n        }\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a)\n    bStack.push(b)\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n        // Compare array lengths to determine if a deep comparison is necessary.\n        length = a.length\n        if (length !== b.length) {\n            return false\n        }\n        // Deep compare the contents, ignoring non-numeric properties.\n        while (length--) {\n            if (!eq(a[length], b[length], depth - 1, aStack, bStack)) {\n                return false\n            }\n        }\n    } else {\n        // Deep compare objects.\n        const keys = Object.keys(a)\n        let key\n        length = keys.length\n        // Ensure that both objects contain the same number of properties before comparing deep equality.\n        if (Object.keys(b).length !== length) {\n            return false\n        }\n        while (length--) {\n            // Deep compare each member\n            key = keys[length]\n            if (!(hasProp(b, key) && eq(a[key], b[key], depth - 1, aStack, bStack))) {\n                return false\n            }\n        }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop()\n    bStack.pop()\n    return true\n}\n\nfunction unwrap(a: any) {\n    if (isObservableArray(a)) {\n        return a.slice()\n    }\n    if (isES6Map(a) || isObservableMap(a)) {\n        return Array.from(a.entries())\n    }\n    if (isES6Set(a) || isObservableSet(a)) {\n        return Array.from(a.entries())\n    }\n    return a\n}\n","export function makeIterable<T>(iterator: Iterator<T>): IterableIterator<T> {\n    iterator[Symbol.iterator] = getSelf\n    return iterator as any\n}\n\nfunction getSelf() {\n    return this\n}\n","import { ObservableObjectAdministration, isFunction } from \"../internal\"\n\nexport const enum MakeResult {\n    Cancel,\n    Break,\n    Continue\n}\n\nexport type Annotation = {\n    annotationType_: string\n    make_(\n        adm: ObservableObjectAdministration,\n        key: PropertyKey,\n        descriptor: PropertyDescriptor,\n        source: object\n    ): MakeResult\n    extend_(\n        adm: ObservableObjectAdministration,\n        key: PropertyKey,\n        descriptor: PropertyDescriptor,\n        proxyTrap: boolean\n    ): boolean | null\n    options_?: any\n}\n\nexport type AnnotationMapEntry =\n    | Annotation\n    | true /* follow the default decorator, usually deep */\n    | false /* don't decorate this property */\n\n// AdditionalFields can be used to declare additional keys that can be used, for example to be able to\n// declare annotations for private/ protected members, see #2339\nexport type AnnotationsMap<T, AdditionalFields extends PropertyKey> = {\n    [P in Exclude<keyof T, \"toString\">]?: AnnotationMapEntry\n} & Record<AdditionalFields, AnnotationMapEntry>\n\nexport function isAnnotation(thing: any) {\n    return (\n        // Can be function\n        thing instanceof Object &&\n        typeof thing.annotationType_ === \"string\" &&\n        isFunction(thing.make_) &&\n        isFunction(thing.extend_)\n    )\n}\n\nexport function isAnnotationMapEntry(thing: any) {\n    return typeof thing === \"boolean\" || isAnnotation(thing)\n}\n","/**\n * (c) Michel Weststrate 2015 - 2020\n * MIT Licensed\n *\n * Welcome to the mobx sources! To get a global overview of how MobX internally works,\n * this is a good place to start:\n * https://medium.com/@mweststrate/becoming-fully-reactive-an-in-depth-explanation-of-mobservable-55995262a254#.xvbh6qd74\n *\n * Source folders:\n * ===============\n *\n * - api/     Most of the public static methods exposed by the module can be found here.\n * - core/    Implementation of the MobX algorithm; atoms, derivations, reactions, dependency trees, optimizations. Cool stuff can be found here.\n * - types/   All the magic that is need to have observable objects, arrays and values is in this folder. Including the modifiers like `asFlat`.\n * - utils/   Utility stuff.\n *\n */\nimport { die } from \"./errors\"\nimport { getGlobal } from \"./utils/global\"\n;[\"Symbol\", \"Map\", \"Set\"].forEach(m => {\n    let g = getGlobal()\n    if (typeof g[m] === \"undefined\") {\n        die(`MobX requires global '${m}' to be available or polyfilled`)\n    }\n})\n\nimport { spy, getDebugName, $mobx } from \"./internal\"\n\nexport {\n    IObservable,\n    IDepTreeNode,\n    Reaction,\n    IReactionPublic,\n    IReactionDisposer,\n    untracked,\n    IAtom,\n    createAtom,\n    spy,\n    IComputedValue,\n    IEqualsComparer,\n    comparer,\n    IEnhancer,\n    IInterceptable,\n    IInterceptor,\n    IListenable,\n    IObjectWillChange,\n    IObjectDidChange,\n    isObservableObject,\n    IValueDidChange,\n    IValueWillChange,\n    IObservableValue,\n    isObservableValue as isBoxedObservable,\n    IObservableArray,\n    IArrayWillChange,\n    IArrayWillSplice,\n    IArraySplice,\n    IArrayUpdate,\n    IArrayDidChange,\n    isObservableArray,\n    IKeyValueMap,\n    ObservableMap,\n    IMapEntries,\n    IMapEntry,\n    IMapWillChange,\n    IMapDidChange,\n    isObservableMap,\n    IObservableMapInitialValues,\n    ObservableSet,\n    isObservableSet,\n    ISetDidChange,\n    ISetWillChange,\n    IObservableSetInitialValues,\n    transaction,\n    observable,\n    IObservableFactory,\n    CreateObservableOptions,\n    computed,\n    IComputedFactory,\n    isObservable,\n    isObservableProp,\n    isComputed,\n    isComputedProp,\n    extendObservable,\n    observe,\n    intercept,\n    autorun,\n    IAutorunOptions,\n    reaction,\n    IReactionOptions,\n    when,\n    IWhenOptions,\n    action,\n    isAction,\n    runInAction,\n    IActionFactory,\n    keys,\n    values,\n    entries,\n    set,\n    remove,\n    has,\n    get,\n    apiOwnKeys as ownKeys,\n    apiDefineProperty as defineProperty,\n    configure,\n    onBecomeObserved,\n    onBecomeUnobserved,\n    flow,\n    isFlow,\n    flowResult,\n    FlowCancellationError,\n    isFlowCancellationError,\n    toJS,\n    trace,\n    IObserverTree,\n    IDependencyTree,\n    getDependencyTree,\n    getObserverTree,\n    resetGlobalState as _resetGlobalState,\n    getGlobalState as _getGlobalState,\n    getDebugName,\n    getAtom,\n    getAdministration as _getAdministration,\n    allowStateChanges as _allowStateChanges,\n    runInAction as _allowStateChangesInsideComputed, // This has become the default behavior in Mobx 6\n    Lambda,\n    $mobx,\n    isComputingDerivation as _isComputingDerivation,\n    onReactionError,\n    interceptReads as _interceptReads,\n    IComputedValueOptions,\n    IActionRunInfo,\n    _startAction,\n    _endAction,\n    allowStateReadsStart as _allowStateReadsStart,\n    allowStateReadsEnd as _allowStateReadsEnd,\n    makeObservable,\n    makeAutoObservable,\n    autoAction as _autoAction,\n    AnnotationsMap,\n    AnnotationMapEntry,\n    override\n} from \"./internal\"\n\n// Devtools support\ndeclare const __MOBX_DEVTOOLS_GLOBAL_HOOK__: { injectMobx: (any) => void }\nif (typeof __MOBX_DEVTOOLS_GLOBAL_HOOK__ === \"object\") {\n    // See: https://github.com/andykog/mobx-devtools/\n    __MOBX_DEVTOOLS_GLOBAL_HOOK__.injectMobx({\n        spy,\n        extras: {\n            getDebugName\n        },\n        $mobx\n    })\n}\n","'use strict';\n\nfunction parsePath(text) {\n  return text.split('.')\n}\n\nfunction push(arr, el) {\n  const newArr = arr.slice();\n  newArr.push(el);\n  return newArr;\n}\n\n// names of the traps that can be registered with ES6's Proxy object\nconst trapNames = [\n  'apply',\n  'construct',\n  'defineProperty',\n  'deleteProperty',\n  'enumerate',\n  'get',\n  'getOwnPropertyDescriptor',\n  'getPrototypeOf',\n  'has',\n  'isExtensible',\n  'ownKeys',\n  'preventExtensions',\n  'set',\n  'setPrototypeOf',\n]\n\n// a list of paramer indexes that indicate that the a recieves a key at that parameter\n// this information will be used to update the path accordingly\nconst keys = {\n  get: 1,\n  set: 1,\n  deleteProperty: 1,\n  has: 1,\n  defineProperty: 1,\n  getOwnPropertyDescriptor: 1,\n}\n\nfunction DeepProxy(rootTarget, traps, options) {\n\n  let path = [];\n  let userData = {};\n\n  if (options !== undefined && typeof options.path !== 'undefined') {\n    path = parsePath(options.path)\n  }\n  if (options !== undefined && typeof options.userData !== 'undefined') {\n    userData = options.userData\n  }\n\n  function createProxy(target, path) {\n\n    // avoid creating a new object between two traps\n    const context = { rootTarget, path };\n    Object.assign(context, userData);\n\n    const realTraps = {};\n\n    for (const trapName of trapNames) {\n      const keyParamIdx = keys[trapName]\n          , trap = traps[trapName];\n\n      if (typeof trap !== 'undefined') {\n\n        if (typeof keyParamIdx !== 'undefined') {\n\n          realTraps[trapName] = function () {\n\n            const key = arguments[keyParamIdx];\n\n            // update context for this trap\n            context.nest = function (nestedTarget) {\n              if (nestedTarget === undefined)\n                nestedTarget = rootTarget;\n              return createProxy(nestedTarget, push(path, key)); \n            }\n\n            return trap.apply(context, arguments);\n          }\n        } else {\n\n          realTraps[trapName] = function () {\n\n            // update context for this trap\n            context.nest = function (nestedTarget) {\n              if (nestedTarget === undefined)\n                nestedTarget = {};\n              return createProxy(nestedTarget, path);\n            }\n\n            return trap.apply(context, arguments);\n          }\n        }\n      }\n    }\n\n    return new Proxy(target, realTraps);\n  }\n\n  return createProxy(rootTarget, path);\n\n}\n\nmodule.exports = DeepProxy;\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","/**\n * Returns true if the object is a function.\n * @param value The value to check\n */\nexport function isFunction(value: any): value is (...args: any[]) => any {\n  return typeof value === 'function';\n}\n","/**\n * Used to create Error subclasses until the community moves away from ES5.\n *\n * This is because compiling from TypeScript down to ES5 has issues with subclassing Errors\n * as well as other built-in types: https://github.com/Microsoft/TypeScript/issues/12123\n *\n * @param createImpl A factory function to create the actual constructor implementation. The returned\n * function should be a named function that calls `_super` internally.\n */\nexport function createErrorClass<T>(createImpl: (_super: any) => any): T {\n  const _super = (instance: any) => {\n    Error.call(instance);\n    instance.stack = new Error().stack;\n  };\n\n  const ctorFunc = createImpl(_super);\n  ctorFunc.prototype = Object.create(Error.prototype);\n  ctorFunc.prototype.constructor = ctorFunc;\n  return ctorFunc;\n}\n","import { createErrorClass } from './createErrorClass';\n\nexport interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (errors: any[]): UnsubscriptionError;\n}\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = createErrorClass(\n  (_super) =>\n    function UnsubscriptionErrorImpl(this: any, errors: (Error | string)[]) {\n      _super(this);\n      this.message = errors\n        ? `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}`\n        : '';\n      this.name = 'UnsubscriptionError';\n      this.errors = errors;\n    }\n);\n","/**\n * Removes an item from an array, mutating it.\n * @param arr The array to remove the item from\n * @param item The item to remove\n */\nexport function arrRemove<T>(arr: T[] | undefined | null, item: T) {\n  if (arr) {\n    const index = arr.indexOf(item);\n    0 <= index && arr.splice(index, 1);\n  }\n}\n","import { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic, Unsubscribable } from './types';\nimport { arrRemove } from './util/arrRemove';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements SubscriptionLike {\n  /** @nocollapse */\n  public static EMPTY = (() => {\n    const empty = new Subscription();\n    empty.closed = true;\n    return empty;\n  })();\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   */\n  public closed = false;\n\n  private _parentage: Subscription[] | Subscription | null = null;\n\n  /**\n   * The list of registered finalizers to execute upon unsubscription. Adding and removing from this\n   * list occurs in the {@link #add} and {@link #remove} methods.\n   */\n  private _finalizers: Exclude<TeardownLogic, void>[] | null = null;\n\n  /**\n   * @param initialTeardown A function executed first as part of the finalization\n   * process that is kicked off when {@link #unsubscribe} is called.\n   */\n  constructor(private initialTeardown?: () => void) {}\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let errors: any[] | undefined;\n\n    if (!this.closed) {\n      this.closed = true;\n\n      // Remove this from it's parents.\n      const { _parentage } = this;\n      if (_parentage) {\n        this._parentage = null;\n        if (Array.isArray(_parentage)) {\n          for (const parent of _parentage) {\n            parent.remove(this);\n          }\n        } else {\n          _parentage.remove(this);\n        }\n      }\n\n      const { initialTeardown: initialFinalizer } = this;\n      if (isFunction(initialFinalizer)) {\n        try {\n          initialFinalizer();\n        } catch (e) {\n          errors = e instanceof UnsubscriptionError ? e.errors : [e];\n        }\n      }\n\n      const { _finalizers } = this;\n      if (_finalizers) {\n        this._finalizers = null;\n        for (const finalizer of _finalizers) {\n          try {\n            execFinalizer(finalizer);\n          } catch (err) {\n            errors = errors ?? [];\n            if (err instanceof UnsubscriptionError) {\n              errors = [...errors, ...err.errors];\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n\n      if (errors) {\n        throw new UnsubscriptionError(errors);\n      }\n    }\n  }\n\n  /**\n   * Adds a finalizer to this subscription, so that finalization will be unsubscribed/called\n   * when this subscription is unsubscribed. If this subscription is already {@link #closed},\n   * because it has already been unsubscribed, then whatever finalizer is passed to it\n   * will automatically be executed (unless the finalizer itself is also a closed subscription).\n   *\n   * Closed Subscriptions cannot be added as finalizers to any subscription. Adding a closed\n   * subscription to a any subscription will result in no operation. (A noop).\n   *\n   * Adding a subscription to itself, or adding `null` or `undefined` will not perform any\n   * operation at all. (A noop).\n   *\n   * `Subscription` instances that are added to this instance will automatically remove themselves\n   * if they are unsubscribed. Functions and {@link Unsubscribable} objects that you wish to remove\n   * will need to be removed manually with {@link #remove}\n   *\n   * @param teardown The finalization logic to add to this subscription.\n   */\n  add(teardown: TeardownLogic): void {\n    // Only add the finalizer if it's not undefined\n    // and don't add a subscription to itself.\n    if (teardown && teardown !== this) {\n      if (this.closed) {\n        // If this subscription is already closed,\n        // execute whatever finalizer is handed to it automatically.\n        execFinalizer(teardown);\n      } else {\n        if (teardown instanceof Subscription) {\n          // We don't add closed subscriptions, and we don't add the same subscription\n          // twice. Subscription unsubscribe is idempotent.\n          if (teardown.closed || teardown._hasParent(this)) {\n            return;\n          }\n          teardown._addParent(this);\n        }\n        (this._finalizers = this._finalizers ?? []).push(teardown);\n      }\n    }\n  }\n\n  /**\n   * Checks to see if a this subscription already has a particular parent.\n   * This will signal that this subscription has already been added to the parent in question.\n   * @param parent the parent to check for\n   */\n  private _hasParent(parent: Subscription) {\n    const { _parentage } = this;\n    return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\n  }\n\n  /**\n   * Adds a parent to this subscription so it can be removed from the parent if it\n   * unsubscribes on it's own.\n   *\n   * NOTE: THIS ASSUMES THAT {@link _hasParent} HAS ALREADY BEEN CHECKED.\n   * @param parent The parent subscription to add\n   */\n  private _addParent(parent: Subscription) {\n    const { _parentage } = this;\n    this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n  }\n\n  /**\n   * Called on a child when it is removed via {@link #remove}.\n   * @param parent The parent to remove\n   */\n  private _removeParent(parent: Subscription) {\n    const { _parentage } = this;\n    if (_parentage === parent) {\n      this._parentage = null;\n    } else if (Array.isArray(_parentage)) {\n      arrRemove(_parentage, parent);\n    }\n  }\n\n  /**\n   * Removes a finalizer from this subscription that was previously added with the {@link #add} method.\n   *\n   * Note that `Subscription` instances, when unsubscribed, will automatically remove themselves\n   * from every other `Subscription` they have been added to. This means that using the `remove` method\n   * is not a common thing and should be used thoughtfully.\n   *\n   * If you add the same finalizer instance of a function or an unsubscribable object to a `Subcription` instance\n   * more than once, you will need to call `remove` the same number of times to remove all instances.\n   *\n   * All finalizer instances are removed to free up memory upon unsubscription.\n   *\n   * @param teardown The finalizer to remove from this subscription\n   */\n  remove(teardown: Exclude<TeardownLogic, void>): void {\n    const { _finalizers } = this;\n    _finalizers && arrRemove(_finalizers, teardown);\n\n    if (teardown instanceof Subscription) {\n      teardown._removeParent(this);\n    }\n  }\n}\n\nexport const EMPTY_SUBSCRIPTION = Subscription.EMPTY;\n\nexport function isSubscription(value: any): value is Subscription {\n  return (\n    value instanceof Subscription ||\n    (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe))\n  );\n}\n\nfunction execFinalizer(finalizer: Unsubscribable | (() => void)) {\n  if (isFunction(finalizer)) {\n    finalizer();\n  } else {\n    finalizer.unsubscribe();\n  }\n}\n","import { Subscriber } from './Subscriber';\nimport { ObservableNotification } from './types';\n\n/**\n * The {@link GlobalConfig} object for RxJS. It is used to configure things\n * like how to react on unhandled errors.\n */\nexport const config: GlobalConfig = {\n  onUnhandledError: null,\n  onStoppedNotification: null,\n  Promise: undefined,\n  useDeprecatedSynchronousErrorHandling: false,\n  useDeprecatedNextContext: false,\n};\n\n/**\n * The global configuration object for RxJS, used to configure things\n * like how to react on unhandled errors. Accessible via {@link config}\n * object.\n */\nexport interface GlobalConfig {\n  /**\n   * A registration point for unhandled errors from RxJS. These are errors that\n   * cannot were not handled by consuming code in the usual subscription path. For\n   * example, if you have this configured, and you subscribe to an observable without\n   * providing an error handler, errors from that subscription will end up here. This\n   * will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onUnhandledError: ((err: any) => void) | null;\n\n  /**\n   * A registration point for notifications that cannot be sent to subscribers because they\n   * have completed, errored or have been explicitly unsubscribed. By default, next, complete\n   * and error notifications sent to stopped subscribers are noops. However, sometimes callers\n   * might want a different behavior. For example, with sources that attempt to report errors\n   * to stopped subscribers, a caller can configure RxJS to throw an unhandled error instead.\n   * This will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onStoppedNotification: ((notification: ObservableNotification<any>, subscriber: Subscriber<any>) => void) | null;\n\n  /**\n   * The promise constructor used by default for {@link Observable#toPromise toPromise} and {@link Observable#forEach forEach}\n   * methods.\n   *\n   * @deprecated As of version 8, RxJS will no longer support this sort of injection of a\n   * Promise constructor. If you need a Promise implementation other than native promises,\n   * please polyfill/patch Promise as you see appropriate. Will be removed in v8.\n   */\n  Promise?: PromiseConstructorLike;\n\n  /**\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n   * call in a try/catch block. It also enables producer interference, a nasty bug\n   * where a multicast can be broken for all observers by a downstream consumer with\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BUY TIME\n   * FOR MIGRATION REASONS.\n   *\n   * @deprecated As of version 8, RxJS will no longer support synchronous throwing\n   * of unhandled errors. All errors will be thrown on a separate call stack to prevent bad\n   * behaviors described above. Will be removed in v8.\n   */\n  useDeprecatedSynchronousErrorHandling: boolean;\n\n  /**\n   * If true, enables an as-of-yet undocumented feature from v5: The ability to access\n   * `unsubscribe()` via `this` context in `next` functions created in observers passed\n   * to `subscribe`.\n   *\n   * This is being removed because the performance was severely problematic, and it could also cause\n   * issues when types other than POJOs are passed to subscribe as subscribers, as they will likely have\n   * their `this` context overwritten.\n   *\n   * @deprecated As of version 8, RxJS will no longer support altering the\n   * context of next functions provided as part of an observer to Subscribe. Instead,\n   * you will have access to a subscription or a signal or token that will allow you to do things like\n   * unsubscribe and test closed status. Will be removed in v8.\n   */\n  useDeprecatedNextContext: boolean;\n}\n","import type { TimerHandle } from './timerHandle';\ntype SetTimeoutFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\ntype ClearTimeoutFunction = (handle: TimerHandle) => void;\n\ninterface TimeoutProvider {\n  setTimeout: SetTimeoutFunction;\n  clearTimeout: ClearTimeoutFunction;\n  delegate:\n    | {\n        setTimeout: SetTimeoutFunction;\n        clearTimeout: ClearTimeoutFunction;\n      }\n    | undefined;\n}\n\nexport const timeoutProvider: TimeoutProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setTimeout(handler: () => void, timeout?: number, ...args) {\n    const { delegate } = timeoutProvider;\n    if (delegate?.setTimeout) {\n      return delegate.setTimeout(handler, timeout, ...args);\n    }\n    return setTimeout(handler, timeout, ...args);\n  },\n  clearTimeout(handle) {\n    const { delegate } = timeoutProvider;\n    return (delegate?.clearTimeout || clearTimeout)(handle as any);\n  },\n  delegate: undefined,\n};\n","import { config } from '../config';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\n\n/**\n * Handles an error on another job either with the user-configured {@link onUnhandledError},\n * or by throwing it on that new job so it can be picked up by `window.onerror`, `process.on('error')`, etc.\n *\n * This should be called whenever there is an error that is out-of-band with the subscription\n * or when an error hits a terminal boundary of the subscription and no error handler was provided.\n *\n * @param err the error to report\n */\nexport function reportUnhandledError(err: any) {\n  timeoutProvider.setTimeout(() => {\n    const { onUnhandledError } = config;\n    if (onUnhandledError) {\n      // Execute the user-configured error handler.\n      onUnhandledError(err);\n    } else {\n      // Throw so it is picked up by the runtime's uncaught error mechanism.\n      throw err;\n    }\n  });\n}\n","/* tslint:disable:no-empty */\nexport function noop() { }\n","import { CompleteNotification, NextNotification, ErrorNotification } from './types';\n\n/**\n * A completion object optimized for memory use and created to be the\n * same \"shape\" as other notifications in v8.\n * @internal\n */\nexport const COMPLETE_NOTIFICATION = (() => createNotification('C', undefined, undefined) as CompleteNotification)();\n\n/**\n * Internal use only. Creates an optimized error notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function errorNotification(error: any): ErrorNotification {\n  return createNotification('E', undefined, error) as any;\n}\n\n/**\n * Internal use only. Creates an optimized next notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function nextNotification<T>(value: T) {\n  return createNotification('N', value, undefined) as NextNotification<T>;\n}\n\n/**\n * Ensures that all notifications created internally have the same \"shape\" in v8.\n *\n * TODO: This is only exported to support a crazy legacy test in `groupBy`.\n * @internal\n */\nexport function createNotification(kind: 'N' | 'E' | 'C', value: any, error: any) {\n  return {\n    kind,\n    value,\n    error,\n  };\n}\n","import { config } from '../config';\n\nlet context: { errorThrown: boolean; error: any } | null = null;\n\n/**\n * Handles dealing with errors for super-gross mode. Creates a context, in which\n * any synchronously thrown errors will be passed to {@link captureError}. Which\n * will record the error such that it will be rethrown after the call back is complete.\n * TODO: Remove in v8\n * @param cb An immediately executed function.\n */\nexport function errorContext(cb: () => void) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    const isRoot = !context;\n    if (isRoot) {\n      context = { errorThrown: false, error: null };\n    }\n    cb();\n    if (isRoot) {\n      const { errorThrown, error } = context!;\n      context = null;\n      if (errorThrown) {\n        throw error;\n      }\n    }\n  } else {\n    // This is the general non-deprecated path for everyone that\n    // isn't crazy enough to use super-gross mode (useDeprecatedSynchronousErrorHandling)\n    cb();\n  }\n}\n\n/**\n * Captures errors only in super-gross mode.\n * @param err the error to capture\n */\nexport function captureError(err: any) {\n  if (config.useDeprecatedSynchronousErrorHandling && context) {\n    context.errorThrown = true;\n    context.error = err;\n  }\n}\n","import { isFunction } from './util/isFunction';\nimport { Observer, ObservableNotification } from './types';\nimport { isSubscription, Subscription } from './Subscription';\nimport { config } from './config';\nimport { reportUnhandledError } from './util/reportUnhandledError';\nimport { noop } from './util/noop';\nimport { nextNotification, errorNotification, COMPLETE_NOTIFICATION } from './NotificationFactories';\nimport { timeoutProvider } from './scheduler/timeoutProvider';\nimport { captureError } from './util/errorContext';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param next The `next` callback of an Observer.\n   * @param error The `error` callback of an\n   * Observer.\n   * @param complete The `complete` callback of an\n   * Observer.\n   * @return A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @nocollapse\n   * @deprecated Do not use. Will be removed in v8. There is no replacement for this\n   * method, and there is no reason to be creating instances of `Subscriber` directly.\n   * If you have a specific use case, please file an issue.\n   */\n  static create<T>(next?: (x?: T) => void, error?: (e?: any) => void, complete?: () => void): Subscriber<T> {\n    return new SafeSubscriber(next, error, complete);\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected isStopped: boolean = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected destination: Subscriber<any> | Observer<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * There is no reason to directly create an instance of Subscriber. This type is exported for typings reasons.\n   */\n  constructor(destination?: Subscriber<any> | Observer<any>) {\n    super();\n    if (destination) {\n      this.destination = destination;\n      // Automatically chain subscriptions together here.\n      // if destination is a Subscription, then it is a Subscriber.\n      if (isSubscription(destination)) {\n        destination.add(this);\n      }\n    } else {\n      this.destination = EMPTY_OBSERVER;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (this.isStopped) {\n      handleStoppedNotification(nextNotification(value), this);\n    } else {\n      this._next(value!);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (this.isStopped) {\n      handleStoppedNotification(errorNotification(err), this);\n    } else {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (this.isStopped) {\n      handleStoppedNotification(COMPLETE_NOTIFICATION, this);\n    } else {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (!this.closed) {\n      this.isStopped = true;\n      super.unsubscribe();\n      this.destination = null!;\n    }\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    try {\n      this.destination.error(err);\n    } finally {\n      this.unsubscribe();\n    }\n  }\n\n  protected _complete(): void {\n    try {\n      this.destination.complete();\n    } finally {\n      this.unsubscribe();\n    }\n  }\n}\n\n/**\n * This bind is captured here because we want to be able to have\n * compatibility with monoid libraries that tend to use a method named\n * `bind`. In particular, a library called Monio requires this.\n */\nconst _bind = Function.prototype.bind;\n\nfunction bind<Fn extends (...args: any[]) => any>(fn: Fn, thisArg: any): Fn {\n  return _bind.call(fn, thisArg);\n}\n\n/**\n * Internal optimization only, DO NOT EXPOSE.\n * @internal\n */\nclass ConsumerObserver<T> implements Observer<T> {\n  constructor(private partialObserver: Partial<Observer<T>>) {}\n\n  next(value: T): void {\n    const { partialObserver } = this;\n    if (partialObserver.next) {\n      try {\n        partialObserver.next(value);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n\n  error(err: any): void {\n    const { partialObserver } = this;\n    if (partialObserver.error) {\n      try {\n        partialObserver.error(err);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    } else {\n      handleUnhandledError(err);\n    }\n  }\n\n  complete(): void {\n    const { partialObserver } = this;\n    if (partialObserver.complete) {\n      try {\n        partialObserver.complete();\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n}\n\nexport class SafeSubscriber<T> extends Subscriber<T> {\n  constructor(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((e?: any) => void) | null,\n    complete?: (() => void) | null\n  ) {\n    super();\n\n    let partialObserver: Partial<Observer<T>>;\n    if (isFunction(observerOrNext) || !observerOrNext) {\n      // The first argument is a function, not an observer. The next\n      // two arguments *could* be observers, or they could be empty.\n      partialObserver = {\n        next: (observerOrNext ?? undefined) as (((value: T) => void) | undefined),\n        error: error ?? undefined,\n        complete: complete ?? undefined,\n      };\n    } else {\n      // The first argument is a partial observer.\n      let context: any;\n      if (this && config.useDeprecatedNextContext) {\n        // This is a deprecated path that made `this.unsubscribe()` available in\n        // next handler functions passed to subscribe. This only exists behind a flag\n        // now, as it is *very* slow.\n        context = Object.create(observerOrNext);\n        context.unsubscribe = () => this.unsubscribe();\n        partialObserver = {\n          next: observerOrNext.next && bind(observerOrNext.next, context),\n          error: observerOrNext.error && bind(observerOrNext.error, context),\n          complete: observerOrNext.complete && bind(observerOrNext.complete, context),\n        };\n      } else {\n        // The \"normal\" path. Just use the partial observer directly.\n        partialObserver = observerOrNext;\n      }\n    }\n\n    // Wrap the partial observer to ensure it's a full observer, and\n    // make sure proper error handling is accounted for.\n    this.destination = new ConsumerObserver(partialObserver);\n  }\n}\n\nfunction handleUnhandledError(error: any) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    captureError(error);\n  } else {\n    // Ideal path, we report this as an unhandled error,\n    // which is thrown on a new call stack.\n    reportUnhandledError(error);\n  }\n}\n\n/**\n * An error handler used when no error handler was supplied\n * to the SafeSubscriber -- meaning no error handler was supplied\n * do the `subscribe` call on our observable.\n * @param err The error to handle\n */\nfunction defaultErrorHandler(err: any) {\n  throw err;\n}\n\n/**\n * A handler for notifications that cannot be sent to a stopped subscriber.\n * @param notification The notification being sent\n * @param subscriber The stopped subscriber\n */\nfunction handleStoppedNotification(notification: ObservableNotification<any>, subscriber: Subscriber<any>) {\n  const { onStoppedNotification } = config;\n  onStoppedNotification && timeoutProvider.setTimeout(() => onStoppedNotification(notification, subscriber));\n}\n\n/**\n * The observer used as a stub for subscriptions where the user did not\n * pass any arguments to `subscribe`. Comes with the default error handling\n * behavior.\n */\nexport const EMPTY_OBSERVER: Readonly<Observer<any>> & { closed: true } = {\n  closed: true,\n  next: noop,\n  error: defaultErrorHandler,\n  complete: noop,\n};\n","/** Symbol.observable or a string \"@@observable\". Used for interop */\nexport const observable: string | symbol = (() => (typeof Symbol === 'function' && Symbol.observable) || '@@observable')();\n","/**\n * This function takes one parameter and just returns it. Simply put,\n * this is like `<T>(x: T): T => x`.\n *\n * ## Examples\n *\n * This is useful in some cases when using things like `mergeMap`\n *\n * ```ts\n * import { interval, take, map, range, mergeMap, identity } from 'rxjs';\n *\n * const source$ = interval(1000).pipe(take(5));\n *\n * const result$ = source$.pipe(\n *   map(i => range(i)),\n *   mergeMap(identity) // same as mergeMap(x => x)\n * );\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * Or when you want to selectively apply an operator\n *\n * ```ts\n * import { interval, take, identity } from 'rxjs';\n *\n * const shouldLimit = () => Math.random() < 0.5;\n *\n * const source$ = interval(1000);\n *\n * const result$ = source$.pipe(shouldLimit() ? take(5) : identity);\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * @param x Any value that is returned by this function\n * @returns The value passed as the first parameter to this function\n */\nexport function identity<T>(x: T): T {\n  return x;\n}\n","import { identity } from './identity';\nimport { UnaryFunction } from '../types';\n\nexport function pipe(): typeof identity;\nexport function pipe<T, A>(fn1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>\n): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>\n): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>\n): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>\n): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>\n): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>\n): UnaryFunction<T, I>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>,\n  ...fns: UnaryFunction<any, any>[]\n): UnaryFunction<T, unknown>;\n\n/**\n * pipe() can be called on one or more functions, each of which can take one argument (\"UnaryFunction\")\n * and uses it to return a value.\n * It returns a function that takes one argument, passes it to the first UnaryFunction, and then\n * passes the result to the next one, passes that result to the next one, and so on.  \n */\nexport function pipe(...fns: Array<UnaryFunction<any, any>>): UnaryFunction<any, any> {\n  return pipeFromArray(fns);\n}\n\n/** @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (fns.length === 0) {\n    return identity as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n","import { Operator } from './Operator';\nimport { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription, Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, Subscribable, Observer } from './types';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  source: Observable<any> | undefined;\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  operator: Operator<any, T> | undefined;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new Observable by calling the Observable constructor\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new observable\n   * @nocollapse\n   * @deprecated Use `new Observable()` instead. Will be removed in v8.\n   */\n  static create: (...args: any[]) => any = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  };\n\n  /**\n   * Creates a new Observable, with this Observable instance as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param operator the operator defining the operation to take on the observable\n   * @return a new observable with the Operator applied\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * If you have implemented an operator using `lift`, it is recommended that you create an\n   * operator by simply returning `new Observable()` directly. See \"Creating new operators from\n   * scratch\" section here: https://rxjs.dev/guide/operators\n   */\n  lift<R>(operator?: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observer?: Partial<Observer<T>>): Subscription;\n  subscribe(next: (value: T) => void): Subscription;\n  /** @deprecated Instead of passing separate callback arguments, use an observer argument. Signatures taking separate callback arguments will be removed in v8. Details: https://rxjs.dev/deprecations/subscribe-arguments */\n  subscribe(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular, do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided and an error happens,\n   * it will be thrown asynchronously. Errors thrown asynchronously cannot be caught using `try`/`catch`. Instead,\n   * use the {@link onUnhandledError} configuration option or use a runtime handler (like `window.onerror` or\n   * `process.on('error)`) to be notified of unhandled errors. Because of this, it's recommended that you provide\n   * an `error` method to avoid missing thrown errors.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of an Observer,\n   * if you do not need to listen for something, you can omit a function by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to the `error` function, as with an Observer, if not provided, errors emitted by an Observable will be thrown asynchronously.\n   *\n   * You can, however, subscribe with no parameters at all. This may be the case where you're not interested in terminal events\n   * and you also handled emissions internally by using operators (e.g. using `tap`).\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * #### Examples\n   *\n   * Subscribe with an {@link guide/observer Observer}\n   *\n   * ```ts\n   * import { of } from 'rxjs';\n   *\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() {\n   *     // We actually could just remove this method,\n   *     // since we do not really care about errors right now.\n   *   },\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   *   .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Subscribe with functions ({@link deprecations/subscribe-arguments deprecated})\n   *\n   * ```ts\n   * import { of } from 'rxjs'\n   *\n   * let sum = 0;\n   *\n   * of(1, 2, 3).subscribe(\n   *   value => {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   () => console.log('Sum equals: ' + sum)\n   * );\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Cancel a subscription\n   *\n   * ```ts\n   * import { interval } from 'rxjs';\n   *\n   * const subscription = interval(1000).subscribe({\n   *   next(num) {\n   *     console.log(num)\n   *   },\n   *   complete() {\n   *     // Will not be called, even when cancelling subscription.\n   *     console.log('completed!');\n   *   }\n   * });\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // 'unsubscribed!' after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   * or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   * Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   * the error will be thrown asynchronously as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {Subscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((error: any) => void) | null,\n    complete?: (() => void) | null\n  ): Subscription {\n    const subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n\n    errorContext(() => {\n      const { operator, source } = this;\n      subscriber.add(\n        operator\n          ? // We're dealing with a subscription in the\n            // operator chain to one of our lifted operators.\n            operator.call(subscriber, source)\n          : source\n          ? // If `source` has a value, but `operator` does not, something that\n            // had intimate knowledge of our API, like our `Subject`, must have\n            // set it. We're going to just call `_subscribe` directly.\n            this._subscribe(subscriber)\n          : // In all other cases, we're likely wrapping a user-provided initializer\n            // function, so we need to catch errors and handle them appropriately.\n            this._trySubscribe(subscriber)\n      );\n    });\n\n    return subscriber;\n  }\n\n  /** @internal */\n  protected _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      // We don't need to return anything in this case,\n      // because it's just going to try to `add()` to a subscription\n      // above.\n      sink.error(err);\n    }\n  }\n\n  /**\n   * Used as a NON-CANCELLABLE means of subscribing to an observable, for use with\n   * APIs that expect promises, like `async/await`. You cannot unsubscribe from this.\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * #### Example\n   *\n   * ```ts\n   * import { interval, take } from 'rxjs';\n   *\n   * const source$ = interval(1000).pipe(take(4));\n   *\n   * async function getTotal() {\n   *   let total = 0;\n   *\n   *   await source$.forEach(value => {\n   *     total += value;\n   *     console.log('observable -> ' + value);\n   *   });\n   *\n   *   return total;\n   * }\n   *\n   * getTotal().then(\n   *   total => console.log('Total: ' + total)\n   * );\n   *\n   * // Expected:\n   * // 'observable -> 0'\n   * // 'observable -> 1'\n   * // 'observable -> 2'\n   * // 'observable -> 3'\n   * // 'Total: 6'\n   * ```\n   *\n   * @param next a handler for each value emitted by the observable\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void): Promise<void>;\n\n  /**\n   * @param next a handler for each value emitted by the observable\n   * @param promiseCtor a constructor function used to instantiate the Promise\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   * @deprecated Passing a Promise constructor will no longer be available\n   * in upcoming versions of RxJS. This is because it adds weight to the library, for very\n   * little benefit. If you need this functionality, it is recommended that you either\n   * polyfill Promise, or you create an adapter to convert the returned native promise\n   * to whatever promise implementation you wanted. Will be removed in v8.\n   */\n  forEach(next: (value: T) => void, promiseCtor: PromiseConstructorLike): Promise<void>;\n\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      const subscriber = new SafeSubscriber<T>({\n        next: (value) => {\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscriber.unsubscribe();\n          }\n        },\n        error: reject,\n        complete: resolve,\n      });\n      this.subscribe(subscriber);\n    }) as Promise<void>;\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    return this.source?.subscribe(subscriber);\n  }\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>\n  ): Observable<D>;\n  pipe<A, B, C, D, E>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>\n  ): Observable<E>;\n  pipe<A, B, C, D, E, F>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>\n  ): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>\n  ): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>\n  ): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>\n  ): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>,\n    ...operations: OperatorFunction<any, any>[]\n  ): Observable<unknown>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ## Example\n   *\n   * ```ts\n   * import { interval, filter, map, scan } from 'rxjs';\n   *\n   * interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x));\n   * ```\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: typeof Promise): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: PromiseConstructorLike): Promise<T | undefined>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Subscribe to this Observable and get a Promise resolving on\n   * `complete` with the last emission (if any).\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * @method toPromise\n   * @param [promiseCtor] a constructor function used to instantiate\n   * the Promise\n   * @return A Promise that resolves with the last value emit, or\n   * rejects on an error. If there were no emissions, Promise\n   * resolves with undefined.\n   * @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise\n   */\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T | undefined> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: T | undefined;\n      this.subscribe(\n        (x: T) => (value = x),\n        (err: any) => reject(err),\n        () => resolve(value)\n      );\n    }) as Promise<T | undefined>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  return promiseCtor ?? config.Promise ?? Promise;\n}\n\nfunction isObserver<T>(value: any): value is Observer<T> {\n  return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\n\nfunction isSubscriber<T>(value: any): value is Subscriber<T> {\n  return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));\n}\n","import { createErrorClass } from './createErrorClass';\n\nexport interface ObjectUnsubscribedError extends Error {}\n\nexport interface ObjectUnsubscribedErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): ObjectUnsubscribedError;\n}\n\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor = createErrorClass(\n  (_super) =>\n    function ObjectUnsubscribedErrorImpl(this: any) {\n      _super(this);\n      this.name = 'ObjectUnsubscribedError';\n      this.message = 'object unsubscribed';\n    }\n);\n","import { Operator } from './Operator';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { Observer, SubscriptionLike, TeardownLogic } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A Subject is a special type of Observable that allows values to be\n * multicasted to many Observers. Subjects are like EventEmitters.\n *\n * Every Subject is an Observable and an Observer. You can subscribe to a\n * Subject, and you can call next to feed values as well as error and complete.\n */\nexport class Subject<T> extends Observable<T> implements SubscriptionLike {\n  closed = false;\n\n  private currentObservers: Observer<T>[] | null = null;\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  observers: Observer<T>[] = [];\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  isStopped = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  hasError = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  thrownError: any = null;\n\n  /**\n   * Creates a \"subject\" by basically gluing an observer to an observable.\n   *\n   * @nocollapse\n   * @deprecated Recommended you do not use. Will be removed at some point in the future. Plans for replacement still under discussion.\n   */\n  static create: (...args: any[]) => any = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  };\n\n  constructor() {\n    // NOTE: This must be here to obscure Observable's constructor.\n    super();\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = operator as any;\n    return subject as any;\n  }\n\n  /** @internal */\n  protected _throwIfClosed() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n  }\n\n  next(value: T) {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        if (!this.currentObservers) {\n          this.currentObservers = Array.from(this.observers);\n        }\n        for (const observer of this.currentObservers) {\n          observer.next(value);\n        }\n      }\n    });\n  }\n\n  error(err: any) {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        this.hasError = this.isStopped = true;\n        this.thrownError = err;\n        const { observers } = this;\n        while (observers.length) {\n          observers.shift()!.error(err);\n        }\n      }\n    });\n  }\n\n  complete() {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        this.isStopped = true;\n        const { observers } = this;\n        while (observers.length) {\n          observers.shift()!.complete();\n        }\n      }\n    });\n  }\n\n  unsubscribe() {\n    this.isStopped = this.closed = true;\n    this.observers = this.currentObservers = null!;\n  }\n\n  get observed() {\n    return this.observers?.length > 0;\n  }\n\n  /** @internal */\n  protected _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    this._throwIfClosed();\n    return super._trySubscribe(subscriber);\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    this._throwIfClosed();\n    this._checkFinalizedStatuses(subscriber);\n    return this._innerSubscribe(subscriber);\n  }\n\n  /** @internal */\n  protected _innerSubscribe(subscriber: Subscriber<any>) {\n    const { hasError, isStopped, observers } = this;\n    if (hasError || isStopped) {\n      return EMPTY_SUBSCRIPTION;\n    }\n    this.currentObservers = null;\n    observers.push(subscriber);\n    return new Subscription(() => {\n      this.currentObservers = null;\n      arrRemove(observers, subscriber);\n    });\n  }\n\n  /** @internal */\n  protected _checkFinalizedStatuses(subscriber: Subscriber<any>) {\n    const { hasError, thrownError, isStopped } = this;\n    if (hasError) {\n      subscriber.error(thrownError);\n    } else if (isStopped) {\n      subscriber.complete();\n    }\n  }\n\n  /**\n   * Creates a new Observable with this Subject as the source. You can do this\n   * to create customize Observer-side logic of the Subject and conceal it from\n   * code that uses the Observable.\n   * @return {Observable} Observable that the Subject casts to\n   */\n  asObservable(): Observable<T> {\n    const observable: any = new Observable<T>();\n    observable.source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(\n    /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n    public destination?: Observer<T>,\n    source?: Observable<T>\n  ) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    this.destination?.next?.(value);\n  }\n\n  error(err: any) {\n    this.destination?.error?.(err);\n  }\n\n  complete() {\n    this.destination?.complete?.();\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    return this.source?.subscribe(subscriber) ?? EMPTY_SUBSCRIPTION;\n  }\n}\n","import { TimestampProvider } from '../types';\n\ninterface DateTimestampProvider extends TimestampProvider {\n  delegate: TimestampProvider | undefined;\n}\n\nexport const dateTimestampProvider: DateTimestampProvider = {\n  now() {\n    // Use the variable rather than `this` so that the function can be called\n    // without being bound to the provider.\n    return (dateTimestampProvider.delegate || Date).now();\n  },\n  delegate: undefined,\n};\n","import { Subject } from './Subject';\nimport { TimestampProvider } from './types';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\n\n/**\n * A variant of {@link Subject} that \"replays\" old values to new subscribers by emitting them when they first subscribe.\n *\n * `ReplaySubject` has an internal buffer that will store a specified number of values that it has observed. Like `Subject`,\n * `ReplaySubject` \"observes\" values by having them passed to its `next` method. When it observes a value, it will store that\n * value for a time determined by the configuration of the `ReplaySubject`, as passed to its constructor.\n *\n * When a new subscriber subscribes to the `ReplaySubject` instance, it will synchronously emit all values in its buffer in\n * a First-In-First-Out (FIFO) manner. The `ReplaySubject` will also complete, if it has observed completion; and it will\n * error if it has observed an error.\n *\n * There are two main configuration items to be concerned with:\n *\n * 1. `bufferSize` - This will determine how many items are stored in the buffer, defaults to infinite.\n * 2. `windowTime` - The amount of time to hold a value in the buffer before removing it from the buffer.\n *\n * Both configurations may exist simultaneously. So if you would like to buffer a maximum of 3 values, as long as the values\n * are less than 2 seconds old, you could do so with a `new ReplaySubject(3, 2000)`.\n *\n * ### Differences with BehaviorSubject\n *\n * `BehaviorSubject` is similar to `new ReplaySubject(1)`, with a couple fo exceptions:\n *\n * 1. `BehaviorSubject` comes \"primed\" with a single value upon construction.\n * 2. `ReplaySubject` will replay values, even after observing an error, where `BehaviorSubject` will not.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n * @see {@link shareReplay}\n */\nexport class ReplaySubject<T> extends Subject<T> {\n  private _buffer: (T | number)[] = [];\n  private _infiniteTimeWindow = true;\n\n  /**\n   * @param bufferSize The size of the buffer to replay on subscription\n   * @param windowTime The amount of time the buffered items will say buffered\n   * @param timestampProvider An object with a `now()` method that provides the current timestamp. This is used to\n   * calculate the amount of time something has been buffered.\n   */\n  constructor(\n    private _bufferSize = Infinity,\n    private _windowTime = Infinity,\n    private _timestampProvider: TimestampProvider = dateTimestampProvider\n  ) {\n    super();\n    this._infiniteTimeWindow = _windowTime === Infinity;\n    this._bufferSize = Math.max(1, _bufferSize);\n    this._windowTime = Math.max(1, _windowTime);\n  }\n\n  next(value: T): void {\n    const { isStopped, _buffer, _infiniteTimeWindow, _timestampProvider, _windowTime } = this;\n    if (!isStopped) {\n      _buffer.push(value);\n      !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);\n    }\n    this._trimBuffer();\n    super.next(value);\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    this._throwIfClosed();\n    this._trimBuffer();\n\n    const subscription = this._innerSubscribe(subscriber);\n\n    const { _infiniteTimeWindow, _buffer } = this;\n    // We use a copy here, so reentrant code does not mutate our array while we're\n    // emitting it to a new subscriber.\n    const copy = _buffer.slice();\n    for (let i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {\n      subscriber.next(copy[i] as T);\n    }\n\n    this._checkFinalizedStatuses(subscriber);\n\n    return subscription;\n  }\n\n  private _trimBuffer() {\n    const { _bufferSize, _timestampProvider, _buffer, _infiniteTimeWindow } = this;\n    // If we don't have an infinite buffer size, and we're over the length,\n    // use splice to truncate the old buffer values off. Note that we have to\n    // double the size for instances where we're not using an infinite time window\n    // because we're storing the values and the timestamps in the same array.\n    const adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;\n    _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);\n\n    // Now, if we're not in an infinite time window, remove all values where the time is\n    // older than what is allowed.\n    if (!_infiniteTimeWindow) {\n      const now = _timestampProvider.now();\n      let last = 0;\n      // Search the array for the first timestamp that isn't expired and\n      // truncate the buffer up to that point.\n      for (let i = 1; i < _buffer.length && (_buffer[i] as number) <= now; i += 2) {\n        last = i;\n      }\n      last && _buffer.splice(0, last + 1);\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../types';\nimport { isFunction } from './isFunction';\n\n/**\n * Used to determine if an object is an Observable with a lift function.\n */\nexport function hasLift(source: any): source is { lift: InstanceType<typeof Observable>['lift'] } {\n  return isFunction(source?.lift);\n}\n\n/**\n * Creates an `OperatorFunction`. Used to define operators throughout the library in a concise way.\n * @param init The logic to connect the liftedSource to the subscriber at the moment of subscription.\n */\nexport function operate<T, R>(\n  init: (liftedSource: Observable<T>, subscriber: Subscriber<R>) => (() => void) | void\n): OperatorFunction<T, R> {\n  return (source: Observable<T>) => {\n    if (hasLift(source)) {\n      return source.lift(function (this: Subscriber<R>, liftedSource: Observable<T>) {\n        try {\n          return init(liftedSource, this);\n        } catch (err) {\n          this.error(err);\n        }\n      });\n    }\n    throw new TypeError('Unable to lift unknown Observable type');\n  };\n}\n","import { Subscriber } from '../Subscriber';\n\n/**\n * Creates an instance of an `OperatorSubscriber`.\n * @param destination The downstream subscriber.\n * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\n * error that occurs in this function is caught and sent to the `error` method of this subscriber.\n * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\n * and send to the `destination` error handler.\n * @param onComplete Handles completion notification from the subscription. Any errors that occur in\n * this handler are sent to the `destination` error handler.\n * @param onFinalize Additional teardown logic here. This will only be called on teardown if the\n * subscriber itself is not already closed. This is called after all other teardown logic is executed.\n */\nexport function createOperatorSubscriber<T>(\n  destination: Subscriber<any>,\n  onNext?: (value: T) => void,\n  onComplete?: () => void,\n  onError?: (err: any) => void,\n  onFinalize?: () => void\n): Subscriber<T> {\n  return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);\n}\n\n/**\n * A generic helper for allowing operators to be created with a Subscriber and\n * use closures to capture necessary state from the operator function itself.\n */\nexport class OperatorSubscriber<T> extends Subscriber<T> {\n  /**\n   * Creates an instance of an `OperatorSubscriber`.\n   * @param destination The downstream subscriber.\n   * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\n   * error that occurs in this function is caught and sent to the `error` method of this subscriber.\n   * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\n   * and send to the `destination` error handler.\n   * @param onComplete Handles completion notification from the subscription. Any errors that occur in\n   * this handler are sent to the `destination` error handler.\n   * @param onFinalize Additional finalization logic here. This will only be called on finalization if the\n   * subscriber itself is not already closed. This is called after all other finalization logic is executed.\n   * @param shouldUnsubscribe An optional check to see if an unsubscribe call should truly unsubscribe.\n   * NOTE: This currently **ONLY** exists to support the strange behavior of {@link groupBy}, where unsubscription\n   * to the resulting observable does not actually disconnect from the source if there are active subscriptions\n   * to any grouped observable. (DO NOT EXPOSE OR USE EXTERNALLY!!!)\n   */\n  constructor(\n    destination: Subscriber<any>,\n    onNext?: (value: T) => void,\n    onComplete?: () => void,\n    onError?: (err: any) => void,\n    private onFinalize?: () => void,\n    private shouldUnsubscribe?: () => boolean\n  ) {\n    // It's important - for performance reasons - that all of this class's\n    // members are initialized and that they are always initialized in the same\n    // order. This will ensure that all OperatorSubscriber instances have the\n    // same hidden class in V8. This, in turn, will help keep the number of\n    // hidden classes involved in property accesses within the base class as\n    // low as possible. If the number of hidden classes involved exceeds four,\n    // the property accesses will become megamorphic and performance penalties\n    // will be incurred - i.e. inline caches won't be used.\n    //\n    // The reasons for ensuring all instances have the same hidden class are\n    // further discussed in this blog post from Benedikt Meurer:\n    // https://benediktmeurer.de/2018/03/23/impact-of-polymorphism-on-component-based-frameworks-like-react/\n    super(destination);\n    this._next = onNext\n      ? function (this: OperatorSubscriber<T>, value: T) {\n          try {\n            onNext(value);\n          } catch (err) {\n            destination.error(err);\n          }\n        }\n      : super._next;\n    this._error = onError\n      ? function (this: OperatorSubscriber<T>, err: any) {\n          try {\n            onError(err);\n          } catch (err) {\n            // Send any errors that occur down stream.\n            destination.error(err);\n          } finally {\n            // Ensure finalization.\n            this.unsubscribe();\n          }\n        }\n      : super._error;\n    this._complete = onComplete\n      ? function (this: OperatorSubscriber<T>) {\n          try {\n            onComplete();\n          } catch (err) {\n            // Send any errors that occur down stream.\n            destination.error(err);\n          } finally {\n            // Ensure finalization.\n            this.unsubscribe();\n          }\n        }\n      : super._complete;\n  }\n\n  unsubscribe() {\n    if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {\n      const { closed } = this;\n      super.unsubscribe();\n      // Execute additional teardown if we have any and we didn't already do so.\n      !closed && this.onFinalize?.();\n    }\n  }\n}\n","import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function map<T, R>(project: (value: T, index: number) => R): OperatorFunction<T, R>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function map<T, R, A>(project: (this: A, value: T, index: number) => R, thisArg: A): OperatorFunction<T, R>;\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * ![](map.png)\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * ## Example\n *\n * Map every click to the `clientX` position of that click\n *\n * ```ts\n * import { fromEvent, map } from 'rxjs';\n *\n * const clicks = fromEvent<PointerEvent>(document, 'click');\n * const positions = clicks.pipe(map(ev => ev.clientX));\n *\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return A function that returns an Observable that emits the values from the\n * source Observable transformed by the given `project` function.\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return operate((source, subscriber) => {\n    // The index of the value from the source. Used with projection.\n    let index = 0;\n    // Subscribe to the source, all errors and completions are sent along\n    // to the consumer.\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value: T) => {\n        // Call the projection function with the appropriate this context,\n        // and send the resulting value to the consumer.\n        subscriber.next(project.call(thisArg, value, index++));\n      })\n    );\n  });\n}\n","export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number' && typeof x !== 'function');","import { isFunction } from \"./isFunction\";\n\n/**\n * Tests to see if the object is \"thennable\".\n * @param value the object to test\n */\nexport function isPromise(value: any): value is PromiseLike<any> {\n  return isFunction(value?.then);\n}\n","import { InteropObservable } from '../types';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\nexport function isInteropObservable(input: any): input is InteropObservable<any> {\n  return isFunction(input[Symbol_observable]);\n}\n","import { isFunction } from './isFunction';\n\nexport function isAsyncIterable<T>(obj: any): obj is AsyncIterable<T> {\n  return Symbol.asyncIterator && isFunction(obj?.[Symbol.asyncIterator]);\n}\n","/**\n * Creates the TypeError to throw if an invalid object is passed to `from` or `scheduled`.\n * @param input The object that was passed.\n */\nexport function createInvalidObservableTypeError(input: any) {\n  // TODO: We should create error codes that can be looked up, so this can be less verbose.\n  return new TypeError(\n    `You provided ${\n      input !== null && typeof input === 'object' ? 'an invalid object' : `'${input}'`\n    } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`\n  );\n}\n","export function getSymbolIterator(): symbol {\n  if (typeof Symbol !== 'function' || !Symbol.iterator) {\n    return '@@iterator' as any;\n  }\n\n  return Symbol.iterator;\n}\n\nexport const iterator = getSymbolIterator();\n","import { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being an Iterable */\nexport function isIterable(input: any): input is Iterable<any> {\n  return isFunction(input?.[Symbol_iterator]);\n}\n","import { ReadableStreamLike } from '../types';\nimport { isFunction } from './isFunction';\n\nexport async function* readableStreamLikeToAsyncGenerator<T>(readableStream: ReadableStreamLike<T>): AsyncGenerator<T> {\n  const reader = readableStream.getReader();\n  try {\n    while (true) {\n      const { value, done } = await reader.read();\n      if (done) {\n        return;\n      }\n      yield value!;\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\n\nexport function isReadableStreamLike<T>(obj: any): obj is ReadableStreamLike<T> {\n  // We don't want to use instanceof checks because they would return\n  // false for instances from another Realm, like an <iframe>.\n  return isFunction(obj?.getReader);\n}\n","import { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { Observable } from '../Observable';\nimport { ObservableInput, ObservedValueOf, ReadableStreamLike } from '../types';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isIterable } from '../util/isIterable';\nimport { isReadableStreamLike, readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nimport { Subscriber } from '../Subscriber';\nimport { isFunction } from '../util/isFunction';\nimport { reportUnhandledError } from '../util/reportUnhandledError';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\nexport function innerFrom<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\nexport function innerFrom<T>(input: ObservableInput<T>): Observable<T> {\n  if (input instanceof Observable) {\n    return input;\n  }\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return fromInteropObservable(input);\n    }\n    if (isArrayLike(input)) {\n      return fromArrayLike(input);\n    }\n    if (isPromise(input)) {\n      return fromPromise(input);\n    }\n    if (isAsyncIterable(input)) {\n      return fromAsyncIterable(input);\n    }\n    if (isIterable(input)) {\n      return fromIterable(input);\n    }\n    if (isReadableStreamLike(input)) {\n      return fromReadableStreamLike(input);\n    }\n  }\n\n  throw createInvalidObservableTypeError(input);\n}\n\n/**\n * Creates an RxJS Observable from an object that implements `Symbol.observable`.\n * @param obj An object that properly implements `Symbol.observable`.\n */\nexport function fromInteropObservable<T>(obj: any) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    const obs = obj[Symbol_observable]();\n    if (isFunction(obs.subscribe)) {\n      return obs.subscribe(subscriber);\n    }\n    // Should be caught by observable subscribe function error handling.\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  });\n}\n\n/**\n * Synchronously emits the values of an array like and completes.\n * This is exported because there are creation functions and operators that need to\n * make direct use of the same logic, and there's no reason to make them run through\n * `from` conditionals because we *know* they're dealing with an array.\n * @param array The array to emit values from\n */\nexport function fromArrayLike<T>(array: ArrayLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    // Loop over the array and emit each value. Note two things here:\n    // 1. We're making sure that the subscriber is not closed on each loop.\n    //    This is so we don't continue looping over a very large array after\n    //    something like a `take`, `takeWhile`, or other synchronous unsubscription\n    //    has already unsubscribed.\n    // 2. In this form, reentrant code can alter that array we're looping over.\n    //    This is a known issue, but considered an edge case. The alternative would\n    //    be to copy the array before executing the loop, but this has\n    //    performance implications.\n    for (let i = 0; i < array.length && !subscriber.closed; i++) {\n      subscriber.next(array[i]);\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromPromise<T>(promise: PromiseLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    promise\n      .then(\n        (value) => {\n          if (!subscriber.closed) {\n            subscriber.next(value);\n            subscriber.complete();\n          }\n        },\n        (err: any) => subscriber.error(err)\n      )\n      .then(null, reportUnhandledError);\n  });\n}\n\nexport function fromIterable<T>(iterable: Iterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    for (const value of iterable) {\n      subscriber.next(value);\n      if (subscriber.closed) {\n        return;\n      }\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromAsyncIterable<T>(asyncIterable: AsyncIterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    process(asyncIterable, subscriber).catch((err) => subscriber.error(err));\n  });\n}\n\nexport function fromReadableStreamLike<T>(readableStream: ReadableStreamLike<T>) {\n  return fromAsyncIterable(readableStreamLikeToAsyncGenerator(readableStream));\n}\n\nasync function process<T>(asyncIterable: AsyncIterable<T>, subscriber: Subscriber<T>) {\n  for await (const value of asyncIterable) {\n    subscriber.next(value);\n    // A side-effect may have closed our subscriber,\n    // check before the next iteration.\n    if (subscriber.closed) {\n      return;\n    }\n  }\n  subscriber.complete();\n}\n","import { Subscription } from '../Subscription';\nimport { SchedulerAction, SchedulerLike } from '../types';\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay: number,\n  repeat: true\n): void;\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay?: number,\n  repeat?: false\n): Subscription;\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay = 0,\n  repeat = false\n): Subscription | void {\n  const scheduleSubscription = scheduler.schedule(function (this: SchedulerAction<any>) {\n    work();\n    if (repeat) {\n      parentSubscription.add(this.schedule(null, delay));\n    } else {\n      this.unsubscribe();\n    }\n  }, delay);\n\n  parentSubscription.add(scheduleSubscription);\n\n  if (!repeat) {\n    // Because user-land scheduler implementations are unlikely to properly reuse\n    // Actions for repeat scheduling, we can't trust that the returned subscription\n    // will control repeat subscription scenarios. So we're trying to avoid using them\n    // incorrectly within this library.\n    return scheduleSubscription;\n  }\n}\n","import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subscriber } from '../Subscriber';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * A process embodying the general \"merge\" strategy. This is used in\n * `mergeMap` and `mergeScan` because the logic is otherwise nearly identical.\n * @param source The original source observable\n * @param subscriber The consumer subscriber\n * @param project The projection function to get our inner sources\n * @param concurrent The number of concurrent inner subscriptions\n * @param onBeforeNext Additional logic to apply before nexting to our consumer\n * @param expand If `true` this will perform an \"expand\" strategy, which differs only\n * in that it recurses, and the inner subscription must be schedule-able.\n * @param innerSubScheduler A scheduler to use to schedule inner subscriptions,\n * this is to support the expand strategy, mostly, and should be deprecated\n */\nexport function mergeInternals<T, R>(\n  source: Observable<T>,\n  subscriber: Subscriber<R>,\n  project: (value: T, index: number) => ObservableInput<R>,\n  concurrent: number,\n  onBeforeNext?: (innerValue: R) => void,\n  expand?: boolean,\n  innerSubScheduler?: SchedulerLike,\n  additionalFinalizer?: () => void\n) {\n  // Buffered values, in the event of going over our concurrency limit\n  const buffer: T[] = [];\n  // The number of active inner subscriptions.\n  let active = 0;\n  // An index to pass to our accumulator function\n  let index = 0;\n  // Whether or not the outer source has completed.\n  let isComplete = false;\n\n  /**\n   * Checks to see if we can complete our result or not.\n   */\n  const checkComplete = () => {\n    // If the outer has completed, and nothing is left in the buffer,\n    // and we don't have any active inner subscriptions, then we can\n    // Emit the state and complete.\n    if (isComplete && !buffer.length && !active) {\n      subscriber.complete();\n    }\n  };\n\n  // If we're under our concurrency limit, just start the inner subscription, otherwise buffer and wait.\n  const outerNext = (value: T) => (active < concurrent ? doInnerSub(value) : buffer.push(value));\n\n  const doInnerSub = (value: T) => {\n    // If we're expanding, we need to emit the outer values and the inner values\n    // as the inners will \"become outers\" in a way as they are recursively fed\n    // back to the projection mechanism.\n    expand && subscriber.next(value as any);\n\n    // Increment the number of active subscriptions so we can track it\n    // against our concurrency limit later.\n    active++;\n\n    // A flag used to show that the inner observable completed.\n    // This is checked during finalization to see if we should\n    // move to the next item in the buffer, if there is on.\n    let innerComplete = false;\n\n    // Start our inner subscription.\n    innerFrom(project(value, index++)).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (innerValue) => {\n          // `mergeScan` has additional handling here. For example\n          // taking the inner value and updating state.\n          onBeforeNext?.(innerValue);\n\n          if (expand) {\n            // If we're expanding, then just recurse back to our outer\n            // handler. It will emit the value first thing.\n            outerNext(innerValue as any);\n          } else {\n            // Otherwise, emit the inner value.\n            subscriber.next(innerValue);\n          }\n        },\n        () => {\n          // Flag that we have completed, so we know to check the buffer\n          // during finalization.\n          innerComplete = true;\n        },\n        // Errors are passed to the destination.\n        undefined,\n        () => {\n          // During finalization, if the inner completed (it wasn't errored or\n          // cancelled), then we want to try the next item in the buffer if\n          // there is one.\n          if (innerComplete) {\n            // We have to wrap this in a try/catch because it happens during\n            // finalization, possibly asynchronously, and we want to pass\n            // any errors that happen (like in a projection function) to\n            // the outer Subscriber.\n            try {\n              // INNER SOURCE COMPLETE\n              // Decrement the active count to ensure that the next time\n              // we try to call `doInnerSub`, the number is accurate.\n              active--;\n              // If we have more values in the buffer, try to process those\n              // Note that this call will increment `active` ahead of the\n              // next conditional, if there were any more inner subscriptions\n              // to start.\n              while (buffer.length && active < concurrent) {\n                const bufferedValue = buffer.shift()!;\n                // Particularly for `expand`, we need to check to see if a scheduler was provided\n                // for when we want to start our inner subscription. Otherwise, we just start\n                // are next inner subscription.\n                if (innerSubScheduler) {\n                  executeSchedule(subscriber, innerSubScheduler, () => doInnerSub(bufferedValue));\n                } else {\n                  doInnerSub(bufferedValue);\n                }\n              }\n              // Check to see if we can complete, and complete if so.\n              checkComplete();\n            } catch (err) {\n              subscriber.error(err);\n            }\n          }\n        }\n      )\n    );\n  };\n\n  // Subscribe to our source observable.\n  source.subscribe(\n    createOperatorSubscriber(subscriber, outerNext, () => {\n      // Outer completed, make a note of it, and check to see if we can complete everything.\n      isComplete = true;\n      checkComplete();\n    })\n  );\n\n  // Additional finalization (for when the destination is torn down).\n  // Other finalization is added implicitly via subscription above.\n  return () => {\n    additionalFinalizer?.();\n  };\n}\n","import { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\nimport { isFunction } from '../util/isFunction';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  concurrent?: number\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function mergeMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined,\n  concurrent?: number\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\n  concurrent?: number\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * ![](mergeMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * ## Example\n *\n * Map and flatten each letter to an Observable ticking every 1 second\n *\n * ```ts\n * import { of, mergeMap, interval, map } from 'rxjs';\n *\n * const letters = of('a', 'b', 'c');\n * const result = letters.pipe(\n *   mergeMap(x => interval(1000).pipe(map(i => x + i)))\n * );\n *\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a, b, c every second with respective ascending integers\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and merging\n * the results of the Observables obtained from this transformation.\n */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Infinity\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  if (isFunction(resultSelector)) {\n    // DEPRECATED PATH\n    return mergeMap((a, i) => map((b: any, ii: number) => resultSelector(a, b, i, ii))(innerFrom(project(a, i))), concurrent);\n  } else if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n\n  return operate((source, subscriber) => mergeInternals(source, subscriber, project, concurrent));\n}\n","import { mergeAll } from './mergeAll';\nimport { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * ![](concatAll.svg)\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n *\n * ```ts\n * import { fromEvent, map, interval, take, concatAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(1000).pipe(take(4)))\n * );\n * const firstOrder = higherOrder.pipe(concatAll());\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaustAll}\n * @see {@link mergeAll}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @return A function that returns an Observable emitting values from all the\n * inner Observables concatenated.\n */\nexport function concatAll<O extends ObservableInput<any>>(): OperatorFunction<O, ObservedValueOf<O>> {\n  return mergeAll(1);\n}\n","import { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nimport { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * ![](mergeAll.png)\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n *\n * Spawn a new interval Observable for each click event, and blend their outputs as one Observable\n *\n * ```ts\n * import { fromEvent, map, interval, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(map(() => interval(1000)));\n * const firstOrder = higherOrder.pipe(mergeAll());\n *\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * Count from 0 to 9 every second for each click, but only allow 2 concurrent timers\n *\n * ```ts\n * import { fromEvent, map, interval, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(1000).pipe(take(10)))\n * );\n * const firstOrder = higherOrder.pipe(mergeAll(2));\n *\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concatAll}\n * @see {@link exhaustAll}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Infinity] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return A function that returns an Observable that emits values coming from\n * all the inner Observables emitted by the source Observable.\n */\nexport function mergeAll<O extends ObservableInput<any>>(concurrent: number = Infinity): OperatorFunction<O, ObservedValueOf<O>> {\n  return mergeMap(identity, concurrent);\n}\n","import { SchedulerLike } from '../types';\nimport { isFunction } from './isFunction';\n\nexport function isScheduler(value: any): value is SchedulerLike {\n  return value && isFunction(value.schedule);\n}\n","import { SchedulerLike } from '../types';\nimport { isFunction } from './isFunction';\nimport { isScheduler } from './isScheduler';\n\nfunction last<T>(arr: T[]): T | undefined {\n  return arr[arr.length - 1];\n}\n\nexport function popResultSelector(args: any[]): ((...args: unknown[]) => unknown) | undefined {\n  return isFunction(last(args)) ? args.pop() : undefined;\n}\n\nexport function popScheduler(args: any[]): SchedulerLike | undefined {\n  return isScheduler(last(args)) ? args.pop() : undefined;\n}\n\nexport function popNumber(args: any[], defaultValue: number): number {\n  return typeof last(args) === 'number' ? args.pop()! : defaultValue;\n}\n","/** @prettier */\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * ## Example\n *\n * Ensure values in subscribe are called just before browser repaint\n *\n * ```ts\n * import { interval, observeOn, animationFrameScheduler } from 'rxjs';\n *\n * const someDiv = document.createElement('div');\n * someDiv.style.cssText = 'width: 200px;background: #09c';\n * document.body.appendChild(someDiv);\n * const intervals = interval(10);      // Intervals are scheduled\n *                                      // with async scheduler by default...\n * intervals.pipe(\n *   observeOn(animationFrameScheduler) // ...but we will observe on animationFrame\n * )                                    // scheduler to ensure smooth animation.\n * .subscribe(val => {\n *   someDiv.style.height = val + 'px';\n * });\n * ```\n *\n * @see {@link delay}\n *\n * @param scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param delay Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return A function that returns an Observable that emits the same\n * notifications as the source Observable, but with provided scheduler.\n */\nexport function observeOn<T>(scheduler: SchedulerLike, delay = 0): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => executeSchedule(subscriber, scheduler, () => subscriber.next(value), delay),\n        () => executeSchedule(subscriber, scheduler, () => subscriber.complete(), delay),\n        (err) => executeSchedule(subscriber, scheduler, () => subscriber.error(err), delay)\n      )\n    );\n  });\n}\n","import { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\n\n/**\n * Asynchronously subscribes Observers to this Observable on the specified {@link SchedulerLike}.\n *\n * With `subscribeOn` you can decide what type of scheduler a specific Observable will be using when it is subscribed to.\n *\n * Schedulers control the speed and order of emissions to observers from an Observable stream.\n *\n * ![](subscribeOn.png)\n *\n * ## Example\n *\n * Given the following code:\n *\n * ```ts\n * import { of, merge } from 'rxjs';\n *\n * const a = of(1, 2, 3);\n * const b = of(4, 5, 6);\n *\n * merge(a, b).subscribe(console.log);\n *\n * // Outputs\n * // 1\n * // 2\n * // 3\n * // 4\n * // 5\n * // 6\n * ```\n *\n * Both Observable `a` and `b` will emit their values directly and synchronously once they are subscribed to.\n *\n * If we instead use the `subscribeOn` operator declaring that we want to use the {@link asyncScheduler} for values emitted by Observable `a`:\n *\n * ```ts\n * import { of, subscribeOn, asyncScheduler, merge } from 'rxjs';\n *\n * const a = of(1, 2, 3).pipe(subscribeOn(asyncScheduler));\n * const b = of(4, 5, 6);\n *\n * merge(a, b).subscribe(console.log);\n *\n * // Outputs\n * // 4\n * // 5\n * // 6\n * // 1\n * // 2\n * // 3\n * ```\n *\n * The reason for this is that Observable `b` emits its values directly and synchronously like before\n * but the emissions from `a` are scheduled on the event loop because we are now using the {@link asyncScheduler} for that specific Observable.\n *\n * @param scheduler The {@link SchedulerLike} to perform subscription actions on.\n * @param delay A delay to pass to the scheduler to delay subscriptions\n * @return A function that returns an Observable modified so that its\n * subscriptions happen on the specified {@link SchedulerLike}.\n */\nexport function subscribeOn<T>(scheduler: SchedulerLike, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    subscriber.add(scheduler.schedule(() => source.subscribe(subscriber), delay));\n  });\n}\n","import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nimport { InteropObservable, SchedulerLike } from '../types';\n\nexport function scheduleObservable<T>(input: InteropObservable<T>, scheduler: SchedulerLike) {\n  return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n","import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nimport { SchedulerLike } from '../types';\n\nexport function schedulePromise<T>(input: PromiseLike<T>, scheduler: SchedulerLike) {\n  return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\nexport function scheduleArray<T>(input: ArrayLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>((subscriber) => {\n    // The current array index.\n    let i = 0;\n    // Start iterating over the array like on a schedule.\n    return scheduler.schedule(function () {\n      if (i === input.length) {\n        // If we have hit the end of the array like in the\n        // previous job, we can complete.\n        subscriber.complete();\n      } else {\n        // Otherwise let's next the value at the current index,\n        // then increment our index.\n        subscriber.next(input[i++]);\n        // If the last emission didn't cause us to close the subscriber\n        // (via take or some side effect), reschedule the job and we'll\n        // make another pass.\n        if (!subscriber.closed) {\n          this.schedule();\n        }\n      }\n    });\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from '../util/isFunction';\nimport { executeSchedule } from '../util/executeSchedule';\n\n/**\n * Used in {@link scheduled} to create an observable from an Iterable.\n * @param input The iterable to create an observable from\n * @param scheduler The scheduler to use\n */\nexport function scheduleIterable<T>(input: Iterable<T>, scheduler: SchedulerLike) {\n  return new Observable<T>((subscriber) => {\n    let iterator: Iterator<T, T>;\n\n    // Schedule the initial creation of the iterator from\n    // the iterable. This is so the code in the iterable is\n    // not called until the scheduled job fires.\n    executeSchedule(subscriber, scheduler, () => {\n      // Create the iterator.\n      iterator = (input as any)[Symbol_iterator]();\n\n      executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          let value: T;\n          let done: boolean | undefined;\n          try {\n            // Pull the value out of the iterator\n            ({ value, done } = iterator.next());\n          } catch (err) {\n            // We got an error while pulling from the iterator\n            subscriber.error(err);\n            return;\n          }\n\n          if (done) {\n            // If it is \"done\" we just complete. This mimics the\n            // behavior of JavaScript's `for..of` consumption of\n            // iterables, which will not emit the value from an iterator\n            // result of `{ done: true: value: 'here' }`.\n            subscriber.complete();\n          } else {\n            // The iterable is not done, emit the value.\n            subscriber.next(value);\n          }\n        },\n        0,\n        true\n      );\n    });\n\n    // During finalization, if we see this iterator has a `return` method,\n    // then we know it is a Generator, and not just an Iterator. So we call\n    // the `return()` function. This will ensure that any `finally { }` blocks\n    // inside of the generator we can hit will be hit properly.\n    return () => isFunction(iterator?.return) && iterator.return();\n  });\n}\n","import { SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { executeSchedule } from '../util/executeSchedule';\n\nexport function scheduleAsyncIterable<T>(input: AsyncIterable<T>, scheduler: SchedulerLike) {\n  if (!input) {\n    throw new Error('Iterable cannot be null');\n  }\n  return new Observable<T>((subscriber) => {\n    executeSchedule(subscriber, scheduler, () => {\n      const iterator = input[Symbol.asyncIterator]();\n      executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          iterator.next().then((result) => {\n            if (result.done) {\n              // This will remove the subscriptions from\n              // the parent subscription.\n              subscriber.complete();\n            } else {\n              subscriber.next(result.value);\n            }\n          });\n        },\n        0,\n        true\n      );\n    });\n  });\n}\n","import { SchedulerLike, ReadableStreamLike } from '../types';\nimport { Observable } from '../Observable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\n\nexport function scheduleReadableStreamLike<T>(input: ReadableStreamLike<T>, scheduler: SchedulerLike): Observable<T> {\n  return scheduleAsyncIterable(readableStreamLikeToAsyncGenerator(input), scheduler);\n}\n","import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isReadableStreamLike } from '../util/isReadableStreamLike';\nimport { scheduleReadableStreamLike } from './scheduleReadableStreamLike';\n\n/**\n * Converts from a common {@link ObservableInput} type to an observable where subscription and emissions\n * are scheduled on the provided scheduler.\n *\n * @see {@link from}\n * @see {@link of}\n *\n * @param input The observable, array, promise, iterable, etc you would like to schedule\n * @param scheduler The scheduler to use to schedule the subscription and emissions from\n * the returned observable.\n */\nexport function scheduled<T>(input: ObservableInput<T>, scheduler: SchedulerLike): Observable<T> {\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return scheduleObservable(input, scheduler);\n    }\n    if (isArrayLike(input)) {\n      return scheduleArray(input, scheduler);\n    }\n    if (isPromise(input)) {\n      return schedulePromise(input, scheduler);\n    }\n    if (isAsyncIterable(input)) {\n      return scheduleAsyncIterable(input, scheduler);\n    }\n    if (isIterable(input)) {\n      return scheduleIterable(input, scheduler);\n    }\n    if (isReadableStreamLike(input)) {\n      return scheduleReadableStreamLike(input, scheduler);\n    }\n  }\n  throw createInvalidObservableTypeError(input);\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { scheduled } from '../scheduled/scheduled';\nimport { innerFrom } from './innerFrom';\n\nexport function from<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function from<O extends ObservableInput<any>>(input: O, scheduler: SchedulerLike | undefined): Observable<ObservedValueOf<O>>;\n\n/**\n * Creates an Observable from an Array, an array-like object, a Promise, an iterable object, or an Observable-like object.\n *\n * <span class=\"informal\">Converts almost anything to an Observable.</span>\n *\n * ![](from.png)\n *\n * `from` converts various other objects and data types into Observables. It also converts a Promise, an array-like, or an\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable\" target=\"_blank\">iterable</a>\n * object into an Observable that emits the items in that promise, array, or iterable. A String, in this context, is treated\n * as an array of characters. Observable-like objects (contains a function named with the ES2015 Symbol for Observable) can also be\n * converted through this operator.\n *\n * ## Examples\n *\n * Converts an array to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n *\n * const array = [10, 20, 30];\n * const result = from(array);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 10\n * // 20\n * // 30\n * ```\n *\n * Convert an infinite iterable (from a generator) to an Observable\n *\n * ```ts\n * import { from, take } from 'rxjs';\n *\n * function* generateDoubles(seed) {\n *    let i = seed;\n *    while (true) {\n *      yield i;\n *      i = 2 * i; // double it\n *    }\n * }\n *\n * const iterator = generateDoubles(3);\n * const result = from(iterator).pipe(take(10));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 3\n * // 6\n * // 12\n * // 24\n * // 48\n * // 96\n * // 192\n * // 384\n * // 768\n * // 1536\n * ```\n *\n * With `asyncScheduler`\n *\n * ```ts\n * import { from, asyncScheduler } from 'rxjs';\n *\n * console.log('start');\n *\n * const array = [10, 20, 30];\n * const result = from(array, asyncScheduler);\n *\n * result.subscribe(x => console.log(x));\n *\n * console.log('end');\n *\n * // Logs:\n * // 'start'\n * // 'end'\n * // 10\n * // 20\n * // 30\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link fromEventPattern}\n *\n * @param {ObservableInput<T>} A subscription object, a Promise, an Observable-like,\n * an Array, an iterable, or an array-like object to be converted.\n * @param {SchedulerLike} An optional {@link SchedulerLike} on which to schedule the emission of values.\n * @return {Observable<T>}\n */\nexport function from<T>(input: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T> {\n  return scheduler ? scheduled(input, scheduler) : innerFrom(input);\n}\n","import { Observable } from '../Observable';\nimport { ObservableInputTuple, SchedulerLike } from '../types';\nimport { concatAll } from '../operators/concatAll';\nimport { popScheduler } from '../util/args';\nimport { from } from './from';\n\nexport function concat<T extends readonly unknown[]>(...inputs: [...ObservableInputTuple<T>]): Observable<T[number]>;\nexport function concat<T extends readonly unknown[]>(\n  ...inputsAndScheduler: [...ObservableInputTuple<T>, SchedulerLike]\n): Observable<T[number]>;\n\n/**\n * Creates an output Observable which sequentially emits all values from the first given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * ![](concat.png)\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * ## Examples\n *\n * Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10\n *\n * ```ts\n * import { interval, take, range, concat } from 'rxjs';\n *\n * const timer = interval(1000).pipe(take(4));\n * const sequence = range(1, 10);\n * const result = concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n * ```\n *\n * Concatenate 3 Observables\n *\n * ```ts\n * import { interval, take, concat } from 'rxjs';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n *\n * const result = concat(timer1, timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n * ```\n *\n * Concatenate the same Observable to repeat it\n *\n * ```ts\n * import { interval, take, concat } from 'rxjs';\n *\n * const timer = interval(1000).pipe(take(2));\n *\n * concat(timer, timer) // concatenating the same Observable!\n *   .subscribe({\n *     next: value => console.log(value),\n *     complete: () => console.log('...and it is done!')\n *   });\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // '...and it is done!' also after 4s\n * ```\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link startWith}\n * @see {@link endWith}\n *\n * @param args Input Observables to concatenate.\n */\nexport function concat(...args: any[]): Observable<unknown> {\n  return concatAll()(from(args, popScheduler(args)));\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\n/**\n * A simple Observable that emits no items to the Observer and immediately\n * emits a complete notification.\n *\n * <span class=\"informal\">Just emits 'complete', and nothing else.</span>\n *\n * ![](empty.png)\n *\n * A simple Observable that only emits the complete notification. It can be used\n * for composing with other Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n *\n * Log complete notification\n *\n * ```ts\n * import { EMPTY } from 'rxjs';\n *\n * EMPTY.subscribe({\n *   next: () => console.log('Next'),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Outputs\n * // Complete!\n * ```\n *\n * Emit the number 7, then complete\n *\n * ```ts\n * import { EMPTY, startWith } from 'rxjs';\n *\n * const result = EMPTY.pipe(startWith(7));\n * result.subscribe(x => console.log(x));\n *\n * // Outputs\n * // 7\n * ```\n *\n * Map and flatten only odd numbers to the sequence `'a'`, `'b'`, `'c'`\n *\n * ```ts\n * import { interval, mergeMap, of, EMPTY } from 'rxjs';\n *\n * const interval$ = interval(1000);\n * const result = interval$.pipe(\n *   mergeMap(x => x % 2 === 1 ? of('a', 'b', 'c') : EMPTY),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following to the console:\n * // x is equal to the count on the interval, e.g. (0, 1, 2, 3, ...)\n * // x will occur every 1000ms\n * // if x % 2 is equal to 1, print a, b, c (each on its own)\n * // if x % 2 is not equal to 1, nothing will be output\n * ```\n *\n * @see {@link Observable}\n * @see {@link NEVER}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const EMPTY = new Observable<never>((subscriber) => subscriber.complete());\n\n/**\n * @param scheduler A {@link SchedulerLike} to use for scheduling\n * the emission of the complete notification.\n * @deprecated Replaced with the {@link EMPTY} constant or {@link scheduled} (e.g. `scheduled([], scheduler)`). Will be removed in v8.\n */\nexport function empty(scheduler?: SchedulerLike) {\n  return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\n\nfunction emptyScheduled(scheduler: SchedulerLike) {\n  return new Observable<never>((subscriber) => scheduler.schedule(() => subscriber.complete()));\n}\n","import { OperatorFunction } from \"../types\";\nimport { map } from \"../operators/map\";\n\nconst { isArray } = Array;\n\nfunction callOrApply<T, R>(fn: ((...values: T[]) => R), args: T|T[]): R {\n    return isArray(args) ? fn(...args) : fn(args);\n}\n\n/**\n * Used in several -- mostly deprecated -- situations where we need to \n * apply a list of arguments or a single argument to a result selector.\n */\nexport function mapOneOrManyArgs<T, R>(fn: ((...values: T[]) => R)): OperatorFunction<T|T[], R> {\n    return map(args => callOrApply(fn, args))\n}","import { innerFrom } from '../observable/innerFrom';\nimport { Observable } from '../Observable';\nimport { mergeMap } from '../operators/mergeMap';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isFunction } from '../util/isFunction';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\n\n// These constants are used to create handler registry functions using array mapping below.\nconst nodeEventEmitterMethods = ['addListener', 'removeListener'] as const;\nconst eventTargetMethods = ['addEventListener', 'removeEventListener'] as const;\nconst jqueryMethods = ['on', 'off'] as const;\n\nexport interface NodeStyleEventEmitter {\n  addListener(eventName: string | symbol, handler: NodeEventHandler): this;\n  removeListener(eventName: string | symbol, handler: NodeEventHandler): this;\n}\n\nexport type NodeEventHandler = (...args: any[]) => void;\n\n// For APIs that implement `addListener` and `removeListener` methods that may\n// not use the same arguments or return EventEmitter values\n// such as React Native\nexport interface NodeCompatibleEventEmitter {\n  addListener(eventName: string, handler: NodeEventHandler): void | {};\n  removeListener(eventName: string, handler: NodeEventHandler): void | {};\n}\n\n// Use handler types like those in @types/jquery. See:\n// https://github.com/DefinitelyTyped/DefinitelyTyped/blob/847731ba1d7fa6db6b911c0e43aa0afe596e7723/types/jquery/misc.d.ts#L6395\nexport interface JQueryStyleEventEmitter<TContext, T> {\n  on(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;\n  off(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;\n}\n\nexport interface EventListenerObject<E> {\n  handleEvent(evt: E): void;\n}\n\nexport interface HasEventTargetAddRemove<E> {\n  addEventListener(\n    type: string,\n    listener: ((evt: E) => void) | EventListenerObject<E> | null,\n    options?: boolean | AddEventListenerOptions\n  ): void;\n  removeEventListener(\n    type: string,\n    listener: ((evt: E) => void) | EventListenerObject<E> | null,\n    options?: EventListenerOptions | boolean\n  ): void;\n}\n\nexport interface EventListenerOptions {\n  capture?: boolean;\n  passive?: boolean;\n  once?: boolean;\n}\n\nexport interface AddEventListenerOptions extends EventListenerOptions {\n  once?: boolean;\n  passive?: boolean;\n}\n\nexport function fromEvent<T>(target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>, eventName: string): Observable<T>;\nexport function fromEvent<T, R>(\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\n  eventName: string,\n  resultSelector: (event: T) => R\n): Observable<R>;\nexport function fromEvent<T>(\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\n  eventName: string,\n  options: EventListenerOptions\n): Observable<T>;\nexport function fromEvent<T, R>(\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\n  eventName: string,\n  options: EventListenerOptions,\n  resultSelector: (event: T) => R\n): Observable<R>;\n\nexport function fromEvent(target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>, eventName: string): Observable<unknown>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function fromEvent<T>(target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>, eventName: string): Observable<T>;\nexport function fromEvent<R>(\n  target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>,\n  eventName: string,\n  resultSelector: (...args: any[]) => R\n): Observable<R>;\n\nexport function fromEvent(\n  target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>,\n  eventName: string\n): Observable<unknown>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function fromEvent<T>(target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>, eventName: string): Observable<T>;\nexport function fromEvent<R>(\n  target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>,\n  eventName: string,\n  resultSelector: (...args: any[]) => R\n): Observable<R>;\n\nexport function fromEvent<T>(\n  target: JQueryStyleEventEmitter<any, T> | ArrayLike<JQueryStyleEventEmitter<any, T>>,\n  eventName: string\n): Observable<T>;\nexport function fromEvent<T, R>(\n  target: JQueryStyleEventEmitter<any, T> | ArrayLike<JQueryStyleEventEmitter<any, T>>,\n  eventName: string,\n  resultSelector: (value: T, ...args: any[]) => R\n): Observable<R>;\n\n/**\n * Creates an Observable that emits events of a specific type coming from the\n * given event target.\n *\n * <span class=\"informal\">Creates an Observable from DOM events, or Node.js\n * EventEmitter events or others.</span>\n *\n * ![](fromEvent.png)\n *\n * `fromEvent` accepts as a first argument event target, which is an object with methods\n * for registering event handler functions. As a second argument it takes string that indicates\n * type of event we want to listen for. `fromEvent` supports selected types of event targets,\n * which are described in detail below. If your event target does not match any of the ones listed,\n * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.\n * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event\n * handler functions have different names, but they all accept a string describing event type\n * and function itself, which will be called whenever said event happens.\n *\n * Every time resulting Observable is subscribed, event handler function will be registered\n * to event target on given event type. When that event fires, value\n * passed as a first argument to registered function will be emitted by output Observable.\n * When Observable is unsubscribed, function will be unregistered from event target.\n *\n * Note that if event target calls registered function with more than one argument, second\n * and following arguments will not appear in resulting stream. In order to get access to them,\n * you can pass to `fromEvent` optional project function, which will be called with all arguments\n * passed to event handler. Output Observable will then emit value returned by project function,\n * instead of the usual value.\n *\n * Remember that event targets listed below are checked via duck typing. It means that\n * no matter what kind of object you have and no matter what environment you work in,\n * you can safely use `fromEvent` on that object if it exposes described methods (provided\n * of course they behave as was described above). So for example if Node.js library exposes\n * event target which has the same method names as DOM EventTarget, `fromEvent` is still\n * a good choice.\n *\n * If the API you use is more callback then event handler oriented (subscribed\n * callback function fires only once and thus there is no need to manually\n * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}\n * instead.\n *\n * `fromEvent` supports following types of event targets:\n *\n * **DOM EventTarget**\n *\n * This is an object with `addEventListener` and `removeEventListener` methods.\n *\n * In the browser, `addEventListener` accepts - apart from event type string and event\n * handler function arguments - optional third parameter, which is either an object or boolean,\n * both used for additional configuration how and when passed function will be called. When\n * `fromEvent` is used with event target of that type, you can provide this values\n * as third parameter as well.\n *\n * **Node.js EventEmitter**\n *\n * An object with `addListener` and `removeListener` methods.\n *\n * **JQuery-style event target**\n *\n * An object with `on` and `off` methods\n *\n * **DOM NodeList**\n *\n * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.\n *\n * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes\n * it contains and install event handler function in every of them. When returned Observable\n * is unsubscribed, function will be removed from all Nodes.\n *\n * **DOM HtmlCollection**\n *\n * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is\n * installed and removed in each of elements.\n *\n *\n * ## Examples\n *\n * Emit clicks happening on the DOM document\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * clicks.subscribe(x => console.log(x));\n *\n * // Results in:\n * // MouseEvent object logged to console every time a click\n * // occurs on the document.\n * ```\n *\n * Use `addEventListener` with capture option\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const clicksInDocument = fromEvent(document, 'click', true); // note optional configuration parameter\n *                                                              // which will be passed to addEventListener\n * const clicksInDiv = fromEvent(someDivInDocument, 'click');\n *\n * clicksInDocument.subscribe(() => console.log('document'));\n * clicksInDiv.subscribe(() => console.log('div'));\n *\n * // By default events bubble UP in DOM tree, so normally\n * // when we would click on div in document\n * // \"div\" would be logged first and then \"document\".\n * // Since we specified optional `capture` option, document\n * // will catch event when it goes DOWN DOM tree, so console\n * // will log \"document\" and then \"div\".\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n * @see {@link fromEventPattern}\n *\n * @param {FromEventTarget<T>} target The DOM EventTarget, Node.js\n * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.\n * @param {string} eventName The event name of interest, being emitted by the\n * `target`.\n * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n * @return {Observable<T>}\n */\nexport function fromEvent<T>(\n  target: any,\n  eventName: string,\n  options?: EventListenerOptions | ((...args: any[]) => T),\n  resultSelector?: (...args: any[]) => T\n): Observable<T> {\n  if (isFunction(options)) {\n    resultSelector = options;\n    options = undefined;\n  }\n  if (resultSelector) {\n    return fromEvent<T>(target, eventName, options as EventListenerOptions).pipe(mapOneOrManyArgs(resultSelector));\n  }\n\n  // Figure out our add and remove methods. In order to do this,\n  // we are going to analyze the target in a preferred order, if\n  // the target matches a given signature, we take the two \"add\" and \"remove\"\n  // method names and apply them to a map to create opposite versions of the\n  // same function. This is because they all operate in duplicate pairs,\n  // `addListener(name, handler)`, `removeListener(name, handler)`, for example.\n  // The call only differs by method name, as to whether or not you're adding or removing.\n  const [add, remove] =\n    // If it is an EventTarget, we need to use a slightly different method than the other two patterns.\n    isEventTarget(target)\n      ? eventTargetMethods.map((methodName) => (handler: any) => target[methodName](eventName, handler, options as EventListenerOptions))\n      : // In all other cases, the call pattern is identical with the exception of the method names.\n      isNodeStyleEventEmitter(target)\n      ? nodeEventEmitterMethods.map(toCommonHandlerRegistry(target, eventName))\n      : isJQueryStyleEventEmitter(target)\n      ? jqueryMethods.map(toCommonHandlerRegistry(target, eventName))\n      : [];\n\n  // If add is falsy, it's because we didn't match a pattern above.\n  // Check to see if it is an ArrayLike, because if it is, we want to\n  // try to apply fromEvent to all of it's items. We do this check last,\n  // because there are may be some types that are both ArrayLike *and* implement\n  // event registry points, and we'd rather delegate to that when possible.\n  if (!add) {\n    if (isArrayLike(target)) {\n      return mergeMap((subTarget: any) => fromEvent(subTarget, eventName, options as EventListenerOptions))(\n        innerFrom(target)\n      ) as Observable<T>;\n    }\n  }\n\n  // If add is falsy and we made it here, it's because we didn't\n  // match any valid target objects above.\n  if (!add) {\n    throw new TypeError('Invalid event target');\n  }\n\n  return new Observable<T>((subscriber) => {\n    // The handler we are going to register. Forwards the event object, by itself, or\n    // an array of arguments to the event handler, if there is more than one argument,\n    // to the consumer.\n    const handler = (...args: any[]) => subscriber.next(1 < args.length ? args : args[0]);\n    // Do the work of adding the handler to the target.\n    add(handler);\n    // When we finalize, we want to remove the handler and free up memory.\n    return () => remove!(handler);\n  });\n}\n\n/**\n * Used to create `add` and `remove` functions to register and unregister event handlers\n * from a target in the most common handler pattern, where there are only two arguments.\n * (e.g.  `on(name, fn)`, `off(name, fn)`, `addListener(name, fn)`, or `removeListener(name, fn)`)\n * @param target The target we're calling methods on\n * @param eventName The event name for the event we're creating register or unregister functions for\n */\nfunction toCommonHandlerRegistry(target: any, eventName: string) {\n  return (methodName: string) => (handler: any) => target[methodName](eventName, handler);\n}\n\n/**\n * Checks to see if the target implements the required node-style EventEmitter methods\n * for adding and removing event handlers.\n * @param target the object to check\n */\nfunction isNodeStyleEventEmitter(target: any): target is NodeStyleEventEmitter {\n  return isFunction(target.addListener) && isFunction(target.removeListener);\n}\n\n/**\n * Checks to see if the target implements the required jQuery-style EventEmitter methods\n * for adding and removing event handlers.\n * @param target the object to check\n */\nfunction isJQueryStyleEventEmitter(target: any): target is JQueryStyleEventEmitter<any, any> {\n  return isFunction(target.on) && isFunction(target.off);\n}\n\n/**\n * Checks to see if the target implements the required EventTarget methods\n * for adding and removing event handlers.\n * @param target the object to check\n */\nfunction isEventTarget(target: any): target is HasEventTargetAddRemove<any> {\n  return isFunction(target.addEventListener) && isFunction(target.removeEventListener);\n}\n","import { SchedulerLike, ValueFromArray } from '../types';\nimport { Observable } from '../Observable';\nimport { popScheduler } from '../util/args';\nimport { from } from './from';\n\n// Devs are more likely to pass null or undefined than they are a scheduler\n// without accompanying values. To make things easier for (naughty) devs who\n// use the `strictNullChecks: false` TypeScript compiler option, these\n// overloads with explicit null and undefined values are included.\n\nexport function of(value: null): Observable<null>;\nexport function of(value: undefined): Observable<undefined>;\n\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function of(scheduler: SchedulerLike): Observable<never>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function of<A extends readonly unknown[]>(...valuesAndScheduler: [...A, SchedulerLike]): Observable<ValueFromArray<A>>;\n\nexport function of(): Observable<never>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function of<T>(): Observable<T>;\nexport function of<T>(value: T): Observable<T>;\nexport function of<A extends readonly unknown[]>(...values: A): Observable<ValueFromArray<A>>;\n\n/**\n * Converts the arguments to an observable sequence.\n *\n * <span class=\"informal\">Each argument becomes a `next` notification.</span>\n *\n * ![](of.png)\n *\n * Unlike {@link from}, it does not do any flattening and emits each argument in whole\n * as a separate `next` notification.\n *\n * ## Examples\n *\n * Emit the values `10, 20, 30`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of(10, 20, 30)\n *   .subscribe({\n *     next: value => console.log('next:', value),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // Outputs\n * // next: 10\n * // next: 20\n * // next: 30\n * // the end\n * ```\n *\n * Emit the array `[1, 2, 3]`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of([1, 2, 3])\n *   .subscribe({\n *     next: value => console.log('next:', value),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // Outputs\n * // next: [1, 2, 3]\n * // the end\n * ```\n *\n * @see {@link from}\n * @see {@link range}\n *\n * @param {...T} values A comma separated list of arguments you want to be emitted\n * @return {Observable} An Observable that emits the arguments\n * described above and then completes.\n */\nexport function of<T>(...args: Array<T | SchedulerLike>): Observable<T> {\n  const scheduler = popScheduler(args);\n  return from(args as T[], scheduler);\n}\n","import { SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { EMPTY } from './empty';\n\nexport function range(start: number, count?: number): Observable<number>;\n\n/**\n * @deprecated The `scheduler` parameter will be removed in v8. Use `range(start, count).pipe(observeOn(scheduler))` instead. Details: Details: https://rxjs.dev/deprecations/scheduler-argument\n */\nexport function range(start: number, count: number | undefined, scheduler: SchedulerLike): Observable<number>;\n\n/**\n * Creates an Observable that emits a sequence of numbers within a specified\n * range.\n *\n * <span class=\"informal\">Emits a sequence of numbers in a range.</span>\n *\n * ![](range.png)\n *\n * `range` operator emits a range of sequential integers, in order, where you\n * select the `start` of the range and its `length`. By default, uses no\n * {@link SchedulerLike} and just delivers the notifications synchronously, but may use\n * an optional {@link SchedulerLike} to regulate those deliveries.\n *\n * ## Example\n *\n * Produce a range of numbers\n *\n * ```ts\n * import { range } from 'rxjs';\n *\n * const numbers = range(1, 3);\n *\n * numbers.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // 1\n * // 2\n * // 3\n * // 'Complete!'\n * ```\n *\n * @see {@link timer}\n * @see {@link interval}\n *\n * @param {number} [start=0] The value of the first integer in the sequence.\n * @param {number} count The number of sequential integers to generate.\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} to use for scheduling\n * the emissions of the notifications.\n * @return {Observable} An Observable of numbers that emits a finite range of\n * sequential integers.\n */\nexport function range(start: number, count?: number, scheduler?: SchedulerLike): Observable<number> {\n  if (count == null) {\n    // If one argument was passed, it's the count, not the start.\n    count = start;\n    start = 0;\n  }\n\n  if (count <= 0) {\n    // No count? We're going nowhere. Return EMPTY.\n    return EMPTY;\n  }\n\n  // Where the range should stop.\n  const end = count + start;\n\n  return new Observable(\n    scheduler\n      ? // The deprecated scheduled path.\n        (subscriber) => {\n          let n = start;\n          return scheduler.schedule(function () {\n            if (n < end) {\n              subscriber.next(n++);\n              this.schedule();\n            } else {\n              subscriber.complete();\n            }\n          });\n        }\n      : // Standard synchronous range.\n        (subscriber) => {\n          let n = start;\n          while (n < end && !subscriber.closed) {\n            subscriber.next(n++);\n          }\n          subscriber.complete();\n        }\n  );\n}\n","import { mergeMap } from './mergeMap';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/* tslint:disable:max-line-length */\nexport function concatMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function concatMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function concatMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * ![](concatMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n *\n * ```ts\n * import { fromEvent, concatMap, interval, take } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   concatMap(ev => interval(1000).pipe(take(4)))\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and taking\n * values from each projected inner Observable sequentially.\n */\nexport function concatMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  return isFunction(resultSelector) ? mergeMap(project, resultSelector, 1) : mergeMap(project, 1);\n}\n","import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\nimport { SchedulerAction } from '../types';\n\n/**\n * A unit of work to be executed in a `scheduler`. An action is typically\n * created from within a {@link SchedulerLike} and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: SchedulerAction<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent {@link SchedulerLike} for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n","import type { TimerHandle } from './timerHandle';\ntype SetIntervalFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\ntype ClearIntervalFunction = (handle: TimerHandle) => void;\n\ninterface IntervalProvider {\n  setInterval: SetIntervalFunction;\n  clearInterval: ClearIntervalFunction;\n  delegate:\n    | {\n        setInterval: SetIntervalFunction;\n        clearInterval: ClearIntervalFunction;\n      }\n    | undefined;\n}\n\nexport const intervalProvider: IntervalProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setInterval(handler: () => void, timeout?: number, ...args) {\n    const { delegate } = intervalProvider;\n    if (delegate?.setInterval) {\n      return delegate.setInterval(handler, timeout, ...args);\n    }\n    return setInterval(handler, timeout, ...args);\n  },\n  clearInterval(handle) {\n    const { delegate } = intervalProvider;\n    return (delegate?.clearInterval || clearInterval)(handle as any);\n  },\n  delegate: undefined,\n};\n","import { Action } from './Action';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { intervalProvider } from './intervalProvider';\nimport { arrRemove } from '../util/arrRemove';\n\nexport class AsyncAction<T> extends Action<T> {\n  public id: any;\n  public state?: T;\n  // @ts-ignore: Property has no initializer and is not definitely assigned\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (this.closed) {\n      return this;\n    }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, _id?: any, delay: number = 0): any {\n    return intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(_scheduler: AsyncScheduler, id: any, delay: number | null = 0): any {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay != null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    intervalProvider.clearInterval(id);\n    return undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, _delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      // HACK: Since code elsewhere is relying on the \"truthiness\" of the\n      // return here, we can't have it return \"\" or 0 or false.\n      // TODO: Clean this up when we refactor schedulers mid-version-8 or so.\n      errorValue = e ? e : new Error('Scheduled action threw falsy error');\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  unsubscribe() {\n    if (!this.closed) {\n      const { id, scheduler } = this;\n      const { actions } = scheduler;\n\n      this.work = this.state = this.scheduler = null!;\n      this.pending = false;\n\n      arrRemove(actions, this);\n      if (id != null) {\n        this.id = this.recycleAsyncId(scheduler, id, null);\n      }\n\n      this.delay = null!;\n      super.unsubscribe();\n    }\n  }\n}\n","import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\nimport { SchedulerLike, SchedulerAction } from './types';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\n\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an `Action`.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n * @deprecated Scheduler is an internal implementation detail of RxJS, and\n * should not be used directly. Rather, create your own class and implement\n * {@link SchedulerLike}. Will be made internal in v8.\n */\nexport class Scheduler implements SchedulerLike {\n  public static now: () => number = dateTimestampProvider.now;\n\n  constructor(private schedulerActionCtor: typeof Action, now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.schedulerActionCtor<T>(this, work).schedule(state, delay);\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asapScheduler} scheduler.\n *\n * ## Examples\n * Use async scheduler to delay task\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * const task = () => console.log('it works!');\n *\n * asyncScheduler.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n * ```\n *\n * Use async scheduler to repeat task in intervals\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * asyncScheduler.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n * ```\n */\n\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\n\n/**\n * @deprecated Renamed to {@link asyncScheduler}. Will be removed in v8.\n */\nexport const async = asyncScheduler;\n","import { Scheduler } from '../Scheduler';\nimport { Action } from './Action';\nimport { AsyncAction } from './AsyncAction';\n\nexport class AsyncScheduler extends Scheduler {\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   * @internal\n   */\n  public _active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   * @internal\n   */\n  public _scheduled: any = undefined;\n\n  constructor(SchedulerAction: typeof Action, now: () => number = Scheduler.now) {\n    super(SchedulerAction, now);\n  }\n\n  public flush(action: AsyncAction<any>): void {\n    const { actions } = this;\n\n    if (this._active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this._active = true;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    } while ((action = actions.shift()!)); // exhaust the scheduler queue\n\n    this._active = false;\n\n    if (error) {\n      while ((action = actions.shift()!)) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { MonoTypeOperatorFunction } from '../types';\nimport { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * ![](take.png)\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * ## Example\n *\n * Take the first 5 seconds of an infinite 1-second interval Observable\n *\n * ```ts\n * import { interval, take } from 'rxjs';\n *\n * const intervalCount = interval(1000);\n * const takeFive = intervalCount.pipe(take(5));\n * takeFive.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // 3\n * // 4\n * ```\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param count The maximum number of `next` values to emit.\n * @return A function that returns an Observable that emits only the first\n * `count` values emitted by the source Observable, or all of the values from\n * the source if the source emits fewer than `count` values.\n */\nexport function take<T>(count: number): MonoTypeOperatorFunction<T> {\n  return count <= 0\n    ? // If we are taking no values, that's empty.\n      () => EMPTY\n    : operate((source, subscriber) => {\n        let seen = 0;\n        source.subscribe(\n          createOperatorSubscriber(subscriber, (value) => {\n            // Increment the number of values we have seen,\n            // then check it against the allowed count to see\n            // if we are still letting values through.\n            if (++seen <= count) {\n              subscriber.next(value);\n              // If we have met or passed our allowed count,\n              // we need to complete. We have to do <= here,\n              // because re-entrant code will increment `seen` twice.\n              if (count <= seen) {\n                subscriber.complete();\n              }\n            }\n          })\n        );\n      });\n}\n","import { OperatorFunction } from '../types';\nimport { map } from './map';\n\n/** @deprecated To be removed in v9. Use {@link map} instead: `map(() => value)`. */\nexport function mapTo<R>(value: R): OperatorFunction<unknown, R>;\n/**\n * @deprecated Do not specify explicit type parameters. Signatures with type parameters\n * that cannot be inferred will be removed in v8. `mapTo` itself will be removed in v9,\n * use {@link map} instead: `map(() => value)`.\n * */\nexport function mapTo<T, R>(value: R): OperatorFunction<T, R>;\n\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * ![](mapTo.png)\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * ## Example\n *\n * Map every click to the string `'Hi'`\n *\n * ```ts\n * import { fromEvent, mapTo } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const greetings = clicks.pipe(mapTo('Hi'));\n *\n * greetings.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link map}\n *\n * @param value The value to map each source value to.\n * @return A function that returns an Observable that emits the given `value`\n * every time the source Observable emits.\n * @deprecated To be removed in v9. Use {@link map} instead: `map(() => value)`.\n */\nexport function mapTo<R>(value: R): OperatorFunction<unknown, R> {\n  return map(() => value);\n}\n","import { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { concat } from '../observable/concat';\nimport { take } from './take';\nimport { ignoreElements } from './ignoreElements';\nimport { mapTo } from './mapTo';\nimport { mergeMap } from './mergeMap';\n\n/** @deprecated The `subscriptionDelay` parameter will be removed in v8. */\nexport function delayWhen<T>(\n  delayDurationSelector: (value: T, index: number) => Observable<any>,\n  subscriptionDelay: Observable<any>\n): MonoTypeOperatorFunction<T>;\nexport function delayWhen<T>(delayDurationSelector: (value: T, index: number) => Observable<any>): MonoTypeOperatorFunction<T>;\n\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * ![](delayWhen.png)\n *\n * `delayWhen` time shifts each emitted value from the source Observable by a\n * time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the source value as\n * argument, and should return an Observable, called the \"duration\" Observable.\n * The source value is emitted on the output Observable only when the duration\n * Observable emits a value or completes.\n * The completion of the notifier triggering the emission of the source value\n * is deprecated behavior and will be removed in future versions.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * ## Example\n *\n * Delay each click by a random amount of time, between 0 and 5 seconds\n *\n * ```ts\n * import { fromEvent, delayWhen, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const delayedClicks = clicks.pipe(\n *   delayWhen(() => interval(Math.random() * 5000))\n * );\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link delay}\n * @see {@link throttle}\n * @see {@link throttleTime}\n * @see {@link debounce}\n * @see {@link debounceTime}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link audit}\n * @see {@link auditTime}\n *\n * @param {function(value: T, index: number): Observable} delayDurationSelector A function that\n * returns an Observable for each value emitted by the source Observable, which\n * is then used to delay the emission of that item on the output Observable\n * until the Observable returned from this function emits a value.\n * @param {Observable} subscriptionDelay An Observable that triggers the\n * subscription to the source Observable once it emits any value.\n * @return A function that returns an Observable that delays the emissions of\n * the source Observable by an amount of time specified by the Observable\n * returned by `delayDurationSelector`.\n */\nexport function delayWhen<T>(\n  delayDurationSelector: (value: T, index: number) => Observable<any>,\n  subscriptionDelay?: Observable<any>\n): MonoTypeOperatorFunction<T> {\n  if (subscriptionDelay) {\n    // DEPRECATED PATH\n    return (source: Observable<T>) =>\n      concat(subscriptionDelay.pipe(take(1), ignoreElements()), source.pipe(delayWhen(delayDurationSelector)));\n  }\n\n  return mergeMap((value, index) => delayDurationSelector(value, index).pipe(take(1), mapTo(value)));\n}\n","import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\n\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * ![](ignoreElements.png)\n *\n * The `ignoreElements` operator suppresses all items emitted by the source Observable,\n * but allows its termination notification (either `error` or `complete`) to pass through unchanged.\n *\n * If you do not care about the items being emitted by an Observable, but you do want to be notified\n * when it completes or when it terminates with an error, you can apply the `ignoreElements` operator\n * to the Observable, which will ensure that it will never call its observers’ `next` handlers.\n *\n * ## Example\n *\n * Ignore all `next` emissions from the source\n *\n * ```ts\n * import { of, ignoreElements } from 'rxjs';\n *\n * of('you', 'talking', 'to', 'me')\n *   .pipe(ignoreElements())\n *   .subscribe({\n *     next: word => console.log(word),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // result:\n * // 'the end'\n * ```\n *\n * @return A function that returns an empty Observable that only calls\n * `complete` or `error`, based on which one is called by the source\n * Observable.\n */\nexport function ignoreElements(): OperatorFunction<unknown, never> {\n  return operate((source, subscriber) => {\n    source.subscribe(createOperatorSubscriber(subscriber, noop));\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { async as asyncScheduler } from '../scheduler/async';\nimport { isScheduler } from '../util/isScheduler';\nimport { isValidDate } from '../util/isDate';\n\n/**\n * Creates an observable that will wait for a specified time period, or exact date, before\n * emitting the number 0.\n *\n * <span class=\"informal\">Used to emit a notification after a delay.</span>\n *\n * This observable is useful for creating delays in code, or racing against other values\n * for ad-hoc timeouts.\n *\n * The `delay` is specified by default in milliseconds, however providing a custom scheduler could\n * create a different behavior.\n *\n * ## Examples\n *\n * Wait 3 seconds and start another observable\n *\n * You might want to use `timer` to delay subscription to an\n * observable by a set amount of time. Here we use a timer with\n * {@link concatMapTo} or {@link concatMap} in order to wait\n * a few seconds and start a subscription to a source.\n *\n * ```ts\n * import { of, timer, concatMap } from 'rxjs';\n *\n * // This could be any observable\n * const source = of(1, 2, 3);\n *\n * timer(3000)\n *   .pipe(concatMap(() => source))\n *   .subscribe(console.log);\n * ```\n *\n * Take all values until the start of the next minute\n *\n * Using a `Date` as the trigger for the first emission, you can\n * do things like wait until midnight to fire an event, or in this case,\n * wait until a new minute starts (chosen so the example wouldn't take\n * too long to run) in order to stop watching a stream. Leveraging\n * {@link takeUntil}.\n *\n * ```ts\n * import { interval, takeUntil, timer } from 'rxjs';\n *\n * // Build a Date object that marks the\n * // next minute.\n * const currentDate = new Date();\n * const startOfNextMinute = new Date(\n *   currentDate.getFullYear(),\n *   currentDate.getMonth(),\n *   currentDate.getDate(),\n *   currentDate.getHours(),\n *   currentDate.getMinutes() + 1\n * );\n *\n * // This could be any observable stream\n * const source = interval(1000);\n *\n * const result = source.pipe(\n *   takeUntil(timer(startOfNextMinute))\n * );\n *\n * result.subscribe(console.log);\n * ```\n *\n * ### Known Limitations\n *\n * - The {@link asyncScheduler} uses `setTimeout` which has limitations for how far in the future it can be scheduled.\n *\n * - If a `scheduler` is provided that returns a timestamp other than an epoch from `now()`, and\n * a `Date` object is passed to the `dueTime` argument, the calculation for when the first emission\n * should occur will be incorrect. In this case, it would be best to do your own calculations\n * ahead of time, and pass a `number` in as the `dueTime`.\n *\n * @param due If a `number`, the amount of time in milliseconds to wait before emitting.\n * If a `Date`, the exact time at which to emit.\n * @param scheduler The scheduler to use to schedule the delay. Defaults to {@link asyncScheduler}.\n */\nexport function timer(due: number | Date, scheduler?: SchedulerLike): Observable<0>;\n\n/**\n * Creates an observable that starts an interval after a specified delay, emitting incrementing numbers -- starting at `0` --\n * on each interval after words.\n *\n * The `delay` and `intervalDuration` are specified by default in milliseconds, however providing a custom scheduler could\n * create a different behavior.\n *\n * ## Example\n *\n * ### Start an interval that starts right away\n *\n * Since {@link interval} waits for the passed delay before starting,\n * sometimes that's not ideal. You may want to start an interval immediately.\n * `timer` works well for this. Here we have both side-by-side so you can\n * see them in comparison.\n *\n * Note that this observable will never complete.\n *\n * ```ts\n * import { timer, interval } from 'rxjs';\n *\n * timer(0, 1000).subscribe(n => console.log('timer', n));\n * interval(1000).subscribe(n => console.log('interval', n));\n * ```\n *\n * ### Known Limitations\n *\n * - The {@link asyncScheduler} uses `setTimeout` which has limitations for how far in the future it can be scheduled.\n *\n * - If a `scheduler` is provided that returns a timestamp other than an epoch from `now()`, and\n * a `Date` object is passed to the `dueTime` argument, the calculation for when the first emission\n * should occur will be incorrect. In this case, it would be best to do your own calculations\n * ahead of time, and pass a `number` in as the `startDue`.\n * @param startDue If a `number`, is the time to wait before starting the interval.\n * If a `Date`, is the exact time at which to start the interval.\n * @param intervalDuration The delay between each value emitted in the interval. Passing a\n * negative number here will result in immediate completion after the first value is emitted, as though\n * no `intervalDuration` was passed at all.\n * @param scheduler The scheduler to use to schedule the delay. Defaults to {@link asyncScheduler}.\n */\nexport function timer(startDue: number | Date, intervalDuration: number, scheduler?: SchedulerLike): Observable<number>;\n\n/**\n * @deprecated The signature allowing `undefined` to be passed for `intervalDuration` will be removed in v8. Use the `timer(dueTime, scheduler?)` signature instead.\n */\nexport function timer(dueTime: number | Date, unused: undefined, scheduler?: SchedulerLike): Observable<0>;\n\nexport function timer(\n  dueTime: number | Date = 0,\n  intervalOrScheduler?: number | SchedulerLike,\n  scheduler: SchedulerLike = asyncScheduler\n): Observable<number> {\n  // Since negative intervalDuration is treated as though no\n  // interval was specified at all, we start with a negative number.\n  let intervalDuration = -1;\n\n  if (intervalOrScheduler != null) {\n    // If we have a second argument, and it's a scheduler,\n    // override the scheduler we had defaulted. Otherwise,\n    // it must be an interval.\n    if (isScheduler(intervalOrScheduler)) {\n      scheduler = intervalOrScheduler;\n    } else {\n      // Note that this *could* be negative, in which case\n      // it's like not passing an intervalDuration at all.\n      intervalDuration = intervalOrScheduler;\n    }\n  }\n\n  return new Observable((subscriber) => {\n    // If a valid date is passed, calculate how long to wait before\n    // executing the first value... otherwise, if it's a number just schedule\n    // that many milliseconds (or scheduler-specified unit size) in the future.\n    let due = isValidDate(dueTime) ? +dueTime - scheduler!.now() : dueTime;\n\n    if (due < 0) {\n      // Ensure we don't schedule in the future.\n      due = 0;\n    }\n\n    // The incrementing value we emit.\n    let n = 0;\n\n    // Start the timer.\n    return scheduler.schedule(function () {\n      if (!subscriber.closed) {\n        // Emit the next value and increment.\n        subscriber.next(n++);\n\n        if (0 <= intervalDuration) {\n          // If we have a interval after the initial timer,\n          // reschedule with the period.\n          this.schedule(undefined, intervalDuration);\n        } else {\n          // We didn't have an interval. So just complete.\n          subscriber.complete();\n        }\n      }\n    }, due);\n  });\n}\n","/**\n * Checks to see if a value is not only a `Date` object,\n * but a *valid* `Date` object that can be converted to a\n * number. For example, `new Date('blah')` is indeed an\n * `instanceof Date`, however it cannot be converted to a\n * number.\n */\nexport function isValidDate(value: any): value is Date {\n  return value instanceof Date && !isNaN(value as any);\n}\n","import { asyncScheduler } from '../scheduler/async';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { delayWhen } from './delayWhen';\nimport { timer } from '../observable/timer';\n\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * ![](delay.svg)\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * ## Examples\n *\n * Delay each click by one second\n *\n * ```ts\n * import { fromEvent, delay } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const delayedClicks = clicks.pipe(delay(1000)); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * Delay all clicks until a future date happens\n *\n * ```ts\n * import { fromEvent, delay } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const date = new Date('March 15, 2050 12:00:00'); // in the future\n * const delayedClicks = clicks.pipe(delay(date)); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link delayWhen}\n * @see {@link throttle}\n * @see {@link throttleTime}\n * @see {@link debounce}\n * @see {@link debounceTime}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link audit}\n * @see {@link auditTime}\n *\n * @param {number|Date} due The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the time-shift for each item.\n * @return A function that returns an Observable that delays the emissions of\n * the source Observable by the specified timeout or Date.\n */\nexport function delay<T>(due: number | Date, scheduler: SchedulerLike = asyncScheduler): MonoTypeOperatorFunction<T> {\n  const duration = timer(due, scheduler);\n  return delayWhen(() => duration);\n}\n","/** prettier */\nimport { Observable } from '../Observable';\nimport { concat } from '../observable/concat';\nimport { of } from '../observable/of';\nimport { MonoTypeOperatorFunction, SchedulerLike, OperatorFunction, ValueFromArray } from '../types';\n\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `concatAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function endWith<T>(scheduler: SchedulerLike): MonoTypeOperatorFunction<T>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `concatAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function endWith<T, A extends unknown[] = T[]>(\n  ...valuesAndScheduler: [...A, SchedulerLike]\n): OperatorFunction<T, T | ValueFromArray<A>>;\n\nexport function endWith<T, A extends unknown[] = T[]>(...values: A): OperatorFunction<T, T | ValueFromArray<A>>;\n\n/**\n * Returns an observable that will emit all values from the source, then synchronously emit\n * the provided value(s) immediately after the source completes.\n *\n * NOTE: Passing a last argument of a Scheduler is _deprecated_, and may result in incorrect\n * types in TypeScript.\n *\n * This is useful for knowing when an observable ends. Particularly when paired with an\n * operator like {@link takeUntil}\n *\n * ![](endWith.png)\n *\n * ## Example\n *\n * Emit values to know when an interval starts and stops. The interval will\n * stop when a user clicks anywhere on the document.\n *\n * ```ts\n * import { interval, map, fromEvent, startWith, takeUntil, endWith } from 'rxjs';\n *\n * const ticker$ = interval(5000).pipe(\n *   map(() => 'tick')\n * );\n *\n * const documentClicks$ = fromEvent(document, 'click');\n *\n * ticker$.pipe(\n *   startWith('interval started'),\n *   takeUntil(documentClicks$),\n *   endWith('interval ended by click')\n * )\n * .subscribe(x => console.log(x));\n *\n * // Result (assuming a user clicks after 15 seconds)\n * // 'interval started'\n * // 'tick'\n * // 'tick'\n * // 'tick'\n * // 'interval ended by click'\n * ```\n *\n * @see {@link startWith}\n * @see {@link concat}\n * @see {@link takeUntil}\n *\n * @param values Items you want the modified Observable to emit last.\n * @return A function that returns an Observable that emits all values from the\n * source, then synchronously emits the provided value(s) immediately after the\n * source completes.\n */\nexport function endWith<T>(...values: Array<T | SchedulerLike>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => concat(source, of(...values)) as Observable<T>;\n}\n","import { OperatorFunction, MonoTypeOperatorFunction, TruthyTypesOf } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function filter<T, S extends T, A>(predicate: (this: A, value: T, index: number) => value is S, thisArg: A): OperatorFunction<T, S>;\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S): OperatorFunction<T, S>;\nexport function filter<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function filter<T, A>(predicate: (this: A, value: T, index: number) => boolean, thisArg: A): MonoTypeOperatorFunction<T>;\nexport function filter<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * ![](filter.png)\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * ## Example\n *\n * Emit only click events whose target was a DIV element\n *\n * ```ts\n * import { fromEvent, filter } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksOnDivs = clicks.pipe(filter(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n * clicksOnDivs.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param thisArg An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return A function that returns an Observable that emits items from the\n * source Observable that satisfy the specified `predicate`.\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean, thisArg?: any): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    // An index passed to our predicate function on each call.\n    let index = 0;\n\n    // Subscribe to the source, all errors and completions are\n    // forwarded to the consumer.\n    source.subscribe(\n      // Call the predicate with the appropriate `this` context,\n      // if the predicate returns `true`, then send the value\n      // to the consumer.\n      createOperatorSubscriber(subscriber, (value) => predicate.call(thisArg, value, index++) && subscriber.next(value))\n    );\n  });\n}\n","import { createErrorClass } from './createErrorClass';\n\nexport interface EmptyError extends Error {}\n\nexport interface EmptyErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): EmptyError;\n}\n\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n * @see {@link firstValueFrom}\n * @see {@link lastValueFrom}\n *\n * @class EmptyError\n */\nexport const EmptyError: EmptyErrorCtor = createErrorClass((_super) => function EmptyErrorImpl(this: any) {\n  _super(this);\n  this.name = 'EmptyError';\n  this.message = 'no elements in sequence';\n});\n","import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * ![](defaultIfEmpty.png)\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * ## Example\n *\n * If no clicks happen in 5 seconds, then emit 'no clicks'\n *\n * ```ts\n * import { fromEvent, takeUntil, interval, defaultIfEmpty } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksBeforeFive = clicks.pipe(takeUntil(interval(5000)));\n * const result = clicksBeforeFive.pipe(defaultIfEmpty('no clicks'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param defaultValue The default value used if the source\n * Observable is empty.\n * @return A function that returns an Observable that emits either the\n * specified `defaultValue` if the source Observable emits no items, or the\n * values emitted by the source Observable.\n */\nexport function defaultIfEmpty<T, R>(defaultValue: R): OperatorFunction<T, T | R> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          hasValue = true;\n          subscriber.next(value);\n        },\n        () => {\n          if (!hasValue) {\n            subscriber.next(defaultValue!);\n          }\n          subscriber.complete();\n        }\n      )\n    );\n  });\n}\n","import { EmptyError } from '../util/EmptyError';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * If the source observable completes without emitting a value, it will emit\n * an error. The error will be created at that time by the optional\n * `errorFactory` argument, otherwise, the error will be {@link EmptyError}.\n *\n * ![](throwIfEmpty.png)\n *\n * ## Example\n *\n * Throw an error if the document wasn't clicked within 1 second\n *\n * ```ts\n * import { fromEvent, takeUntil, timer, throwIfEmpty } from 'rxjs';\n *\n * const click$ = fromEvent(document, 'click');\n *\n * click$.pipe(\n *   takeUntil(timer(1000)),\n *   throwIfEmpty(() => new Error('The document was not clicked within 1 second'))\n * )\n * .subscribe({\n *   next() {\n *    console.log('The document was clicked');\n *   },\n *   error(err) {\n *     console.error(err.message);\n *   }\n * });\n * ```\n *\n * @param errorFactory A factory function called to produce the\n * error to be thrown when the source observable completes without emitting a\n * value.\n * @return A function that returns an Observable that throws an error if the\n * source Observable completed without emitting.\n */\nexport function throwIfEmpty<T>(errorFactory: () => any = defaultErrorFactory): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          hasValue = true;\n          subscriber.next(value);\n        },\n        () => (hasValue ? subscriber.complete() : subscriber.error(errorFactory()))\n      )\n    );\n  });\n}\n\nfunction defaultErrorFactory() {\n  return new EmptyError();\n}\n","import { Observable } from '../Observable';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction, TruthyTypesOf } from '../types';\nimport { filter } from './filter';\nimport { take } from './take';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { identity } from '../util/identity';\n\nexport function first<T, D = T>(predicate?: null, defaultValue?: D): OperatorFunction<T, T | D>;\nexport function first<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function first<T, D>(predicate: BooleanConstructor, defaultValue: D): OperatorFunction<T, TruthyTypesOf<T> | D>;\nexport function first<T, S extends T>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\n  defaultValue?: S\n): OperatorFunction<T, S>;\nexport function first<T, S extends T, D>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\n  defaultValue: D\n): OperatorFunction<T, S | D>;\nexport function first<T, D = T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  defaultValue?: D\n): OperatorFunction<T, T | D>;\n\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * ![](first.png)\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. Throws an error if\n * `defaultValue` was not provided and a matching element is not found.\n *\n * ## Examples\n *\n * Emit only the first click that happens on the DOM\n *\n * ```ts\n * import { fromEvent, first } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(first());\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Emits the first click that happens on a DIV\n *\n * ```ts\n * import { fromEvent, first } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(first(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * This is how `first()` is different from {@link take}(1) which completes instead.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {D} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return A function that returns an Observable that emits the first item that\n * matches the condition.\n */\nexport function first<T, D>(\n  predicate?: ((value: T, index: number, source: Observable<T>) => boolean) | null,\n  defaultValue?: D\n): OperatorFunction<T, T | D> {\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) =>\n    source.pipe(\n      predicate ? filter((v, i) => predicate(v, i, source)) : identity,\n      take(1),\n      hasDefaultValue ? defaultIfEmpty(defaultValue!) : throwIfEmpty(() => new EmptyError())\n    );\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * A basic scan operation. This is used for `scan` and `reduce`.\n * @param accumulator The accumulator to use\n * @param seed The seed value for the state to accumulate\n * @param hasSeed Whether or not a seed was provided\n * @param emitOnNext Whether or not to emit the state on next\n * @param emitBeforeComplete Whether or not to emit the before completion\n */\n\nexport function scanInternals<V, A, S>(\n  accumulator: (acc: V | A | S, value: V, index: number) => A,\n  seed: S,\n  hasSeed: boolean,\n  emitOnNext: boolean,\n  emitBeforeComplete?: undefined | true\n) {\n  return (source: Observable<V>, subscriber: Subscriber<any>) => {\n    // Whether or not we have state yet. This will only be\n    // false before the first value arrives if we didn't get\n    // a seed value.\n    let hasState = hasSeed;\n    // The state that we're tracking, starting with the seed,\n    // if there is one, and then updated by the return value\n    // from the accumulator on each emission.\n    let state: any = seed;\n    // An index to pass to the accumulator function.\n    let index = 0;\n\n    // Subscribe to our source. All errors and completions are passed through.\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          // Always increment the index.\n          const i = index++;\n          // Set the state\n          state = hasState\n            ? // We already have state, so we can get the new state from the accumulator\n              accumulator(state, value, i)\n            : // We didn't have state yet, a seed value was not provided, so\n\n              // we set the state to the first value, and mark that we have state now\n              ((hasState = true), value);\n\n          // Maybe send it to the consumer.\n          emitOnNext && subscriber.next(state);\n        },\n        // If an onComplete was given, call it, otherwise\n        // just pass through the complete notification to the consumer.\n        emitBeforeComplete &&\n          (() => {\n            hasState && subscriber.next(state);\n            subscriber.complete();\n          })\n      )\n    );\n  };\n}\n","import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { scanInternals } from './scanInternals';\n\nexport function scan<V, A = V>(accumulator: (acc: A | V, value: V, index: number) => A): OperatorFunction<V, V | A>;\nexport function scan<V, A>(accumulator: (acc: A, value: V, index: number) => A, seed: A): OperatorFunction<V, A>;\nexport function scan<V, A, S>(accumulator: (acc: A | S, value: V, index: number) => A, seed: S): OperatorFunction<V, A>;\n\n// TODO: link to a \"redux pattern\" section in the guide (location TBD)\n\n/**\n * Useful for encapsulating and managing state. Applies an accumulator (or \"reducer function\")\n * to each value from the source after an initial state is established -- either via\n * a `seed` value (second argument), or from the first value from the source.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation state after each update</span>\n *\n * ![](scan.png)\n *\n * This operator maintains an internal state and emits it after processing each value as follows:\n *\n * 1. First value arrives\n *   - If a `seed` value was supplied (as the second argument to `scan`), let `state = seed` and `value = firstValue`.\n *   - If NO `seed` value was supplied (no second argument), let `state = firstValue` and go to 3.\n * 2. Let `state = accumulator(state, value)`.\n *   - If an error is thrown by `accumulator`, notify the consumer of an error. The process ends.\n * 3. Emit `state`.\n * 4. Next value arrives, let `value = nextValue`, go to 2.\n *\n * ## Examples\n *\n * An average of previous numbers. This example shows how\n * not providing a `seed` can prime the stream with the\n * first value from the source.\n *\n * ```ts\n * import { of, scan, map } from 'rxjs';\n *\n * const numbers$ = of(1, 2, 3);\n *\n * numbers$\n *   .pipe(\n *     // Get the sum of the numbers coming in.\n *     scan((total, n) => total + n),\n *     // Get the average by dividing the sum by the total number\n *     // received so var (which is 1 more than the zero-based index).\n *     map((sum, index) => sum / (index + 1))\n *   )\n *   .subscribe(console.log);\n * ```\n *\n * The Fibonacci sequence. This example shows how you can use\n * a seed to prime accumulation process. Also... you know... Fibonacci.\n * So important to like, computers and stuff that its whiteboarded\n * in job interviews. Now you can show them the Rx version! (Please don't, haha)\n *\n * ```ts\n * import { interval, scan, map, startWith } from 'rxjs';\n *\n * const firstTwoFibs = [0, 1];\n * // An endless stream of Fibonacci numbers.\n * const fibonacci$ = interval(1000).pipe(\n *   // Scan to get the fibonacci numbers (after 0, 1)\n *   scan(([a, b]) => [b, a + b], firstTwoFibs),\n *   // Get the second number in the tuple, it's the one you calculated\n *   map(([, n]) => n),\n *   // Start with our first two digits :)\n *   startWith(...firstTwoFibs)\n * );\n *\n * fibonacci$.subscribe(console.log);\n * ```\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n * @see {@link switchScan}\n *\n * @param accumulator A \"reducer function\". This will be called for each value after an initial state is\n * acquired.\n * @param seed The initial state. If this is not provided, the first value from the source will\n * be used as the initial state, and emitted without going through the accumulator. All subsequent values\n * will be processed by the accumulator function. If this is provided, all values will go through\n * the accumulator function.\n * @return A function that returns an Observable of the accumulated values.\n */\nexport function scan<V, A, S>(accumulator: (acc: V | A | S, value: V, index: number) => A, seed?: S): OperatorFunction<V, V | A> {\n  // providing a seed of `undefined` *should* be valid and trigger\n  // hasSeed! so don't use `seed !== undefined` checks!\n  // For this reason, we have to check it here at the original call site\n  // otherwise inside Operator/Subscriber we won't know if `undefined`\n  // means they didn't provide anything or if they literally provided `undefined`\n  return operate(scanInternals(accumulator, seed as S, arguments.length >= 2, true));\n}\n","\"use strict\";\n\n/**\n *  BigNumber\n *\n *  A wrapper around the BN.js object. We use the BN.js library\n *  because it is used by elliptic, so it is required regardless.\n *\n */\n\nimport _BN from \"bn.js\";\nimport BN = _BN.BN;\n\nimport { Bytes, Hexable, hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst _constructorGuard = { };\n\nconst MAX_SAFE = 0x1fffffffffffff;\n\n\nexport type BigNumberish = BigNumber | Bytes | bigint | string | number;\n\nexport function isBigNumberish(value: any): value is BigNumberish {\n    return (value != null) && (\n        BigNumber.isBigNumber(value) ||\n        (typeof(value) === \"number\" && (value % 1) === 0) ||\n        (typeof(value) === \"string\" && !!value.match(/^-?[0-9]+$/)) ||\n        isHexString(value) ||\n        (typeof(value) === \"bigint\") ||\n        isBytes(value)\n    );\n}\n\n// Only warn about passing 10 into radix once\nlet _warnedToStringRadix = false;\n\nexport class BigNumber implements Hexable {\n    readonly _hex: string;\n    readonly _isBigNumber: boolean;\n\n    constructor(constructorGuard: any, hex: string) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot call constructor directly; use BigNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new (BigNumber)\"\n            });\n        }\n\n        this._hex = hex;\n        this._isBigNumber = true;\n\n        Object.freeze(this);\n    }\n\n    fromTwos(value: number): BigNumber {\n        return toBigNumber(toBN(this).fromTwos(value));\n    }\n\n    toTwos(value: number): BigNumber {\n        return toBigNumber(toBN(this).toTwos(value));\n    }\n\n    abs(): BigNumber {\n        if (this._hex[0] === \"-\") {\n            return BigNumber.from(this._hex.substring(1));\n        }\n        return this;\n    }\n\n    add(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).add(toBN(other)));\n    }\n\n    sub(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).sub(toBN(other)));\n    }\n\n    div(other: BigNumberish): BigNumber {\n        const o = BigNumber.from(other);\n        if (o.isZero()) {\n            throwFault(\"division-by-zero\", \"div\");\n        }\n        return toBigNumber(toBN(this).div(toBN(other)));\n    }\n\n    mul(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).mul(toBN(other)));\n    }\n\n    mod(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"division-by-zero\", \"mod\");\n        }\n        return toBigNumber(toBN(this).umod(value));\n    }\n\n    pow(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"negative-power\", \"pow\");\n        }\n        return toBigNumber(toBN(this).pow(value));\n    }\n\n    and(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"and\");\n        }\n        return toBigNumber(toBN(this).and(value));\n    }\n\n    or(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"or\");\n        }\n        return toBigNumber(toBN(this).or(value));\n    }\n\n    xor(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"xor\");\n        }\n        return toBigNumber(toBN(this).xor(value));\n    }\n\n    mask(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"mask\");\n        }\n        return toBigNumber(toBN(this).maskn(value));\n    }\n\n    shl(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shl\");\n        }\n        return toBigNumber(toBN(this).shln(value));\n    }\n\n    shr(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shr\");\n        }\n        return toBigNumber(toBN(this).shrn(value));\n    }\n\n    eq(other: BigNumberish): boolean {\n        return toBN(this).eq(toBN(other));\n    }\n\n    lt(other: BigNumberish): boolean {\n        return toBN(this).lt(toBN(other));\n    }\n\n    lte(other: BigNumberish): boolean {\n        return toBN(this).lte(toBN(other));\n    }\n\n    gt(other: BigNumberish): boolean {\n        return toBN(this).gt(toBN(other));\n   }\n\n    gte(other: BigNumberish): boolean {\n        return toBN(this).gte(toBN(other));\n    }\n\n    isNegative(): boolean {\n        return (this._hex[0] === \"-\");\n    }\n\n    isZero(): boolean {\n        return toBN(this).isZero();\n    }\n\n    toNumber(): number {\n        try {\n            return toBN(this).toNumber();\n        } catch (error) {\n            throwFault(\"overflow\", \"toNumber\", this.toString());\n        }\n        return null;\n    }\n\n    toBigInt(): bigint {\n        try {\n            return BigInt(this.toString());\n        } catch (e) { }\n\n        return logger.throwError(\"this platform does not support BigInt\", Logger.errors.UNSUPPORTED_OPERATION, {\n            value: this.toString()\n        });\n    }\n\n    toString(): string {\n        // Lots of people expect this, which we do not support, so check (See: #889)\n        if (arguments.length > 0) {\n            if (arguments[0] === 10) {\n                if (!_warnedToStringRadix) {\n                    _warnedToStringRadix = true;\n                    logger.warn(\"BigNumber.toString does not accept any parameters; base-10 is assumed\");\n                }\n            } else if (arguments[0] === 16) {\n                logger.throwError(\"BigNumber.toString does not accept any parameters; use bigNumber.toHexString()\", Logger.errors.UNEXPECTED_ARGUMENT, { });\n            } else {\n                logger.throwError(\"BigNumber.toString does not accept parameters\", Logger.errors.UNEXPECTED_ARGUMENT, { });\n            }\n        }\n        return toBN(this).toString(10);\n    }\n\n    toHexString(): string {\n        return this._hex;\n    }\n\n    toJSON(key?: string): any {\n        return { type: \"BigNumber\", hex: this.toHexString() };\n    }\n\n    static from(value: any): BigNumber {\n        if (value instanceof BigNumber) { return value; }\n\n        if (typeof(value) === \"string\") {\n            if (value.match(/^-?0x[0-9a-f]+$/i)) {\n                return new BigNumber(_constructorGuard, toHex(value));\n            }\n\n            if (value.match(/^-?[0-9]+$/)) {\n                return new BigNumber(_constructorGuard, toHex(new BN(value)));\n            }\n\n            return logger.throwArgumentError(\"invalid BigNumber string\", \"value\", value);\n        }\n\n        if (typeof(value) === \"number\") {\n            if (value % 1) {\n                throwFault(\"underflow\", \"BigNumber.from\", value);\n            }\n\n            if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n                throwFault(\"overflow\", \"BigNumber.from\", value);\n            }\n\n            return BigNumber.from(String(value));\n        }\n\n        const anyValue = <any>value;\n\n        if (typeof(anyValue) === \"bigint\") {\n            return BigNumber.from(anyValue.toString());\n        }\n\n        if (isBytes(anyValue)) {\n            return BigNumber.from(hexlify(anyValue));\n        }\n\n        if (anyValue) {\n\n            // Hexable interface (takes priority)\n            if (anyValue.toHexString) {\n                const hex = anyValue.toHexString();\n                if (typeof(hex) === \"string\") {\n                    return BigNumber.from(hex);\n                }\n\n            } else {\n                // For now, handle legacy JSON-ified values (goes away in v6)\n                let hex = anyValue._hex;\n\n                // New-form JSON\n                if (hex == null && anyValue.type === \"BigNumber\") {\n                    hex = anyValue.hex;\n                }\n\n                if (typeof(hex) === \"string\") {\n                    if (isHexString(hex) || (hex[0] === \"-\" && isHexString(hex.substring(1)))) {\n                        return BigNumber.from(hex);\n                    }\n                }\n            }\n        }\n\n        return logger.throwArgumentError(\"invalid BigNumber value\", \"value\", value);\n    }\n\n    static isBigNumber(value: any): value is BigNumber {\n        return !!(value && value._isBigNumber);\n    }\n}\n\n// Normalize the hex string\nfunction toHex(value: string | BN): string {\n\n    // For BN, call on the hex string\n    if (typeof(value) !== \"string\") {\n        return toHex(value.toString(16));\n    }\n\n    // If negative, prepend the negative sign to the normalized positive value\n    if (value[0] === \"-\") {\n        // Strip off the negative sign\n        value = value.substring(1);\n\n        // Cannot have multiple negative signs (e.g. \"--0x04\")\n        if (value[0] === \"-\") { logger.throwArgumentError(\"invalid hex\", \"value\", value); }\n\n        // Call toHex on the positive component\n        value = toHex(value);\n\n        // Do not allow \"-0x00\"\n        if (value === \"0x00\") { return value; }\n\n        // Negate the value\n        return \"-\" + value;\n    }\n\n    // Add a \"0x\" prefix if missing\n    if (value.substring(0, 2) !== \"0x\") { value = \"0x\" + value; }\n\n    // Normalize zero\n    if (value === \"0x\") { return \"0x00\"; }\n\n    // Make the string even length\n    if (value.length % 2) { value = \"0x0\" + value.substring(2); }\n\n    // Trim to smallest even-length string\n    while (value.length > 4 && value.substring(0, 4) === \"0x00\") {\n        value = \"0x\" + value.substring(4);\n    }\n\n    return value;\n}\n\nfunction toBigNumber(value: BN): BigNumber {\n    return BigNumber.from(toHex(value));\n}\n\nfunction toBN(value: BigNumberish): BN {\n    const hex = BigNumber.from(value).toHexString();\n    if (hex[0] === \"-\") {\n        return (new BN(\"-\" + hex.substring(3), 16));\n    }\n    return new BN(hex.substring(2), 16);\n}\n\nfunction throwFault(fault: string, operation: string, value?: any): never {\n    const params: any = { fault: fault, operation: operation };\n    if (value != null) { params.value = value; }\n\n    return logger.throwError(fault, Logger.errors.NUMERIC_FAULT, params);\n}\n\n// value should have no prefix\nexport function _base36To16(value: string): string {\n    return (new BN(value, 36)).toString(16);\n}\n\n// value should have no prefix\nexport function _base16To36(value: string): string {\n    return (new BN(value, 16)).toString(36);\n}\n","export const version = \"bignumber/5.7.0\";\n","\"use strict\";\n\nimport { arrayify, BytesLike, hexZeroPad, isBytes } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { BigNumber, BigNumberish, isBigNumberish } from \"./bignumber\";\n\nconst _constructorGuard = { };\n\nconst Zero = BigNumber.from(0);\nconst NegativeOne = BigNumber.from(-1);\n\nfunction throwFault(message: string, fault: string, operation: string, value?: any): never {\n    const params: any = { fault: fault, operation: operation };\n    if (value !== undefined) { params.value = value; }\n    return logger.throwError(message, Logger.errors.NUMERIC_FAULT, params);\n}\n\n// Constant to pull zeros from for multipliers\nlet zeros = \"0\";\nwhile (zeros.length < 256) { zeros += zeros; }\n\n// Returns a string \"1\" followed by decimal \"0\"s\nfunction getMultiplier(decimals: BigNumberish): string {\n\n    if (typeof(decimals) !== \"number\") {\n        try {\n            decimals = BigNumber.from(decimals).toNumber();\n        } catch (e) { }\n    }\n\n    if (typeof(decimals) === \"number\" && decimals >= 0 && decimals <= 256 && !(decimals % 1)) {\n        return (\"1\" + zeros.substring(0, decimals));\n    }\n\n    return logger.throwArgumentError(\"invalid decimal size\", \"decimals\", decimals);\n}\n\nexport function formatFixed(value: BigNumberish, decimals?: string | BigNumberish): string {\n    if (decimals == null) { decimals = 0; }\n    const multiplier = getMultiplier(decimals);\n\n    // Make sure wei is a big number (convert as necessary)\n    value = BigNumber.from(value);\n\n    const negative = value.lt(Zero);\n    if (negative) { value = value.mul(NegativeOne); }\n\n    let fraction = value.mod(multiplier).toString();\n    while (fraction.length < multiplier.length - 1) { fraction = \"0\" + fraction; }\n\n    // Strip training 0\n    fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n\n    const whole = value.div(multiplier).toString();\n    if (multiplier.length === 1) {\n        value = whole;\n    } else {\n        value = whole + \".\" + fraction;\n    }\n\n    if (negative) { value = \"-\" + value; }\n\n    return value;\n}\n\nexport function parseFixed(value: string, decimals?: BigNumberish): BigNumber {\n\n    if (decimals == null) { decimals = 0; }\n    const multiplier = getMultiplier(decimals);\n\n    if (typeof(value) !== \"string\" || !value.match(/^-?[0-9.]+$/)) {\n        logger.throwArgumentError(\"invalid decimal value\", \"value\", value);\n    }\n\n    // Is it negative?\n    const negative = (value.substring(0, 1) === \"-\");\n    if (negative) { value = value.substring(1); }\n\n    if (value === \".\") {\n        logger.throwArgumentError(\"missing value\", \"value\", value);\n    }\n\n    // Split it into a whole and fractional part\n    const comps = value.split(\".\");\n    if (comps.length > 2) {\n        logger.throwArgumentError(\"too many decimal points\", \"value\", value);\n    }\n\n    let whole = comps[0], fraction = comps[1];\n    if (!whole) { whole = \"0\"; }\n    if (!fraction) { fraction = \"0\"; }\n\n    // Trim trailing zeros\n    while (fraction[fraction.length - 1] === \"0\") {\n        fraction = fraction.substring(0, fraction.length - 1);\n    }\n\n    // Check the fraction doesn't exceed our decimals size\n    if (fraction.length > multiplier.length - 1) {\n        throwFault(\"fractional component exceeds decimals\", \"underflow\", \"parseFixed\");\n    }\n\n    // If decimals is 0, we have an empty string for fraction\n    if (fraction === \"\") { fraction = \"0\"; }\n\n    // Fully pad the string with zeros to get to wei\n    while (fraction.length < multiplier.length - 1) { fraction += \"0\"; }\n\n    const wholeValue = BigNumber.from(whole);\n    const fractionValue = BigNumber.from(fraction);\n\n    let wei = (wholeValue.mul(multiplier)).add(fractionValue);\n\n    if (negative) { wei = wei.mul(NegativeOne); }\n\n    return wei;\n}\n\n\nexport class FixedFormat {\n    readonly signed: boolean;\n    readonly width: number;\n    readonly decimals: number;\n    readonly name: string;\n    readonly _multiplier: string;\n\n    constructor(constructorGuard: any, signed: boolean, width: number, decimals: number) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedFormat constructor; use FixedFormat.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n\n        this.signed = signed;\n        this.width = width;\n        this.decimals = decimals;\n\n        this.name = (signed ? \"\": \"u\") + \"fixed\" + String(width) + \"x\" + String(decimals);\n\n        this._multiplier = getMultiplier(decimals);\n\n        Object.freeze(this);\n    }\n\n    static from(value: any): FixedFormat {\n        if (value instanceof FixedFormat) { return value; }\n\n        if (typeof(value) === \"number\") {\n            value = `fixed128x${value}`\n        }\n\n        let signed = true;\n        let width = 128;\n        let decimals = 18;\n\n        if (typeof(value) === \"string\") {\n            if (value === \"fixed\") {\n                // defaults...\n            } else if (value === \"ufixed\") {\n                signed = false;\n            } else {\n                const match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);\n                if (!match) { logger.throwArgumentError(\"invalid fixed format\", \"format\", value); }\n                signed = (match[1] !== \"u\");\n                width = parseInt(match[2]);\n                decimals = parseInt(match[3]);\n            }\n        } else if (value) {\n            const check = (key: string, type: string, defaultValue: any): any => {\n                if (value[key] == null) { return defaultValue; }\n                if (typeof(value[key]) !== type) {\n                    logger.throwArgumentError(\"invalid fixed format (\" + key + \" not \" + type +\")\", \"format.\" + key, value[key]);\n                }\n                return value[key];\n            }\n            signed = check(\"signed\", \"boolean\", signed);\n            width = check(\"width\", \"number\", width);\n            decimals = check(\"decimals\", \"number\", decimals);\n        }\n\n        if (width % 8) {\n            logger.throwArgumentError(\"invalid fixed format width (not byte aligned)\", \"format.width\", width);\n        }\n\n        if (decimals > 80) {\n            logger.throwArgumentError(\"invalid fixed format (decimals too large)\", \"format.decimals\", decimals);\n        }\n\n        return new FixedFormat(_constructorGuard, signed, width, decimals);\n    }\n}\n\nexport class FixedNumber {\n    readonly format: FixedFormat;\n    readonly _hex: string;\n    readonly _value: string;\n\n    readonly _isFixedNumber: boolean;\n\n    constructor(constructorGuard: any, hex: string, value: string, format?: FixedFormat) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedNumber constructor; use FixedNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n\n        this.format = format;\n        this._hex = hex;\n        this._value = value;\n\n        this._isFixedNumber = true;\n\n        Object.freeze(this);\n    }\n\n    _checkFormat(other: FixedNumber): void {\n        if (this.format.name !== other.format.name) {\n            logger.throwArgumentError(\"incompatible format; use fixedNumber.toFormat\", \"other\", other);\n        }\n    }\n\n    addUnsafe(other: FixedNumber): FixedNumber {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.add(b), this.format.decimals, this.format);\n    }\n\n    subUnsafe(other: FixedNumber): FixedNumber {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.sub(b), this.format.decimals, this.format);\n    }\n\n    mulUnsafe(other: FixedNumber): FixedNumber {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(b).div(this.format._multiplier), this.format.decimals, this.format);\n    }\n\n    divUnsafe(other: FixedNumber): FixedNumber {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(this.format._multiplier).div(b), this.format.decimals, this.format);\n    }\n\n    floor(): FixedNumber {\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) { comps.push(\"0\"); }\n\n        let result = FixedNumber.from(comps[0], this.format);\n\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (this.isNegative() && hasFraction) {\n            result = result.subUnsafe(ONE.toFormat(result.format));\n        }\n\n        return result;\n    }\n\n    ceiling(): FixedNumber {\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) { comps.push(\"0\"); }\n\n        let result = FixedNumber.from(comps[0], this.format);\n\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (!this.isNegative() && hasFraction) {\n            result = result.addUnsafe(ONE.toFormat(result.format));\n        }\n\n        return result;\n    }\n\n    // @TODO: Support other rounding algorithms\n    round(decimals?: number): FixedNumber {\n        if (decimals == null) { decimals = 0; }\n\n        // If we are already in range, we're done\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) { comps.push(\"0\"); }\n\n        if (decimals < 0 || decimals > 80 || (decimals % 1)) {\n            logger.throwArgumentError(\"invalid decimal count\", \"decimals\", decimals);\n        }\n\n        if (comps[1].length <= decimals) { return this; }\n\n        const factor = FixedNumber.from(\"1\" + zeros.substring(0, decimals), this.format);\n        const bump = BUMP.toFormat(this.format);\n\n        return this.mulUnsafe(factor).addUnsafe(bump).floor().divUnsafe(factor);\n    }\n\n    isZero(): boolean {\n        return (this._value === \"0.0\" || this._value === \"0\");\n    }\n\n    isNegative(): boolean {\n        return (this._value[0] === \"-\");\n    }\n\n    toString(): string { return this._value; }\n\n    toHexString(width?: number): string {\n        if (width == null) { return this._hex; }\n        if (width % 8) { logger.throwArgumentError(\"invalid byte width\", \"width\", width); }\n        const hex = BigNumber.from(this._hex).fromTwos(this.format.width).toTwos(width).toHexString();\n        return hexZeroPad(hex, width / 8);\n    }\n\n    toUnsafeFloat(): number { return parseFloat(this.toString()); }\n\n    toFormat(format: FixedFormat | string): FixedNumber {\n        return FixedNumber.fromString(this._value, format);\n    }\n\n\n    static fromValue(value: BigNumber, decimals?: BigNumberish, format?: FixedFormat | string | number): FixedNumber {\n        // If decimals looks more like a format, and there is no format, shift the parameters\n        if (format == null && decimals != null && !isBigNumberish(decimals)) {\n            format = decimals;\n            decimals = null;\n        }\n\n        if (decimals == null) { decimals = 0; }\n        if (format == null) { format = \"fixed\"; }\n\n        return FixedNumber.fromString(formatFixed(value, decimals), FixedFormat.from(format));\n    }\n\n\n    static fromString(value: string, format?: FixedFormat | string | number): FixedNumber {\n        if (format == null) { format = \"fixed\"; }\n\n        const fixedFormat = FixedFormat.from(format);\n\n        const numeric = parseFixed(value, fixedFormat.decimals);\n\n        if (!fixedFormat.signed && numeric.lt(Zero)) {\n            throwFault(\"unsigned value cannot be negative\", \"overflow\", \"value\", value);\n        }\n\n        let hex: string = null;\n        if (fixedFormat.signed) {\n            hex = numeric.toTwos(fixedFormat.width).toHexString();\n        } else {\n            hex = numeric.toHexString();\n            hex = hexZeroPad(hex, fixedFormat.width / 8);\n        }\n\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n\n    static fromBytes(value: BytesLike, format?: FixedFormat | string | number): FixedNumber {\n        if (format == null) { format = \"fixed\"; }\n\n        const fixedFormat = FixedFormat.from(format);\n\n        if (arrayify(value).length > fixedFormat.width / 8) {\n            throw new Error(\"overflow\");\n        }\n\n        let numeric = BigNumber.from(value);\n        if (fixedFormat.signed) { numeric = numeric.fromTwos(fixedFormat.width); }\n\n        const hex = numeric.toTwos((fixedFormat.signed ? 0: 1) + fixedFormat.width).toHexString();\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n\n    static from(value: any, format?: FixedFormat | string | number) {\n        if (typeof(value) === \"string\") {\n            return FixedNumber.fromString(value, format);\n        }\n\n        if (isBytes(value)) {\n            return FixedNumber.fromBytes(value, format);\n        }\n\n        try {\n            return FixedNumber.fromValue(value, 0, format);\n        } catch (error) {\n            // Allow NUMERIC_FAULT to bubble up\n            if (error.code !== Logger.errors.INVALID_ARGUMENT) {\n                throw error;\n            }\n        }\n\n        return logger.throwArgumentError(\"invalid FixedNumber value\", \"value\", value);\n    }\n\n    static isFixedNumber(value: any): value is FixedNumber {\n        return !!(value && value._isFixedNumber);\n    }\n}\n\nconst ONE = FixedNumber.from(1);\nconst BUMP = FixedNumber.from(\"0.5\");\n","\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport function defineReadOnly<T, K extends keyof T>(object: T, name: K, value: T[K]): void {\n    Object.defineProperty(object, name, {\n        enumerable: true,\n        value: value,\n        writable: false,\n    });\n}\n\n// Crawl up the constructor chain to find a static method\nexport function getStatic<T>(ctor: any, key: string): T {\n    for (let i = 0; i < 32; i++) {\n        if (ctor[key]) { return ctor[key]; }\n        if (!ctor.prototype || typeof(ctor.prototype) !== \"object\") { break; }\n        ctor = Object.getPrototypeOf(ctor.prototype).constructor;\n    }\n    return null;\n}\n\nexport type Deferrable<T> = {\n    [ K in keyof T ]: T[K] | Promise<T[K]>;\n}\n\n\ntype Result = { key: string, value: any};\n\nexport async function resolveProperties<T>(object: Readonly<Deferrable<T>>): Promise<T> {\n    const promises: Array<Promise<Result>> = Object.keys(object).map((key) => {\n        const value = object[<keyof Deferrable<T>>key];\n        return Promise.resolve(value).then((v) => ({ key: key, value: v }));\n    });\n\n    const results = await Promise.all(promises);\n\n    return results.reduce((accum, result) => {\n        accum[<keyof T>(result.key)] = result.value;\n        return accum;\n    }, <T>{ });\n}\n\nexport function checkProperties(object: any, properties: { [ name: string ]: boolean }): void {\n    if (!object || typeof(object) !== \"object\") {\n        logger.throwArgumentError(\"invalid object\", \"object\", object);\n    }\n\n    Object.keys(object).forEach((key) => {\n        if (!properties[key]) {\n            logger.throwArgumentError(\"invalid object key - \" + key, \"transaction:\" + key, object);\n        }\n    });\n}\n\nexport function shallowCopy<T>(object: T): T {\n    const result: any = {};\n    for (const key in object) { result[key] = object[key]; }\n    return result;\n}\n\nconst opaque: { [key: string]: boolean } = { bigint: true, boolean: true, \"function\": true, number: true, string: true };\n\nfunction _isFrozen(object: any): boolean {\n\n    // Opaque objects are not mutable, so safe to copy by assignment\n    if (object === undefined || object === null || opaque[typeof(object)]) { return true; }\n\n    if (Array.isArray(object) || typeof(object) === \"object\") {\n        if (!Object.isFrozen(object)) { return false; }\n\n        const keys = Object.keys(object);\n        for (let i = 0; i < keys.length; i++) {\n            let value: any = null;\n            try {\n                value = object[keys[i]];\n            } catch (error) {\n                // If accessing a value triggers an error, it is a getter\n                // designed to do so (e.g. Result) and is therefore \"frozen\"\n                continue;\n            }\n\n            if (!_isFrozen(value)) { return false; }\n        }\n\n        return true;\n    }\n\n    return logger.throwArgumentError(`Cannot deepCopy ${ typeof(object) }`, \"object\", object);\n}\n\n// Returns a new copy of object, such that no properties may be replaced.\n// New properties may be added only to objects.\nfunction _deepCopy(object: any): any {\n\n    if (_isFrozen(object)) { return object; }\n\n    // Arrays are mutable, so we need to create a copy\n    if (Array.isArray(object)) {\n        return Object.freeze(object.map((item) => deepCopy(item)));\n    }\n\n    if (typeof(object) === \"object\") {\n        const result: { [ key: string ]: any } = {};\n        for (const key in object) {\n            const value = object[key];\n            if (value === undefined) { continue; }\n            defineReadOnly(result, key, deepCopy(value));\n        }\n\n        return result;\n    }\n\n    return logger.throwArgumentError(`Cannot deepCopy ${ typeof(object) }`, \"object\", object);\n}\n\nexport function deepCopy<T>(object: T): T {\n    return _deepCopy(object);\n}\n\nexport class Description<T = any> {\n    constructor(info: { [ K in keyof T ]: T[K] }) {\n        for (const key in info) {\n            (<any>this)[key] = deepCopy(info[key]);\n        }\n    }\n}\n","export const version = \"properties/5.7.0\";\n","export const version = \"abi/5.7.0\";\n","\"use strict\";\n\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport interface JsonFragmentType {\n    readonly name?: string;\n    readonly indexed?: boolean;\n    readonly type?: string;\n    readonly internalType?: any; // @TODO: in v6 reduce type\n    readonly components?: ReadonlyArray<JsonFragmentType>;\n}\n\nexport interface JsonFragment {\n    readonly name?: string;\n    readonly type?: string;\n\n    readonly anonymous?: boolean;\n\n    readonly payable?: boolean;\n    readonly constant?: boolean;\n    readonly stateMutability?: string;\n\n    readonly inputs?: ReadonlyArray<JsonFragmentType>;\n    readonly outputs?: ReadonlyArray<JsonFragmentType>;\n\n    readonly gas?: string;\n};\n\nconst _constructorGuard = { };\n\n// AST Node parser state\ntype ParseState = {\n    allowArray?: boolean,\n    allowName?: boolean,\n    allowParams?: boolean,\n    allowType?: boolean,\n    readArray?: boolean,\n};\n\n// AST Node\ntype ParseNode = {\n    parent?: any,\n    type?: string,\n    name?: string,\n    state?: ParseState,\n    indexed?: boolean,\n    components?: Array<ParseNode>\n};\n\nlet ModifiersBytes: { [ name: string ]: boolean } = { calldata: true, memory: true, storage: true };\nlet ModifiersNest: { [ name: string ]: boolean } = { calldata: true, memory: true };\nfunction checkModifier(type: string, name: string): boolean {\n    if (type === \"bytes\" || type === \"string\") {\n        if (ModifiersBytes[name]) { return true; }\n    } else if (type === \"address\") {\n        if (name === \"payable\") { return true; }\n    } else if (type.indexOf(\"[\") >= 0 || type === \"tuple\") {\n        if (ModifiersNest[name]) { return true; }\n    }\n    if (ModifiersBytes[name] || name === \"payable\") {\n        logger.throwArgumentError(\"invalid modifier\", \"name\", name);\n    }\n    return false;\n}\n\n// @TODO: Make sure that children of an indexed tuple are marked with a null indexed\nfunction parseParamType(param: string, allowIndexed: boolean): ParseNode {\n\n    let originalParam = param;\n    function throwError(i: number) {\n        logger.throwArgumentError(`unexpected character at position ${ i }`, \"param\", param);\n    }\n    param = param.replace(/\\s/g, \" \");\n\n    function newNode(parent: ParseNode): ParseNode {\n        let node: ParseNode = { type: \"\", name: \"\", parent: parent, state: { allowType: true } };\n        if (allowIndexed) { node.indexed = false; }\n        return node\n    }\n\n    let parent: ParseNode = { type: \"\", name: \"\", state: { allowType: true } };\n    let node = parent;\n\n    for (let i = 0; i < param.length; i++) {\n        let c = param[i];\n        switch (c) {\n            case \"(\":\n                if (node.state.allowType && node.type === \"\") {\n                    node.type = \"tuple\";\n                } else if (!node.state.allowParams) {\n                    throwError(i);\n                }\n                node.state.allowType = false;\n                node.type = verifyType(node.type);\n                node.components = [ newNode(node) ];\n                node = node.components[0];\n                break;\n\n            case \")\":\n                delete node.state;\n\n                if (node.name === \"indexed\") {\n                    if (!allowIndexed) { throwError(i); }\n                    node.indexed = true;\n                    node.name = \"\";\n                }\n\n                if (checkModifier(node.type, node.name)) { node.name = \"\"; }\n\n                node.type = verifyType(node.type);\n\n                let child = node;\n                node = node.parent;\n                if (!node) { throwError(i); }\n                delete child.parent;\n                node.state.allowParams = false;\n                node.state.allowName = true;\n                node.state.allowArray = true;\n                break;\n\n            case \",\":\n                delete node.state;\n\n                if (node.name === \"indexed\") {\n                    if (!allowIndexed) { throwError(i); }\n                    node.indexed = true;\n                    node.name = \"\";\n                }\n\n                if (checkModifier(node.type, node.name)) { node.name = \"\"; }\n\n                node.type = verifyType(node.type);\n\n                let sibling: ParseNode = newNode(node.parent);\n                 //{ type: \"\", name: \"\", parent: node.parent, state: { allowType: true } };\n                node.parent.components.push(sibling);\n                delete node.parent;\n                node = sibling;\n                break;\n\n            // Hit a space...\n            case \" \":\n\n                // If reading type, the type is done and may read a param or name\n                if (node.state.allowType) {\n                    if (node.type !== \"\") {\n                        node.type = verifyType(node.type);\n                        delete node.state.allowType;\n                        node.state.allowName = true;\n                        node.state.allowParams = true;\n                    }\n                }\n\n                // If reading name, the name is done\n                if (node.state.allowName) {\n                    if (node.name !== \"\") {\n                        if (node.name === \"indexed\") {\n                            if (!allowIndexed) { throwError(i); }\n                            if (node.indexed) { throwError(i); }\n                            node.indexed = true;\n                            node.name = \"\";\n                        } else if (checkModifier(node.type, node.name)) {\n                            node.name = \"\";\n                        } else {\n                            node.state.allowName = false;\n                        }\n                    }\n                }\n\n                break;\n\n            case \"[\":\n                if (!node.state.allowArray) { throwError(i); }\n\n                node.type += c;\n\n                node.state.allowArray = false;\n                node.state.allowName = false;\n                node.state.readArray = true;\n                break;\n\n            case \"]\":\n                if (!node.state.readArray) { throwError(i); }\n\n                node.type += c;\n\n                node.state.readArray = false;\n                node.state.allowArray = true;\n                node.state.allowName = true;\n                break;\n\n            default:\n                if (node.state.allowType) {\n                    node.type += c;\n                    node.state.allowParams = true;\n                    node.state.allowArray = true;\n                } else if (node.state.allowName) {\n                    node.name += c;\n                    delete node.state.allowArray;\n                } else if (node.state.readArray) {\n                    node.type += c;\n                } else {\n                    throwError(i);\n               }\n        }\n    }\n\n    if (node.parent) { logger.throwArgumentError(\"unexpected eof\", \"param\", param); }\n\n    delete parent.state;\n\n    if (node.name === \"indexed\") {\n        if (!allowIndexed) { throwError(originalParam.length - 7); }\n        if (node.indexed) { throwError(originalParam.length - 7); }\n        node.indexed = true;\n        node.name = \"\";\n    } else if (checkModifier(node.type, node.name)) {\n        node.name = \"\";\n    }\n\n    parent.type = verifyType(parent.type);\n\n    return parent;\n}\n\nfunction populate(object: any, params: any) {\n    for (let key in params) { defineReadOnly(object, key, params[key]); }\n}\n\nexport const FormatTypes: { [ name: string ]: string } = Object.freeze({\n    // Bare formatting, as is needed for computing a sighash of an event or function\n    sighash: \"sighash\",\n\n    // Human-Readable with Minimal spacing and without names (compact human-readable)\n    minimal: \"minimal\",\n\n    // Human-Readable with nice spacing, including all names\n    full: \"full\",\n\n    // JSON-format a la Solidity\n    json: \"json\"\n});\n\nconst paramTypeArray = new RegExp(/^(.*)\\[([0-9]*)\\]$/);\n\nexport class ParamType {\n\n    // The local name of the parameter (of null if unbound)\n    readonly name: string;\n\n    // The fully qualified type (e.g. \"address\", \"tuple(address)\", \"uint256[3][]\"\n    readonly type: string;\n\n    // The base type (e.g. \"address\", \"tuple\", \"array\")\n    readonly baseType: string;\n\n    // Indexable Paramters ONLY (otherwise null)\n    readonly indexed: boolean;\n\n    // Tuples ONLY: (otherwise null)\n    //  - sub-components\n    readonly components: Array<ParamType>;\n\n    // Arrays ONLY: (otherwise null)\n    //  - length of the array (-1 for dynamic length)\n    //  - child type\n    readonly arrayLength: number;\n    readonly arrayChildren: ParamType;\n\n    readonly _isParamType: boolean;\n\n    constructor(constructorGuard: any, params: any) {\n        if (constructorGuard !== _constructorGuard) { logger.throwError(\"use fromString\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"new ParamType()\"\n        }); }\n        populate(this, params);\n\n        let match = this.type.match(paramTypeArray);\n        if (match) {\n            populate(this, {\n                arrayLength: parseInt(match[2] || \"-1\"),\n                arrayChildren: ParamType.fromObject({\n                    type: match[1],\n                    components: this.components\n                }),\n                baseType: \"array\"\n            });\n        } else {\n            populate(this, {\n                arrayLength: null,\n                arrayChildren: null,\n                baseType: ((this.components != null) ? \"tuple\": this.type)\n            });\n        }\n\n        this._isParamType = true;\n\n        Object.freeze(this);\n    }\n\n    // Format the parameter fragment\n    //   - sighash: \"(uint256,address)\"\n    //   - minimal: \"tuple(uint256,address) indexed\"\n    //   - full:    \"tuple(uint256 foo, address bar) indexed baz\"\n    format(format?: string): string {\n        if (!format) { format = FormatTypes.sighash; }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n\n        if (format === FormatTypes.json) {\n            let result: any = {\n                type: ((this.baseType === \"tuple\") ? \"tuple\": this.type),\n                name: (this.name || undefined)\n            };\n            if (typeof(this.indexed) === \"boolean\") { result.indexed = this.indexed; }\n            if (this.components) {\n                result.components = this.components.map((comp) => JSON.parse(comp.format(format)));\n            }\n            return JSON.stringify(result);\n        }\n\n        let result = \"\";\n\n        // Array\n        if (this.baseType === \"array\") {\n            result += this.arrayChildren.format(format);\n            result += \"[\" + (this.arrayLength < 0 ? \"\": String(this.arrayLength)) + \"]\";\n        } else {\n            if (this.baseType === \"tuple\") {\n                if (format !== FormatTypes.sighash) {\n                    result += this.type;\n                }\n                result += \"(\" + this.components.map(\n                    (comp) => comp.format(format)\n                ).join((format === FormatTypes.full) ? \", \": \",\") + \")\";\n            } else {\n                result += this.type;\n            }\n        }\n\n        if (format !== FormatTypes.sighash) {\n            if (this.indexed === true) { result += \" indexed\"; }\n            if (format === FormatTypes.full && this.name) {\n                result += \" \" + this.name;\n            }\n        }\n\n        return result;\n    }\n\n    static from(value: string | JsonFragmentType | ParamType, allowIndexed?: boolean): ParamType {\n        if (typeof(value) === \"string\") {\n            return ParamType.fromString(value, allowIndexed);\n        }\n        return ParamType.fromObject(value);\n    }\n\n    static fromObject(value: JsonFragmentType | ParamType): ParamType {\n        if (ParamType.isParamType(value)) { return value; }\n\n        return new ParamType(_constructorGuard, {\n            name: (value.name || null),\n            type: verifyType(value.type),\n            indexed: ((value.indexed == null) ? null: !!value.indexed),\n            components: (value.components ? value.components.map(ParamType.fromObject): null)\n        });\n    }\n\n    static fromString(value: string, allowIndexed?: boolean): ParamType {\n        function ParamTypify(node: ParseNode): ParamType {\n            return ParamType.fromObject({\n                name: node.name,\n                type: node.type,\n                indexed: node.indexed,\n                components: node.components\n            });\n        }\n\n        return ParamTypify(parseParamType(value, !!allowIndexed));\n    }\n\n    static isParamType(value: any): value is ParamType {\n        return !!(value != null && value._isParamType);\n    }\n};\n\nfunction parseParams(value: string, allowIndex: boolean): Array<ParamType> {\n    return splitNesting(value).map((param) => ParamType.fromString(param, allowIndex));\n}\n\ntype TypeCheck<T> = { -readonly [ K in keyof T ]: T[K] };\n\ninterface _Fragment {\n    readonly type: string;\n    readonly name: string;\n    readonly inputs: ReadonlyArray<ParamType>;\n}\n\nexport abstract class Fragment {\n\n    readonly type: string;\n    readonly name: string;\n    readonly inputs: Array<ParamType>;\n\n    readonly _isFragment: boolean;\n\n    constructor(constructorGuard: any, params: any) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"use a static from method\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new Fragment()\"\n            });\n        }\n        populate(this, params);\n\n        this._isFragment = true;\n\n        Object.freeze(this);\n    }\n\n    abstract format(format?: string): string;\n\n    static from(value: Fragment | JsonFragment | string): Fragment {\n        if (Fragment.isFragment(value)) { return value; }\n\n        if (typeof(value) === \"string\") {\n            return Fragment.fromString(value);\n        }\n\n        return Fragment.fromObject(value);\n    }\n\n    static fromObject(value: Fragment | JsonFragment): Fragment {\n        if (Fragment.isFragment(value)) { return value; }\n\n        switch (value.type) {\n            case \"function\":\n                return FunctionFragment.fromObject(value);\n            case \"event\":\n                return EventFragment.fromObject(value);\n            case \"constructor\":\n                return ConstructorFragment.fromObject(value);\n            case \"error\":\n                return ErrorFragment.fromObject(value);\n            case \"fallback\":\n            case \"receive\":\n                // @TODO: Something? Maybe return a FunctionFragment? A custom DefaultFunctionFragment?\n                return null;\n        }\n\n        return logger.throwArgumentError(\"invalid fragment object\", \"value\", value);\n    }\n\n    static fromString(value: string): Fragment {\n        // Make sure the \"returns\" is surrounded by a space and all whitespace is exactly one space\n        value = value.replace(/\\s/g, \" \");\n        value = value.replace(/\\(/g, \" (\").replace(/\\)/g, \") \").replace(/\\s+/g, \" \");\n        value = value.trim();\n\n        if (value.split(\" \")[0] === \"event\") {\n           return EventFragment.fromString(value.substring(5).trim());\n        } else if (value.split(\" \")[0] === \"function\") {\n            return FunctionFragment.fromString(value.substring(8).trim());\n        } else if (value.split(\"(\")[0].trim() === \"constructor\") {\n            return ConstructorFragment.fromString(value.trim());\n        } else if (value.split(\" \")[0] === \"error\") {\n           return ErrorFragment.fromString(value.substring(5).trim());\n        }\n\n        return logger.throwArgumentError(\"unsupported fragment\", \"value\", value);\n    }\n\n    static isFragment(value: any): value is Fragment {\n        return !!(value && value._isFragment);\n    }\n}\n\ninterface _EventFragment extends _Fragment {\n    readonly anonymous: boolean;\n}\n\nexport class EventFragment extends Fragment {\n    readonly anonymous: boolean;\n\n    format(format?: string): string {\n        if (!format) { format = FormatTypes.sighash; }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"event\",\n                anonymous: this.anonymous,\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))\n            });\n        }\n\n        let result = \"\";\n\n        if (format !== FormatTypes.sighash) {\n            result += \"event \";\n        }\n\n        result += this.name + \"(\" + this.inputs.map(\n            (input) => input.format(format)\n        ).join((format === FormatTypes.full) ? \", \": \",\") + \") \";\n\n        if (format !== FormatTypes.sighash) {\n            if (this.anonymous) {\n                result += \"anonymous \";\n            }\n        }\n\n        return result.trim();\n    }\n\n    static from(value: EventFragment | JsonFragment | string): EventFragment {\n        if (typeof(value) === \"string\") {\n            return EventFragment.fromString(value);\n        }\n        return EventFragment.fromObject(value);\n    }\n\n    static fromObject(value: JsonFragment | EventFragment): EventFragment {\n        if (EventFragment.isEventFragment(value)) { return value; }\n\n        if (value.type !== \"event\") {\n            logger.throwArgumentError(\"invalid event object\", \"value\", value);\n        }\n\n        const params: TypeCheck<_EventFragment> = {\n            name: verifyIdentifier(value.name),\n            anonymous: value.anonymous,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            type: \"event\"\n        };\n\n        return new EventFragment(_constructorGuard, params);\n    }\n\n    static fromString(value: string): EventFragment {\n\n        let match = value.match(regexParen);\n        if (!match) {\n            logger.throwArgumentError(\"invalid event string\", \"value\", value);\n        }\n\n        let anonymous = false;\n        match[3].split(\" \").forEach((modifier) => {\n            switch(modifier.trim()) {\n                case \"anonymous\":\n                    anonymous = true;\n                    break;\n                case \"\":\n                    break;\n                default:\n                    logger.warn(\"unknown modifier: \" + modifier);\n            }\n        });\n\n        return EventFragment.fromObject({\n            name: match[1].trim(),\n            anonymous: anonymous,\n            inputs: parseParams(match[2], true),\n            type: \"event\"\n        });\n    }\n\n    static isEventFragment(value: any): value is EventFragment {\n        return (value && value._isFragment && value.type === \"event\");\n    }\n}\n\nfunction parseGas(value: string, params: any): string {\n    params.gas = null;\n\n    let comps = value.split(\"@\");\n    if (comps.length !== 1) {\n        if (comps.length > 2) {\n            logger.throwArgumentError(\"invalid human-readable ABI signature\", \"value\", value);\n        }\n        if (!comps[1].match(/^[0-9]+$/)) {\n            logger.throwArgumentError(\"invalid human-readable ABI signature gas\", \"value\", value);\n        }\n        params.gas = BigNumber.from(comps[1]);\n        return comps[0];\n    }\n\n    return value;\n}\n\nfunction parseModifiers(value: string, params: any): void {\n    params.constant = false;\n    params.payable = false;\n    params.stateMutability = \"nonpayable\";\n\n    value.split(\" \").forEach((modifier) => {\n        switch (modifier.trim()) {\n            case \"constant\":\n                params.constant = true;\n                break;\n            case \"payable\":\n                params.payable = true;\n                params.stateMutability = \"payable\";\n                break;\n            case \"nonpayable\":\n                params.payable = false;\n                params.stateMutability = \"nonpayable\";\n                break;\n            case \"pure\":\n                params.constant = true;\n                params.stateMutability = \"pure\";\n                break;\n            case \"view\":\n                params.constant = true;\n                params.stateMutability = \"view\";\n                break;\n            case \"external\":\n            case \"public\":\n            case \"\":\n                break;\n            default:\n                console.log(\"unknown modifier: \" + modifier);\n        }\n    });\n}\n\ntype StateInputValue = {\n    constant?: boolean;\n    payable?: boolean;\n    stateMutability?: string;\n    type?: string;\n};\n\ntype StateOutputValue = {\n    constant: boolean;\n    payable: boolean;\n    stateMutability: string;\n};\n\nfunction verifyState(value: StateInputValue): StateOutputValue {\n    let result: any = {\n        constant: false,\n        payable: true,\n        stateMutability: \"payable\"\n    };\n\n    if (value.stateMutability != null) {\n        result.stateMutability = value.stateMutability;\n\n        // Set (and check things are consistent) the constant property\n        result.constant = (result.stateMutability === \"view\" || result.stateMutability === \"pure\");\n        if (value.constant != null) {\n            if ((!!value.constant) !== result.constant) {\n                logger.throwArgumentError(\"cannot have constant function with mutability \" + result.stateMutability, \"value\", value);\n            }\n        }\n\n        // Set (and check things are consistent) the payable property\n        result.payable = (result.stateMutability === \"payable\");\n        if (value.payable != null) {\n            if ((!!value.payable) !== result.payable) {\n                logger.throwArgumentError(\"cannot have payable function with mutability \" + result.stateMutability, \"value\", value);\n            }\n        }\n\n    } else if (value.payable != null) {\n        result.payable = !!value.payable;\n\n        // If payable we can assume non-constant; otherwise we can't assume\n        if (value.constant == null && !result.payable && value.type !== \"constructor\") {\n            logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n        }\n\n        result.constant = !!value.constant;\n\n        if (result.constant) {\n            result.stateMutability = \"view\";\n        } else {\n            result.stateMutability = (result.payable ? \"payable\": \"nonpayable\");\n        }\n\n        if (result.payable && result.constant) {\n            logger.throwArgumentError(\"cannot have constant payable function\", \"value\", value);\n        }\n\n    } else if (value.constant != null) {\n        result.constant = !!value.constant;\n        result.payable = !result.constant;\n        result.stateMutability = (result.constant ? \"view\": \"payable\");\n\n    } else if (value.type !== \"constructor\") {\n        logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n    }\n\n    return result;\n}\n\ninterface _ConstructorFragment extends _Fragment {\n    stateMutability: string;\n    payable: boolean;\n    gas?: BigNumber;\n}\n\nexport class ConstructorFragment extends Fragment {\n    stateMutability: string;\n    payable: boolean;\n    gas?: BigNumber;\n\n    format(format?: string): string {\n        if (!format) { format = FormatTypes.sighash; }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"constructor\",\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability: undefined),\n                payable: this.payable,\n                gas: (this.gas ? this.gas.toNumber(): undefined),\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))\n            });\n        }\n\n        if (format === FormatTypes.sighash) {\n            logger.throwError(\"cannot format a constructor for sighash\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"format(sighash)\"\n            });\n        }\n\n        let result = \"constructor(\" + this.inputs.map(\n            (input) => input.format(format)\n        ).join((format === FormatTypes.full) ? \", \": \",\") + \") \";\n\n        if (this.stateMutability && this.stateMutability !== \"nonpayable\") {\n            result += this.stateMutability + \" \";\n        }\n\n        return result.trim();\n    }\n\n    static from(value: ConstructorFragment | JsonFragment | string): ConstructorFragment {\n        if (typeof(value) === \"string\") {\n            return ConstructorFragment.fromString(value);\n        }\n        return ConstructorFragment.fromObject(value);\n    }\n\n    static fromObject(value: ConstructorFragment | JsonFragment): ConstructorFragment {\n        if (ConstructorFragment.isConstructorFragment(value)) { return value; }\n\n        if (value.type !== \"constructor\") {\n            logger.throwArgumentError(\"invalid constructor object\", \"value\", value);\n        }\n\n        let state = verifyState(value);\n        if (state.constant) {\n            logger.throwArgumentError(\"constructor cannot be constant\", \"value\", value);\n        }\n\n        const params: TypeCheck<_ConstructorFragment> = {\n            name: null,\n            type: value.type,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject): []),\n            payable: state.payable,\n            stateMutability: state.stateMutability,\n            gas: (value.gas ? BigNumber.from(value.gas): null)\n        };\n\n        return new ConstructorFragment(_constructorGuard, params);\n    }\n\n    static fromString(value: string): ConstructorFragment {\n        let params: any = { type: \"constructor\" };\n\n        value = parseGas(value, params);\n\n        let parens = value.match(regexParen);\n        if (!parens || parens[1].trim() !== \"constructor\") {\n            logger.throwArgumentError(\"invalid constructor string\", \"value\", value);\n        }\n\n        params.inputs = parseParams(parens[2].trim(), false);\n\n        parseModifiers(parens[3].trim(), params);\n\n        return ConstructorFragment.fromObject(params);\n    }\n\n    static isConstructorFragment(value: any): value is ConstructorFragment {\n        return (value && value._isFragment && value.type === \"constructor\");\n    }\n}\n\ninterface _FunctionFragment extends _ConstructorFragment {\n    constant: boolean;\n    outputs?: Array<ParamType>;\n}\n\nexport class FunctionFragment extends ConstructorFragment {\n    constant: boolean;\n    outputs?: Array<ParamType>;\n\n    format(format?: string): string {\n        if (!format) { format = FormatTypes.sighash; }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"function\",\n                name: this.name,\n                constant: this.constant,\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability: undefined),\n                payable: this.payable,\n                gas: (this.gas ? this.gas.toNumber(): undefined),\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n                outputs: this.outputs.map((output) => JSON.parse(output.format(format))),\n            });\n        }\n\n        let result = \"\";\n\n        if (format !== FormatTypes.sighash) {\n            result += \"function \";\n        }\n\n        result += this.name + \"(\" + this.inputs.map(\n            (input) => input.format(format)\n        ).join((format === FormatTypes.full) ? \", \": \",\") + \") \";\n\n        if (format !== FormatTypes.sighash) {\n            if (this.stateMutability) {\n                if (this.stateMutability !== \"nonpayable\") {\n                    result += (this.stateMutability + \" \");\n                }\n            } else if (this.constant) {\n                result += \"view \";\n            }\n\n            if (this.outputs && this.outputs.length) {\n                result += \"returns (\" + this.outputs.map(\n                    (output) => output.format(format)\n                ).join(\", \") + \") \";\n            }\n\n            if (this.gas != null) {\n                result += \"@\" + this.gas.toString() + \" \";\n            }\n        }\n\n        return result.trim();\n    }\n\n    static from(value: FunctionFragment | JsonFragment | string): FunctionFragment {\n        if (typeof(value) === \"string\") {\n            return FunctionFragment.fromString(value);\n        }\n        return FunctionFragment.fromObject(value);\n    }\n\n    static fromObject(value: FunctionFragment | JsonFragment): FunctionFragment {\n        if (FunctionFragment.isFunctionFragment(value)) { return value; }\n\n        if (value.type !== \"function\") {\n            logger.throwArgumentError(\"invalid function object\", \"value\", value);\n        }\n\n        let state = verifyState(value);\n\n        const params: TypeCheck<_FunctionFragment> = {\n            type: value.type,\n            name: verifyIdentifier(value.name),\n            constant: state.constant,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject): []),\n            outputs: (value.outputs ? value.outputs.map(ParamType.fromObject): [ ]),\n            payable: state.payable,\n            stateMutability: state.stateMutability,\n            gas: (value.gas ? BigNumber.from(value.gas): null)\n        };\n\n        return new FunctionFragment(_constructorGuard, params);\n    }\n\n    static fromString(value: string): FunctionFragment {\n        let params: any = { type: \"function\" };\n        value = parseGas(value, params);\n\n        let comps = value.split(\" returns \");\n        if (comps.length > 2) {\n            logger.throwArgumentError(\"invalid function string\", \"value\", value);\n        }\n\n        let parens = comps[0].match(regexParen);\n        if (!parens) {\n            logger.throwArgumentError(\"invalid function signature\", \"value\", value);\n        }\n\n        params.name = parens[1].trim();\n        if (params.name) { verifyIdentifier(params.name); }\n\n        params.inputs = parseParams(parens[2], false);\n\n        parseModifiers(parens[3].trim(), params);\n\n        // We have outputs\n        if (comps.length > 1) {\n           let returns = comps[1].match(regexParen);\n            if (returns[1].trim() != \"\" || returns[3].trim() != \"\") {\n                logger.throwArgumentError(\"unexpected tokens\", \"value\", value);\n            }\n            params.outputs = parseParams(returns[2], false);\n        } else {\n            params.outputs = [ ];\n        }\n\n        return FunctionFragment.fromObject(params);\n    }\n\n    static isFunctionFragment(value: any): value is FunctionFragment {\n        return (value && value._isFragment && value.type === \"function\");\n    }\n}\n\n//export class StructFragment extends Fragment {\n//}\n\nfunction checkForbidden(fragment: ErrorFragment): ErrorFragment {\n    const sig = fragment.format();\n    if (sig === \"Error(string)\" || sig === \"Panic(uint256)\") {\n        logger.throwArgumentError(`cannot specify user defined ${ sig } error`, \"fragment\", fragment);\n    }\n    return fragment;\n}\n\nexport class ErrorFragment extends Fragment {\n\n    format(format?: string): string {\n        if (!format) { format = FormatTypes.sighash; }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"error\",\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n            });\n        }\n\n        let result = \"\";\n\n        if (format !== FormatTypes.sighash) {\n            result += \"error \";\n        }\n\n        result += this.name + \"(\" + this.inputs.map(\n            (input) => input.format(format)\n        ).join((format === FormatTypes.full) ? \", \": \",\") + \") \";\n\n        return result.trim();\n    }\n\n    static from(value: ErrorFragment | JsonFragment | string): ErrorFragment {\n        if (typeof(value) === \"string\") {\n            return ErrorFragment.fromString(value);\n        }\n        return ErrorFragment.fromObject(value);\n    }\n\n    static fromObject(value: ErrorFragment | JsonFragment): ErrorFragment {\n        if (ErrorFragment.isErrorFragment(value)) { return value; }\n\n        if (value.type !== \"error\") {\n            logger.throwArgumentError(\"invalid error object\", \"value\", value);\n        }\n\n        const params: TypeCheck<_Fragment> = {\n            type: value.type,\n            name: verifyIdentifier(value.name),\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject): [])\n        };\n\n        return checkForbidden(new ErrorFragment(_constructorGuard, params));\n    }\n\n    static fromString(value: string): ErrorFragment {\n        let params: any = { type: \"error\" };\n\n        let parens = value.match(regexParen);\n        if (!parens) {\n            logger.throwArgumentError(\"invalid error signature\", \"value\", value);\n        }\n\n        params.name = parens[1].trim();\n        if (params.name) { verifyIdentifier(params.name); }\n\n        params.inputs = parseParams(parens[2], false);\n\n        return checkForbidden(ErrorFragment.fromObject(params));\n    }\n\n    static isErrorFragment(value: any): value is ErrorFragment {\n        return (value && value._isFragment && value.type === \"error\");\n    }\n}\n\nfunction verifyType(type: string): string {\n\n    // These need to be transformed to their full description\n    if (type.match(/^uint($|[^1-9])/)) {\n        type = \"uint256\" + type.substring(4);\n    } else if (type.match(/^int($|[^1-9])/)) {\n        type = \"int256\" + type.substring(3);\n    }\n\n    // @TODO: more verification\n\n    return type;\n}\n\n// See: https://github.com/ethereum/solidity/blob/1f8f1a3db93a548d0555e3e14cfc55a10e25b60e/docs/grammar/SolidityLexer.g4#L234\nconst regexIdentifier = new RegExp(\"^[a-zA-Z$_][a-zA-Z0-9$_]*$\");\nfunction verifyIdentifier(value: string): string {\n    if (!value || !value.match(regexIdentifier)) {\n        logger.throwArgumentError(`invalid identifier \"${ value }\"`, \"value\", value);\n    }\n    return value;\n}\n\nconst regexParen = new RegExp(\"^([^)(]*)\\\\((.*)\\\\)([^)(]*)$\");\n\nfunction splitNesting(value: string): Array<any> {\n    value = value.trim();\n\n    let result = [];\n    let accum = \"\";\n    let depth = 0;\n    for (let offset = 0; offset < value.length; offset++) {\n        let c = value[offset];\n        if (c === \",\" && depth === 0) {\n            result.push(accum);\n            accum = \"\";\n        } else {\n            accum += c;\n            if (c === \"(\") {\n                depth++;\n            } else if (c === \")\") {\n                depth--;\n                if (depth === -1) {\n                    logger.throwArgumentError(\"unbalanced parenthesis\", \"value\", value);\n                }\n            }\n        }\n    }\n    if (accum) { result.push(accum); }\n\n    return result;\n}\n\n","\"use strict\";\n\n// See: https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { Coder, Reader, Result, Writer } from \"./coders/abstract-coder\";\nimport { AddressCoder } from \"./coders/address\";\nimport { ArrayCoder } from \"./coders/array\";\nimport { BooleanCoder } from \"./coders/boolean\";\nimport { BytesCoder } from \"./coders/bytes\";\nimport { FixedBytesCoder } from \"./coders/fixed-bytes\";\nimport { NullCoder } from \"./coders/null\";\nimport { NumberCoder } from \"./coders/number\";\nimport { StringCoder } from \"./coders/string\";\nimport { TupleCoder } from \"./coders/tuple\";\n\nimport { ParamType } from \"./fragments\";\n\n\nconst paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);\nconst paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);\n\n\nexport type CoerceFunc = (type: string, value: any) => any;\n\nexport class AbiCoder {\n    readonly coerceFunc: CoerceFunc;\n\n    constructor(coerceFunc?: CoerceFunc) {\n        defineReadOnly(this, \"coerceFunc\", coerceFunc || null);\n    }\n\n    _getCoder(param: ParamType): Coder {\n\n        switch (param.baseType) {\n            case \"address\":\n                return new AddressCoder(param.name);\n            case \"bool\":\n                return new BooleanCoder(param.name);\n            case \"string\":\n                return new StringCoder(param.name);\n            case \"bytes\":\n                return new BytesCoder(param.name);\n            case \"array\":\n                return new ArrayCoder(this._getCoder(param.arrayChildren), param.arrayLength, param.name);\n            case \"tuple\":\n                return new TupleCoder((param.components || []).map((component) => {\n                    return this._getCoder(component);\n                }), param.name);\n            case \"\":\n                return new NullCoder(param.name);\n        }\n\n        // u?int[0-9]*\n        let match = param.type.match(paramTypeNumber);\n        if (match) {\n            let size = parseInt(match[2] || \"256\");\n            if (size === 0 || size > 256 || (size % 8) !== 0) {\n                logger.throwArgumentError(\"invalid \" + match[1] + \" bit length\", \"param\", param);\n            }\n            return new NumberCoder(size / 8, (match[1] === \"int\"), param.name);\n        }\n\n        // bytes[0-9]+\n        match = param.type.match(paramTypeBytes);\n        if (match) {\n            let size = parseInt(match[1]);\n            if (size === 0 || size > 32) {\n                logger.throwArgumentError(\"invalid bytes length\", \"param\", param);\n            }\n            return new FixedBytesCoder(size, param.name);\n        }\n\n        return logger.throwArgumentError(\"invalid type\", \"type\", param.type);\n    }\n\n    _getWordSize(): number { return 32; }\n\n    _getReader(data: Uint8Array, allowLoose?: boolean): Reader {\n        return new Reader(data, this._getWordSize(), this.coerceFunc, allowLoose);\n    }\n\n    _getWriter(): Writer {\n        return new Writer(this._getWordSize());\n    }\n\n    getDefaultValue(types: ReadonlyArray<string | ParamType>): Result {\n        const coders: Array<Coder> = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.defaultValue();\n    }\n\n    encode(types: ReadonlyArray<string | ParamType>, values: ReadonlyArray<any>): string {\n        if (types.length !== values.length) {\n            logger.throwError(\"types/values length mismatch\", Logger.errors.INVALID_ARGUMENT, {\n                count: { types: types.length, values: values.length },\n                value: { types: types, values: values }\n            });\n        }\n\n        const coders = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = (new TupleCoder(coders, \"_\"));\n\n        const writer = this._getWriter();\n        coder.encode(writer, values);\n        return writer.data;\n    }\n\n    decode(types: ReadonlyArray<string | ParamType>, data: BytesLike, loose?: boolean): Result {\n        const coders: Array<Coder> = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.decode(this._getReader(arrayify(data), loose));\n    }\n}\n\nexport const defaultAbiCoder: AbiCoder = new AbiCoder();\n\n","\"use strict\";\n\nimport { arrayify, BytesLike, concat, hexConcat, hexlify } from \"@ethersproject/bytes\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"../_version\";\nconst logger = new Logger(version);\n\nexport interface Result extends ReadonlyArray<any> {\n    readonly [key: string]: any;\n}\n\nexport function checkResultErrors(result: Result): Array<{ path: Array<string | number>, error: Error }> {\n    // Find the first error (if any)\n    const errors: Array<{ path: Array<string | number>, error: Error }> = [ ];\n\n    const checkErrors = function(path: Array<string | number>, object: any): void {\n        if (!Array.isArray(object)) { return; }\n        for (let key in object) {\n            const childPath = path.slice();\n            childPath.push(key);\n\n            try {\n                 checkErrors(childPath, object[key]);\n            } catch (error) {\n                errors.push({ path: childPath, error: error });\n            }\n        }\n    }\n    checkErrors([ ], result);\n\n    return errors;\n\n}\n\nexport type CoerceFunc = (type: string, value: any) => any;\n\nexport abstract class Coder {\n\n    // The coder name:\n    //   - address, uint256, tuple, array, etc.\n    readonly name: string;\n\n    // The fully expanded type, including composite types:\n    //   - address, uint256, tuple(address,bytes), uint256[3][4][],  etc.\n    readonly type: string;\n\n    // The localName bound in the signature, in this example it is \"baz\":\n    //   - tuple(address foo, uint bar) baz\n    readonly localName: string;\n\n    // Whether this type is dynamic:\n    //  - Dynamic: bytes, string, address[], tuple(boolean[]), etc.\n    //  - Not Dynamic: address, uint256, boolean[3], tuple(address, uint8)\n    readonly dynamic: boolean;\n\n    constructor(name: string, type: string, localName: string, dynamic: boolean) {\n        // @TODO: defineReadOnly these\n        this.name = name;\n        this.type = type;\n        this.localName = localName;\n        this.dynamic = dynamic;\n    }\n\n    _throwError(message: string, value: any): void {\n        logger.throwArgumentError(message, this.localName, value);\n    }\n\n    abstract encode(writer: Writer, value: any): number;\n    abstract decode(reader: Reader): any;\n\n    abstract defaultValue(): any;\n}\n\nexport class Writer {\n    readonly wordSize: number;\n\n    _data: Array<Uint8Array>;\n    _dataLength: number;\n    _padding: Uint8Array;\n\n    constructor(wordSize?: number) {\n        defineReadOnly(this, \"wordSize\", wordSize || 32);\n        this._data = [ ];\n        this._dataLength = 0;\n        this._padding = new Uint8Array(wordSize);\n    }\n\n    get data(): string {\n        return hexConcat(this._data);\n    }\n    get length(): number { return this._dataLength; }\n\n    _writeData(data: Uint8Array): number {\n        this._data.push(data);\n        this._dataLength += data.length;\n        return data.length;\n    }\n\n    appendWriter(writer: Writer): number {\n        return this._writeData(concat(writer._data));\n    }\n\n    // Arrayish items; padded on the right to wordSize\n    writeBytes(value: BytesLike): number {\n        let bytes = arrayify(value);\n        const paddingOffset = bytes.length % this.wordSize;\n        if (paddingOffset) {\n            bytes = concat([ bytes, this._padding.slice(paddingOffset) ])\n        }\n        return this._writeData(bytes);\n    }\n\n    _getValue(value: BigNumberish): Uint8Array {\n        let bytes = arrayify(BigNumber.from(value));\n        if (bytes.length > this.wordSize) {\n            logger.throwError(\"value out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n                length: this.wordSize,\n                offset: bytes.length\n            });\n        }\n        if (bytes.length % this.wordSize) {\n            bytes = concat([ this._padding.slice(bytes.length % this.wordSize), bytes ]);\n        }\n        return bytes;\n    }\n\n    // BigNumberish items; padded on the left to wordSize\n    writeValue(value: BigNumberish): number {\n        return this._writeData(this._getValue(value));\n    }\n\n    writeUpdatableValue(): (value: BigNumberish) => void {\n        const offset = this._data.length;\n        this._data.push(this._padding);\n        this._dataLength += this.wordSize;\n        return (value: BigNumberish) => {\n            this._data[offset] = this._getValue(value);\n        };\n    }\n}\n\nexport class Reader {\n    readonly wordSize: number;\n    readonly allowLoose: boolean;\n\n    readonly _data: Uint8Array;\n    readonly _coerceFunc: CoerceFunc;\n\n    _offset: number;\n\n    constructor(data: BytesLike, wordSize?: number, coerceFunc?: CoerceFunc, allowLoose?: boolean) {\n        defineReadOnly(this, \"_data\", arrayify(data));\n        defineReadOnly(this, \"wordSize\", wordSize || 32);\n        defineReadOnly(this, \"_coerceFunc\", coerceFunc);\n        defineReadOnly(this, \"allowLoose\", allowLoose);\n\n        this._offset = 0;\n    }\n\n    get data(): string { return hexlify(this._data); }\n    get consumed(): number { return this._offset; }\n\n    // The default Coerce function\n    static coerce(name: string, value: any): any {\n        let match = name.match(\"^u?int([0-9]+)$\");\n        if (match && parseInt(match[1]) <= 48) { value =  value.toNumber(); }\n        return value;\n    }\n\n    coerce(name: string, value: any): any {\n        if (this._coerceFunc) { return this._coerceFunc(name, value); }\n        return Reader.coerce(name, value);\n    }\n\n    _peekBytes(offset: number, length: number, loose?: boolean): Uint8Array {\n        let alignedLength = Math.ceil(length / this.wordSize) * this.wordSize;\n        if (this._offset + alignedLength > this._data.length) {\n            if (this.allowLoose && loose && this._offset + length <= this._data.length) {\n                alignedLength = length;\n            } else {\n                logger.throwError(\"data out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n                    length: this._data.length,\n                    offset: this._offset + alignedLength\n                });\n            }\n        }\n        return this._data.slice(this._offset, this._offset + alignedLength)\n    }\n\n    subReader(offset: number): Reader {\n        return new Reader(this._data.slice(this._offset + offset), this.wordSize, this._coerceFunc, this.allowLoose);\n    }\n\n    readBytes(length: number, loose?: boolean): Uint8Array {\n        let bytes = this._peekBytes(0, length, !!loose);\n        this._offset += bytes.length;\n        // @TODO: Make sure the length..end bytes are all 0?\n        return bytes.slice(0, length);\n    }\n\n    readValue(): BigNumber {\n        return BigNumber.from(this.readBytes(this.wordSize));\n    }\n}\n","\"use strict\";\n\nimport { arrayify, BytesLike, concat, hexDataLength, hexDataSlice, isHexString, stripZeros } from \"@ethersproject/bytes\";\nimport { BigNumber, BigNumberish, _base16To36, _base36To16 } from \"@ethersproject/bignumber\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { encode } from \"@ethersproject/rlp\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction getChecksumAddress(address: string): string {\n    if (!isHexString(address, 20)) {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    address = address.toLowerCase();\n\n    const chars = address.substring(2).split(\"\");\n\n    const expanded = new Uint8Array(40);\n    for (let i = 0; i < 40; i++) {\n        expanded[i] = chars[i].charCodeAt(0);\n    }\n\n    const hashed = arrayify(keccak256(expanded));\n\n    for (let i = 0; i < 40; i += 2) {\n        if ((hashed[i >> 1] >> 4) >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n\n    return \"0x\" + chars.join(\"\");\n}\n\n// Shims for environments that are missing some required constants and functions\nconst MAX_SAFE_INTEGER: number = 0x1fffffffffffff;\n\nfunction log10(x: number): number {\n    if (Math.log10) { return Math.log10(x); }\n    return Math.log(x) / Math.LN10;\n}\n\n\n// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n\n// Create lookup table\nconst ibanLookup: { [character: string]: string } = { };\nfor (let i = 0; i < 10; i++) { ibanLookup[String(i)] = String(i); }\nfor (let i = 0; i < 26; i++) { ibanLookup[String.fromCharCode(65 + i)] = String(10 + i); }\n\n// How many decimal digits can we process? (for 64-bit float, this is 15)\nconst safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));\n\nfunction ibanChecksum(address: string): string {\n    address = address.toUpperCase();\n    address = address.substring(4) + address.substring(0, 2) + \"00\";\n\n    let expanded = address.split(\"\").map((c) => { return ibanLookup[c]; }).join(\"\");\n\n    // Javascript can handle integers safely up to 15 (decimal) digits\n    while (expanded.length >= safeDigits){\n        let block = expanded.substring(0, safeDigits);\n        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n    }\n\n    let checksum = String(98 - (parseInt(expanded, 10) % 97));\n    while (checksum.length < 2) { checksum = \"0\" + checksum; }\n\n    return checksum;\n};\n\nexport function getAddress(address: string): string {\n    let result = null;\n\n    if (typeof(address) !== \"string\") {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n\n        // Missing the 0x prefix\n        if (address.substring(0, 2) !== \"0x\") { address = \"0x\" + address; }\n\n        result = getChecksumAddress(address);\n\n        // It is a checksummed address with a bad checksum\n        if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {\n            logger.throwArgumentError(\"bad address checksum\", \"address\", address);\n        }\n\n    // Maybe ICAP? (we only support direct mode)\n    } else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n\n        // It is an ICAP address with a bad checksum\n        if (address.substring(2, 4) !== ibanChecksum(address)) {\n            logger.throwArgumentError(\"bad icap checksum\", \"address\", address);\n        }\n\n        result = _base36To16(address.substring(4));\n        while (result.length < 40) { result = \"0\" + result; }\n        result = getChecksumAddress(\"0x\" + result);\n\n    } else {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    return result;\n}\n\nexport function isAddress(address: string): boolean {\n    try {\n        getAddress(address);\n        return true;\n    } catch (error) { }\n    return false;\n}\n\nexport function getIcapAddress(address: string): string {\n    let base36 = _base16To36(getAddress(address).substring(2)).toUpperCase();\n    while (base36.length < 30) { base36 = \"0\" + base36; }\n    return \"XE\" + ibanChecksum(\"XE00\" + base36) + base36;\n}\n\n// http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\nexport function getContractAddress(transaction: { from: string, nonce: BigNumberish }) {\n    let from: string = null;\n    try {\n        from = getAddress(transaction.from);\n    } catch (error) {\n        logger.throwArgumentError(\"missing from address\", \"transaction\", transaction);\n    }\n\n    const nonce = stripZeros(arrayify(BigNumber.from(transaction.nonce).toHexString()));\n\n    return getAddress(hexDataSlice(keccak256(encode([ from, nonce ])), 12));\n}\n\nexport function getCreate2Address(from: string, salt: BytesLike, initCodeHash: BytesLike): string {\n    if (hexDataLength(salt) !== 32) {\n        logger.throwArgumentError(\"salt must be 32 bytes\", \"salt\", salt);\n    }\n    if (hexDataLength(initCodeHash) !== 32) {\n        logger.throwArgumentError(\"initCodeHash must be 32 bytes\", \"initCodeHash\", initCodeHash);\n    }\n    return getAddress(hexDataSlice(keccak256(concat([ \"0xff\", getAddress(from), salt, initCodeHash ])), 12))\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\n *\n * @version 0.8.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2015-2018\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var INPUT_ERROR = 'input is invalid type';\n  var FINALIZE_ERROR = 'finalize already called';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA3_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\n  var CSHAKE_PADDING = [4, 1024, 262144, 67108864];\n  var KECCAK_PADDING = [1, 256, 65536, 16777216];\n  var PADDING = [6, 1536, 393216, 100663296];\n  var SHIFT = [0, 8, 16, 24];\n  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,\n    0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,\n    2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,\n    2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,\n    2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n  var BITS = [224, 256, 384, 512];\n  var SHAKE_BITS = [128, 256];\n  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array', 'digest'];\n  var CSHAKE_BYTEPAD = {\n    '128': 168,\n    '256': 136\n  };\n\n  if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (bits, padding, outputType) {\n    return function (message) {\n      return new Keccak(bits, padding, bits).update(message)[outputType]();\n    };\n  };\n\n  var createShakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits) {\n      return new Keccak(bits, padding, outputBits).update(message)[outputType]();\n    };\n  };\n\n  var createCshakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits, n, s) {\n      return methods['cshake' + bits].update(message, outputBits, n, s)[outputType]();\n    };\n  };\n\n  var createKmacOutputMethod = function (bits, padding, outputType) {\n    return function (key, message, outputBits, s) {\n      return methods['kmac' + bits].update(key, message, outputBits, s)[outputType]();\n    };\n  };\n\n  var createOutputMethods = function (method, createMethod, bits, padding) {\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createMethod(bits, padding, type);\n    }\n    return method;\n  };\n\n  var createMethod = function (bits, padding) {\n    var method = createOutputMethod(bits, padding, 'hex');\n    method.create = function () {\n      return new Keccak(bits, padding, bits);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    return createOutputMethods(method, createOutputMethod, bits, padding);\n  };\n\n  var createShakeMethod = function (bits, padding) {\n    var method = createShakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits) {\n      return new Keccak(bits, padding, outputBits);\n    };\n    method.update = function (message, outputBits) {\n      return method.create(outputBits).update(message);\n    };\n    return createOutputMethods(method, createShakeOutputMethod, bits, padding);\n  };\n\n  var createCshakeMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createCshakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits, n, s) {\n      if (!n && !s) {\n        return methods['shake' + bits].create(outputBits);\n      } else {\n        return new Keccak(bits, padding, outputBits).bytepad([n, s], w);\n      }\n    };\n    method.update = function (message, outputBits, n, s) {\n      return method.create(outputBits, n, s).update(message);\n    };\n    return createOutputMethods(method, createCshakeOutputMethod, bits, padding);\n  };\n\n  var createKmacMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createKmacOutputMethod(bits, padding, 'hex');\n    method.create = function (key, outputBits, s) {\n      return new Kmac(bits, padding, outputBits).bytepad(['KMAC', s], w).bytepad([key], w);\n    };\n    method.update = function (key, message, outputBits, s) {\n      return method.create(key, outputBits, s).update(message);\n    };\n    return createOutputMethods(method, createKmacOutputMethod, bits, padding);\n  };\n\n  var algorithms = [\n    { name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod },\n    { name: 'cshake', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createCshakeMethod },\n    { name: 'kmac', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createKmacMethod }\n  ];\n\n  var methods = {}, methodNames = [];\n\n  for (var i = 0; i < algorithms.length; ++i) {\n    var algorithm = algorithms[i];\n    var bits = algorithm.bits;\n    for (var j = 0; j < bits.length; ++j) {\n      var methodName = algorithm.name + '_' + bits[j];\n      methodNames.push(methodName);\n      methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\n      if (algorithm.name !== 'sha3') {\n        var newMethodName = algorithm.name + bits[j];\n        methodNames.push(newMethodName);\n        methods[newMethodName] = methods[methodName];\n      }\n    }\n  }\n\n  function Keccak(bits, padding, outputBits) {\n    this.blocks = [];\n    this.s = [];\n    this.padding = padding;\n    this.outputBits = outputBits;\n    this.reset = true;\n    this.finalized = false;\n    this.block = 0;\n    this.start = 0;\n    this.blockCount = (1600 - (bits << 1)) >> 5;\n    this.byteCount = this.blockCount << 2;\n    this.outputBlocks = outputBits >> 5;\n    this.extraBytes = (outputBits & 31) >> 3;\n\n    for (var i = 0; i < 50; ++i) {\n      this.s[i] = 0;\n    }\n  }\n\n  Keccak.prototype.update = function (message) {\n    if (this.finalized) {\n      throw new Error(FINALIZE_ERROR);\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var blocks = this.blocks, byteCount = this.byteCount, length = message.length,\n      blockCount = this.blockCount, index = 0, s = this.s, i, code;\n\n    while (index < length) {\n      if (this.reset) {\n        this.reset = false;\n        blocks[0] = this.block;\n        for (i = 1; i < blockCount + 1; ++i) {\n          blocks[i] = 0;\n        }\n      }\n      if (notString) {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n      this.lastByteIndex = i;\n      if (i >= byteCount) {\n        this.start = i - byteCount;\n        this.block = blocks[blockCount];\n        for (i = 0; i < blockCount; ++i) {\n          s[i] ^= blocks[i];\n        }\n        f(s);\n        this.reset = true;\n      } else {\n        this.start = i;\n      }\n    }\n    return this;\n  };\n\n  Keccak.prototype.encode = function (x, right) {\n    var o = x & 255, n = 1;\n    var bytes = [o];\n    x = x >> 8;\n    o = x & 255;\n    while (o > 0) {\n      bytes.unshift(o);\n      x = x >> 8;\n      o = x & 255;\n      ++n;\n    }\n    if (right) {\n      bytes.push(n);\n    } else {\n      bytes.unshift(n);\n    }\n    this.update(bytes);\n    return bytes.length;\n  };\n\n  Keccak.prototype.encodeString = function (str) {\n    var notString, type = typeof str;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (str === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {\n          str = new Uint8Array(str);\n        } else if (!Array.isArray(str)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var bytes = 0, length = str.length;\n    if (notString) {\n      bytes = length;\n    } else {\n      for (var i = 0; i < str.length; ++i) {\n        var code = str.charCodeAt(i);\n        if (code < 0x80) {\n          bytes += 1;\n        } else if (code < 0x800) {\n          bytes += 2;\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes += 3;\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (str.charCodeAt(++i) & 0x3ff));\n          bytes += 4;\n        }\n      }\n    }\n    bytes += this.encode(bytes * 8);\n    this.update(str);\n    return bytes;\n  };\n\n  Keccak.prototype.bytepad = function (strs, w) {\n    var bytes = this.encode(w);\n    for (var i = 0; i < strs.length; ++i) {\n      bytes += this.encodeString(strs[i]);\n    }\n    var paddingBytes = w - bytes % w;\n    var zeros = [];\n    zeros.length = paddingBytes;\n    this.update(zeros);\n    return this;\n  };\n\n  Keccak.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;\n    blocks[i >> 2] |= this.padding[i & 3];\n    if (this.lastByteIndex === this.byteCount) {\n      blocks[0] = blocks[blockCount];\n      for (i = 1; i < blockCount + 1; ++i) {\n        blocks[i] = 0;\n      }\n    }\n    blocks[blockCount - 1] |= 0x80000000;\n    for (i = 0; i < blockCount; ++i) {\n      s[i] ^= blocks[i];\n    }\n    f(s);\n  };\n\n  Keccak.prototype.toString = Keccak.prototype.hex = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var hex = '', block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        block = s[i];\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +\n          HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +\n          HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +\n          HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n        i = 0;\n      }\n    }\n    if (extraBytes) {\n      block = s[i];\n      hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];\n      if (extraBytes > 1) {\n        hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];\n      }\n      if (extraBytes > 2) {\n        hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];\n      }\n    }\n    return hex;\n  };\n\n  Keccak.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var bytes = this.outputBits >> 3;\n    var buffer;\n    if (extraBytes) {\n      buffer = new ArrayBuffer((outputBlocks + 1) << 2);\n    } else {\n      buffer = new ArrayBuffer(bytes);\n    }\n    var array = new Uint32Array(buffer);\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        array[j] = s[i];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      array[i] = s[i];\n      buffer = buffer.slice(0, bytes);\n    }\n    return buffer;\n  };\n\n  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\n\n  Keccak.prototype.digest = Keccak.prototype.array = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var array = [], offset, block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        offset = j << 2;\n        block = s[i];\n        array[offset] = block & 0xFF;\n        array[offset + 1] = (block >> 8) & 0xFF;\n        array[offset + 2] = (block >> 16) & 0xFF;\n        array[offset + 3] = (block >> 24) & 0xFF;\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      offset = j << 2;\n      block = s[i];\n      array[offset] = block & 0xFF;\n      if (extraBytes > 1) {\n        array[offset + 1] = (block >> 8) & 0xFF;\n      }\n      if (extraBytes > 2) {\n        array[offset + 2] = (block >> 16) & 0xFF;\n      }\n    }\n    return array;\n  };\n\n  function Kmac(bits, padding, outputBits) {\n    Keccak.call(this, bits, padding, outputBits);\n  }\n\n  Kmac.prototype = new Keccak();\n\n  Kmac.prototype.finalize = function () {\n    this.encode(this.outputBits, true);\n    return Keccak.prototype.finalize.call(this);\n  };\n\n  var f = function (s) {\n    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,\n      b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,\n      b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,\n      b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n    for (n = 0; n < 48; n += 2) {\n      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n\n      h = c8 ^ ((c2 << 1) | (c3 >>> 31));\n      l = c9 ^ ((c3 << 1) | (c2 >>> 31));\n      s[0] ^= h;\n      s[1] ^= l;\n      s[10] ^= h;\n      s[11] ^= l;\n      s[20] ^= h;\n      s[21] ^= l;\n      s[30] ^= h;\n      s[31] ^= l;\n      s[40] ^= h;\n      s[41] ^= l;\n      h = c0 ^ ((c4 << 1) | (c5 >>> 31));\n      l = c1 ^ ((c5 << 1) | (c4 >>> 31));\n      s[2] ^= h;\n      s[3] ^= l;\n      s[12] ^= h;\n      s[13] ^= l;\n      s[22] ^= h;\n      s[23] ^= l;\n      s[32] ^= h;\n      s[33] ^= l;\n      s[42] ^= h;\n      s[43] ^= l;\n      h = c2 ^ ((c6 << 1) | (c7 >>> 31));\n      l = c3 ^ ((c7 << 1) | (c6 >>> 31));\n      s[4] ^= h;\n      s[5] ^= l;\n      s[14] ^= h;\n      s[15] ^= l;\n      s[24] ^= h;\n      s[25] ^= l;\n      s[34] ^= h;\n      s[35] ^= l;\n      s[44] ^= h;\n      s[45] ^= l;\n      h = c4 ^ ((c8 << 1) | (c9 >>> 31));\n      l = c5 ^ ((c9 << 1) | (c8 >>> 31));\n      s[6] ^= h;\n      s[7] ^= l;\n      s[16] ^= h;\n      s[17] ^= l;\n      s[26] ^= h;\n      s[27] ^= l;\n      s[36] ^= h;\n      s[37] ^= l;\n      s[46] ^= h;\n      s[47] ^= l;\n      h = c6 ^ ((c0 << 1) | (c1 >>> 31));\n      l = c7 ^ ((c1 << 1) | (c0 >>> 31));\n      s[8] ^= h;\n      s[9] ^= l;\n      s[18] ^= h;\n      s[19] ^= l;\n      s[28] ^= h;\n      s[29] ^= l;\n      s[38] ^= h;\n      s[39] ^= l;\n      s[48] ^= h;\n      s[49] ^= l;\n\n      b0 = s[0];\n      b1 = s[1];\n      b32 = (s[11] << 4) | (s[10] >>> 28);\n      b33 = (s[10] << 4) | (s[11] >>> 28);\n      b14 = (s[20] << 3) | (s[21] >>> 29);\n      b15 = (s[21] << 3) | (s[20] >>> 29);\n      b46 = (s[31] << 9) | (s[30] >>> 23);\n      b47 = (s[30] << 9) | (s[31] >>> 23);\n      b28 = (s[40] << 18) | (s[41] >>> 14);\n      b29 = (s[41] << 18) | (s[40] >>> 14);\n      b20 = (s[2] << 1) | (s[3] >>> 31);\n      b21 = (s[3] << 1) | (s[2] >>> 31);\n      b2 = (s[13] << 12) | (s[12] >>> 20);\n      b3 = (s[12] << 12) | (s[13] >>> 20);\n      b34 = (s[22] << 10) | (s[23] >>> 22);\n      b35 = (s[23] << 10) | (s[22] >>> 22);\n      b16 = (s[33] << 13) | (s[32] >>> 19);\n      b17 = (s[32] << 13) | (s[33] >>> 19);\n      b48 = (s[42] << 2) | (s[43] >>> 30);\n      b49 = (s[43] << 2) | (s[42] >>> 30);\n      b40 = (s[5] << 30) | (s[4] >>> 2);\n      b41 = (s[4] << 30) | (s[5] >>> 2);\n      b22 = (s[14] << 6) | (s[15] >>> 26);\n      b23 = (s[15] << 6) | (s[14] >>> 26);\n      b4 = (s[25] << 11) | (s[24] >>> 21);\n      b5 = (s[24] << 11) | (s[25] >>> 21);\n      b36 = (s[34] << 15) | (s[35] >>> 17);\n      b37 = (s[35] << 15) | (s[34] >>> 17);\n      b18 = (s[45] << 29) | (s[44] >>> 3);\n      b19 = (s[44] << 29) | (s[45] >>> 3);\n      b10 = (s[6] << 28) | (s[7] >>> 4);\n      b11 = (s[7] << 28) | (s[6] >>> 4);\n      b42 = (s[17] << 23) | (s[16] >>> 9);\n      b43 = (s[16] << 23) | (s[17] >>> 9);\n      b24 = (s[26] << 25) | (s[27] >>> 7);\n      b25 = (s[27] << 25) | (s[26] >>> 7);\n      b6 = (s[36] << 21) | (s[37] >>> 11);\n      b7 = (s[37] << 21) | (s[36] >>> 11);\n      b38 = (s[47] << 24) | (s[46] >>> 8);\n      b39 = (s[46] << 24) | (s[47] >>> 8);\n      b30 = (s[8] << 27) | (s[9] >>> 5);\n      b31 = (s[9] << 27) | (s[8] >>> 5);\n      b12 = (s[18] << 20) | (s[19] >>> 12);\n      b13 = (s[19] << 20) | (s[18] >>> 12);\n      b44 = (s[29] << 7) | (s[28] >>> 25);\n      b45 = (s[28] << 7) | (s[29] >>> 25);\n      b26 = (s[38] << 8) | (s[39] >>> 24);\n      b27 = (s[39] << 8) | (s[38] >>> 24);\n      b8 = (s[48] << 14) | (s[49] >>> 18);\n      b9 = (s[49] << 14) | (s[48] >>> 18);\n\n      s[0] = b0 ^ (~b2 & b4);\n      s[1] = b1 ^ (~b3 & b5);\n      s[10] = b10 ^ (~b12 & b14);\n      s[11] = b11 ^ (~b13 & b15);\n      s[20] = b20 ^ (~b22 & b24);\n      s[21] = b21 ^ (~b23 & b25);\n      s[30] = b30 ^ (~b32 & b34);\n      s[31] = b31 ^ (~b33 & b35);\n      s[40] = b40 ^ (~b42 & b44);\n      s[41] = b41 ^ (~b43 & b45);\n      s[2] = b2 ^ (~b4 & b6);\n      s[3] = b3 ^ (~b5 & b7);\n      s[12] = b12 ^ (~b14 & b16);\n      s[13] = b13 ^ (~b15 & b17);\n      s[22] = b22 ^ (~b24 & b26);\n      s[23] = b23 ^ (~b25 & b27);\n      s[32] = b32 ^ (~b34 & b36);\n      s[33] = b33 ^ (~b35 & b37);\n      s[42] = b42 ^ (~b44 & b46);\n      s[43] = b43 ^ (~b45 & b47);\n      s[4] = b4 ^ (~b6 & b8);\n      s[5] = b5 ^ (~b7 & b9);\n      s[14] = b14 ^ (~b16 & b18);\n      s[15] = b15 ^ (~b17 & b19);\n      s[24] = b24 ^ (~b26 & b28);\n      s[25] = b25 ^ (~b27 & b29);\n      s[34] = b34 ^ (~b36 & b38);\n      s[35] = b35 ^ (~b37 & b39);\n      s[44] = b44 ^ (~b46 & b48);\n      s[45] = b45 ^ (~b47 & b49);\n      s[6] = b6 ^ (~b8 & b0);\n      s[7] = b7 ^ (~b9 & b1);\n      s[16] = b16 ^ (~b18 & b10);\n      s[17] = b17 ^ (~b19 & b11);\n      s[26] = b26 ^ (~b28 & b20);\n      s[27] = b27 ^ (~b29 & b21);\n      s[36] = b36 ^ (~b38 & b30);\n      s[37] = b37 ^ (~b39 & b31);\n      s[46] = b46 ^ (~b48 & b40);\n      s[47] = b47 ^ (~b49 & b41);\n      s[8] = b8 ^ (~b0 & b2);\n      s[9] = b9 ^ (~b1 & b3);\n      s[18] = b18 ^ (~b10 & b12);\n      s[19] = b19 ^ (~b11 & b13);\n      s[28] = b28 ^ (~b20 & b22);\n      s[29] = b29 ^ (~b21 & b23);\n      s[38] = b38 ^ (~b30 & b32);\n      s[39] = b39 ^ (~b31 & b33);\n      s[48] = b48 ^ (~b40 & b42);\n      s[49] = b49 ^ (~b41 & b43);\n\n      s[0] ^= RC[n];\n      s[1] ^= RC[n + 1];\n    }\n  };\n\n  if (COMMON_JS) {\n    module.exports = methods;\n  } else {\n    for (i = 0; i < methodNames.length; ++i) {\n      root[methodNames[i]] = methods[methodNames[i]];\n    }\n    if (AMD) {\n      define(function () {\n        return methods;\n      });\n    }\n  }\n})();\n","\"use strict\";\n\nimport sha3 from \"js-sha3\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nexport function keccak256(data: BytesLike): string {\n    return '0x' + sha3.keccak_256(arrayify(data));\n}\n","export const version = \"address/5.7.0\";\n","\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { hexZeroPad } from \"@ethersproject/bytes\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\nexport class AddressCoder extends Coder {\n\n    constructor(localName: string) {\n        super(\"address\", \"address\", localName, false);\n    }\n\n    defaultValue(): string {\n        return \"0x0000000000000000000000000000000000000000\";\n    }\n\n    encode(writer: Writer, value: string): number {\n        try {\n            value = getAddress(value)\n        } catch (error) {\n            this._throwError(error.message, value);\n        }\n        return writer.writeValue(value);\n    }\n\n    decode(reader: Reader): any {\n        return getAddress(hexZeroPad(reader.readValue().toHexString(), 20));\n    }\n}\n\n","\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"../_version\";\nconst logger = new Logger(version);\n\nimport { Coder, Reader, Result, Writer } from \"./abstract-coder\";\nimport { AnonymousCoder } from \"./anonymous\";\n\nexport function pack(writer: Writer, coders: ReadonlyArray<Coder>, values: Array<any> | { [ name: string ]: any }): number {\n    let arrayValues: Array<any> = null;\n\n    if (Array.isArray(values)) {\n       arrayValues = values;\n\n    } else if (values && typeof(values) === \"object\") {\n        let unique: { [ name: string ]: boolean } = { };\n\n        arrayValues = coders.map((coder) => {\n            const name = coder.localName;\n            if (!name) {\n                logger.throwError(\"cannot encode object for signature with missing names\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"values\",\n                    coder: coder,\n                    value: values\n                });\n            }\n\n            if (unique[name]) {\n                logger.throwError(\"cannot encode object for signature with duplicate names\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"values\",\n                    coder: coder,\n                    value: values\n                });\n            }\n\n            unique[name] = true;\n\n            return values[name];\n        });\n\n    } else {\n        logger.throwArgumentError(\"invalid tuple value\", \"tuple\", values);\n    }\n\n    if (coders.length !== arrayValues.length) {\n        logger.throwArgumentError(\"types/value length mismatch\", \"tuple\", values);\n    }\n\n    let staticWriter = new Writer(writer.wordSize);\n    let dynamicWriter = new Writer(writer.wordSize);\n\n    let updateFuncs: Array<(baseOffset: number) => void> = [];\n    coders.forEach((coder, index) => {\n        let value = arrayValues[index];\n\n        if (coder.dynamic) {\n            // Get current dynamic offset (for the future pointer)\n            let dynamicOffset = dynamicWriter.length;\n\n            // Encode the dynamic value into the dynamicWriter\n            coder.encode(dynamicWriter, value);\n\n            // Prepare to populate the correct offset once we are done\n            let updateFunc = staticWriter.writeUpdatableValue();\n            updateFuncs.push((baseOffset: number) => {\n                updateFunc(baseOffset + dynamicOffset);\n            });\n\n        } else {\n            coder.encode(staticWriter, value);\n        }\n    });\n\n    // Backfill all the dynamic offsets, now that we know the static length\n    updateFuncs.forEach((func) => { func(staticWriter.length); });\n\n    let length = writer.appendWriter(staticWriter);\n    length += writer.appendWriter(dynamicWriter);\n    return length;\n}\n\nexport function unpack(reader: Reader, coders: Array<Coder>): Result {\n    let values: any = [];\n\n    // A reader anchored to this base\n    let baseReader = reader.subReader(0);\n\n    coders.forEach((coder) => {\n        let value: any = null;\n\n        if (coder.dynamic) {\n            let offset = reader.readValue();\n            let offsetReader = baseReader.subReader(offset.toNumber());\n            try {\n                value = coder.decode(offsetReader);\n            } catch (error) {\n                // Cannot recover from this\n                if (error.code === Logger.errors.BUFFER_OVERRUN) { throw error; }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n\n        } else {\n            try {\n                value = coder.decode(reader);\n            } catch (error) {\n                // Cannot recover from this\n                if (error.code === Logger.errors.BUFFER_OVERRUN) { throw error; }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n\n        if (value != undefined) {\n            values.push(value);\n        }\n    });\n\n    // We only output named properties for uniquely named coders\n    const uniqueNames = coders.reduce((accum, coder) => {\n        const name = coder.localName;\n        if (name) {\n            if (!accum[name]) { accum[name] = 0; }\n            accum[name]++;\n        }\n        return accum;\n    }, <{ [ name: string ]: number }>{ });\n\n    // Add any named parameters (i.e. tuples)\n    coders.forEach((coder: Coder, index: number) => {\n        let name = coder.localName;\n        if (!name || uniqueNames[name] !== 1) { return; }\n\n        if (name === \"length\") { name = \"_length\"; }\n\n        if (values[name] != null) { return; }\n\n        const value = values[index];\n\n        if (value instanceof Error) {\n            Object.defineProperty(values, name, {\n                enumerable: true,\n                get: () => { throw value; }\n            });\n        } else {\n            values[name] = value;\n        }\n    });\n\n    for (let i = 0; i < values.length; i++) {\n        const value = values[i];\n        if (value instanceof Error) {\n            Object.defineProperty(values, i, {\n                enumerable: true,\n                get: () => { throw value; }\n            });\n        }\n    }\n\n    return Object.freeze(values);\n}\n\n\nexport class ArrayCoder extends Coder {\n    readonly coder: Coder;\n    readonly length: number;\n\n    constructor(coder: Coder, length: number, localName: string) {\n        const type = (coder.type + \"[\" + (length >= 0 ? length: \"\") + \"]\");\n        const dynamic = (length === -1 || coder.dynamic);\n        super(\"array\", type, localName, dynamic);\n\n        this.coder = coder;\n        this.length = length;\n    }\n\n    defaultValue(): Array<any> {\n        // Verifies the child coder is valid (even if the array is dynamic or 0-length)\n        const defaultChild = this.coder.defaultValue();\n\n        const result: Array<any> = [];\n        for (let i = 0; i < this.length; i++) {\n            result.push(defaultChild);\n        }\n        return result;\n    }\n\n    encode(writer: Writer, value: Array<any>): number {\n        if (!Array.isArray(value)) {\n            this._throwError(\"expected array value\", value);\n        }\n\n        let count = this.length;\n\n        if (count === -1) {\n            count = value.length;\n            writer.writeValue(value.length);\n        }\n\n        logger.checkArgumentCount(value.length, count, \"coder array\" + (this.localName? (\" \"+ this.localName): \"\"));\n\n        let coders = [];\n        for (let i = 0; i < value.length; i++) { coders.push(this.coder); }\n\n        return pack(writer, coders, value);\n    }\n\n    decode(reader: Reader): any {\n        let count = this.length;\n        if (count === -1) {\n            count = reader.readValue().toNumber();\n\n            // Check that there is *roughly* enough data to ensure\n            // stray random data is not being read as a length. Each\n            // slot requires at least 32 bytes for their value (or 32\n            // bytes as a link to the data). This could use a much\n            // tighter bound, but we are erroring on the side of safety.\n            if (count * 32 > reader._data.length) {\n                logger.throwError(\"insufficient data length\", Logger.errors.BUFFER_OVERRUN, {\n                    length: reader._data.length,\n                    count: count\n                });\n            }\n        }\n        let coders = [];\n        for (let i = 0; i < count; i++) { coders.push(new AnonymousCoder(this.coder)); }\n\n        return reader.coerce(this.name, unpack(reader, coders));\n    }\n}\n\n","\"use strict\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\n// Clones the functionality of an existing Coder, but without a localName\nexport class AnonymousCoder extends Coder {\n    private coder: Coder;\n\n    constructor(coder: Coder) {\n        super(coder.name, coder.type, undefined, coder.dynamic);\n        this.coder = coder;\n    }\n\n    defaultValue(): any {\n        return this.coder.defaultValue();\n    }\n\n    encode(writer: Writer, value: any): number {\n        return this.coder.encode(writer, value);\n    }\n\n    decode(reader: Reader): any {\n        return this.coder.decode(reader);\n    }\n}\n","\"use strict\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\nexport class BooleanCoder extends Coder {\n\n    constructor(localName: string) {\n        super(\"bool\", \"bool\", localName, false);\n    }\n\n    defaultValue(): boolean {\n        return false;\n    }\n\n    encode(writer: Writer, value: boolean): number {\n        return writer.writeValue(value ? 1: 0);\n    }\n\n    decode(reader: Reader): any {\n        return reader.coerce(this.type, !reader.readValue().isZero());\n    }\n}\n\n","\"use strict\";\n\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\nexport class DynamicBytesCoder extends Coder {\n    constructor(type: string, localName: string) {\n       super(type, type, localName, true);\n    }\n\n    defaultValue(): string {\n        return \"0x\";\n    }\n\n    encode(writer: Writer, value: any): number {\n        value = arrayify(value);\n        let length = writer.writeValue(value.length);\n        length += writer.writeBytes(value);\n        return length;\n    }\n\n    decode(reader: Reader): any {\n        return reader.readBytes(reader.readValue().toNumber(), true);\n    }\n}\n\nexport class BytesCoder extends DynamicBytesCoder {\n    constructor(localName: string) {\n        super(\"bytes\", localName);\n    }\n\n    decode(reader: Reader): any {\n        return reader.coerce(this.name, hexlify(super.decode(reader)));\n    }\n}\n\n\n","\"use strict\";\n\nimport { arrayify, BytesLike, hexlify } from \"@ethersproject/bytes\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\n// @TODO: Merge this with bytes\nexport class FixedBytesCoder extends Coder {\n    readonly size: number;\n\n    constructor(size: number, localName: string) {\n        let name = \"bytes\" + String(size);\n        super(name, name, localName, false);\n        this.size = size;\n    }\n\n    defaultValue(): string {\n        return (\"0x0000000000000000000000000000000000000000000000000000000000000000\").substring(0, 2 + this.size * 2);\n    }\n\n    encode(writer: Writer, value: BytesLike): number {\n        let data = arrayify(value);\n        if (data.length !== this.size) { this._throwError(\"incorrect data length\", value); }\n        return writer.writeBytes(data);\n    }\n\n    decode(reader: Reader): any {\n        return reader.coerce(this.name, hexlify(reader.readBytes(this.size)));\n    }\n}\n","\"use strict\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\nexport class NullCoder extends Coder {\n\n    constructor(localName: string) {\n        super(\"null\", \"\", localName, false);\n    }\n\n    defaultValue(): null {\n        return null;\n    }\n\n    encode(writer: Writer, value: any): number {\n        if (value != null) { this._throwError(\"not null\", value); }\n        return writer.writeBytes([ ]);\n    }\n\n    decode(reader: Reader): any {\n        reader.readBytes(0);\n        return reader.coerce(this.name, null);\n    }\n}\n","export const AddressZero = \"0x0000000000000000000000000000000000000000\";\n\n","import { BigNumber } from \"@ethersproject/bignumber\";\n\nconst NegativeOne: BigNumber = (/*#__PURE__*/BigNumber.from(-1));\nconst Zero: BigNumber = (/*#__PURE__*/BigNumber.from(0));\nconst One: BigNumber = (/*#__PURE__*/BigNumber.from(1));\nconst Two: BigNumber = (/*#__PURE__*/BigNumber.from(2));\nconst WeiPerEther: BigNumber = (/*#__PURE__*/BigNumber.from(\"1000000000000000000\"));\nconst MaxUint256: BigNumber = (/*#__PURE__*/BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"));\n\nconst MinInt256: BigNumber = (/*#__PURE__*/BigNumber.from(\"-0x8000000000000000000000000000000000000000000000000000000000000000\"));\nconst MaxInt256: BigNumber = (/*#__PURE__*/BigNumber.from(\"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"));\n\nexport {\n    NegativeOne,\n    Zero,\n    One,\n    Two,\n    WeiPerEther,\n    MaxUint256,\n    MinInt256,\n    MaxInt256,\n};\n","export const HashZero = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n\n","// NFKC (composed)             // (decomposed)\nexport const EtherSymbol = \"\\u039e\";  // \"\\uD835\\uDF63\";\n","\"use strict\";\n\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { MaxUint256, NegativeOne, One, Zero } from \"@ethersproject/constants\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\nexport class NumberCoder extends Coder {\n    readonly size: number;\n    readonly signed: boolean;\n\n    constructor(size: number, signed: boolean, localName: string) {\n        const name = ((signed ? \"int\": \"uint\") + (size * 8));\n        super(name, name, localName, false);\n\n        this.size = size;\n        this.signed = signed;\n    }\n\n    defaultValue(): number {\n        return 0;\n    }\n\n    encode(writer: Writer, value: BigNumberish): number {\n        let v = BigNumber.from(value);\n\n        // Check bounds are safe for encoding\n        let maxUintValue = MaxUint256.mask(writer.wordSize * 8);\n        if (this.signed) {\n            let bounds = maxUintValue.mask(this.size * 8 - 1);\n            if (v.gt(bounds) || v.lt(bounds.add(One).mul(NegativeOne))) {\n                this._throwError(\"value out-of-bounds\", value);\n            }\n        } else if (v.lt(Zero) || v.gt(maxUintValue.mask(this.size * 8))) {\n            this._throwError(\"value out-of-bounds\", value);\n        }\n\n        v = v.toTwos(this.size * 8).mask(this.size * 8);\n\n        if (this.signed) {\n            v = v.fromTwos(this.size * 8).toTwos(8 * writer.wordSize);\n        }\n\n        return writer.writeValue(v);\n    }\n\n    decode(reader: Reader): any {\n        let value = reader.readValue().mask(this.size * 8);\n\n        if (this.signed) {\n            value = value.fromTwos(this.size * 8);\n        }\n\n        return reader.coerce(this.name, value);\n    }\n}\n\n","\"use strict\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n\nexport enum UnicodeNormalizationForm {\n    current  = \"\",\n    NFC      = \"NFC\",\n    NFD      = \"NFD\",\n    NFKC     = \"NFKC\",\n    NFKD     = \"NFKD\"\n};\n\nexport enum Utf8ErrorReason {\n    // A continuation byte was present where there was nothing to continue\n    // - offset = the index the codepoint began in\n    UNEXPECTED_CONTINUE   = \"unexpected continuation byte\",\n\n    // An invalid (non-continuation) byte to start a UTF-8 codepoint was found\n    // - offset = the index the codepoint began in\n    BAD_PREFIX            = \"bad codepoint prefix\",\n\n    // The string is too short to process the expected codepoint\n    // - offset = the index the codepoint began in\n    OVERRUN               = \"string overrun\",\n\n    // A missing continuation byte was expected but not found\n    // - offset = the index the continuation byte was expected at\n    MISSING_CONTINUE      = \"missing continuation byte\",\n\n    // The computed code point is outside the range for UTF-8\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; outside the UTF-8 range\n    OUT_OF_RANGE          = \"out of UTF-8 range\",\n\n    // UTF-8 strings may not contain UTF-16 surrogate pairs\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; inside the UTF-16 surrogate range\n    UTF16_SURROGATE       = \"UTF-16 surrogate\",\n\n    // The string is an overlong representation\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; already bounds checked\n    OVERLONG              = \"overlong representation\",\n};\n\n\nexport type Utf8ErrorFunc = (reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number) => number;\n\nfunction errorFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n    return logger.throwArgumentError(`invalid codepoint at offset ${ offset }; ${ reason }`, \"bytes\", bytes);\n}\n\nfunction ignoreFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n\n    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n    if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {\n        let i = 0;\n        for (let o = offset + 1; o < bytes.length; o++) {\n            if (bytes[o] >> 6 !== 0x02) { break; }\n            i++;\n        }\n        return i;\n    }\n\n    // This byte runs us past the end of the string, so just jump to the end\n    // (but the first byte was read already read and therefore skipped)\n    if (reason === Utf8ErrorReason.OVERRUN) {\n        return bytes.length - offset - 1;\n    }\n\n    // Nothing to skip\n    return 0;\n}\n\nfunction replaceFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n\n    // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n    if (reason === Utf8ErrorReason.OVERLONG) {\n        output.push(badCodepoint);\n        return 0;\n    }\n\n    // Put the replacement character into the output\n    output.push(0xfffd);\n\n    // Otherwise, process as if ignoring errors\n    return ignoreFunc(reason, offset, bytes, output, badCodepoint);\n}\n\n// Common error handing strategies\nexport const Utf8ErrorFuncs: { [ name: string ]: Utf8ErrorFunc } = Object.freeze({\n    error: errorFunc,\n    ignore: ignoreFunc,\n    replace: replaceFunc\n});\n\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction getUtf8CodePoints(bytes: BytesLike, onError?: Utf8ErrorFunc): Array<number> {\n    if (onError == null) { onError = Utf8ErrorFuncs.error; }\n\n    bytes = arrayify(bytes);\n\n    const result: Array<number> = [];\n    let i = 0;\n\n    // Invalid bytes are ignored\n    while(i < bytes.length) {\n\n        const c = bytes[i++];\n\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result.push(c);\n            continue;\n        }\n\n        // Multibyte; how many bytes left for this character?\n        let extraLength = null;\n        let overlongMask = null;\n\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n\n        // 1110 xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n\n        // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n\n        } else {\n            if ((c & 0xc0) === 0x80) {\n                i += onError(Utf8ErrorReason.UNEXPECTED_CONTINUE, i - 1, bytes, result);\n            } else {\n                i += onError(Utf8ErrorReason.BAD_PREFIX, i - 1, bytes, result);\n            }\n            continue;\n        }\n\n        // Do we have enough bytes in our data?\n        if (i - 1 + extraLength >= bytes.length) {\n            i += onError(Utf8ErrorReason.OVERRUN, i - 1, bytes, result);\n            continue;\n        }\n\n        // Remove the length prefix from the char\n        let res = c & ((1 << (8 - extraLength - 1)) - 1);\n\n        for (let j = 0; j < extraLength; j++) {\n            let nextChar = bytes[i];\n\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                i += onError(Utf8ErrorReason.MISSING_CONTINUE, i, bytes, result);\n                res = null;\n                break;\n            };\n\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n\n        // See above loop for invalid continuation byte\n        if (res === null) { continue; }\n\n        // Maximum code point\n        if (res > 0x10ffff) {\n            i += onError(Utf8ErrorReason.OUT_OF_RANGE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            i += onError(Utf8ErrorReason.UTF16_SURROGATE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Check for overlong sequences (more bytes than needed)\n        if (res <= overlongMask) {\n            i += onError(Utf8ErrorReason.OVERLONG, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        result.push(res);\n    }\n\n    return result;\n}\n\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\nexport function toUtf8Bytes(str: string, form: UnicodeNormalizationForm = UnicodeNormalizationForm.current): Uint8Array {\n\n    if (form != UnicodeNormalizationForm.current) {\n        logger.checkNormalize();\n        str = str.normalize(form);\n    }\n\n    let result = [];\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charCodeAt(i);\n\n        if (c < 0x80) {\n            result.push(c);\n\n        } else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n\n        } else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            const c2 = str.charCodeAt(i);\n\n            if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {\n                throw new Error(\"invalid utf-8 string\");\n            }\n\n            // Surrogate Pair\n            const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((pair >> 18) | 0xf0);\n            result.push(((pair >> 12) & 0x3f) | 0x80);\n            result.push(((pair >> 6) & 0x3f) | 0x80);\n            result.push((pair & 0x3f) | 0x80);\n\n        } else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n\n    return arrayify(result);\n};\n\nfunction escapeChar(value: number) {\n    const hex = (\"0000\" + value.toString(16));\n    return \"\\\\u\" + hex.substring(hex.length - 4);\n}\n\nexport function _toEscapedUtf8String(bytes: BytesLike, onError?: Utf8ErrorFunc): string {\n    return '\"' + getUtf8CodePoints(bytes, onError).map((codePoint) => {\n        if (codePoint < 256) {\n            switch (codePoint) {\n                case 8:  return \"\\\\b\";\n                case 9:  return \"\\\\t\";\n                case 10: return \"\\\\n\"\n                case 13: return \"\\\\r\";\n                case 34: return \"\\\\\\\"\";\n                case 92: return \"\\\\\\\\\";\n            }\n\n            if (codePoint >= 32 && codePoint < 127) {\n                return String.fromCharCode(codePoint);\n            }\n        }\n\n        if (codePoint <= 0xffff) {\n            return escapeChar(codePoint);\n        }\n\n        codePoint -= 0x10000;\n        return escapeChar(((codePoint >> 10) & 0x3ff) + 0xd800) + escapeChar((codePoint & 0x3ff) + 0xdc00);\n    }).join(\"\") + '\"';\n}\n\nexport function _toUtf8String(codePoints: Array<number>): string {\n    return codePoints.map((codePoint) => {\n        if (codePoint <= 0xffff) {\n            return String.fromCharCode(codePoint);\n        }\n        codePoint -= 0x10000;\n        return String.fromCharCode(\n            (((codePoint >> 10) & 0x3ff) + 0xd800),\n            ((codePoint & 0x3ff) + 0xdc00)\n        );\n    }).join(\"\");\n}\n\nexport function toUtf8String(bytes: BytesLike, onError?: Utf8ErrorFunc): string {\n    return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\n\nexport function toUtf8CodePoints(str: string, form: UnicodeNormalizationForm = UnicodeNormalizationForm.current): Array<number> {\n    return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\n","export const version = \"strings/5.7.0\";\n","\"use strict\";\n\nimport { HashZero } from \"@ethersproject/constants\";\nimport { arrayify, BytesLike, concat, hexlify } from \"@ethersproject/bytes\";\n\nimport { toUtf8Bytes, toUtf8String } from \"./utf8\";\n\n\nexport function formatBytes32String(text: string): string {\n\n    // Get the bytes\n    const bytes = toUtf8Bytes(text);\n\n    // Check we have room for null-termination\n    if (bytes.length > 31) { throw new Error(\"bytes32 string must be less than 32 bytes\"); }\n\n    // Zero-pad (implicitly null-terminates)\n    return hexlify(concat([ bytes, HashZero ]).slice(0, 32));\n}\n\nexport function parseBytes32String(bytes: BytesLike): string {\n    const data = arrayify(bytes);\n\n    // Must be 32 bytes with a null-termination\n    if (data.length !== 32) { throw new Error(\"invalid bytes32 - not 32 bytes long\"); }\n    if (data[31] !== 0) { throw new Error(\"invalid bytes32 string - no null terminator\"); }\n\n    // Find the null termination\n    let length = 31;\n    while (data[length - 1] === 0) { length--; }\n\n    // Determine the string value\n    return toUtf8String(data.slice(0, length));\n}\n\n","\"use strict\";\n\nimport { toUtf8CodePoints, _toUtf8String, UnicodeNormalizationForm } from \"./utf8\";\n\ntype Ranged = {\n    l: number,          // Lo value\n    h: number,          // High value (less the lo)\n    d?: number,         // Delta/stride (default: 1)\n    s?: number,         // Shift (default: 1)\n    e?: Array<number>   // Exceptions to skip\n};\n\ntype Table = { [ src: number ]: Array<number> };\n\nfunction bytes2(data: string): Array<number> {\n    if ((data.length % 4) !== 0) { throw new Error(\"bad data\"); }\n    let result = [];\n    for (let i = 0; i < data.length; i += 4) {\n        result.push(parseInt(data.substring(i, i + 4), 16));\n    }\n    return result;\n}\n\nfunction createTable(data: string, func?: (value: string) => Array<number>): Table {\n    if (!func) {\n        func = function(value: string) { return [ parseInt(value, 16) ]; }\n    }\n\n    let lo = 0;\n\n    let result: Table = { };\n    data.split(\",\").forEach((pair) => {\n        let comps = pair.split(\":\");\n        lo += parseInt(comps[0], 16);\n        result[lo] = func(comps[1]);\n    });\n\n    return result;\n}\n\nfunction createRangeTable(data: string): Array<Ranged> {\n    let hi = 0;\n    return data.split(\",\").map((v) => {\n        let comps = v.split(\"-\");\n        if (comps.length === 1) {\n            comps[1] = \"0\";\n        } else if (comps[1] === \"\") {\n            comps[1] = \"1\";\n        }\n\n        let lo = hi + parseInt(comps[0], 16);\n        hi = parseInt(comps[1], 16);\n        return { l: lo, h: hi };\n    });\n}\n\nfunction matchMap(value: number, ranges: Array<Ranged>): Ranged {\n    let lo = 0;\n    for (let i = 0; i < ranges.length; i++) {\n        let range = ranges[i];\n        lo += range.l;\n        if (value >= lo && value <= lo + range.h && ((value - lo) % (range.d || 1)) === 0) {\n            if (range.e && range.e.indexOf(value - lo) !== -1) { continue; }\n            return range;\n        }\n    }\n    return null;\n}\n\nconst Table_A_1_ranges = createRangeTable(\"221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d\");\n\n// @TODO: Make this relative...\nconst Table_B_1_flags = \"ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff\".split(\",\").map((v) => parseInt(v, 16));\n\nconst Table_B_2_ranges: Array<Ranged> = [\n    { h: 25, s: 32, l: 65 },\n    { h: 30, s: 32, e: [ 23 ], l: 127 },\n    { h: 54, s: 1, e: [ 48 ], l: 64, d: 2 },\n    { h: 14, s: 1, l: 57, d: 2 },\n    { h: 44, s: 1, l: 17, d: 2 },\n    { h: 10, s: 1, e: [ 2, 6, 8 ], l: 61, d: 2 },\n    { h: 16, s: 1, l: 68, d: 2 },\n    { h: 84, s: 1, e: [ 18, 24, 66 ], l: 19, d: 2 },\n    { h: 26, s: 32, e: [ 17 ], l: 435 },\n    { h: 22, s: 1, l: 71, d: 2 },\n    { h: 15, s: 80, l: 40 },\n    { h: 31, s: 32, l: 16 },\n    { h: 32, s: 1, l: 80, d: 2 },\n    { h: 52, s: 1, l: 42, d: 2 },\n    { h: 12, s: 1, l: 55, d: 2 },\n    { h: 40, s: 1, e: [ 38 ], l: 15, d: 2 },\n    { h: 14, s: 1, l: 48, d: 2 },\n    { h: 37, s: 48, l: 49 },\n    { h: 148, s: 1, l: 6351, d: 2 },\n    { h: 88, s: 1, l: 160, d: 2 },\n    { h: 15, s: 16, l: 704 },\n    { h: 25, s: 26, l: 854 },\n    { h: 25, s: 32, l: 55915 },\n    { h: 37, s: 40, l: 1247 },\n    { h: 25, s: -119711, l: 53248 },\n    { h: 25, s: -119763, l: 52 },\n    { h: 25, s: -119815, l: 52 },\n    { h: 25, s: -119867, e: [ 1, 4, 5, 7, 8, 11, 12, 17 ], l: 52 },\n    { h: 25, s: -119919, l: 52 },\n    { h: 24, s: -119971, e: [ 2, 7, 8, 17 ], l: 52 },\n    { h: 24, s: -120023, e: [ 2, 7, 13, 15, 16, 17 ], l: 52 },\n    { h: 25, s: -120075, l: 52 },\n    { h: 25, s: -120127, l: 52 },\n    { h: 25, s: -120179, l: 52 },\n    { h: 25, s: -120231, l: 52 },\n    { h: 25, s: -120283, l: 52 },\n    { h: 25, s: -120335, l: 52 },\n    { h: 24, s: -119543, e: [ 17 ], l: 56 },\n    { h: 24, s: -119601, e: [ 17 ], l: 58 },\n    { h: 24, s: -119659, e: [ 17 ], l: 58 },\n    { h: 24, s: -119717, e: [ 17 ], l: 58 },\n    { h: 24, s: -119775, e: [ 17 ], l: 58 }\n];\nconst Table_B_2_lut_abs = createTable(\"b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3\");\nconst Table_B_2_lut_rel = createTable(\"179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7\");\nconst Table_B_2_complex = createTable(\"df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D\", bytes2);\n\nconst Table_C_ranges = createRangeTable(\"80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001\");\n\n\nfunction flatten(values: Array<Array<number>>): Array<number> {\n    return values.reduce((accum, value) => {\n        value.forEach((value) => { accum.push(value); });\n        return accum;\n    }, [ ]);\n}\n\nexport function _nameprepTableA1(codepoint: number): boolean {\n    return !!matchMap(codepoint, Table_A_1_ranges);\n}\n\nexport function _nameprepTableB2(codepoint: number): Array<number> {\n    let range = matchMap(codepoint, Table_B_2_ranges);\n    if (range) { return [ codepoint + range.s ]; }\n\n    let codes = Table_B_2_lut_abs[codepoint];\n    if (codes) { return codes; }\n\n    let shift = Table_B_2_lut_rel[codepoint];\n    if (shift) { return [ codepoint + shift[0] ]; }\n\n    let complex = Table_B_2_complex[codepoint];\n    if (complex) { return complex; }\n\n    return null;\n}\n\nexport function _nameprepTableC(codepoint: number): boolean {\n    return !!matchMap(codepoint, Table_C_ranges);\n}\n\nexport function nameprep(value: string): string {\n\n    // This allows platforms with incomplete normalize to bypass\n    // it for very basic names which the built-in toLowerCase\n    // will certainly handle correctly\n    if (value.match(/^[a-z0-9-]*$/i) && value.length <= 59) { return value.toLowerCase(); }\n\n    // Get the code points (keeping the current normalization)\n    let codes = toUtf8CodePoints(value);\n\n    codes = flatten(codes.map((code) => {\n        // Substitute Table B.1 (Maps to Nothing)\n        if (Table_B_1_flags.indexOf(code) >= 0) { return [ ]; }\n        if (code >= 0xfe00 && code <= 0xfe0f) { return [ ]; }\n\n        // Substitute Table B.2 (Case Folding)\n        let codesTableB2 = _nameprepTableB2(code);\n        if (codesTableB2) { return codesTableB2; }\n\n        // No Substitution\n        return [ code ];\n    }));\n\n    // Normalize using form KC\n    codes = toUtf8CodePoints(_toUtf8String(codes), UnicodeNormalizationForm.NFKC);\n\n    // Prohibit Tables C.1.2, C.2.2, C.3, C.4, C.5, C.6, C.7, C.8, C.9\n    codes.forEach((code) => {\n        if (_nameprepTableC(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_PROHIBITED\");\n        }\n    });\n\n    // Prohibit Unassigned Code Points (Table A.1)\n    codes.forEach((code) => {\n        if (_nameprepTableA1(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_UNASSIGNED\");\n        }\n    });\n\n    // IDNA extras\n    let name = _toUtf8String(codes);\n\n    // IDNA: 4.2.3.1\n    if (name.substring(0, 1) === \"-\" || name.substring(2, 4) === \"--\" || name.substring(name.length - 1) === \"-\") {\n        throw new Error(\"invalid hyphen\");\n    }\n\n    return name;\n}\n\n","\"use strict\";\n\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\n\nimport { Reader, Writer } from \"./abstract-coder\";\nimport { DynamicBytesCoder } from \"./bytes\";\n\nexport class StringCoder extends DynamicBytesCoder {\n\n    constructor(localName: string) {\n        super(\"string\", localName);\n    }\n\n    defaultValue(): string {\n        return \"\";\n    }\n\n    encode(writer: Writer, value: any): number {\n        return super.encode(writer, toUtf8Bytes(value));\n    }\n\n    decode(reader: Reader): any {\n        return toUtf8String(super.decode(reader));\n    }\n}\n","\"use strict\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\nimport { pack, unpack } from \"./array\";\n\nexport class TupleCoder extends Coder {\n    readonly coders: Array<Coder>;\n\n    constructor(coders: Array<Coder>, localName: string) {\n        let dynamic = false;\n        const types: Array<string> = [];\n        coders.forEach((coder) => {\n            if (coder.dynamic) { dynamic = true; }\n            types.push(coder.type);\n        });\n        const type = (\"tuple(\" + types.join(\",\") + \")\");\n\n        super(\"tuple\", type, localName, dynamic);\n        this.coders = coders;\n    }\n\n    defaultValue(): any {\n        const values: any = [ ];\n        this.coders.forEach((coder) => {\n            values.push(coder.defaultValue());\n        });\n\n        // We only output named properties for uniquely named coders\n        const uniqueNames = this.coders.reduce((accum, coder) => {\n            const name = coder.localName;\n            if (name) {\n                if (!accum[name]) { accum[name] = 0; }\n                accum[name]++;\n            }\n            return accum;\n        }, <{ [ name: string ]: number }>{ });\n\n        // Add named values\n        this.coders.forEach((coder: Coder, index: number) => {\n            let name = coder.localName;\n            if (!name || uniqueNames[name] !== 1) { return; }\n\n            if (name === \"length\") { name = \"_length\"; }\n\n            if (values[name] != null) { return; }\n\n            values[name] = values[index];\n        });\n\n        return Object.freeze(values);\n    }\n\n    encode(writer: Writer, value: Array<any> | { [ name: string ]: any }): number {\n        return pack(writer, this.coders, value);\n    }\n\n    decode(reader: Reader): any {\n        return reader.coerce(this.name, unpack(reader, this.coders));\n    }\n}\n\n","import { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\n\nexport function id(text: string): string {\n    return keccak256(toUtf8Bytes(text));\n}\n","import { concat, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { ens_normalize } from \"./ens-normalize/lib\";\n\nconst Zeros = new Uint8Array(32);\nZeros.fill(0);\n\nfunction checkComponent(comp: Uint8Array): Uint8Array {\n    if (comp.length === 0) { throw new Error(\"invalid ENS name; empty component\"); }\n    return comp;\n}\n\nfunction ensNameSplit(name: string): Array<Uint8Array> {\n    const bytes = toUtf8Bytes(ens_normalize(name));\n    const comps: Array<Uint8Array> = [ ];\n\n    if (name.length === 0) { return comps; }\n\n    let last = 0;\n    for (let i = 0; i < bytes.length; i++) {\n        const d = bytes[i];\n\n        // A separator (i.e. \".\"); copy this component\n        if (d === 0x2e) {\n            comps.push(checkComponent(bytes.slice(last, i)));\n            last = i + 1;\n        }\n    }\n\n    // There was a stray separator at the end of the name\n    if (last >= bytes.length) { throw new Error(\"invalid ENS name; empty component\"); }\n\n    comps.push(checkComponent(bytes.slice(last)));\n    return comps;\n}\n\nexport function ensNormalize(name: string): string {\n    return ensNameSplit(name).map((comp) => toUtf8String(comp)).join(\".\");\n}\n\nexport function isValidName(name: string): boolean {\n    try {\n        return (ensNameSplit(name).length !== 0);\n    } catch (error) { }\n    return false;\n}\n\nexport function namehash(name: string): string {\n    /* istanbul ignore if */\n    if (typeof(name) !== \"string\") {\n        logger.throwArgumentError(\"invalid ENS name; not a string\", \"name\", name);\n    }\n\n    let result: string | Uint8Array = Zeros;\n\n    const comps = ensNameSplit(name);\n    while (comps.length) {\n        result = keccak256(concat([result, keccak256(comps.pop())]));\n    }\n\n    return hexlify(result);\n}\n\nexport function dnsEncode(name: string): string {\n    return hexlify(concat(ensNameSplit(name).map((comp) => {\n        // DNS does not allow components over 63 bytes in length\n        if (comp.length > 63) {\n            throw new Error(\"invalid DNS encoded entry; length exceeds 63 bytes\");\n        }\n\n        const bytes = new Uint8Array(comp.length + 1);\n        bytes.set(comp, 1);\n        bytes[0] = bytes.length - 1;\n        return bytes;\n\n    }))) + \"00\";\n}\n","export const version = \"hash/5.7.0\";\n","/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\n\nexport type Numbers = Uint8Array | Array<number>;\nexport type NextFunc = (...args: Array<any>) => number;\n\n// https://github.com/behnammodi/polyfill/blob/master/array.polyfill.js\nfunction flat(array: Array<any>, depth?: number): Array<any> {\n    if (depth == null) { depth = 1; }\n    const result: Array<any> = [];\n\n    const forEach = result.forEach;\n\n    const flatDeep = function (arr: Array<any>, depth: number) {\n        forEach.call(arr, function (val: any) {\n            if (depth > 0 && Array.isArray(val)) {\n                flatDeep(val, depth - 1);\n            } else {\n               result.push(val);\n            }\n        });\n    };\n\n    flatDeep(array, depth);\n    return result;\n}\n\nfunction fromEntries<T extends string | number | symbol = string | number | symbol, U = any>(array: Array<[T, U]>): Record<T, U> {\n    const result: Record<T, U> = <Record<T, U>>{ };\n    for (let i = 0; i < array.length; i++) {\n        const value = array[i];\n        result[value[0]] = value[1];\n    }\n    return result;\n}\n\nexport function decode_arithmetic(bytes: Numbers): Array<number> {\n\tlet pos = 0;\n\tfunction u16() { return (bytes[pos++] << 8) | bytes[pos++]; }\n\t\n\t// decode the frequency table\n\tlet symbol_count = u16();\n\tlet total = 1;\n\tlet acc = [0, 1]; // first symbol has frequency 1\n\tfor (let i = 1; i < symbol_count; i++) {\n\t\tacc.push(total += u16());\n\t}\n\n\t// skip the sized-payload that the last 3 symbols index into\n\tlet skip = u16();\n\tlet pos_payload = pos;\n\tpos += skip;\n\n\tlet read_width = 0;\n\tlet read_buffer = 0; \n\tfunction read_bit() {\n\t\tif (read_width == 0) {\n\t\t\t// this will read beyond end of buffer\n\t\t\t// but (undefined|0) => zero pad\n\t\t\tread_buffer = (read_buffer << 8) | bytes[pos++];\n\t\t\tread_width = 8;\n\t\t}\n\t\treturn (read_buffer >> --read_width) & 1;\n\t}\n\n\tconst N = 31;\n\tconst FULL = 2**N;\n\tconst HALF = FULL >>> 1;\n\tconst QRTR = HALF >> 1;\n\tconst MASK = FULL - 1;\n\n\t// fill register\n\tlet register = 0;\n\tfor (let i = 0; i < N; i++) register = (register << 1) | read_bit();\n\n\tlet symbols = [];\n\tlet low = 0;\n\tlet range = FULL; // treat like a float\n\twhile (true) {\n\t\tlet value = Math.floor((((register - low + 1) * total) - 1) / range);\n\t\tlet start = 0;\n\t\tlet end = symbol_count;\n\t\twhile (end - start > 1) { // binary search\n\t\t\tlet mid = (start + end) >>> 1;\n\t\t\tif (value < acc[mid]) {\n\t\t\t\tend = mid;\n\t\t\t} else {\n\t\t\t\tstart = mid;\n\t\t\t}\n\t\t}\n\t\tif (start == 0) break; // first symbol is end mark\n\t\tsymbols.push(start);\n\t\tlet a = low + Math.floor(range * acc[start]   / total);\n\t\tlet b = low + Math.floor(range * acc[start+1] / total) - 1\n\t\twhile (((a ^ b) & HALF) == 0) {\n\t\t\tregister = (register << 1) & MASK | read_bit();\n\t\t\ta = (a << 1) & MASK;\n\t\t\tb = (b << 1) & MASK | 1;\n\t\t}\n\t\twhile (a & ~b & QRTR) {\n\t\t\tregister = (register & HALF) | ((register << 1) & (MASK >>> 1)) | read_bit();\n\t\t\ta = (a << 1) ^ HALF;\n\t\t\tb = ((b ^ HALF) << 1) | HALF | 1;\n\t\t}\n\t\tlow = a;\n\t\trange = 1 + b - a;\n\t}\n\tlet offset = symbol_count - 4;\n\treturn symbols.map(x => { // index into payload\n\t\tswitch (x - offset) {\n\t\t\tcase 3: return offset + 0x10100 + ((bytes[pos_payload++] << 16) | (bytes[pos_payload++] << 8) | bytes[pos_payload++]);\n\t\t\tcase 2: return offset + 0x100 + ((bytes[pos_payload++] << 8) | bytes[pos_payload++]);\n\t\t\tcase 1: return offset + bytes[pos_payload++];\n\t\t\tdefault: return x - 1;\n\t\t}\n\t});\n}\t\n\n\n// returns an iterator which returns the next symbol\nexport function read_payload(v: Numbers): NextFunc {\n\tlet pos = 0;\n\treturn () => v[pos++];\n}\nexport function read_compressed_payload(bytes: Numbers): NextFunc {\n\treturn read_payload(decode_arithmetic(bytes));\n}\n\n// eg. [0,1,2,3...] => [0,-1,1,-2,...]\nexport function signed(i: number): number { \n\treturn (i & 1) ? (~i >> 1) : (i >> 1);\n}\n\nfunction read_counts(n: number, next: NextFunc): Array<number> {\n\tlet v = Array(n);\n\tfor (let i = 0; i < n; i++) v[i] = 1 + next();\n\treturn v;\n}\n\nfunction read_ascending(n: number, next: NextFunc): Array<number> {\n\tlet v = Array(n);\n\tfor (let i = 0, x = -1; i < n; i++) v[i] = x += 1 + next();\n\treturn v;\n}\n\nfunction read_deltas(n: number, next: NextFunc): Array<number> {\n\tlet v = Array(n);\n\tfor (let i = 0, x = 0; i < n; i++) v[i] = x += signed(next());\n\treturn v;\n}\n\nexport function read_member_array(next: NextFunc, lookup?: Record<number, number>) {\n    let v = read_ascending(next(), next);\n    let n = next();\n    let vX = read_ascending(n, next);\n    let vN = read_counts(n, next);\n    for (let i = 0; i < n; i++) {\n        for (let j = 0; j < vN[i]; j++) {\n            v.push(vX[i] + j);\n        }\n    }\n    return lookup ? v.map(x => lookup[x]) : v;\n}\n\n// returns array of \n// [x, ys] => single replacement rule\n// [x, ys, n, dx, dx] => linear map\nexport function read_mapped_map(next: NextFunc): Record<number, Array<number>> {\n\tlet ret = [];\n\twhile (true) {\n\t\tlet w = next();\n\t\tif (w == 0) break;\n\t\tret.push(read_linear_table(w, next));\n\t}\n\twhile (true) {\n\t\tlet w = next() - 1;\n\t\tif (w < 0) break;\n\t\tret.push(read_replacement_table(w, next));\n\t}\n\treturn fromEntries<number, Array<number>>(flat(ret));\n}\n\nexport function read_zero_terminated_array(next: NextFunc): Array<number> {\n\tlet v = [];\n\twhile (true) {\n\t\tlet i = next();\n\t\tif (i == 0) break;\n\t\tv.push(i);\n\t}\n\treturn v;\n}\n\nfunction read_transposed(n: number, w: number, next: NextFunc): Array<Array<number>> {\n    let m = Array(n).fill(undefined).map(() => []);\n    for (let i = 0; i < w; i++) {\n        read_deltas(n, next).forEach((x, j) => m[j].push(x));\n    }\n    return m;\n}\n\n\nfunction read_linear_table(w: number, next: NextFunc): Array<Array<number | Array<number>>> {\n\tlet dx = 1 + next();\n\tlet dy = next();\n\tlet vN = read_zero_terminated_array(next);\n\tlet m = read_transposed(vN.length, 1+w, next);\n\treturn flat(m.map((v, i) => {\n\t  const x = v[0], ys = v.slice(1);\n\t\t//let [x, ...ys] = v;\n\t\t//return Array(vN[i]).fill().map((_, j) => {\n\t\treturn Array(vN[i]).fill(undefined).map((_, j) => {\n\t\t\tlet j_dy = j * dy;\n\t\t\treturn [x + j * dx, ys.map(y => y + j_dy)];\n\t\t});\n\t}));\n}\n\nfunction read_replacement_table(w: number, next: NextFunc): Array<[ number, Array<number> ]> {\n\tlet n = 1 + next();\n\tlet m = read_transposed(n, 1+w, next);\n\treturn m.map(v => [v[0], v.slice(1)]);\n}\n\nexport type Branch = {\n    set: Set<number>;\n    node: Node;\n};\n\nexport type Node = {\n    branches: Array<Branch>;\n    valid: number;\n    fe0f: boolean;\n    save: boolean;\n    check: boolean;\n};\n\nexport function read_emoji_trie(next: NextFunc): Node {\n\tlet sorted = read_member_array(next).sort((a, b) => a - b);\n\treturn read();\n\tfunction read(): Node {\n\t\tlet branches = [];\n\t\twhile (true) {\n\t\t\tlet keys = read_member_array(next, sorted);\n\t\t\tif (keys.length == 0) break;\n\t\t\tbranches.push({set: new Set(keys), node: read()});\n\t\t}\n    branches.sort((a, b) => b.set.size - a.set.size); // sort by likelihood\n \t\tlet temp = next();\n \t\tlet valid = temp % 3;\n \t\ttemp = (temp / 3)|0;\n \t\tlet fe0f = !!(temp & 1);\n \t\ttemp >>= 1;\n \t\tlet save = temp == 1;\n \t\tlet check = temp == 2;\n \t\treturn {branches, valid, fe0f, save, check};\n\t}\n}\n","/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\n\nimport { toUtf8CodePoints } from \"@ethersproject/strings\";\n\nimport { getData } from './include.js';\nconst r = getData();\n\nimport {read_member_array, read_mapped_map, read_emoji_trie} from './decoder.js';\n\n// @TODO: This should be lazily loaded\n\nconst VALID = new Set(read_member_array(r));\nconst IGNORED = new Set(read_member_array(r));\nconst MAPPED = read_mapped_map(r);\nconst EMOJI_ROOT = read_emoji_trie(r);\n//const NFC_CHECK = new Set(read_member_array(r, Array.from(VALID.values()).sort((a, b) => a - b)));\n\n//const STOP = 0x2E;\nconst HYPHEN = 0x2D;\nconst UNDERSCORE = 0x5F;\n\nfunction explode_cp(name: string): Array<number> {\n    return toUtf8CodePoints(name);\n}\n\nfunction filter_fe0f(cps: Array<number>): Array<number> {\n    return cps.filter(cp => cp != 0xFE0F);\n}\n\nexport function ens_normalize_post_check(name: string): string {\n\tfor (let label of name.split('.')) {\n\t\tlet cps = explode_cp(label);\n\t\ttry {\n\t\t\tfor (let i = cps.lastIndexOf(UNDERSCORE) - 1; i >= 0; i--) {\n\t\t\t\tif (cps[i] !== UNDERSCORE) {\n\t\t\t\t\tthrow new Error(`underscore only allowed at start`);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (cps.length >= 4 && cps.every(cp => cp < 0x80) && cps[2] === HYPHEN && cps[3] === HYPHEN) {\n\t\t\t\tthrow new Error(`invalid label extension`);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tthrow new Error(`Invalid label \"${label}\": ${err.message}`);\n\t\t}\n\t}\n\treturn name;\n}\n\nexport function ens_normalize(name: string): string {\n\treturn ens_normalize_post_check(normalize(name, filter_fe0f));\n}\n\nfunction normalize(name: string, emoji_filter: (a: Array<number>) => Array<number>): string {\n\tlet input = explode_cp(name).reverse(); // flip for pop\n\tlet output = [];\n\twhile (input.length) {\t\t\n\t\tlet emoji = consume_emoji_reversed(input);\n\t\tif (emoji) {\n\t\t\toutput.push(...emoji_filter(emoji));\n\t\t\tcontinue;\n\t\t}\n\t\tlet cp = input.pop();\n\t\tif (VALID.has(cp)) {\n\t\t\toutput.push(cp);\n\t\t\tcontinue;\n\t\t} \n\t\tif (IGNORED.has(cp)) {\n\t\t\tcontinue;\n\t\t}\n\t\tlet cps = MAPPED[cp];\n\t\tif (cps) {\n\t\t\toutput.push(...cps);\n\t\t\tcontinue;\n\t\t}\n\t\tthrow new Error(`Disallowed codepoint: 0x${cp.toString(16).toUpperCase()}`);\n\t}\n\treturn ens_normalize_post_check(nfc(String.fromCodePoint(...output)));\n}\n\nfunction nfc(s: string): string {\n    return s.normalize('NFC');\n}\n\nfunction consume_emoji_reversed(cps: Array<number>, eaten?: Array<number>) {\n\tlet node = EMOJI_ROOT;\n\tlet emoji;\n\tlet saved;\n\tlet stack = [];\n\tlet pos = cps.length;\n\tif (eaten) eaten.length = 0; // clear input buffer (if needed)\n\twhile (pos) {\n\t\tlet cp = cps[--pos];\n\t\tnode = node.branches.find(x => x.set.has(cp))?.node;\n\t\tif (!node) break;\n\t\tif (node.save) { // remember\n\t\t\tsaved = cp;\n\t\t} else if (node.check) { // check exclusion\n\t\t\tif (cp === saved) break;\n\t\t}\n\t\tstack.push(cp);\n\t\tif (node.fe0f) {\n\t\t\tstack.push(0xFE0F);\n\t\t\tif (pos > 0 && cps[pos - 1] == 0xFE0F) pos--; // consume optional FE0F\n\t\t}\n\t\tif (node.valid) { // this is a valid emoji (so far)\n\t\t\temoji = stack.slice(); // copy stack\n\t\t\tif (node.valid == 2) emoji.splice(1, 1); // delete FE0F at position 1 (RGI ZWJ don't follow spec!)\n\t\t\tif (eaten) eaten.push(...cps.slice(pos).reverse()); // copy input (if needed)\n\t\t\tcps.length = pos; // truncate\n\t\t}\n\t}\n\treturn emoji;\n}\n","/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\n\nimport { decode } from \"@ethersproject/base64\";\n\nimport {read_compressed_payload} from './decoder.js';\n\nexport function getData(): () => number {\n    return read_compressed_payload(decode(''));\n}\n\n","import { Bytes, concat } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\n\nexport const messagePrefix = \"\\x19Ethereum Signed Message:\\n\";\n\nexport function hashMessage(message: Bytes | string): string {\n    if (typeof(message) === \"string\") { message = toUtf8Bytes(message); }\n    return keccak256(concat([\n        toUtf8Bytes(messagePrefix),\n        toUtf8Bytes(String(message.length)),\n        message\n    ]));\n}\n\n","import { TypedDataDomain, TypedDataField } from \"@ethersproject/abstract-signer\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, hexConcat, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { id } from \"./id\";\n\nconst padding = new Uint8Array(32);\npadding.fill(0);\n\nconst NegativeOne: BigNumber = BigNumber.from(-1);\nconst Zero: BigNumber = BigNumber.from(0);\nconst One: BigNumber = BigNumber.from(1);\nconst MaxUint256: BigNumber = BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n\nfunction hexPadRight(value: BytesLike) {\n    const bytes = arrayify(value);\n    const padOffset = bytes.length % 32\n    if (padOffset) {\n        return hexConcat([ bytes, padding.slice(padOffset) ]);\n    }\n    return hexlify(bytes);\n}\n\nconst hexTrue = hexZeroPad(One.toHexString(), 32);\nconst hexFalse = hexZeroPad(Zero.toHexString(), 32);\n\nconst domainFieldTypes: Record<string, string> = {\n    name: \"string\",\n    version: \"string\",\n    chainId: \"uint256\",\n    verifyingContract: \"address\",\n    salt: \"bytes32\"\n};\n\nconst domainFieldNames: Array<string> = [\n    \"name\", \"version\", \"chainId\", \"verifyingContract\", \"salt\"\n];\n\nfunction checkString(key: string): (value: any) => string {\n    return function (value: any){\n        if (typeof(value) !== \"string\") {\n            logger.throwArgumentError(`invalid domain value for ${ JSON.stringify(key) }`, `domain.${ key }`, value);\n        }\n        return value;\n    }\n}\n\nconst domainChecks: Record<string, (value: any) => any> = {\n    name: checkString(\"name\"),\n    version: checkString(\"version\"),\n    chainId: function(value: any) {\n        try {\n            return BigNumber.from(value).toString()\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value for \"chainId\"`, \"domain.chainId\", value);\n    },\n    verifyingContract: function(value: any) {\n        try {\n            return getAddress(value).toLowerCase();\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"verifyingContract\"`, \"domain.verifyingContract\", value);\n    },\n    salt: function(value: any) {\n        try {\n            const bytes = arrayify(value);\n            if (bytes.length !== 32) { throw new Error(\"bad length\"); }\n            return hexlify(bytes);\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"salt\"`, \"domain.salt\", value);\n    }\n}\n\nfunction getBaseEncoder(type: string): (value: any) => string {\n    // intXX and uintXX\n    {\n        const match = type.match(/^(u?)int(\\d*)$/);\n        if (match) {\n            const signed = (match[1] === \"\");\n\n            const width = parseInt(match[2] || \"256\");\n            if (width % 8 !== 0 || width > 256 || (match[2] && match[2] !== String(width))) {\n                logger.throwArgumentError(\"invalid numeric width\", \"type\", type);\n            }\n\n            const boundsUpper = MaxUint256.mask(signed ? (width - 1): width);\n            const boundsLower = signed ? boundsUpper.add(One).mul(NegativeOne): Zero;\n\n            return function(value: BigNumberish) {\n                const v = BigNumber.from(value);\n\n                if (v.lt(boundsLower) || v.gt(boundsUpper)) {\n                    logger.throwArgumentError(`value out-of-bounds for ${ type }`, \"value\", value);\n                }\n\n                return hexZeroPad(v.toTwos(256).toHexString(), 32);\n            };\n        }\n    }\n\n    // bytesXX\n    {\n        const match = type.match(/^bytes(\\d+)$/);\n        if (match) {\n            const width = parseInt(match[1]);\n            if (width === 0 || width > 32 || match[1] !== String(width)) {\n                logger.throwArgumentError(\"invalid bytes width\", \"type\", type);\n            }\n\n            return function(value: BytesLike) {\n                const bytes = arrayify(value);\n                if (bytes.length !== width) {\n                    logger.throwArgumentError(`invalid length for ${ type }`, \"value\", value);\n                }\n                return hexPadRight(value);\n            };\n        }\n    }\n\n    switch (type) {\n        case \"address\": return function(value: string) {\n            return hexZeroPad(getAddress(value), 32);\n        };\n        case \"bool\": return function(value: boolean) {\n            return ((!value) ? hexFalse: hexTrue);\n        };\n        case \"bytes\": return function(value: BytesLike) {\n            return keccak256(value);\n        };\n        case \"string\": return function(value: string) {\n            return id(value);\n        };\n    }\n\n    return null;\n}\n\nfunction encodeType(name: string, fields: Array<TypedDataField>): string {\n    return `${ name }(${ fields.map(({ name, type }) => (type + \" \" + name)).join(\",\") })`;\n}\n\nexport class TypedDataEncoder {\n    readonly primaryType: string;\n    readonly types: Record<string, Array<TypedDataField>>;\n\n    readonly _encoderCache: Record<string, (value: any) => string>;\n    readonly _types: Record<string, string>;\n\n    constructor(types: Record<string, Array<TypedDataField>>) {\n        defineReadOnly(this, \"types\", Object.freeze(deepCopy(types)));\n\n        defineReadOnly(this, \"_encoderCache\", { });\n        defineReadOnly(this, \"_types\", { });\n\n        // Link struct types to their direct child structs\n        const links: Record<string, Record<string, boolean>> = { };\n\n        // Link structs to structs which contain them as a child\n        const parents: Record<string, Array<string>> = { };\n\n        // Link all subtypes within a given struct\n        const subtypes: Record<string, Record<string, boolean>> = { };\n\n        Object.keys(types).forEach((type) => {\n            links[type] = { };\n            parents[type] = [ ];\n            subtypes[type] = { }\n        });\n\n        for (const name in types) {\n\n            const uniqueNames: Record<string, boolean> = { };\n\n            types[name].forEach((field) => {\n\n                // Check each field has a unique name\n                if (uniqueNames[field.name]) {\n                    logger.throwArgumentError(`duplicate variable name ${ JSON.stringify(field.name) } in ${ JSON.stringify(name) }`, \"types\", types);\n                }\n                uniqueNames[field.name] = true;\n\n                // Get the base type (drop any array specifiers)\n                const baseType = field.type.match(/^([^\\x5b]*)(\\x5b|$)/)[1];\n                if (baseType === name) {\n                    logger.throwArgumentError(`circular type reference to ${ JSON.stringify(baseType) }`, \"types\", types);\n                }\n\n                // Is this a base encoding type?\n                const encoder = getBaseEncoder(baseType);\n                if (encoder) { return ;}\n\n                if (!parents[baseType]) {\n                    logger.throwArgumentError(`unknown type ${ JSON.stringify(baseType) }`, \"types\", types);\n                }\n\n                // Add linkage\n                parents[baseType].push(name);\n                links[name][baseType] = true;\n            });\n        }\n\n        // Deduce the primary type\n        const primaryTypes = Object.keys(parents).filter((n) => (parents[n].length === 0));\n\n        if (primaryTypes.length === 0) {\n            logger.throwArgumentError(\"missing primary type\", \"types\", types);\n        } else if (primaryTypes.length > 1) {\n            logger.throwArgumentError(`ambiguous primary types or unused types: ${ primaryTypes.map((t) => (JSON.stringify(t))).join(\", \") }`, \"types\", types);\n        }\n\n        defineReadOnly(this, \"primaryType\", primaryTypes[0]);\n\n        // Check for circular type references\n        function checkCircular(type: string, found: Record<string, boolean>) {\n            if (found[type]) {\n                logger.throwArgumentError(`circular type reference to ${ JSON.stringify(type) }`, \"types\", types);\n            }\n\n            found[type] = true;\n\n            Object.keys(links[type]).forEach((child) => {\n                if (!parents[child]) { return; }\n\n                // Recursively check children\n                checkCircular(child, found);\n\n                // Mark all ancestors as having this decendant\n                Object.keys(found).forEach((subtype) => {\n                    subtypes[subtype][child] = true;\n                });\n            });\n\n            delete found[type];\n        }\n        checkCircular(this.primaryType, { });\n\n        // Compute each fully describe type\n        for (const name in subtypes) {\n            const st = Object.keys(subtypes[name]);\n            st.sort();\n            this._types[name] = encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join(\"\");\n        }\n    }\n\n    getEncoder(type: string): (value: any) => string {\n        let encoder = this._encoderCache[type];\n        if (!encoder) {\n            encoder = this._encoderCache[type] = this._getEncoder(type);\n        }\n        return encoder;\n    }\n\n    _getEncoder(type: string): (value: any) => string {\n\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) { return encoder; }\n        }\n\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const subEncoder = this.getEncoder(subtype);\n            const length = parseInt(match[3]);\n            return (value: Array<any>) => {\n                if (length >= 0 && value.length !== length) {\n                    logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n                }\n\n                let result = value.map(subEncoder);\n                if (this._types[subtype]) {\n                    result = result.map(keccak256);\n                }\n\n                return keccak256(hexConcat(result));\n            };\n        }\n\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            const encodedType = id(this._types[type]);\n            return (value: Record<string, any>) => {\n                const values = fields.map(({ name, type }) => {\n                    const result = this.getEncoder(type)(value[name]);\n                    if (this._types[type]) { return keccak256(result); }\n                    return result;\n                });\n                values.unshift(encodedType);\n                return hexConcat(values);\n            }\n        }\n\n        return logger.throwArgumentError(`unknown type: ${ type }`, \"type\", type);\n    }\n\n    encodeType(name: string): string {\n        const result = this._types[name];\n        if (!result) {\n            logger.throwArgumentError(`unknown type: ${ JSON.stringify(name) }`, \"name\", name);\n        }\n        return result;\n    }\n\n    encodeData(type: string, value: any): string {\n        return this.getEncoder(type)(value);\n    }\n\n    hashStruct(name: string, value: Record<string, any>): string {\n        return keccak256(this.encodeData(name, value));\n    }\n\n    encode(value: Record<string, any>): string {\n        return this.encodeData(this.primaryType, value);\n    }\n\n    hash(value: Record<string, any>): string {\n        return this.hashStruct(this.primaryType, value);\n    }\n\n    _visit(type: string, value: any, callback: (type: string, data: any) => any): any {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) { return callback(type, value); }\n        }\n\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const length = parseInt(match[3]);\n            if (length >= 0 && value.length !== length) {\n                logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n            }\n            return value.map((v: any) => this._visit(subtype, v, callback));\n        }\n\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            return fields.reduce((accum, { name, type }) => {\n                accum[name] = this._visit(type, value[name], callback);\n                return accum;\n            }, <Record<string, any>>{});\n        }\n\n        return logger.throwArgumentError(`unknown type: ${ type }`, \"type\", type);\n    }\n\n    visit(value: Record<string, any>, callback: (type: string, data: any) => any): any {\n        return this._visit(this.primaryType, value, callback);\n    }\n\n    static from(types: Record<string, Array<TypedDataField>>): TypedDataEncoder {\n        return new TypedDataEncoder(types);\n    }\n\n    static getPrimaryType(types: Record<string, Array<TypedDataField>>): string {\n        return TypedDataEncoder.from(types).primaryType;\n    }\n\n    static hashStruct(name: string, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return TypedDataEncoder.from(types).hashStruct(name, value);\n    }\n\n    static hashDomain(domain: TypedDataDomain): string {\n        const domainFields: Array<TypedDataField> = [ ];\n        for (const name in domain) {\n            const type = domainFieldTypes[name];\n            if (!type) {\n                logger.throwArgumentError(`invalid typed-data domain key: ${ JSON.stringify(name) }`, \"domain\", domain);\n            }\n            domainFields.push({ name, type });\n        }\n\n        domainFields.sort((a, b) => {\n            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n        });\n\n        return TypedDataEncoder.hashStruct(\"EIP712Domain\", { EIP712Domain: domainFields }, domain);\n    }\n\n    static encode(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return hexConcat([\n            \"0x1901\",\n            TypedDataEncoder.hashDomain(domain),\n            TypedDataEncoder.from(types).hash(value)\n        ]);\n    }\n\n    static hash(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return keccak256(TypedDataEncoder.encode(domain, types, value));\n    }\n\n    // Replaces all address types with ENS names with their looked up address\n    static async resolveNames(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>, resolveName: (name: string) => Promise<string>): Promise<{ domain: TypedDataDomain, value: any }> {\n        // Make a copy to isolate it from the object passed in\n        domain = shallowCopy(domain);\n\n        // Look up all ENS names\n        const ensCache: Record<string, string> = { };\n\n        // Do we need to look up the domain's verifyingContract?\n        if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {\n            ensCache[domain.verifyingContract] = \"0x\";\n        }\n\n        // We are going to use the encoder to visit all the base values\n        const encoder = TypedDataEncoder.from(types);\n\n        // Get a list of all the addresses\n        encoder.visit(value, (type: string, value: any) => {\n            if (type === \"address\" && !isHexString(value, 20)) {\n                ensCache[value] = \"0x\";\n            }\n            return value;\n        });\n\n        // Lookup each name\n        for (const name in ensCache) {\n            ensCache[name] = await resolveName(name);\n        }\n\n        // Replace the domain verifyingContract if needed\n        if (domain.verifyingContract && ensCache[domain.verifyingContract]) {\n            domain.verifyingContract = ensCache[domain.verifyingContract];\n        }\n\n        // Replace all ENS names with their address\n        value = encoder.visit(value, (type: string, value: any) => {\n            if (type === \"address\" && ensCache[value]) { return ensCache[value]; }\n            return value;\n        });\n\n        return { domain, value };\n    }\n\n    static getPayload(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): any {\n        // Validate the domain fields\n        TypedDataEncoder.hashDomain(domain);\n\n        // Derive the EIP712Domain Struct reference type\n        const domainValues: Record<string, any> = { };\n        const domainTypes: Array<{ name: string, type:string }> = [ ];\n\n        domainFieldNames.forEach((name) => {\n            const value = (<any>domain)[name];\n            if (value == null) { return; }\n            domainValues[name] = domainChecks[name](value);\n            domainTypes.push({ name, type: domainFieldTypes[name] });\n        });\n\n        const encoder = TypedDataEncoder.from(types);\n\n        const typesWithDomain = shallowCopy(types);\n        if (typesWithDomain.EIP712Domain) {\n            logger.throwArgumentError(\"types must not contain EIP712Domain type\", \"types.EIP712Domain\", types);\n        } else {\n            typesWithDomain.EIP712Domain = domainTypes;\n        }\n\n        // Validate the data structures and types\n        encoder.encode(value);\n\n        return {\n            types: typesWithDomain,\n            domain: domainValues,\n            primaryType: encoder.primaryType,\n            message: encoder.visit(value, (type: string, value: any) => {\n\n                // bytes\n                if (type.match(/^bytes(\\d*)/)) {\n                    return hexlify(arrayify(value));\n                }\n\n                // uint or int\n                if (type.match(/^u?int/)) {\n                    return BigNumber.from(value).toString();\n                }\n\n                switch (type) {\n                    case \"address\":\n                        return value.toLowerCase();\n                    case \"bool\":\n                        return !!value;\n                    case \"string\":\n                        if (typeof(value) !== \"string\") {\n                            logger.throwArgumentError(`invalid string`, \"value\", value);\n                        }\n                        return value;\n                }\n\n                return logger.throwArgumentError(\"unsupported type\", \"type\", type);\n            })\n        };\n    }\n}\n\n","\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, concat, hexDataSlice, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { id } from \"@ethersproject/hash\";\nimport { keccak256 } from \"@ethersproject/keccak256\"\nimport { defineReadOnly, Description, getStatic } from \"@ethersproject/properties\";\n\nimport { AbiCoder, defaultAbiCoder } from \"./abi-coder\";\nimport { checkResultErrors, Result } from \"./coders/abstract-coder\";\nimport { ConstructorFragment, ErrorFragment, EventFragment, FormatTypes, Fragment, FunctionFragment, JsonFragment, ParamType } from \"./fragments\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport { checkResultErrors, Result };\n\nexport class LogDescription extends Description<LogDescription> {\n    readonly eventFragment: EventFragment;\n    readonly name: string;\n    readonly signature: string;\n    readonly topic: string;\n    readonly args: Result\n}\n\nexport class TransactionDescription extends Description<TransactionDescription> {\n    readonly functionFragment: FunctionFragment;\n    readonly name: string;\n    readonly args: Result;\n    readonly signature: string;\n    readonly sighash: string;\n    readonly value: BigNumber;\n}\n\nexport class ErrorDescription extends Description<ErrorDescription> {\n    readonly errorFragment: ErrorFragment;\n    readonly name: string;\n    readonly args: Result;\n    readonly signature: string;\n    readonly sighash: string;\n}\n\nexport class Indexed extends Description<Indexed> {\n    readonly hash: string;\n    readonly _isIndexed: boolean;\n\n    static isIndexed(value: any): value is Indexed {\n        return !!(value && value._isIndexed);\n    }\n}\n\nconst BuiltinErrors: Record<string, { signature: string, inputs: Array<string>, name: string, reason?: boolean }> = {\n    \"0x08c379a0\": { signature: \"Error(string)\", name: \"Error\", inputs: [ \"string\" ], reason: true },\n    \"0x4e487b71\": { signature: \"Panic(uint256)\", name: \"Panic\", inputs: [ \"uint256\" ] }\n}\n\nfunction wrapAccessError(property: string, error: Error): Error {\n    const wrap = new Error(`deferred error during ABI decoding triggered accessing ${ property }`);\n    (<any>wrap).error = error;\n    return wrap;\n}\n\n/*\nfunction checkNames(fragment: Fragment, type: \"input\" | \"output\", params: Array<ParamType>): void {\n    params.reduce((accum, param) => {\n        if (param.name) {\n            if (accum[param.name]) {\n                logger.throwArgumentError(`duplicate ${ type } parameter ${ JSON.stringify(param.name) } in ${ fragment.format(\"full\") }`, \"fragment\", fragment);\n            }\n            accum[param.name] = true;\n        }\n        return accum;\n    }, <{ [ name: string ]: boolean }>{ });\n}\n*/\nexport class Interface {\n    readonly fragments: ReadonlyArray<Fragment>;\n\n    readonly errors: { [ name: string ]: ErrorFragment };\n    readonly events: { [ name: string ]: EventFragment };\n    readonly functions: { [ name: string ]: FunctionFragment };\n    readonly structs: { [ name: string ]: any };\n\n    readonly deploy: ConstructorFragment;\n\n    readonly _abiCoder: AbiCoder;\n\n    readonly _isInterface: boolean;\n\n    constructor(fragments: string | ReadonlyArray<Fragment | JsonFragment | string>) {\n        let abi: ReadonlyArray<Fragment | JsonFragment | string> = [ ];\n        if (typeof(fragments) === \"string\") {\n            abi = JSON.parse(fragments);\n        } else {\n            abi = fragments;\n        }\n\n        defineReadOnly(this, \"fragments\", abi.map((fragment) => {\n            return Fragment.from(fragment);\n        }).filter((fragment) => (fragment != null)));\n\n        defineReadOnly(this, \"_abiCoder\", getStatic<() => AbiCoder>(new.target, \"getAbiCoder\")());\n\n        defineReadOnly(this, \"functions\", { });\n        defineReadOnly(this, \"errors\", { });\n        defineReadOnly(this, \"events\", { });\n        defineReadOnly(this, \"structs\", { });\n\n        // Add all fragments by their signature\n        this.fragments.forEach((fragment) => {\n            let bucket: { [ name: string ]: Fragment } = null;\n            switch (fragment.type) {\n                case \"constructor\":\n                    if (this.deploy) {\n                        logger.warn(\"duplicate definition - constructor\");\n                        return;\n                    }\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    defineReadOnly(this, \"deploy\", <ConstructorFragment>fragment);\n                    return;\n                case \"function\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    //checkNames(fragment, \"output\", (<FunctionFragment>fragment).outputs);\n                    bucket = this.functions;\n                    break;\n                case \"event\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    bucket = this.events;\n                    break;\n                case \"error\":\n                    bucket = this.errors;\n                    break;\n                default:\n                    return;\n            }\n\n            let signature = fragment.format();\n            if (bucket[signature]) {\n                logger.warn(\"duplicate definition - \" + signature);\n                return;\n            }\n\n            bucket[signature] = fragment;\n        });\n\n        // If we do not have a constructor add a default\n        if (!this.deploy) {\n            defineReadOnly(this, \"deploy\", ConstructorFragment.from({\n                payable: false,\n                type: \"constructor\"\n            }));\n        }\n\n        defineReadOnly(this, \"_isInterface\", true);\n    }\n\n    format(format?: string): string | Array<string> {\n        if (!format) { format = FormatTypes.full; }\n        if (format === FormatTypes.sighash) {\n            logger.throwArgumentError(\"interface does not support formatting sighash\", \"format\", format);\n        }\n\n        const abi = this.fragments.map((fragment) => fragment.format(format));\n\n        // We need to re-bundle the JSON fragments a bit\n        if (format === FormatTypes.json) {\n             return JSON.stringify(abi.map((j) => JSON.parse(j)));\n        }\n\n        return abi;\n    }\n\n    // Sub-classes can override these to handle other blockchains\n    static getAbiCoder(): AbiCoder {\n        return defaultAbiCoder;\n    }\n\n    static getAddress(address: string): string {\n        return getAddress(address);\n    }\n\n    static getSighash(fragment: ErrorFragment | FunctionFragment): string {\n        return hexDataSlice(id(fragment.format()), 0, 4);\n    }\n\n    static getEventTopic(eventFragment: EventFragment): string {\n        return id(eventFragment.format());\n    }\n\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    getFunction(nameOrSignatureOrSighash: string): FunctionFragment {\n        if (isHexString(nameOrSignatureOrSighash)) {\n            for (const name in this.functions) {\n                if (nameOrSignatureOrSighash === this.getSighash(name)) {\n                    return this.functions[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching function\", \"sighash\", nameOrSignatureOrSighash);\n        }\n\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrSighash.trim();\n            const matching = Object.keys(this.functions).filter((f) => (f.split(\"(\"/* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching function\", \"name\", name);\n            } else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching functions\", \"name\", name);\n            }\n\n            return this.functions[matching[0]];\n        }\n\n        // Normalize the signature and lookup the function\n        const result = this.functions[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching function\", \"signature\", nameOrSignatureOrSighash);\n        }\n        return result;\n    }\n\n    // Find an event definition by any means necessary (unless it is ambiguous)\n    getEvent(nameOrSignatureOrTopic: string): EventFragment {\n        if (isHexString(nameOrSignatureOrTopic)) {\n            const topichash = nameOrSignatureOrTopic.toLowerCase();\n            for (const name in this.events) {\n                if (topichash === this.getEventTopic(name)) {\n                    return this.events[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching event\", \"topichash\", topichash);\n        }\n\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrTopic.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrTopic.trim();\n            const matching = Object.keys(this.events).filter((f) => (f.split(\"(\"/* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching event\", \"name\", name);\n            } else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching events\", \"name\", name);\n            }\n\n            return this.events[matching[0]];\n        }\n\n        // Normalize the signature and lookup the function\n        const result = this.events[EventFragment.fromString(nameOrSignatureOrTopic).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching event\", \"signature\", nameOrSignatureOrTopic);\n        }\n        return result;\n    }\n\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    getError(nameOrSignatureOrSighash: string): ErrorFragment {\n        if (isHexString(nameOrSignatureOrSighash)) {\n            const getSighash = getStatic<(f: ErrorFragment | FunctionFragment) => string>(this.constructor, \"getSighash\");\n            for (const name in this.errors) {\n                const error = this.errors[name];\n                if (nameOrSignatureOrSighash === getSighash(error)) {\n                    return this.errors[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching error\", \"sighash\", nameOrSignatureOrSighash);\n        }\n\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrSighash.trim();\n            const matching = Object.keys(this.errors).filter((f) => (f.split(\"(\"/* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching error\", \"name\", name);\n            } else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching errors\", \"name\", name);\n            }\n\n            return this.errors[matching[0]];\n        }\n\n        // Normalize the signature and lookup the function\n        const result = this.errors[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching error\", \"signature\", nameOrSignatureOrSighash);\n        }\n        return result;\n    }\n\n    // Get the sighash (the bytes4 selector) used by Solidity to identify a function\n    getSighash(fragment: ErrorFragment | FunctionFragment | string): string {\n        if (typeof(fragment) === \"string\") {\n            try {\n                fragment = this.getFunction(fragment);\n            } catch (error) {\n                try {\n                    fragment = this.getError(<string>fragment);\n                } catch (_) {\n                    throw error;\n                }\n            }\n        }\n\n        return getStatic<(f: ErrorFragment | FunctionFragment) => string>(this.constructor, \"getSighash\")(fragment);\n    }\n\n    // Get the topic (the bytes32 hash) used by Solidity to identify an event\n    getEventTopic(eventFragment: EventFragment | string): string {\n        if (typeof(eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n\n        return getStatic<(e: EventFragment) => string>(this.constructor, \"getEventTopic\")(eventFragment);\n    }\n\n\n    _decodeParams(params: ReadonlyArray<ParamType>, data: BytesLike): Result {\n        return this._abiCoder.decode(params, data)\n    }\n\n    _encodeParams(params: ReadonlyArray<ParamType>, values: ReadonlyArray<any>): string {\n        return this._abiCoder.encode(params, values)\n    }\n\n    encodeDeploy(values?: ReadonlyArray<any>): string {\n        return this._encodeParams(this.deploy.inputs, values || [ ]);\n    }\n\n    decodeErrorResult(fragment: ErrorFragment | string, data: BytesLike): Result {\n        if (typeof(fragment) === \"string\") {\n            fragment = this.getError(fragment);\n        }\n\n        const bytes = arrayify(data);\n\n        if (hexlify(bytes.slice(0, 4)) !== this.getSighash(fragment)) {\n            logger.throwArgumentError(`data signature does not match error ${ fragment.name }.`, \"data\", hexlify(bytes));\n        }\n\n        return this._decodeParams(fragment.inputs, bytes.slice(4));\n    }\n\n    encodeErrorResult(fragment: ErrorFragment | string, values?: ReadonlyArray<any>): string {\n        if (typeof(fragment) === \"string\") {\n            fragment = this.getError(fragment);\n        }\n\n        return hexlify(concat([\n            this.getSighash(fragment),\n            this._encodeParams(fragment.inputs, values || [ ])\n        ]));\n    }\n\n    // Decode the data for a function call (e.g. tx.data)\n    decodeFunctionData(functionFragment: FunctionFragment | string, data: BytesLike): Result {\n        if (typeof(functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n\n        const bytes = arrayify(data);\n\n        if (hexlify(bytes.slice(0, 4)) !== this.getSighash(functionFragment)) {\n            logger.throwArgumentError(`data signature does not match function ${ functionFragment.name }.`, \"data\", hexlify(bytes));\n        }\n\n        return this._decodeParams(functionFragment.inputs, bytes.slice(4));\n    }\n\n    // Encode the data for a function call (e.g. tx.data)\n    encodeFunctionData(functionFragment: FunctionFragment | string, values?: ReadonlyArray<any>): string {\n        if (typeof(functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n\n        return hexlify(concat([\n            this.getSighash(functionFragment),\n            this._encodeParams(functionFragment.inputs, values || [ ])\n        ]));\n    }\n\n    // Decode the result from a function call (e.g. from eth_call)\n    decodeFunctionResult(functionFragment: FunctionFragment | string, data: BytesLike): Result {\n        if (typeof(functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n\n        let bytes = arrayify(data);\n\n        let reason: string = null;\n        let message = \"\";\n        let errorArgs: Result = null;\n        let errorName: string = null;\n        let errorSignature: string = null;\n        switch (bytes.length % this._abiCoder._getWordSize()) {\n            case 0:\n                try {\n                    return this._abiCoder.decode(functionFragment.outputs, bytes);\n                } catch (error) { }\n                break;\n\n            case 4: {\n                const selector = hexlify(bytes.slice(0, 4));\n                const builtin = BuiltinErrors[selector];\n                if (builtin) {\n                    errorArgs = this._abiCoder.decode(builtin.inputs, bytes.slice(4));\n                    errorName = builtin.name;\n                    errorSignature = builtin.signature;\n                    if (builtin.reason) { reason = errorArgs[0]; }\n                    if (errorName === \"Error\") {\n                        message = `; VM Exception while processing transaction: reverted with reason string ${ JSON.stringify(errorArgs[0]) }`;\n                    } else if (errorName === \"Panic\") {\n                        message = `; VM Exception while processing transaction: reverted with panic code ${ errorArgs[0] }`;\n                    }\n                } else {\n                    try {\n                        const error = this.getError(selector);\n                        errorArgs = this._abiCoder.decode(error.inputs, bytes.slice(4));\n                        errorName = error.name;\n                        errorSignature = error.format();\n                    } catch (error) { }\n                }\n                break;\n            }\n        }\n\n        return logger.throwError(\"call revert exception\" + message, Logger.errors.CALL_EXCEPTION, {\n            method: functionFragment.format(),\n            data: hexlify(data), errorArgs, errorName, errorSignature, reason\n        });\n    }\n\n    // Encode the result for a function call (e.g. for eth_call)\n    encodeFunctionResult(functionFragment: FunctionFragment | string, values?: ReadonlyArray<any>): string {\n        if (typeof(functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n\n        return hexlify(this._abiCoder.encode(functionFragment.outputs, values || [ ]));\n    }\n\n    // Create the filter for the event with search criteria (e.g. for eth_filterLog)\n    encodeFilterTopics(eventFragment: EventFragment | string, values: ReadonlyArray<any>): Array<string | Array<string>> {\n        if (typeof(eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n\n        if (values.length > eventFragment.inputs.length) {\n            logger.throwError(\"too many arguments for \" + eventFragment.format(), Logger.errors.UNEXPECTED_ARGUMENT, {\n                argument: \"values\",\n                value: values\n            })\n        }\n\n        let topics: Array<string | Array<string>> = [];\n        if (!eventFragment.anonymous) { topics.push(this.getEventTopic(eventFragment)); }\n\n        const encodeTopic = (param: ParamType, value: any): string => {\n            if (param.type === \"string\") {\n                 return id(value);\n            } else if (param.type === \"bytes\") {\n                 return keccak256(hexlify(value));\n            }\n\n            if (param.type === \"bool\" && typeof(value) === \"boolean\") {\n                value = (value ? \"0x01\": \"0x00\");\n            }\n\n            if (param.type.match(/^u?int/)) {\n                value = BigNumber.from(value).toHexString();\n            }\n\n            // Check addresses are valid\n            if (param.type === \"address\") { this._abiCoder.encode( [ \"address\" ], [ value ]); }\n            return hexZeroPad(hexlify(value), 32);\n        };\n\n        values.forEach((value, index) => {\n\n            let param = (<EventFragment>eventFragment).inputs[index];\n\n            if (!param.indexed) {\n                if (value != null) {\n                    logger.throwArgumentError(\"cannot filter non-indexed parameters; must be null\", (\"contract.\" + param.name), value);\n                }\n                return;\n            }\n\n            if (value == null) {\n                topics.push(null);\n            } else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n                logger.throwArgumentError(\"filtering with tuples or arrays not supported\", (\"contract.\" + param.name), value);\n            } else if (Array.isArray(value)) {\n                topics.push(value.map((value) => encodeTopic(param, value)));\n            } else {\n                topics.push(encodeTopic(param, value));\n            }\n        });\n\n        // Trim off trailing nulls\n        while (topics.length && topics[topics.length - 1] === null) {\n            topics.pop();\n        }\n\n        return topics;\n    }\n\n    encodeEventLog(eventFragment: EventFragment | string, values: ReadonlyArray<any>): { data: string, topics: Array<string> } {\n        if (typeof(eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n\n        const topics: Array<string> = [ ];\n\n        const dataTypes: Array<ParamType> = [ ];\n        const dataValues: Array<string> = [ ];\n\n        if (!eventFragment.anonymous) {\n            topics.push(this.getEventTopic(eventFragment));\n        }\n\n        if (values.length !== eventFragment.inputs.length) {\n            logger.throwArgumentError(\"event arguments/values mismatch\", \"values\", values);\n        }\n\n        eventFragment.inputs.forEach((param, index) => {\n            const value = values[index];\n            if (param.indexed) {\n                if (param.type === \"string\") {\n                    topics.push(id(value))\n                } else if (param.type === \"bytes\") {\n                    topics.push(keccak256(value))\n                } else if (param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    // @TODO\n                    throw new Error(\"not implemented\");\n                } else {\n                    topics.push(this._abiCoder.encode([ param.type] , [ value ]));\n                }\n            } else {\n                dataTypes.push(param);\n                dataValues.push(value);\n            }\n        });\n\n        return {\n            data: this._abiCoder.encode(dataTypes , dataValues),\n            topics: topics\n        };\n    }\n\n    // Decode a filter for the event and the search criteria\n    decodeEventLog(eventFragment: EventFragment | string, data: BytesLike, topics?: ReadonlyArray<string>): Result {\n        if (typeof(eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n\n        if (topics != null && !eventFragment.anonymous) {\n            let topicHash = this.getEventTopic(eventFragment);\n            if (!isHexString(topics[0], 32) || topics[0].toLowerCase() !== topicHash) {\n                logger.throwError(\"fragment/topic mismatch\", Logger.errors.INVALID_ARGUMENT, { argument: \"topics[0]\", expected: topicHash, value: topics[0] });\n            }\n            topics = topics.slice(1);\n        }\n\n        let indexed: Array<ParamType> = [];\n        let nonIndexed: Array<ParamType> = [];\n        let dynamic: Array<boolean> = [];\n\n        eventFragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (param.type === \"string\" || param.type === \"bytes\" || param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    indexed.push(ParamType.fromObject({ type: \"bytes32\", name: param.name }));\n                    dynamic.push(true);\n                } else {\n                    indexed.push(param);\n                    dynamic.push(false);\n                }\n            } else {\n                nonIndexed.push(param);\n                dynamic.push(false);\n            }\n        });\n\n        let resultIndexed = (topics != null) ? this._abiCoder.decode(indexed, concat(topics)): null;\n        let resultNonIndexed = this._abiCoder.decode(nonIndexed, data, true);\n\n        let result: (Array<any> & { [ key: string ]: any }) = [ ];\n        let nonIndexedIndex = 0, indexedIndex = 0;\n        eventFragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (resultIndexed == null) {\n                    result[index] = new Indexed({ _isIndexed: true, hash: null });\n\n                } else if (dynamic[index]) {\n                    result[index] = new Indexed({ _isIndexed: true, hash: resultIndexed[indexedIndex++] });\n\n                } else {\n                    try {\n                        result[index] = resultIndexed[indexedIndex++];\n                    } catch (error) {\n                        result[index] = error;\n                    }\n                }\n            } else {\n                try {\n                    result[index] = resultNonIndexed[nonIndexedIndex++];\n                } catch (error) {\n                    result[index] = error;\n                }\n            }\n\n            // Add the keyword argument if named and safe\n            if (param.name && result[param.name] == null) {\n                const value = result[index];\n\n                // Make error named values throw on access\n                if (value instanceof Error) {\n                    Object.defineProperty(result, param.name, {\n                        enumerable: true,\n                        get: () => { throw wrapAccessError(`property ${ JSON.stringify(param.name) }`, value); }\n                    });\n                } else {\n                    result[param.name] = value;\n                }\n            }\n        });\n\n        // Make all error indexed values throw on access\n        for (let i = 0; i < result.length; i++) {\n            const value = result[i];\n            if (value instanceof Error) {\n                Object.defineProperty(result, i, {\n                    enumerable: true,\n                    get: () => { throw wrapAccessError(`index ${ i }`, value); }\n                });\n            }\n        }\n\n        return Object.freeze(result);\n    }\n\n    // Given a transaction, find the matching function fragment (if any) and\n    // determine all its properties and call parameters\n    parseTransaction(tx: { data: string, value?: BigNumberish }): TransactionDescription {\n        let fragment = this.getFunction(tx.data.substring(0, 10).toLowerCase())\n\n        if (!fragment) { return null; }\n\n        return new TransactionDescription({\n            args: this._abiCoder.decode(fragment.inputs, \"0x\" + tx.data.substring(10)),\n            functionFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            sighash: this.getSighash(fragment),\n            value: BigNumber.from(tx.value || \"0\"),\n        });\n    }\n\n    // @TODO\n    //parseCallResult(data: BytesLike): ??\n\n    // Given an event log, find the matching event fragment (if any) and\n    // determine all its properties and values\n    parseLog(log: { topics: Array<string>, data: string}): LogDescription {\n        let fragment = this.getEvent(log.topics[0]);\n\n        if (!fragment || fragment.anonymous) { return null; }\n\n        // @TODO: If anonymous, and the only method, and the input count matches, should we parse?\n        //        Probably not, because just because it is the only event in the ABI does\n        //        not mean we have the full ABI; maybe just a fragment?\n\n\n       return new LogDescription({\n            eventFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            topic: this.getEventTopic(fragment),\n            args: this.decodeEventLog(fragment, log.data, log.topics)\n        });\n    }\n\n    parseError(data: BytesLike): ErrorDescription {\n        const hexData = hexlify(data);\n        let fragment = this.getError(hexData.substring(0, 10).toLowerCase())\n\n        if (!fragment) { return null; }\n\n        return new ErrorDescription({\n            args: this._abiCoder.decode(fragment.inputs, \"0x\" + hexData.substring(10)),\n            errorFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            sighash: this.getSighash(fragment),\n        });\n    }\n\n\n    /*\n    static from(value: Array<Fragment | string | JsonAbi> | string | Interface) {\n        if (Interface.isInterface(value)) {\n            return value;\n        }\n        if (typeof(value) === \"string\") {\n            return new Interface(JSON.parse(value));\n        }\n        return new Interface(value);\n    }\n    */\n\n    static isInterface(value: any): value is Interface {\n        return !!(value && value._isInterface);\n    }\n}\n\n","\"use strict\";\n\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { BytesLike, isHexString } from \"@ethersproject/bytes\";\nimport { Network } from \"@ethersproject/networks\";\nimport { Deferrable, Description, defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { AccessListish, Transaction } from \"@ethersproject/transactions\";\nimport { OnceBlockable } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\n\nexport type TransactionRequest = {\n    to?: string,\n    from?: string,\n    nonce?: BigNumberish,\n\n    gasLimit?: BigNumberish,\n    gasPrice?: BigNumberish,\n\n    data?: BytesLike,\n    value?: BigNumberish,\n    chainId?: number\n\n    type?: number;\n    accessList?: AccessListish;\n\n    maxPriorityFeePerGas?: BigNumberish;\n    maxFeePerGas?: BigNumberish;\n\n    customData?: Record<string, any>;\n    ccipReadEnabled?: boolean;\n}\n\nexport interface TransactionResponse extends Transaction {\n    hash: string;\n\n    // Only if a transaction has been mined\n    blockNumber?: number,\n    blockHash?: string,\n    timestamp?: number,\n\n    confirmations: number,\n\n    // Not optional (as it is in Transaction)\n    from: string;\n\n    // The raw transaction\n    raw?: string,\n\n    // This function waits until the transaction has been mined\n    wait: (confirmations?: number) => Promise<TransactionReceipt>\n};\n\nexport type BlockTag = string | number;\n\nexport interface _Block {\n    hash: string;\n    parentHash: string;\n    number: number;\n\n    timestamp: number;\n    nonce: string;\n    difficulty: number;\n    _difficulty: BigNumber;\n\n    gasLimit: BigNumber;\n    gasUsed: BigNumber;\n\n    miner: string;\n    extraData: string;\n\n    baseFeePerGas?: null | BigNumber;\n}\n\nexport interface Block extends _Block {\n    transactions: Array<string>;\n}\n\nexport interface BlockWithTransactions extends _Block {\n    transactions: Array<TransactionResponse>;\n}\n\n\nexport interface Log {\n    blockNumber: number;\n    blockHash: string;\n    transactionIndex: number;\n\n    removed: boolean;\n\n    address: string;\n    data: string;\n\n    topics: Array<string>;\n\n    transactionHash: string;\n    logIndex: number;\n}\n\nexport interface TransactionReceipt {\n    to: string;\n    from: string;\n    contractAddress: string,\n    transactionIndex: number,\n    root?: string,\n    gasUsed: BigNumber,\n    logsBloom: string,\n    blockHash: string,\n    transactionHash: string,\n    logs: Array<Log>,\n    blockNumber: number,\n    confirmations: number,\n    cumulativeGasUsed: BigNumber,\n    effectiveGasPrice: BigNumber,\n    byzantium: boolean,\n    type: number;\n    status?: number\n};\n\nexport interface FeeData {\n    lastBaseFeePerGas: null | BigNumber;\n    maxFeePerGas: null | BigNumber;\n    maxPriorityFeePerGas: null | BigNumber;\n    gasPrice: null | BigNumber;\n}\n\nexport interface EventFilter {\n    address?: string;\n    topics?: Array<string | Array<string> | null>;\n}\n\nexport interface Filter extends EventFilter {\n    fromBlock?: BlockTag,\n    toBlock?: BlockTag,\n}\n\nexport interface FilterByBlockHash extends EventFilter {\n    blockHash?: string;\n}\n\n//export type CallTransactionable = {\n//    call(transaction: TransactionRequest): Promise<TransactionResponse>;\n//};\n\nexport abstract class ForkEvent extends Description {\n    readonly expiry: number;\n\n    readonly _isForkEvent?: boolean;\n\n    static isForkEvent(value: any): value is ForkEvent {\n        return !!(value && value._isForkEvent);\n    }\n}\n\nexport class BlockForkEvent extends ForkEvent {\n    readonly blockHash: string;\n\n    readonly _isBlockForkEvent?: boolean;\n\n    constructor(blockHash: string, expiry?: number) {\n        if (!isHexString(blockHash, 32)) {\n            logger.throwArgumentError(\"invalid blockHash\", \"blockHash\", blockHash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isBlockForkEvent: true,\n            expiry: (expiry || 0),\n            blockHash: blockHash\n        });\n    }\n}\n\nexport class TransactionForkEvent extends ForkEvent {\n    readonly hash: string;\n\n    readonly _isTransactionOrderForkEvent?: boolean;\n\n    constructor(hash: string, expiry?: number) {\n        if (!isHexString(hash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"hash\", hash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isTransactionForkEvent: true,\n            expiry: (expiry || 0),\n            hash: hash\n        });\n    }\n}\n\nexport class TransactionOrderForkEvent extends ForkEvent {\n    readonly beforeHash: string;\n    readonly afterHash: string;\n\n    constructor(beforeHash: string, afterHash: string, expiry?: number) {\n        if (!isHexString(beforeHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"beforeHash\", beforeHash);\n        }\n        if (!isHexString(afterHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"afterHash\", afterHash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isTransactionOrderForkEvent: true,\n            expiry: (expiry || 0),\n            beforeHash: beforeHash,\n            afterHash: afterHash\n        });\n    }\n}\n\nexport type EventType = string | Array<string | Array<string>> | EventFilter | ForkEvent;\n\nexport type Listener = (...args: Array<any>) => void;\n\n///////////////////////////////\n// Exported Abstracts\nexport abstract class Provider implements OnceBlockable {\n\n    // Network\n    abstract getNetwork(): Promise<Network>;\n\n    // Latest State\n    abstract getBlockNumber(): Promise<number>;\n    abstract getGasPrice(): Promise<BigNumber>;\n    async getFeeData(): Promise<FeeData> {\n        const { block, gasPrice } = await resolveProperties({\n            block: this.getBlock(\"latest\"),\n            gasPrice: this.getGasPrice().catch((error) => {\n                // @TODO: Why is this now failing on Calaveras?\n                //console.log(error);\n                return null;\n            })\n        });\n\n        let lastBaseFeePerGas = null, maxFeePerGas = null, maxPriorityFeePerGas = null;\n\n        if (block && block.baseFeePerGas) {\n            // We may want to compute this more accurately in the future,\n            // using the formula \"check if the base fee is correct\".\n            // See: https://eips.ethereum.org/EIPS/eip-1559\n            lastBaseFeePerGas = block.baseFeePerGas;\n            maxPriorityFeePerGas = BigNumber.from(\"1500000000\");\n            maxFeePerGas = block.baseFeePerGas.mul(2).add(maxPriorityFeePerGas);\n        }\n\n        return { lastBaseFeePerGas, maxFeePerGas, maxPriorityFeePerGas, gasPrice };\n    }\n\n    // Account\n    abstract getBalance(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<BigNumber>;\n    abstract getTransactionCount(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<number>;\n    abstract getCode(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> ;\n    abstract getStorageAt(addressOrName: string | Promise<string>, position: BigNumberish | Promise<BigNumberish>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string>;\n\n    // Execution\n    abstract sendTransaction(signedTransaction: string | Promise<string>): Promise<TransactionResponse>;\n    abstract call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string>;\n    abstract estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber>;\n\n    // Queries\n    abstract getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<Block>;\n    abstract getBlockWithTransactions(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<BlockWithTransactions>;\n    abstract getTransaction(transactionHash: string): Promise<TransactionResponse>;\n    abstract getTransactionReceipt(transactionHash: string): Promise<TransactionReceipt>;\n\n    // Bloom-filter Queries\n    abstract getLogs(filter: Filter): Promise<Array<Log>>;\n\n    // ENS\n    abstract resolveName(name: string | Promise<string>): Promise<null | string>;\n    abstract lookupAddress(address: string | Promise<string>): Promise<null | string>;\n\n    // Event Emitter (ish)\n    abstract on(eventName: EventType, listener: Listener): Provider;\n    abstract once(eventName: EventType, listener: Listener): Provider;\n    abstract emit(eventName: EventType, ...args: Array<any>): boolean\n    abstract listenerCount(eventName?: EventType): number;\n    abstract listeners(eventName?: EventType): Array<Listener>;\n    abstract off(eventName: EventType, listener?: Listener): Provider;\n    abstract removeAllListeners(eventName?: EventType): Provider;\n\n    // Alias for \"on\"\n    addListener(eventName: EventType, listener: Listener): Provider {\n        return this.on(eventName, listener);\n    }\n\n    // Alias for \"off\"\n    removeListener(eventName: EventType, listener: Listener): Provider {\n        return this.off(eventName, listener);\n    }\n\n    // @TODO: This *could* be implemented here, but would pull in events...\n    abstract waitForTransaction(transactionHash: string, confirmations?: number, timeout?: number): Promise<TransactionReceipt>;\n\n    readonly _isProvider: boolean;\n\n    constructor() {\n        logger.checkAbstract(new.target, Provider);\n        defineReadOnly(this, \"_isProvider\", true);\n    }\n\n    static isProvider(value: any): value is Provider {\n        return !!(value && value._isProvider);\n    }\n\n/*\n    static getResolver(network: Network, callable: CallTransactionable, namehash: string): string {\n        // No ENS...\n        if (!network.ensAddress) {\n            errors.throwError(\n                \"network does support ENS\",\n                errors.UNSUPPORTED_OPERATION,\n                { operation: \"ENS\", network: network.name }\n            );\n        }\n\n        // Not a namehash\n        if (!isHexString(namehash, 32)) {\n            errors.throwArgumentError(\"invalid name hash\", \"namehash\", namehash);\n        }\n\n        // keccak256(\"resolver(bytes32)\")\n        let data = \"0x0178b8bf\" + namehash.substring(2);\n        let transaction = { to: network.ensAddress, data: data };\n\n        return provider.call(transaction).then((data) => {\n            return provider.formatter.callAddress(data);\n        });\n    }\n\n    static resolveNamehash(network: Network, callable: CallTransactionable, namehash: string): string {\n        return this.getResolver(network, callable, namehash).then((resolverAddress) => {\n            if (!resolverAddress) { return null; }\n\n            // keccak256(\"addr(bytes32)\")\n            let data = \"0x3b3b57de\" + namehash(name).substring(2);\n            let transaction = { to: resolverAddress, data: data };\n            return callable.call(transaction).then((data) => {\n                return this.formatter.callAddress(data);\n            });\n\n        })\n    }\n*/\n}\n","export const version = \"abstract-provider/5.7.0\";\n","\"use strict\";\n\nimport { BlockTag, FeeData, Provider, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { Bytes, BytesLike } from \"@ethersproject/bytes\";\nimport { Deferrable, defineReadOnly, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst allowedTransactionKeys: Array<string> = [\n    \"accessList\", \"ccipReadEnabled\", \"chainId\", \"customData\", \"data\", \"from\", \"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"to\", \"type\", \"value\"\n];\n\nconst forwardErrors = [\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n];\n\n// EIP-712 Typed Data\n// See: https://eips.ethereum.org/EIPS/eip-712\n\nexport interface TypedDataDomain {\n    name?: string;\n    version?: string;\n    chainId?: BigNumberish;\n    verifyingContract?: string;\n    salt?: BytesLike;\n};\n\nexport interface TypedDataField {\n    name: string;\n    type: string;\n};\n\n// Sub-classes of Signer may optionally extend this interface to indicate\n// they have a private key available synchronously\nexport interface ExternallyOwnedAccount {\n    readonly address: string;\n    readonly privateKey: string;\n}\n\n// Sub-Class Notes:\n//  - A Signer MUST always make sure, that if present, the \"from\" field\n//    matches the Signer, before sending or signing a transaction\n//  - A Signer SHOULD always wrap private information (such as a private\n//    key or mnemonic) in a function, so that console.log does not leak\n//    the data\n\n// @TODO: This is a temporary measure to preserve backwards compatibility\n//        In v6, the method on TypedDataSigner will be added to Signer\nexport interface TypedDataSigner {\n    _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string>;\n}\n\nexport abstract class Signer {\n    readonly provider?: Provider;\n\n    ///////////////////\n    // Sub-classes MUST implement these\n\n    // Returns the checksum address\n    abstract getAddress(): Promise<string>\n\n    // Returns the signed prefixed-message. This MUST treat:\n    // - Bytes as a binary message\n    // - string as a UTF8-message\n    // i.e. \"0x1234\" is a SIX (6) byte string, NOT 2 bytes of data\n    abstract signMessage(message: Bytes | string): Promise<string>;\n\n    // Signs a transaction and returns the fully serialized, signed transaction.\n    // The EXACT transaction MUST be signed, and NO additional properties to be added.\n    // - This MAY throw if signing transactions is not supports, but if\n    //   it does, sentTransaction MUST be overridden.\n    abstract signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string>;\n\n    // Returns a new instance of the Signer, connected to provider.\n    // This MAY throw if changing providers is not supported.\n    abstract connect(provider: Provider): Signer;\n\n    readonly _isSigner: boolean;\n\n\n    ///////////////////\n    // Sub-classes MUST call super\n    constructor() {\n        logger.checkAbstract(new.target, Signer);\n        defineReadOnly(this, \"_isSigner\", true);\n    }\n\n\n    ///////////////////\n    // Sub-classes MAY override these\n\n    async getBalance(blockTag?: BlockTag): Promise<BigNumber> {\n        this._checkProvider(\"getBalance\");\n        return await this.provider.getBalance(this.getAddress(), blockTag);\n    }\n\n    async getTransactionCount(blockTag?: BlockTag): Promise<number> {\n        this._checkProvider(\"getTransactionCount\");\n        return await this.provider.getTransactionCount(this.getAddress(), blockTag);\n    }\n\n    // Populates \"from\" if unspecified, and estimates the gas for the transaction\n    async estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber> {\n        this._checkProvider(\"estimateGas\");\n        const tx = await resolveProperties(this.checkTransaction(transaction));\n        return await this.provider.estimateGas(tx);\n    }\n\n    // Populates \"from\" if unspecified, and calls with the transaction\n    async call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag): Promise<string> {\n        this._checkProvider(\"call\");\n        const tx = await resolveProperties(this.checkTransaction(transaction));\n        return await this.provider.call(tx, blockTag);\n    }\n\n    // Populates all fields in a transaction, signs it and sends it to the network\n    async sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        this._checkProvider(\"sendTransaction\");\n        const tx = await this.populateTransaction(transaction);\n        const signedTx = await this.signTransaction(tx);\n        return await this.provider.sendTransaction(signedTx);\n    }\n\n    async getChainId(): Promise<number> {\n        this._checkProvider(\"getChainId\");\n        const network = await this.provider.getNetwork();\n        return network.chainId;\n    }\n\n    async getGasPrice(): Promise<BigNumber> {\n        this._checkProvider(\"getGasPrice\");\n        return await this.provider.getGasPrice();\n    }\n\n    async getFeeData(): Promise<FeeData> {\n        this._checkProvider(\"getFeeData\");\n        return await this.provider.getFeeData();\n    }\n\n\n    async resolveName(name: string): Promise<string> {\n        this._checkProvider(\"resolveName\");\n        return await this.provider.resolveName(name);\n    }\n\n\n\n    // Checks a transaction does not contain invalid keys and if\n    // no \"from\" is provided, populates it.\n    // - does NOT require a provider\n    // - adds \"from\" is not present\n    // - returns a COPY (safe to mutate the result)\n    // By default called from: (overriding these prevents it)\n    //   - call\n    //   - estimateGas\n    //   - populateTransaction (and therefor sendTransaction)\n    checkTransaction(transaction: Deferrable<TransactionRequest>): Deferrable<TransactionRequest> {\n        for (const key in transaction) {\n            if (allowedTransactionKeys.indexOf(key) === -1) {\n                logger.throwArgumentError(\"invalid transaction key: \" + key, \"transaction\", transaction);\n            }\n        }\n\n        const tx = shallowCopy(transaction);\n\n        if (tx.from == null) {\n            tx.from = this.getAddress();\n\n        } else {\n            // Make sure any provided address matches this signer\n            tx.from = Promise.all([\n                Promise.resolve(tx.from),\n                this.getAddress()\n            ]).then((result) => {\n                if (result[0].toLowerCase() !== result[1].toLowerCase()) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n                return result[0];\n            });\n        }\n\n        return tx;\n    }\n\n    // Populates ALL keys for a transaction and checks that \"from\" matches\n    // this Signer. Should be used by sendTransaction but NOT by signTransaction.\n    // By default called from: (overriding these prevents it)\n    //   - sendTransaction\n    //\n    // Notes:\n    //  - We allow gasPrice for EIP-1559 as long as it matches maxFeePerGas\n    async populateTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionRequest> {\n\n        const tx: Deferrable<TransactionRequest> = await resolveProperties(this.checkTransaction(transaction))\n\n        if (tx.to != null) {\n            tx.to = Promise.resolve(tx.to).then(async (to) => {\n                if (to == null) { return null; }\n                const address = await this.resolveName(to);\n                if (address == null) {\n                    logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                }\n                return address;\n            });\n\n            // Prevent this error from causing an UnhandledPromiseException\n            tx.to.catch((error) => {  });\n        }\n\n        // Do not allow mixing pre-eip-1559 and eip-1559 properties\n        const hasEip1559 = (tx.maxFeePerGas != null || tx.maxPriorityFeePerGas != null);\n        if (tx.gasPrice != null && (tx.type === 2 || hasEip1559)) {\n            logger.throwArgumentError(\"eip-1559 transaction do not support gasPrice\", \"transaction\", transaction);\n        } else if ((tx.type === 0 || tx.type === 1) && hasEip1559) {\n            logger.throwArgumentError(\"pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas\", \"transaction\", transaction);\n        }\n\n        if ((tx.type === 2 || tx.type == null) && (tx.maxFeePerGas != null && tx.maxPriorityFeePerGas != null)) {\n            // Fully-formed EIP-1559 transaction (skip getFeeData)\n            tx.type = 2;\n\n        } else if (tx.type === 0 || tx.type === 1) {\n            // Explicit Legacy or EIP-2930 transaction\n\n            // Populate missing gasPrice\n            if (tx.gasPrice == null) { tx.gasPrice = this.getGasPrice(); }\n\n        } else {\n\n            // We need to get fee data to determine things\n            const feeData = await this.getFeeData();\n\n            if (tx.type == null) {\n                // We need to auto-detect the intended type of this transaction...\n\n                if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {\n                    // The network supports EIP-1559!\n\n                    // Upgrade transaction from null to eip-1559\n                    tx.type = 2;\n\n                    if (tx.gasPrice != null) {\n                        // Using legacy gasPrice property on an eip-1559 network,\n                        // so use gasPrice as both fee properties\n                        const gasPrice = tx.gasPrice;\n                        delete tx.gasPrice;\n                        tx.maxFeePerGas = gasPrice;\n                        tx.maxPriorityFeePerGas = gasPrice;\n\n                    } else {\n                        // Populate missing fee data\n                        if (tx.maxFeePerGas == null) { tx.maxFeePerGas = feeData.maxFeePerGas; }\n                        if (tx.maxPriorityFeePerGas == null) { tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas; }\n                    }\n\n                } else if (feeData.gasPrice != null) {\n                    // Network doesn't support EIP-1559...\n\n                    // ...but they are trying to use EIP-1559 properties\n                    if (hasEip1559) {\n                        logger.throwError(\"network does not support EIP-1559\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            operation: \"populateTransaction\"\n                        });\n                    }\n\n                    // Populate missing fee data\n                    if (tx.gasPrice == null) { tx.gasPrice = feeData.gasPrice; }\n\n                    // Explicitly set untyped transaction to legacy\n                    tx.type = 0;\n\n                } else {\n                    // getFeeData has failed us.\n                    logger.throwError(\"failed to get consistent fee data\", Logger.errors.UNSUPPORTED_OPERATION, {\n                        operation: \"signer.getFeeData\"\n                    });\n                }\n\n            } else if (tx.type === 2) {\n                // Explicitly using EIP-1559\n\n                // Populate missing fee data\n                if (tx.maxFeePerGas == null) { tx.maxFeePerGas = feeData.maxFeePerGas; }\n                if (tx.maxPriorityFeePerGas == null) { tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas; }\n            }\n        }\n\n        if (tx.nonce == null) { tx.nonce = this.getTransactionCount(\"pending\"); }\n\n        if (tx.gasLimit == null) {\n            tx.gasLimit = this.estimateGas(tx).catch((error) => {\n                if (forwardErrors.indexOf(error.code) >= 0) {\n                    throw error;\n                }\n\n                return logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                    error: error,\n                    tx: tx\n                });\n            });\n        }\n\n        if (tx.chainId == null) {\n            tx.chainId = this.getChainId();\n        } else {\n            tx.chainId = Promise.all([\n                Promise.resolve(tx.chainId),\n                this.getChainId()\n            ]).then((results) => {\n                if (results[1] !== 0 && results[0] !== results[1]) {\n                    logger.throwArgumentError(\"chainId address mismatch\", \"transaction\", transaction);\n                }\n                return results[0];\n            });\n        }\n\n        return await resolveProperties(tx);\n    }\n\n\n    ///////////////////\n    // Sub-classes SHOULD leave these alone\n\n    _checkProvider(operation?: string): void {\n        if (!this.provider) { logger.throwError(\"missing provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: (operation || \"_checkProvider\") });\n        }\n    }\n\n    static isSigner(value: any): value is Signer {\n        return !!(value && value._isSigner);\n    }\n}\n\nexport class VoidSigner extends Signer implements TypedDataSigner {\n    readonly address: string;\n\n    constructor(address: string, provider?: Provider) {\n        super();\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n\n    getAddress(): Promise<string> {\n        return Promise.resolve(this.address);\n    }\n\n    _fail(message: string, operation: string): Promise<any> {\n        return Promise.resolve().then(() => {\n            logger.throwError(message, Logger.errors.UNSUPPORTED_OPERATION, { operation: operation });\n        });\n    }\n\n    signMessage(message: Bytes | string): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign messages\", \"signMessage\");\n    }\n\n    signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign transactions\", \"signTransaction\");\n    }\n\n    _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign typed data\", \"signTypedData\");\n    }\n\n    connect(provider: Provider): VoidSigner {\n        return new VoidSigner(this.address, provider);\n    }\n}\n\n","export const version = \"abstract-signer/5.7.0\";\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n","'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n","'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n","'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options),\n      'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n","import _ec from \"elliptic\";\nvar EC = _ec.ec;\nexport { EC };\n//# sourceMappingURL=elliptic.js.map","'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n","export const version = \"signing-key/5.7.0\";\n","\"use strict\";\n\nimport { EC } from \"./elliptic\";\n\nimport { arrayify, BytesLike, hexDataLength, hexlify, hexZeroPad, Signature, SignatureLike, splitSignature } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nlet _curve: EC = null\nfunction getCurve() {\n    if (!_curve) {\n        _curve = new EC(\"secp256k1\");\n    }\n    return _curve;\n}\n\nexport class SigningKey {\n\n    readonly curve: string;\n\n    readonly privateKey: string;\n    readonly publicKey: string;\n    readonly compressedPublicKey: string;\n\n    //readonly address: string;\n\n    readonly _isSigningKey: boolean;\n\n    constructor(privateKey: BytesLike) {\n        defineReadOnly(this, \"curve\", \"secp256k1\");\n\n        defineReadOnly(this, \"privateKey\", hexlify(privateKey));\n        if (hexDataLength(this.privateKey) !== 32) {\n            logger.throwArgumentError(\"invalid private key\", \"privateKey\", \"[[ REDACTED ]]\");\n        }\n\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n\n        defineReadOnly(this, \"publicKey\", \"0x\" + keyPair.getPublic(false, \"hex\"));\n        defineReadOnly(this, \"compressedPublicKey\", \"0x\" + keyPair.getPublic(true, \"hex\"));\n\n        defineReadOnly(this, \"_isSigningKey\", true);\n    }\n\n    _addPoint(other: BytesLike): string {\n        const p0 =  getCurve().keyFromPublic(arrayify(this.publicKey));\n        const p1 =  getCurve().keyFromPublic(arrayify(other));\n        return \"0x\" + p0.pub.add(p1.pub).encodeCompressed(\"hex\");\n    }\n\n    signDigest(digest: BytesLike): Signature {\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        const digestBytes = arrayify(digest);\n        if (digestBytes.length !== 32) {\n            logger.throwArgumentError(\"bad digest length\", \"digest\", digest);\n        }\n        const signature = keyPair.sign(digestBytes, { canonical: true });\n        return splitSignature({\n            recoveryParam: signature.recoveryParam,\n            r: hexZeroPad(\"0x\" + signature.r.toString(16), 32),\n            s: hexZeroPad(\"0x\" + signature.s.toString(16), 32),\n        })\n    }\n\n    computeSharedSecret(otherKey: BytesLike): string {\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        const otherKeyPair = getCurve().keyFromPublic(arrayify(computePublicKey(otherKey)));\n        return hexZeroPad(\"0x\" + keyPair.derive(otherKeyPair.getPublic()).toString(16), 32);\n    }\n\n    static isSigningKey(value: any): value is SigningKey {\n        return !!(value && value._isSigningKey);\n    }\n}\n\nexport function recoverPublicKey(digest: BytesLike, signature: SignatureLike): string {\n    const sig = splitSignature(signature);\n    const rs = { r: arrayify(sig.r), s: arrayify(sig.s) };\n    return \"0x\" + getCurve().recoverPubKey(arrayify(digest), rs, sig.recoveryParam).encode(\"hex\", false);\n}\n\nexport function computePublicKey(key: BytesLike, compressed?: boolean): string {\n    const bytes = arrayify(key);\n\n    if (bytes.length === 32) {\n        const signingKey = new SigningKey(bytes);\n        if (compressed) {\n            return \"0x\" + getCurve().keyFromPrivate(bytes).getPublic(true, \"hex\");\n        }\n        return signingKey.publicKey;\n\n    } else if (bytes.length === 33) {\n        if (compressed) { return hexlify(bytes); }\n        return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(false, \"hex\");\n\n    } else if (bytes.length === 65) {\n        if (!compressed) { return hexlify(bytes); }\n        return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(true, \"hex\");\n    }\n\n    return logger.throwArgumentError(\"invalid public or private key\", \"key\", \"[REDACTED]\");\n}\n\n","export const version = \"transactions/5.7.0\";\n","\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, DataOptions, hexConcat, hexDataLength, hexDataSlice, hexlify, hexZeroPad, isBytesLike, SignatureLike, splitSignature, stripZeros, } from \"@ethersproject/bytes\";\nimport { Zero } from \"@ethersproject/constants\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { checkProperties } from \"@ethersproject/properties\";\nimport * as RLP from \"@ethersproject/rlp\";\nimport { computePublicKey, recoverPublicKey } from \"@ethersproject/signing-key\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\nexport type AccessList = Array<{ address: string, storageKeys: Array<string> }>;\n\n// Input allows flexibility in describing an access list\nexport type AccessListish = AccessList |\n                            Array<[ string, Array<string> ]> |\n                            Record<string, Array<string>>;\n\nexport enum TransactionTypes {\n    legacy = 0,\n    eip2930 = 1,\n    eip1559 = 2,\n};\n\nexport type UnsignedTransaction = {\n    to?: string;\n    nonce?: number;\n\n    gasLimit?: BigNumberish;\n    gasPrice?: BigNumberish;\n\n    data?: BytesLike;\n    value?: BigNumberish;\n    chainId?: number;\n\n    // Typed-Transaction features\n    type?: number | null;\n\n    // EIP-2930; Type 1 & EIP-1559; Type 2\n    accessList?: AccessListish;\n\n    // EIP-1559; Type 2\n    maxPriorityFeePerGas?: BigNumberish;\n    maxFeePerGas?: BigNumberish;\n}\n\nexport interface Transaction {\n    hash?: string;\n\n    to?: string;\n    from?: string;\n    nonce: number;\n\n    gasLimit: BigNumber;\n    gasPrice?: BigNumber;\n\n    data: string;\n    value: BigNumber;\n    chainId: number;\n\n    r?: string;\n    s?: string;\n    v?: number;\n\n    // Typed-Transaction features\n    type?: number | null;\n\n    // EIP-2930; Type 1 & EIP-1559; Type 2\n    accessList?: AccessList;\n\n    // EIP-1559; Type 2\n    maxPriorityFeePerGas?: BigNumber;\n    maxFeePerGas?: BigNumber;\n}\n\n///////////////////////////////\n\nfunction handleAddress(value: string): string {\n    if (value === \"0x\") { return null; }\n    return getAddress(value);\n}\n\nfunction handleNumber(value: string): BigNumber {\n    if (value === \"0x\") { return Zero; }\n    return BigNumber.from(value);\n}\n\n// Legacy Transaction Fields\nconst transactionFields = [\n    { name: \"nonce\",    maxLength: 32, numeric: true },\n    { name: \"gasPrice\", maxLength: 32, numeric: true },\n    { name: \"gasLimit\", maxLength: 32, numeric: true },\n    { name: \"to\",          length: 20 },\n    { name: \"value\",    maxLength: 32, numeric: true },\n    { name: \"data\" },\n];\n\nconst allowedTransactionKeys: { [ key: string ]: boolean } = {\n    chainId: true, data: true, gasLimit: true, gasPrice:true, nonce: true, to: true, type: true, value: true\n}\n\nexport function computeAddress(key: BytesLike | string): string {\n    const publicKey = computePublicKey(key);\n    return getAddress(hexDataSlice(keccak256(hexDataSlice(publicKey, 1)), 12));\n}\n\nexport function recoverAddress(digest: BytesLike, signature: SignatureLike): string {\n    return computeAddress(recoverPublicKey(arrayify(digest), signature));\n}\n\nfunction formatNumber(value: BigNumberish, name: string): Uint8Array {\n    const result = stripZeros(BigNumber.from(value).toHexString());\n    if (result.length > 32) {\n        logger.throwArgumentError(\"invalid length for \" + name, (\"transaction:\" + name), value);\n    }\n    return result;\n}\n\nfunction accessSetify(addr: string, storageKeys: Array<string>): { address: string,storageKeys: Array<string> } {\n    return {\n        address: getAddress(addr),\n        storageKeys: (storageKeys || []).map((storageKey, index) => {\n            if (hexDataLength(storageKey) !== 32) {\n                logger.throwArgumentError(\"invalid access list storageKey\", `accessList[${ addr }:${ index }]`, storageKey)\n            }\n            return storageKey.toLowerCase();\n        })\n    };\n}\n\nexport function accessListify(value: AccessListish): AccessList {\n    if (Array.isArray(value)) {\n        return (<Array<[ string, Array<string>] | { address: string, storageKeys: Array<string>}>>value).map((set, index) => {\n            if (Array.isArray(set)) {\n                if (set.length > 2) {\n                    logger.throwArgumentError(\"access list expected to be [ address, storageKeys[] ]\", `value[${ index }]`, set);\n                }\n                return accessSetify(set[0], set[1])\n            }\n            return accessSetify(set.address, set.storageKeys);\n        });\n    }\n\n    const result: Array<{ address: string, storageKeys: Array<string> }> = Object.keys(value).map((addr) => {\n        const storageKeys: Record<string, true> = value[addr].reduce((accum, storageKey) => {\n            accum[storageKey] = true;\n            return accum;\n        }, <Record<string, true>>{ });\n        return accessSetify(addr, Object.keys(storageKeys).sort())\n    });\n    result.sort((a, b) => (a.address.localeCompare(b.address)));\n    return result;\n}\n\nfunction formatAccessList(value: AccessListish): Array<[ string, Array<string> ]> {\n    return accessListify(value).map((set) => [ set.address, set.storageKeys ]);\n}\n\nfunction _serializeEip1559(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    // If there is an explicit gasPrice, make sure it matches the\n    // EIP-1559 fees; otherwise they may not understand what they\n    // think they are setting in terms of fee.\n    if (transaction.gasPrice != null) {\n        const gasPrice = BigNumber.from(transaction.gasPrice);\n        const maxFeePerGas = BigNumber.from(transaction.maxFeePerGas || 0);\n        if (!gasPrice.eq(maxFeePerGas)) {\n            logger.throwArgumentError(\"mismatch EIP-1559 gasPrice != maxFeePerGas\", \"tx\", {\n                gasPrice, maxFeePerGas\n            });\n        }\n    }\n\n    const fields: any = [\n        formatNumber(transaction.chainId || 0, \"chainId\"),\n        formatNumber(transaction.nonce || 0, \"nonce\"),\n        formatNumber(transaction.maxPriorityFeePerGas || 0, \"maxPriorityFeePerGas\"),\n        formatNumber(transaction.maxFeePerGas || 0, \"maxFeePerGas\"),\n        formatNumber(transaction.gasLimit || 0, \"gasLimit\"),\n        ((transaction.to != null) ? getAddress(transaction.to): \"0x\"),\n        formatNumber(transaction.value || 0, \"value\"),\n        (transaction.data || \"0x\"),\n        (formatAccessList(transaction.accessList || []))\n    ];\n\n    if (signature) {\n        const sig = splitSignature(signature);\n        fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n        fields.push(stripZeros(sig.r));\n        fields.push(stripZeros(sig.s));\n    }\n\n    return hexConcat([ \"0x02\", RLP.encode(fields)]);\n}\n\nfunction _serializeEip2930(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    const fields: any = [\n        formatNumber(transaction.chainId || 0, \"chainId\"),\n        formatNumber(transaction.nonce || 0, \"nonce\"),\n        formatNumber(transaction.gasPrice || 0, \"gasPrice\"),\n        formatNumber(transaction.gasLimit || 0, \"gasLimit\"),\n        ((transaction.to != null) ? getAddress(transaction.to): \"0x\"),\n        formatNumber(transaction.value || 0, \"value\"),\n        (transaction.data || \"0x\"),\n        (formatAccessList(transaction.accessList || []))\n    ];\n\n    if (signature) {\n        const sig = splitSignature(signature);\n        fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n        fields.push(stripZeros(sig.r));\n        fields.push(stripZeros(sig.s));\n    }\n\n    return hexConcat([ \"0x01\", RLP.encode(fields)]);\n}\n\n// Legacy Transactions and EIP-155\nfunction _serialize(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    checkProperties(transaction, allowedTransactionKeys);\n\n    const raw: Array<string | Uint8Array> = [];\n\n    transactionFields.forEach(function(fieldInfo) {\n        let value = (<any>transaction)[fieldInfo.name] || ([]);\n        const options: DataOptions = { };\n        if (fieldInfo.numeric) { options.hexPad = \"left\"; }\n        value = arrayify(hexlify(value, options));\n\n        // Fixed-width field\n        if (fieldInfo.length && value.length !== fieldInfo.length && value.length > 0) {\n            logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, (\"transaction:\" + fieldInfo.name), value);\n        }\n\n        // Variable-width (with a maximum)\n        if (fieldInfo.maxLength) {\n            value = stripZeros(value);\n            if (value.length > fieldInfo.maxLength) {\n                logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, (\"transaction:\" + fieldInfo.name), value );\n            }\n        }\n\n        raw.push(hexlify(value));\n    });\n\n    let chainId = 0;\n    if (transaction.chainId != null) {\n        // A chainId was provided; if non-zero we'll use EIP-155\n        chainId = transaction.chainId;\n\n        if (typeof(chainId) !== \"number\") {\n            logger.throwArgumentError(\"invalid transaction.chainId\", \"transaction\", transaction);\n        }\n\n    } else if (signature && !isBytesLike(signature) && signature.v > 28) {\n        // No chainId provided, but the signature is signing with EIP-155; derive chainId\n        chainId = Math.floor((signature.v - 35) / 2);\n    }\n\n    // We have an EIP-155 transaction (chainId was specified and non-zero)\n    if (chainId !== 0) {\n        raw.push(hexlify(chainId)); // @TODO: hexValue?\n        raw.push(\"0x\");\n        raw.push(\"0x\");\n    }\n\n    // Requesting an unsigned transaction\n    if (!signature) {\n        return RLP.encode(raw);\n    }\n\n    // The splitSignature will ensure the transaction has a recoveryParam in the\n    // case that the signTransaction function only adds a v.\n    const sig = splitSignature(signature);\n\n    // We pushed a chainId and null r, s on for hashing only; remove those\n    let v = 27 + sig.recoveryParam\n    if (chainId !== 0) {\n        raw.pop();\n        raw.pop();\n        raw.pop();\n        v += chainId * 2 + 8;\n\n        // If an EIP-155 v (directly or indirectly; maybe _vs) was provided, check it!\n        if (sig.v > 28 && sig.v !== v) {\n             logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n        }\n    } else if (sig.v !== v) {\n         logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n    }\n\n    raw.push(hexlify(v));\n    raw.push(stripZeros(arrayify(sig.r)));\n    raw.push(stripZeros(arrayify(sig.s)));\n\n    return RLP.encode(raw);\n}\n\nexport function serialize(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    // Legacy and EIP-155 Transactions\n    if (transaction.type == null || transaction.type === 0) {\n        if (transaction.accessList != null) {\n            logger.throwArgumentError(\"untyped transactions do not support accessList; include type: 1\", \"transaction\", transaction);\n        }\n        return _serialize(transaction, signature);\n    }\n\n    // Typed Transactions (EIP-2718)\n    switch (transaction.type) {\n        case 1:\n            return _serializeEip2930(transaction, signature);\n        case 2:\n            return _serializeEip1559(transaction, signature);\n        default:\n            break;\n    }\n\n    return logger.throwError(`unsupported transaction type: ${ transaction.type }`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"serializeTransaction\",\n        transactionType: transaction.type\n    });\n}\n\nfunction _parseEipSignature(tx: Transaction, fields: Array<string>, serialize: (tx: UnsignedTransaction) => string): void {\n    try {\n        const recid = handleNumber(fields[0]).toNumber();\n        if (recid !== 0 && recid !== 1) { throw new Error(\"bad recid\"); }\n        tx.v = recid;\n    } catch (error) {\n        logger.throwArgumentError(\"invalid v for transaction type: 1\", \"v\", fields[0]);\n    }\n\n    tx.r = hexZeroPad(fields[1], 32);\n    tx.s = hexZeroPad(fields[2], 32);\n\n    try {\n        const digest = keccak256(serialize(tx));\n        tx.from = recoverAddress(digest, { r: tx.r, s: tx.s, recoveryParam: tx.v });\n    } catch (error) { }\n}\n\nfunction _parseEip1559(payload: Uint8Array): Transaction {\n    const transaction = RLP.decode(payload.slice(1));\n\n    if (transaction.length !== 9 && transaction.length !== 12) {\n        logger.throwArgumentError(\"invalid component count for transaction type: 2\", \"payload\", hexlify(payload));\n    }\n\n    const maxPriorityFeePerGas = handleNumber(transaction[2]);\n    const maxFeePerGas = handleNumber(transaction[3]);\n    const tx: Transaction = {\n        type:                  2,\n        chainId:               handleNumber(transaction[0]).toNumber(),\n        nonce:                 handleNumber(transaction[1]).toNumber(),\n        maxPriorityFeePerGas:  maxPriorityFeePerGas,\n        maxFeePerGas:          maxFeePerGas,\n        gasPrice:              null,\n        gasLimit:              handleNumber(transaction[4]),\n        to:                    handleAddress(transaction[5]),\n        value:                 handleNumber(transaction[6]),\n        data:                  transaction[7],\n        accessList:            accessListify(transaction[8]),\n    };\n\n    // Unsigned EIP-1559 Transaction\n    if (transaction.length === 9) { return tx; }\n\n    tx.hash = keccak256(payload);\n\n    _parseEipSignature(tx, transaction.slice(9), _serializeEip1559);\n\n    return tx;\n}\n\nfunction _parseEip2930(payload: Uint8Array): Transaction {\n    const transaction = RLP.decode(payload.slice(1));\n\n    if (transaction.length !== 8 && transaction.length !== 11) {\n        logger.throwArgumentError(\"invalid component count for transaction type: 1\", \"payload\", hexlify(payload));\n    }\n\n    const tx: Transaction = {\n        type:       1,\n        chainId:    handleNumber(transaction[0]).toNumber(),\n        nonce:      handleNumber(transaction[1]).toNumber(),\n        gasPrice:   handleNumber(transaction[2]),\n        gasLimit:   handleNumber(transaction[3]),\n        to:         handleAddress(transaction[4]),\n        value:      handleNumber(transaction[5]),\n        data:       transaction[6],\n        accessList: accessListify(transaction[7])\n    };\n\n    // Unsigned EIP-2930 Transaction\n    if (transaction.length === 8) { return tx; }\n\n    tx.hash = keccak256(payload);\n\n    _parseEipSignature(tx, transaction.slice(8), _serializeEip2930);\n\n    return tx;\n}\n\n// Legacy Transactions and EIP-155\nfunction _parse(rawTransaction: Uint8Array): Transaction {\n    const transaction = RLP.decode(rawTransaction);\n\n    if (transaction.length !== 9 && transaction.length !== 6) {\n        logger.throwArgumentError(\"invalid raw transaction\", \"rawTransaction\", rawTransaction);\n    }\n\n    const tx: Transaction = {\n        nonce:    handleNumber(transaction[0]).toNumber(),\n        gasPrice: handleNumber(transaction[1]),\n        gasLimit: handleNumber(transaction[2]),\n        to:       handleAddress(transaction[3]),\n        value:    handleNumber(transaction[4]),\n        data:     transaction[5],\n        chainId:  0\n    };\n\n    // Legacy unsigned transaction\n    if (transaction.length === 6) { return tx; }\n\n    try {\n        tx.v = BigNumber.from(transaction[6]).toNumber();\n\n    } catch (error) {\n        // @TODO: What makes snese to do? The v is too big\n        return tx;\n    }\n\n    tx.r = hexZeroPad(transaction[7], 32);\n    tx.s = hexZeroPad(transaction[8], 32);\n\n    if (BigNumber.from(tx.r).isZero() && BigNumber.from(tx.s).isZero()) {\n        // EIP-155 unsigned transaction\n        tx.chainId = tx.v;\n        tx.v = 0;\n\n    } else {\n        // Signed Transaction\n\n        tx.chainId = Math.floor((tx.v - 35) / 2);\n        if (tx.chainId < 0) { tx.chainId = 0; }\n\n        let recoveryParam = tx.v - 27;\n\n        const raw = transaction.slice(0, 6);\n\n        if (tx.chainId !== 0) {\n            raw.push(hexlify(tx.chainId));\n            raw.push(\"0x\");\n            raw.push(\"0x\");\n            recoveryParam -= tx.chainId * 2 + 8;\n        }\n\n        const digest = keccak256(RLP.encode(raw));\n        try {\n            tx.from = recoverAddress(digest, { r: hexlify(tx.r), s: hexlify(tx.s), recoveryParam: recoveryParam });\n        } catch (error) { }\n\n        tx.hash = keccak256(rawTransaction);\n    }\n\n    tx.type = null;\n\n    return tx;\n}\n\n\nexport function parse(rawTransaction: BytesLike): Transaction {\n    const payload = arrayify(rawTransaction);\n\n    // Legacy and EIP-155 Transactions\n    if (payload[0] > 0x7f) { return _parse(payload); }\n\n    // Typed Transaction (EIP-2718)\n    switch (payload[0]) {\n        case 1:\n            return _parseEip2930(payload);\n        case 2:\n            return _parseEip1559(payload);\n        default:\n            break;\n    }\n\n    return logger.throwError(`unsupported transaction type: ${ payload[0] }`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"parseTransaction\",\n        transactionType: payload[0]\n    });\n}\n\n","\"use strict\";\n\nimport { checkResultErrors, EventFragment, Fragment, FunctionFragment, Indexed, Interface, JsonFragment, LogDescription, ParamType, Result } from \"@ethersproject/abi\";\nimport { Block, BlockTag, Filter, FilterByBlockHash, Listener, Log, Provider, TransactionReceipt, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { Signer, VoidSigner } from \"@ethersproject/abstract-signer\";\nimport { getAddress, getContractAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, concat, hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\nimport { Deferrable, defineReadOnly, deepCopy, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { AccessList, accessListify, AccessListish } from \"@ethersproject/transactions\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\n\nconst logger = new Logger(version);\n\nexport interface Overrides {\n    gasLimit?: BigNumberish | Promise<BigNumberish>;\n    gasPrice?: BigNumberish | Promise<BigNumberish>;\n    maxFeePerGas?: BigNumberish | Promise<BigNumberish>;\n    maxPriorityFeePerGas?: BigNumberish | Promise<BigNumberish>;\n    nonce?: BigNumberish | Promise<BigNumberish>;\n    type?: number;\n    accessList?: AccessListish;\n    customData?: Record<string, any>;\n    ccipReadEnabled?: boolean;\n};\n\nexport interface PayableOverrides extends Overrides {\n    value?: BigNumberish | Promise<BigNumberish>;\n}\n\nexport interface CallOverrides extends PayableOverrides {\n    blockTag?: BlockTag | Promise<BlockTag>;\n    from?: string | Promise<string>;\n}\n\n// @TODO: Better hierarchy with: (in v6)\n//  - abstract-provider:TransactionRequest\n//  - transactions:Transaction\n//  - transaction:UnsignedTransaction\n\nexport interface PopulatedTransaction {\n    to?: string;\n    from?: string;\n    nonce?: number;\n\n    gasLimit?: BigNumber;\n    gasPrice?: BigNumber;\n\n    data?: string;\n    value?: BigNumber;\n    chainId?: number;\n\n    type?: number;\n    accessList?: AccessList;\n\n    maxFeePerGas?: BigNumber;\n    maxPriorityFeePerGas?: BigNumber;\n\n    customData?: Record<string, any>;\n    ccipReadEnabled?: boolean;\n};\n\nexport type EventFilter = {\n    address?: string;\n    topics?: Array<string|Array<string>>;\n};\n\n\nexport type ContractFunction<T = any> = (...args: Array<any>) => Promise<T>;\n\n\n// The (n + 1)th parameter passed to contract event callbacks\nexport interface Event extends Log {\n\n    // The event name\n    event?: string;\n\n    // The event signature\n    eventSignature?: string;\n\n    // The parsed arguments to the event\n    args?: Result;\n\n    // If parsing the arguments failed, this is the error\n    decodeError?: Error;\n\n    // A function that can be used to decode event data and topics\n    decode?: (data: string, topics?: Array<string>) => any;\n\n    // A function that will remove the listener responsible for this event (if any)\n    removeListener: () => void;\n\n    // Get blockchain details about this event's block and transaction\n    getBlock: () => Promise<Block>;\n    getTransaction: () => Promise<TransactionResponse>;\n    getTransactionReceipt: () => Promise<TransactionReceipt>;\n}\n\nexport interface ContractReceipt extends TransactionReceipt {\n    events?: Array<Event>;\n}\n\nexport interface ContractTransaction extends TransactionResponse {\n    wait(confirmations?: number): Promise<ContractReceipt>;\n}\n\n///////////////////////////////\n\nconst allowedTransactionKeys: { [ key: string ]: boolean } = {\n    chainId: true, data: true, from: true, gasLimit: true, gasPrice:true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true,\n    customData: true,\n    ccipReadEnabled: true\n}\n\nasync function resolveName(resolver: Signer | Provider, nameOrPromise: string | Promise<string>): Promise<string> {\n    const name = await nameOrPromise;\n\n    if (typeof(name) !== \"string\") {\n        logger.throwArgumentError(\"invalid address or ENS name\", \"name\", name);\n    }\n\n    // If it is already an address, just use it (after adding checksum)\n    try {\n        return getAddress(name);\n    } catch (error) { }\n\n    if (!resolver) {\n        logger.throwError(\"a provider or signer is needed to resolve ENS names\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"resolveName\"\n        });\n    }\n\n    const address = await resolver.resolveName(name);\n\n    if (address == null) {\n        logger.throwArgumentError(\"resolver or addr is not configured for ENS name\", \"name\", name);\n    }\n\n    return address;\n}\n\n// Recursively replaces ENS names with promises to resolve the name and resolves all properties\nasync function resolveAddresses(resolver: Signer | Provider, value: any, paramType: ParamType | Array<ParamType>): Promise<any> {\n    if (Array.isArray(paramType)) {\n        return await Promise.all(paramType.map((paramType, index) => {\n            return resolveAddresses(\n                resolver,\n                ((Array.isArray(value)) ? value[index]: value[paramType.name]),\n                paramType\n            );\n        }));\n    }\n\n    if (paramType.type === \"address\") {\n        return await resolveName(resolver, value);\n    }\n\n    if (paramType.type === \"tuple\") {\n        return await resolveAddresses(resolver, value, paramType.components);\n    }\n\n    if (paramType.baseType === \"array\") {\n        if (!Array.isArray(value)) {\n            return Promise.reject(logger.makeError(\"invalid value for array\", Logger.errors.INVALID_ARGUMENT, {\n                argument: \"value\",\n                value\n            }));\n        }\n        return await Promise.all(value.map((v) => resolveAddresses(resolver, v, paramType.arrayChildren)));\n    }\n\n    return value;\n}\n\nasync function populateTransaction(contract: Contract, fragment: FunctionFragment, args: Array<any>): Promise<PopulatedTransaction> {\n    // If an extra argument is given, it is overrides\n    let overrides: CallOverrides = { };\n    if (args.length === fragment.inputs.length + 1 && typeof(args[args.length - 1]) === \"object\") {\n        overrides = shallowCopy(args.pop());\n    }\n\n    // Make sure the parameter count matches\n    logger.checkArgumentCount(args.length, fragment.inputs.length, \"passed to contract\");\n\n    // Populate \"from\" override (allow promises)\n    if (contract.signer) {\n        if (overrides.from) {\n            // Contracts with a Signer are from the Signer's frame-of-reference;\n            // but we allow overriding \"from\" if it matches the signer\n            overrides.from = resolveProperties({\n                override: resolveName(contract.signer, overrides.from),\n                signer: contract.signer.getAddress()\n            }).then(async (check) => {\n                if (getAddress(check.signer) !== check.override) {\n                    logger.throwError(\"Contract with a Signer cannot override from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                        operation: \"overrides.from\"\n                    });\n                }\n\n                return check.override;\n            });\n\n        } else {\n            overrides.from = contract.signer.getAddress();\n        }\n\n    } else if (overrides.from) {\n        overrides.from = resolveName(contract.provider, overrides.from);\n\n    //} else {\n        // Contracts without a signer can override \"from\", and if\n        // unspecified the zero address is used\n        //overrides.from = AddressZero;\n    }\n\n    // Wait for all dependencies to be resolved (prefer the signer over the provider)\n    const resolved = await resolveProperties({\n        args: resolveAddresses(contract.signer || contract.provider, args, fragment.inputs),\n        address: contract.resolvedAddress,\n        overrides: (resolveProperties(overrides) || { })\n    });\n\n    // The ABI coded transaction\n    const data = contract.interface.encodeFunctionData(fragment, resolved.args);\n    const tx: PopulatedTransaction = {\n      data: data,\n      to: resolved.address\n    };\n\n    // Resolved Overrides\n    const ro = resolved.overrides;\n\n    // Populate simple overrides\n    if (ro.nonce != null) { tx.nonce = BigNumber.from(ro.nonce).toNumber(); }\n    if (ro.gasLimit != null) { tx.gasLimit = BigNumber.from(ro.gasLimit); }\n    if (ro.gasPrice != null) { tx.gasPrice = BigNumber.from(ro.gasPrice); }\n    if (ro.maxFeePerGas != null) { tx.maxFeePerGas = BigNumber.from(ro.maxFeePerGas); }\n    if (ro.maxPriorityFeePerGas != null) { tx.maxPriorityFeePerGas = BigNumber.from(ro.maxPriorityFeePerGas); }\n    if (ro.from != null) { tx.from = ro.from; }\n\n    if (ro.type != null) { tx.type = ro.type; }\n    if (ro.accessList != null) { tx.accessList = accessListify(ro.accessList); }\n\n    // If there was no \"gasLimit\" override, but the ABI specifies a default, use it\n    if (tx.gasLimit == null && fragment.gas != null) {\n        // Compute the intrinsic gas cost for this transaction\n        // @TODO: This is based on the yellow paper as of Petersburg; this is something\n        // we may wish to parameterize in v6 as part of the Network object. Since this\n        // is always a non-nil to address, we can ignore G_create, but may wish to add\n        // similar logic to the ContractFactory.\n        let intrinsic = 21000;\n        const bytes = arrayify(data);\n        for (let i = 0; i < bytes.length; i++) {\n            intrinsic += 4;\n            if (bytes[i]) { intrinsic += 64; }\n        }\n        tx.gasLimit = BigNumber.from(fragment.gas).add(intrinsic);\n    }\n\n    // Populate \"value\" override\n    if (ro.value) {\n        const roValue = BigNumber.from(ro.value);\n        if (!roValue.isZero() && !fragment.payable) {\n            logger.throwError(\"non-payable method cannot override value\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"overrides.value\",\n                value: overrides.value\n            });\n        }\n        tx.value = roValue;\n    }\n\n    if (ro.customData) {\n        tx.customData = shallowCopy(ro.customData);\n    }\n\n    if (ro.ccipReadEnabled) {\n        tx.ccipReadEnabled = !!ro.ccipReadEnabled;\n    }\n\n    // Remove the overrides\n    delete overrides.nonce;\n    delete overrides.gasLimit;\n    delete overrides.gasPrice;\n    delete overrides.from;\n    delete overrides.value;\n\n    delete overrides.type;\n    delete overrides.accessList;\n\n    delete overrides.maxFeePerGas;\n    delete overrides.maxPriorityFeePerGas;\n\n    delete overrides.customData;\n    delete overrides.ccipReadEnabled;\n\n    // Make sure there are no stray overrides, which may indicate a\n    // typo or using an unsupported key.\n    const leftovers = Object.keys(overrides).filter((key) => ((<any>overrides)[key] != null));\n    if (leftovers.length) {\n        logger.throwError(`cannot override ${ leftovers.map((l) => JSON.stringify(l)).join(\",\") }`, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"overrides\",\n            overrides: leftovers\n        });\n    }\n\n    return tx;\n}\n\n\nfunction buildPopulate(contract: Contract, fragment: FunctionFragment): ContractFunction<PopulatedTransaction> {\n    return function(...args: Array<any>): Promise<PopulatedTransaction> {\n        return populateTransaction(contract, fragment, args);\n    };\n}\n\nfunction buildEstimate(contract: Contract, fragment: FunctionFragment): ContractFunction<BigNumber> {\n    const signerOrProvider = (contract.signer || contract.provider);\n    return async function(...args: Array<any>): Promise<BigNumber> {\n        if (!signerOrProvider) {\n            logger.throwError(\"estimate require a provider or signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"estimateGas\"\n            })\n        }\n\n        const tx = await populateTransaction(contract, fragment, args);\n        return await signerOrProvider.estimateGas(tx);\n    };\n}\n\nfunction addContractWait(contract: Contract, tx: TransactionResponse) {\n    const wait = tx.wait.bind(tx);\n    tx.wait = (confirmations?: number) => {\n        return wait(confirmations).then((receipt: ContractReceipt) => {\n            receipt.events = receipt.logs.map((log) => {\n                let event: Event = (<Event>deepCopy(log));\n                let parsed: LogDescription = null;\n                try {\n                    parsed = contract.interface.parseLog(log);\n                } catch (e){ }\n\n                // Successfully parsed the event log; include it\n                if (parsed) {\n                    event.args = parsed.args;\n                    event.decode = (data: BytesLike, topics?: Array<any>) => {\n                        return contract.interface.decodeEventLog(parsed.eventFragment, data, topics);\n                    };\n                    event.event = parsed.name;\n                    event.eventSignature = parsed.signature;\n                }\n\n                // Useful operations\n                event.removeListener = () => { return contract.provider; }\n                event.getBlock = () => {\n                    return contract.provider.getBlock(receipt.blockHash);\n                }\n                event.getTransaction = () => {\n                    return contract.provider.getTransaction(receipt.transactionHash);\n                }\n                event.getTransactionReceipt = () => {\n                    return Promise.resolve(receipt);\n                }\n\n                return event;\n            });\n\n            return receipt;\n        });\n    };\n}\n\nfunction buildCall(contract: Contract, fragment: FunctionFragment, collapseSimple: boolean): ContractFunction {\n    const signerOrProvider = (contract.signer || contract.provider);\n\n    return async function(...args: Array<any>): Promise<any> {\n        // Extract the \"blockTag\" override if present\n        let blockTag = undefined;\n        if (args.length === fragment.inputs.length + 1 && typeof(args[args.length - 1]) === \"object\") {\n            const overrides = shallowCopy(args.pop());\n            if (overrides.blockTag != null) {\n                blockTag = await overrides.blockTag;\n            }\n            delete overrides.blockTag;\n            args.push(overrides);\n        }\n\n        // If the contract was just deployed, wait until it is mined\n        if (contract.deployTransaction != null) {\n            await contract._deployed(blockTag);\n        }\n\n        // Call a node and get the result\n        const tx = await populateTransaction(contract, fragment, args);\n        const result = await signerOrProvider.call(tx, blockTag);\n\n        try {\n            let value = contract.interface.decodeFunctionResult(fragment, result);\n            if (collapseSimple && fragment.outputs.length === 1) {\n                value = value[0];\n            }\n            return value;\n\n        } catch (error) {\n            if (error.code === Logger.errors.CALL_EXCEPTION) {\n                error.address = contract.address;\n                error.args = args;\n                error.transaction = tx;\n            }\n            throw error;\n         }\n    };\n}\n\nfunction buildSend(contract: Contract, fragment: FunctionFragment): ContractFunction<TransactionResponse> {\n    return async function(...args: Array<any>): Promise<TransactionResponse> {\n        if (!contract.signer) {\n            logger.throwError(\"sending a transaction requires a signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"sendTransaction\"\n            })\n        }\n\n        // If the contract was just deployed, wait until it is mined\n        if (contract.deployTransaction != null) {\n            await contract._deployed();\n        }\n\n        const txRequest = await populateTransaction(contract, fragment, args);\n\n        const tx = await contract.signer.sendTransaction(txRequest);\n\n        // Tweak the tx.wait so the receipt has extra properties\n        addContractWait(contract, tx);\n\n        return tx;\n    };\n}\n\nfunction buildDefault(contract: Contract, fragment: FunctionFragment, collapseSimple: boolean): ContractFunction {\n    if (fragment.constant) {\n        return buildCall(contract, fragment, collapseSimple);\n    }\n    return buildSend(contract, fragment);\n}\n\nfunction getEventTag(filter: EventFilter): string {\n    if (filter.address && (filter.topics == null || filter.topics.length === 0)) {\n        return \"*\";\n    }\n\n    return (filter.address || \"*\") + \"@\" + (filter.topics ? filter.topics.map((topic) => {\n        if (Array.isArray(topic)) {\n            return topic.join(\"|\");\n        }\n        return topic;\n    }).join(\":\"): \"\");\n}\n\nclass RunningEvent {\n    readonly tag: string;\n    readonly filter: EventFilter;\n    private _listeners: Array<{ listener: Listener, once: boolean }>;\n\n    constructor(tag: string, filter: EventFilter) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"filter\", filter);\n        this._listeners = [ ];\n    }\n\n    addListener(listener: Listener, once: boolean): void {\n        this._listeners.push({ listener: listener, once: once });\n    }\n\n    removeListener(listener: Listener): void {\n        let done = false;\n        this._listeners = this._listeners.filter((item) => {\n            if (done || item.listener !== listener) { return true; }\n            done = true;\n            return false;\n        });\n    }\n\n    removeAllListeners(): void {\n        this._listeners = [];\n    }\n\n    listeners(): Array<Listener> {\n        return this._listeners.map((i) => i.listener);\n    }\n\n    listenerCount(): number {\n        return this._listeners.length;\n    }\n\n    run(args: Array<any>): number {\n        const listenerCount = this.listenerCount();\n        this._listeners = this._listeners.filter((item) => {\n\n            const argsCopy = args.slice();\n\n            // Call the callback in the next event loop\n            setTimeout(() => {\n                item.listener.apply(this, argsCopy);\n            }, 0);\n\n            // Reschedule it if it not \"once\"\n            return !(item.once);\n        });\n\n        return listenerCount;\n    }\n\n    prepareEvent(event: Event): void {\n    }\n\n    // Returns the array that will be applied to an emit\n    getEmit(event: Event): Array<any> {\n        return [ event ];\n    }\n}\n\nclass ErrorRunningEvent extends RunningEvent {\n    constructor() {\n        super(\"error\", null);\n    }\n}\n\n\n// @TODO Fragment should inherit Wildcard? and just override getEmit?\n//       or have a common abstract super class, with enough constructor\n//       options to configure both.\n\n// A Fragment Event will populate all the properties that Wildcard\n// will, and additionally dereference the arguments when emitting\nclass FragmentRunningEvent extends RunningEvent {\n    readonly address: string;\n    readonly interface: Interface;\n    readonly fragment: EventFragment;\n\n    constructor(address: string, contractInterface: Interface, fragment: EventFragment, topics?: Array<string|Array<string>>) {\n        const filter: EventFilter = {\n            address: address\n        }\n\n        let topic = contractInterface.getEventTopic(fragment);\n        if (topics) {\n            if (topic !== topics[0]) { logger.throwArgumentError(\"topic mismatch\", \"topics\", topics); }\n            filter.topics = topics.slice();\n        } else {\n            filter.topics = [ topic ];\n        }\n\n        super(getEventTag(filter), filter);\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"interface\", contractInterface);\n        defineReadOnly(this, \"fragment\", fragment);\n    }\n\n\n    prepareEvent(event: Event): void {\n        super.prepareEvent(event);\n\n        event.event = this.fragment.name;\n        event.eventSignature = this.fragment.format();\n\n        event.decode = (data: BytesLike, topics?: Array<string>) => {\n            return this.interface.decodeEventLog(this.fragment, data, topics);\n        };\n\n        try {\n            event.args = this.interface.decodeEventLog(this.fragment, event.data, event.topics);\n        } catch (error) {\n            event.args = null;\n            event.decodeError = error;\n        }\n    }\n\n    getEmit(event: Event): Array<any> {\n        const errors = checkResultErrors(event.args);\n        if (errors.length) { throw errors[0].error; }\n\n        const args = (event.args || []).slice();\n        args.push(event);\n        return args;\n    }\n}\n\n// A Wildcard Event will attempt to populate:\n//  - event            The name of the event name\n//  - eventSignature   The full signature of the event\n//  - decode           A function to decode data and topics\n//  - args             The decoded data and topics\nclass WildcardRunningEvent extends RunningEvent {\n    readonly address: string;\n    readonly interface: Interface;\n\n    constructor(address: string, contractInterface: Interface) {\n        super(\"*\", { address: address });\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"interface\", contractInterface);\n    }\n\n    prepareEvent(event: Event): void {\n        super.prepareEvent(event);\n\n        try {\n            const parsed = this.interface.parseLog(event);\n            event.event = parsed.name;\n            event.eventSignature = parsed.signature;\n\n            event.decode = (data: BytesLike, topics?: Array<string>) => {\n                return this.interface.decodeEventLog(parsed.eventFragment, data, topics);\n            };\n\n            event.args = parsed.args;\n        } catch (error) {\n            // No matching event\n        }\n    }\n}\n\nexport type ContractInterface = string | ReadonlyArray<Fragment | JsonFragment | string> | Interface;\n\ntype InterfaceFunc = (contractInterface: ContractInterface) => Interface;\n\n\nexport class BaseContract {\n    readonly address: string;\n    readonly interface: Interface;\n\n    readonly signer: Signer;\n    readonly provider: Provider;\n\n    readonly functions: { [ name: string ]: ContractFunction };\n\n    readonly callStatic: { [ name: string ]: ContractFunction };\n    readonly estimateGas: { [ name: string ]: ContractFunction<BigNumber> };\n    readonly populateTransaction: { [ name: string ]: ContractFunction<PopulatedTransaction> };\n\n    readonly filters: { [ name: string ]: (...args: Array<any>) => EventFilter };\n\n    // This will always be an address. This will only differ from\n    // address if an ENS name was used in the constructor\n    readonly resolvedAddress: Promise<string>;\n\n    // This is only set if the contract was created with a call to deploy\n    readonly deployTransaction: TransactionResponse;\n\n    _deployedPromise: Promise<Contract>;\n\n    // A list of RunningEvents to track listeners for each event tag\n    _runningEvents: { [ eventTag: string ]: RunningEvent };\n\n    // Wrapped functions to call emit and allow deregistration from the provider\n    _wrappedEmits: { [ eventTag: string ]: (...args: Array<any>) => void };\n\n    constructor(addressOrName: string, contractInterface: ContractInterface, signerOrProvider?: Signer | Provider) {\n        // @TODO: Maybe still check the addressOrName looks like a valid address or name?\n        //address = getAddress(address);\n        defineReadOnly(this, \"interface\", getStatic<InterfaceFunc>(new.target, \"getInterface\")(contractInterface));\n\n        if (signerOrProvider == null) {\n            defineReadOnly(this, \"provider\", null);\n            defineReadOnly(this, \"signer\", null);\n        } else if (Signer.isSigner(signerOrProvider)) {\n            defineReadOnly(this, \"provider\", signerOrProvider.provider || null);\n            defineReadOnly(this, \"signer\", signerOrProvider);\n        } else if (Provider.isProvider(signerOrProvider)) {\n            defineReadOnly(this, \"provider\", signerOrProvider);\n            defineReadOnly(this, \"signer\", null);\n        } else {\n            logger.throwArgumentError(\"invalid signer or provider\", \"signerOrProvider\", signerOrProvider);\n        }\n\n        defineReadOnly(this, \"callStatic\", { });\n        defineReadOnly(this, \"estimateGas\", { });\n        defineReadOnly(this, \"functions\", { });\n        defineReadOnly(this, \"populateTransaction\", { });\n\n        defineReadOnly(this, \"filters\", { });\n\n        {\n            const uniqueFilters: { [ name: string ]: Array<string> } = { };\n            Object.keys(this.interface.events).forEach((eventSignature) => {\n                const event = this.interface.events[eventSignature];\n                defineReadOnly(this.filters, eventSignature, (...args: Array<any>) => {\n                    return {\n                        address: this.address,\n                        topics: this.interface.encodeFilterTopics(event, args)\n                   }\n                });\n                if (!uniqueFilters[event.name]) { uniqueFilters[event.name] = [ ]; }\n                uniqueFilters[event.name].push(eventSignature);\n            });\n\n            Object.keys(uniqueFilters).forEach((name) => {\n                const filters = uniqueFilters[name];\n                if (filters.length === 1) {\n                    defineReadOnly(this.filters, name, this.filters[filters[0]]);\n                } else {\n                    logger.warn(`Duplicate definition of ${ name } (${ filters.join(\", \")})`);\n                }\n            });\n        }\n\n        defineReadOnly(this, \"_runningEvents\", { });\n        defineReadOnly(this, \"_wrappedEmits\", { });\n\n        if (addressOrName == null) {\n            logger.throwArgumentError(\"invalid contract address or ENS name\", \"addressOrName\", addressOrName);\n        }\n\n        defineReadOnly(this, \"address\", addressOrName);\n        if (this.provider) {\n            defineReadOnly(this, \"resolvedAddress\", resolveName(this.provider, addressOrName));\n        } else {\n            try {\n                defineReadOnly(this, \"resolvedAddress\", Promise.resolve(getAddress(addressOrName)));\n            } catch (error) {\n                // Without a provider, we cannot use ENS names\n                logger.throwError(\"provider is required to use ENS name as contract address\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"new Contract\"\n                });\n            }\n        }\n\n        // Swallow bad ENS names to prevent Unhandled Exceptions\n        this.resolvedAddress.catch((e) => { });\n\n        const uniqueNames: { [ name: string ]: Array<string> } = { };\n        const uniqueSignatures: { [ signature: string ]: boolean } = { };\n        Object.keys(this.interface.functions).forEach((signature) => {\n            const fragment = this.interface.functions[signature];\n\n            // Check that the signature is unique; if not the ABI generation has\n            // not been cleaned or may be incorrectly generated\n            if (uniqueSignatures[signature]) {\n                logger.warn(`Duplicate ABI entry for ${ JSON.stringify(signature) }`);\n                return;\n            }\n            uniqueSignatures[signature] = true;\n\n            // Track unique names; we only expose bare named functions if they\n            // are ambiguous\n            {\n                const name = fragment.name;\n                if (!uniqueNames[`%${ name }`]) { uniqueNames[`%${ name }`] = [ ]; }\n                uniqueNames[`%${ name }`].push(signature);\n            }\n\n            if ((<Contract>this)[signature] == null) {\n                defineReadOnly<any, any>(this, signature, buildDefault(this, fragment, true));\n            }\n\n            // We do not collapse simple calls on this bucket, which allows\n            // frameworks to safely use this without introspection as well as\n            // allows decoding error recovery.\n            if (this.functions[signature] == null) {\n                defineReadOnly(this.functions, signature, buildDefault(this, fragment, false));\n            }\n\n            if (this.callStatic[signature] == null) {\n                defineReadOnly(this.callStatic, signature, buildCall(this, fragment, true));\n            }\n\n            if (this.populateTransaction[signature] == null) {\n                defineReadOnly(this.populateTransaction, signature, buildPopulate(this, fragment));\n            }\n\n            if (this.estimateGas[signature] == null) {\n                defineReadOnly(this.estimateGas, signature, buildEstimate(this, fragment));\n            }\n        });\n\n        Object.keys(uniqueNames).forEach((name) => {\n            // Ambiguous names to not get attached as bare names\n            const signatures = uniqueNames[name];\n            if (signatures.length > 1) { return; }\n\n            // Strip off the leading \"%\" used for prototype protection\n            name = name.substring(1);\n\n            const signature = signatures[0];\n\n            // If overwriting a member property that is null, swallow the error\n            try {\n                if ((<Contract>this)[name] == null) {\n                    defineReadOnly(<Contract>this, name, (<Contract>this)[signature]);\n                }\n            } catch (e) { }\n\n            if (this.functions[name] == null) {\n                defineReadOnly(this.functions, name, this.functions[signature]);\n            }\n\n            if (this.callStatic[name] == null) {\n                defineReadOnly(this.callStatic, name, this.callStatic[signature]);\n            }\n\n            if (this.populateTransaction[name] == null) {\n                defineReadOnly(this.populateTransaction, name, this.populateTransaction[signature]);\n            }\n\n            if (this.estimateGas[name] == null) {\n                defineReadOnly(this.estimateGas, name, this.estimateGas[signature]);\n            }\n        });\n    }\n\n    static getContractAddress(transaction: { from: string, nonce: BigNumberish }): string {\n        return getContractAddress(transaction);\n    }\n\n    static getInterface(contractInterface: ContractInterface): Interface {\n        if (Interface.isInterface(contractInterface)) {\n            return contractInterface;\n        }\n        return new Interface(contractInterface);\n    }\n\n    // @TODO: Allow timeout?\n    deployed(): Promise<Contract> {\n        return this._deployed();\n    }\n\n    _deployed(blockTag?: BlockTag): Promise<Contract> {\n        if (!this._deployedPromise) {\n\n            // If we were just deployed, we know the transaction we should occur in\n            if (this.deployTransaction) {\n                this._deployedPromise = this.deployTransaction.wait().then(() => {\n                    return this;\n                });\n\n            } else {\n                // @TODO: Once we allow a timeout to be passed in, we will wait\n                // up to that many blocks for getCode\n\n                // Otherwise, poll for our code to be deployed\n                this._deployedPromise = this.provider.getCode(this.address, blockTag).then((code) => {\n                    if (code === \"0x\") {\n                        logger.throwError(\"contract not deployed\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            contractAddress: this.address,\n                            operation: \"getDeployed\"\n                        });\n                    }\n                    return this;\n                });\n            }\n        }\n\n        return this._deployedPromise;\n    }\n\n    // @TODO:\n    // estimateFallback(overrides?: TransactionRequest): Promise<BigNumber>\n\n    // @TODO:\n    // estimateDeploy(bytecode: string, ...args): Promise<BigNumber>\n\n    fallback(overrides?: TransactionRequest): Promise<TransactionResponse> {\n        if (!this.signer) {\n            logger.throwError(\"sending a transactions require a signer\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"sendTransaction(fallback)\" })\n        }\n\n        const tx: Deferrable<TransactionRequest> = shallowCopy(overrides || {});\n\n        [\"from\", \"to\"].forEach(function(key) {\n            if ((<any>tx)[key] == null) { return; }\n            logger.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, { operation: key })\n        });\n\n        tx.to = this.resolvedAddress;\n        return this.deployed().then(() => {\n            return this.signer.sendTransaction(tx);\n        });\n    }\n\n    // Reconnect to a different signer or provider\n    connect(signerOrProvider: Signer | Provider | string): Contract {\n        if (typeof(signerOrProvider) === \"string\") {\n            signerOrProvider = new VoidSigner(signerOrProvider, this.provider);\n        }\n\n        const contract = new (<{ new(...args: any[]): Contract }>(this.constructor))(this.address, this.interface, signerOrProvider);\n        if (this.deployTransaction) {\n            defineReadOnly(contract, \"deployTransaction\", this.deployTransaction);\n        }\n\n        return contract;\n    }\n\n    // Re-attach to a different on-chain instance of this contract\n    attach(addressOrName: string): Contract {\n        return new (<{ new(...args: any[]): Contract }>(this.constructor))(addressOrName, this.interface, this.signer || this.provider);\n    }\n\n    static isIndexed(value: any): value is Indexed {\n        return Indexed.isIndexed(value);\n    }\n\n    private _normalizeRunningEvent(runningEvent: RunningEvent): RunningEvent {\n        // Already have an instance of this event running; we can re-use it\n        if (this._runningEvents[runningEvent.tag]) {\n            return this._runningEvents[runningEvent.tag];\n         }\n         return runningEvent\n    }\n\n    private _getRunningEvent(eventName: EventFilter | string): RunningEvent {\n        if (typeof(eventName) === \"string\") {\n\n            // Listen for \"error\" events (if your contract has an error event, include\n            // the full signature to bypass this special event keyword)\n            if (eventName === \"error\") {\n                return this._normalizeRunningEvent(new ErrorRunningEvent());\n            }\n\n            // Listen for any event that is registered\n            if (eventName === \"event\") {\n                return this._normalizeRunningEvent(new RunningEvent(\"event\", null));\n            }\n\n            // Listen for any event\n            if (eventName === \"*\") {\n                return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n            }\n\n            // Get the event Fragment (throws if ambiguous/unknown event)\n            const fragment = this.interface.getEvent(eventName)\n            return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment));\n        }\n\n        // We have topics to filter by...\n        if (eventName.topics && eventName.topics.length > 0) {\n\n            // Is it a known topichash? (throws if no matching topichash)\n            try {\n                const topic = eventName.topics[0];\n                if (typeof(topic) !== \"string\") {\n                    throw new Error(\"invalid topic\"); // @TODO: May happen for anonymous events\n                }\n                const fragment = this.interface.getEvent(topic);\n                return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment, eventName.topics));\n            } catch (error) { }\n\n            // Filter by the unknown topichash\n            const filter: EventFilter = {\n                address: this.address,\n                topics: eventName.topics\n            }\n\n            return this._normalizeRunningEvent(new RunningEvent(getEventTag(filter), filter));\n        }\n\n        return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n    }\n\n    _checkRunningEvents(runningEvent: RunningEvent): void {\n        if (runningEvent.listenerCount() === 0) {\n            delete this._runningEvents[runningEvent.tag];\n\n            // If we have a poller for this, remove it\n            const emit = this._wrappedEmits[runningEvent.tag];\n            if (emit && runningEvent.filter) {\n                this.provider.off(runningEvent.filter, emit);\n                delete this._wrappedEmits[runningEvent.tag];\n            }\n        }\n    }\n\n    // Subclasses can override this to gracefully recover\n    // from parse errors if they wish\n    _wrapEvent(runningEvent: RunningEvent, log: Log, listener: Listener): Event {\n        const event = <Event>deepCopy(log);\n\n        event.removeListener = () => {\n            if (!listener) { return; }\n            runningEvent.removeListener(listener);\n            this._checkRunningEvents(runningEvent);\n        };\n\n        event.getBlock = () => { return this.provider.getBlock(log.blockHash); }\n        event.getTransaction = () => { return this.provider.getTransaction(log.transactionHash); }\n        event.getTransactionReceipt = () => { return this.provider.getTransactionReceipt(log.transactionHash); }\n\n        // This may throw if the topics and data mismatch the signature\n        runningEvent.prepareEvent(event);\n\n        return event;\n    }\n\n    private _addEventListener(runningEvent: RunningEvent, listener: Listener, once: boolean): void {\n        if (!this.provider) {\n            logger.throwError(\"events require a provider or a signer with a provider\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"once\" })\n        }\n\n        runningEvent.addListener(listener, once);\n\n        // Track this running event and its listeners (may already be there; but no hard in updating)\n        this._runningEvents[runningEvent.tag] = runningEvent;\n\n        // If we are not polling the provider, start polling\n        if (!this._wrappedEmits[runningEvent.tag]) {\n            const wrappedEmit = (log: Log) => {\n                let event = this._wrapEvent(runningEvent, log, listener);\n\n                // Try to emit the result for the parameterized event...\n                if (event.decodeError == null) {\n                    try {\n                        const args = runningEvent.getEmit(event);\n                        this.emit(runningEvent.filter, ...args);\n                    } catch (error) {\n                        event.decodeError = error.error;\n                    }\n                }\n\n                // Always emit \"event\" for fragment-base events\n                if (runningEvent.filter != null) {\n                    this.emit(\"event\", event);\n                }\n\n                // Emit \"error\" if there was an error\n                if (event.decodeError != null) {\n                    this.emit(\"error\", event.decodeError, event);\n                }\n            };\n            this._wrappedEmits[runningEvent.tag] = wrappedEmit;\n\n            // Special events, like \"error\" do not have a filter\n            if (runningEvent.filter != null) {\n                this.provider.on(runningEvent.filter, wrappedEmit);\n            }\n        }\n    }\n\n    queryFilter(event: EventFilter | string, fromBlockOrBlockhash?: BlockTag | string, toBlock?: BlockTag): Promise<Array<Event>> {\n        const runningEvent = this._getRunningEvent(event);\n        const filter = shallowCopy(runningEvent.filter);\n\n        if (typeof(fromBlockOrBlockhash) === \"string\" && isHexString(fromBlockOrBlockhash, 32)) {\n            if (toBlock != null) {\n                logger.throwArgumentError(\"cannot specify toBlock with blockhash\", \"toBlock\", toBlock);\n            }\n            (<FilterByBlockHash>filter).blockHash = fromBlockOrBlockhash;\n        } else {\n             (<Filter>filter).fromBlock = ((fromBlockOrBlockhash != null) ? fromBlockOrBlockhash: 0);\n             (<Filter>filter).toBlock = ((toBlock != null) ? toBlock: \"latest\");\n        }\n\n        return this.provider.getLogs(filter).then((logs) => {\n            return logs.map((log) => this._wrapEvent(runningEvent, log, null));\n        });\n    }\n\n    on(event: EventFilter | string, listener: Listener): this {\n        this._addEventListener(this._getRunningEvent(event), listener, false);\n        return this;\n    }\n\n    once(event: EventFilter | string, listener: Listener): this {\n        this._addEventListener(this._getRunningEvent(event), listener, true);\n        return this;\n    }\n\n    emit(eventName: EventFilter | string, ...args: Array<any>): boolean {\n        if (!this.provider) { return false; }\n\n        const runningEvent = this._getRunningEvent(eventName);\n        const result = (runningEvent.run(args) > 0);\n\n        // May have drained all the \"once\" events; check for living events\n        this._checkRunningEvents(runningEvent);\n\n        return result;\n    }\n\n    listenerCount(eventName?: EventFilter | string): number {\n        if (!this.provider) { return 0; }\n        if (eventName == null) {\n            return Object.keys(this._runningEvents).reduce((accum, key) => {\n                return accum + this._runningEvents[key].listenerCount();\n            }, 0);\n        }\n        return this._getRunningEvent(eventName).listenerCount();\n    }\n\n    listeners(eventName?: EventFilter | string): Array<Listener> {\n        if (!this.provider) { return []; }\n\n        if (eventName == null) {\n            const result: Array<Listener> = [ ];\n            for (let tag in this._runningEvents) {\n                this._runningEvents[tag].listeners().forEach((listener) => {\n                    result.push(listener)\n                });\n            }\n            return result;\n        }\n\n        return this._getRunningEvent(eventName).listeners();\n    }\n\n    removeAllListeners(eventName?: EventFilter | string): this {\n        if (!this.provider) { return this; }\n\n        if (eventName == null) {\n            for (const tag in this._runningEvents) {\n                const runningEvent = this._runningEvents[tag];\n                runningEvent.removeAllListeners();\n                this._checkRunningEvents(runningEvent);\n            }\n            return this;\n        }\n\n        // Delete any listeners\n        const runningEvent = this._getRunningEvent(eventName);\n        runningEvent.removeAllListeners();\n        this._checkRunningEvents(runningEvent);\n\n        return this;\n    }\n\n    off(eventName: EventFilter | string, listener: Listener): this {\n        if (!this.provider) { return this; }\n        const runningEvent = this._getRunningEvent(eventName);\n        runningEvent.removeListener(listener);\n        this._checkRunningEvents(runningEvent);\n        return this;\n    }\n\n    removeListener(eventName: EventFilter | string, listener: Listener): this {\n        return this.off(eventName, listener);\n    }\n\n}\n\nexport class Contract extends BaseContract {\n    // The meta-class properties\n    readonly [ key: string ]: ContractFunction | any;\n}\n\nexport class ContractFactory {\n\n    readonly interface: Interface;\n    readonly bytecode: string;\n    readonly signer: Signer;\n\n    constructor(contractInterface: ContractInterface, bytecode: BytesLike | { object: string }, signer?: Signer) {\n\n        let bytecodeHex: string = null;\n\n        if (typeof(bytecode) === \"string\") {\n            bytecodeHex = bytecode;\n        } else if (isBytes(bytecode)) {\n            bytecodeHex = hexlify(bytecode);\n        } else if (bytecode && typeof(bytecode.object) === \"string\") {\n            // Allow the bytecode object from the Solidity compiler\n            bytecodeHex = (<any>bytecode).object;\n        } else {\n            // Crash in the next verification step\n            bytecodeHex = \"!\";\n        }\n\n        // Make sure it is 0x prefixed\n        if (bytecodeHex.substring(0, 2) !== \"0x\") { bytecodeHex = \"0x\" + bytecodeHex; }\n\n        // Make sure the final result is valid bytecode\n        if (!isHexString(bytecodeHex) || (bytecodeHex.length % 2)) {\n            logger.throwArgumentError(\"invalid bytecode\", \"bytecode\", bytecode);\n        }\n\n        // If we have a signer, make sure it is valid\n        if (signer && !Signer.isSigner(signer)) {\n            logger.throwArgumentError(\"invalid signer\", \"signer\", signer);\n        }\n\n        defineReadOnly(this, \"bytecode\", bytecodeHex);\n        defineReadOnly(this, \"interface\", getStatic<InterfaceFunc>(new.target, \"getInterface\")(contractInterface));\n        defineReadOnly(this, \"signer\", signer || null);\n    }\n\n    // @TODO: Future; rename to populateTransaction?\n    getDeployTransaction(...args: Array<any>): TransactionRequest {\n        let tx: TransactionRequest = { };\n\n        // If we have 1 additional argument, we allow transaction overrides\n        if (args.length === this.interface.deploy.inputs.length + 1 && typeof(args[args.length - 1]) === \"object\") {\n            tx = shallowCopy(args.pop());\n            for (const key in tx) {\n                if (!allowedTransactionKeys[key]) {\n                    throw new Error(\"unknown transaction override \" + key);\n                }\n            }\n        }\n\n        // Do not allow these to be overridden in a deployment transaction\n        [\"data\", \"from\", \"to\"].forEach((key) => {\n            if ((<any>tx)[key] == null) { return; }\n            logger.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, { operation: key })\n        });\n\n        if (tx.value) {\n            const value = BigNumber.from(tx.value);\n            if (!value.isZero() && !this.interface.deploy.payable) {\n                logger.throwError(\"non-payable constructor cannot override value\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"overrides.value\",\n                    value: tx.value\n                });\n            }\n        }\n\n        // Make sure the call matches the constructor signature\n        logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n\n        // Set the data to the bytecode + the encoded constructor arguments\n        tx.data = hexlify(concat([\n            this.bytecode,\n            this.interface.encodeDeploy(args)\n        ]));\n\n        return tx\n    }\n\n    async deploy(...args: Array<any>): Promise<Contract> {\n\n        let overrides: any = { };\n\n        // If 1 extra parameter was passed in, it contains overrides\n        if (args.length === this.interface.deploy.inputs.length + 1) {\n            overrides = args.pop();\n        }\n\n        // Make sure the call matches the constructor signature\n        logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n\n        // Resolve ENS names and promises in the arguments\n        const params = await resolveAddresses(this.signer, args, this.interface.deploy.inputs);\n        params.push(overrides);\n\n        // Get the deployment transaction (with optional overrides)\n        const unsignedTx = this.getDeployTransaction(...params);\n\n        // Send the deployment transaction\n        const tx = await this.signer.sendTransaction(unsignedTx);\n\n        const address = getStatic<(tx: TransactionResponse) => string>(this.constructor, \"getContractAddress\")(tx);\n        const contract = getStatic<(address: string, contractInterface: ContractInterface, signer?: Signer) => Contract>(this.constructor, \"getContract\")(address, this.interface, this.signer);\n\n        // Add the modified wait that wraps events\n        addContractWait(contract, tx);\n\n        defineReadOnly(contract, \"deployTransaction\", tx);\n        return contract;\n    }\n\n    attach(address: string): Contract {\n        return (<any>(this.constructor)).getContract(address, this.interface, this.signer);\n    }\n\n    connect(signer: Signer) {\n        return new (<{ new(...args: any[]): ContractFactory }>(this.constructor))(this.interface, this.bytecode, signer);\n    }\n\n    static fromSolidity(compilerOutput: any, signer?: Signer): ContractFactory {\n        if (compilerOutput == null) {\n            logger.throwError(\"missing compiler output\", Logger.errors.MISSING_ARGUMENT, { argument: \"compilerOutput\" });\n        }\n\n        if (typeof(compilerOutput) === \"string\") {\n            compilerOutput = JSON.parse(compilerOutput);\n        }\n\n        const abi = compilerOutput.abi;\n\n        let bytecode: any = null;\n        if (compilerOutput.bytecode) {\n            bytecode = compilerOutput.bytecode;\n        } else if (compilerOutput.evm && compilerOutput.evm.bytecode) {\n            bytecode = compilerOutput.evm.bytecode;\n        }\n\n        return new this(abi, bytecode, signer);\n    }\n\n    static getInterface(contractInterface: ContractInterface) {\n        return Contract.getInterface(contractInterface);\n    }\n\n    static getContractAddress(tx: { from: string, nonce: BytesLike | BigNumber | number }): string {\n        return getContractAddress(tx);\n    }\n\n    static getContract(address: string, contractInterface: ContractInterface, signer?: Signer): Contract {\n        return new Contract(address, contractInterface, signer);\n    }\n}\n","export const version = \"contracts/5.7.0\";\n","/**\n * var basex = require(\"base-x\");\n *\n * This implementation is heavily based on base-x. The main reason to\n * deviate was to prevent the dependency of Buffer.\n *\n * Contributors:\n *\n * base-x encoding\n * Forked from https://github.com/cryptocoinjs/bs58\n * Originally written by Mike Hearn for BitcoinJ\n * Copyright (c) 2011 Google Inc\n * Ported to JavaScript by Stefan Thomas\n * Merged Buffer refactorings from base58-native by Stephen Pair\n * Copyright (c) 2013 BitPay Inc\n *\n * The MIT License (MIT)\n *\n * Copyright base-x contributors (c) 2016\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n *\n */\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nexport class BaseX {\n    readonly alphabet: string;\n    readonly base: number;\n\n    _alphabetMap: { [ character: string ]: number };\n    _leader: string;\n\n    constructor(alphabet: string) {\n        defineReadOnly(this, \"alphabet\", alphabet);\n        defineReadOnly(this, \"base\", alphabet.length);\n\n        defineReadOnly(this, \"_alphabetMap\", { });\n        defineReadOnly(this, \"_leader\", alphabet.charAt(0));\n\n        // pre-compute lookup table\n        for (let i = 0; i < alphabet.length; i++) {\n            this._alphabetMap[alphabet.charAt(i)] = i;\n        }\n    }\n\n    encode(value: BytesLike): string {\n        let source = arrayify(value);\n\n        if (source.length === 0) { return \"\"; }\n\n        let digits = [ 0 ]\n        for (let i = 0; i < source.length; ++i) {\n            let carry = source[i];\n            for (let j = 0; j < digits.length; ++j) {\n                carry += digits[j] << 8;\n                digits[j] = carry % this.base;\n                carry = (carry / this.base) | 0;\n            }\n\n            while (carry > 0) {\n                digits.push(carry % this.base);\n                carry = (carry / this.base) | 0;\n            }\n        }\n\n        let string = \"\"\n\n        // deal with leading zeros\n        for (let k = 0; source[k] === 0 && k < source.length - 1; ++k) {\n            string += this._leader;\n        }\n\n        // convert digits to a string\n        for (let q = digits.length - 1; q >= 0; --q) {\n            string += this.alphabet[digits[q]];\n        }\n\n        return string;\n    }\n\n    decode(value: string): Uint8Array {\n        if (typeof(value) !== \"string\") {\n            throw new TypeError(\"Expected String\");\n        }\n\n        let bytes: Array<number> = [];\n        if (value.length === 0) { return new Uint8Array(bytes); }\n\n        bytes.push(0);\n        for (let i = 0; i < value.length; i++) {\n            let byte = this._alphabetMap[value[i]];\n\n            if (byte === undefined) {\n                throw new Error(\"Non-base\" + this.base + \" character\");\n            }\n\n            let carry = byte;\n            for (let j = 0; j < bytes.length; ++j) {\n                carry += bytes[j] * this.base;\n                bytes[j] = carry & 0xff;\n                carry >>= 8;\n            }\n\n            while (carry > 0) {\n                bytes.push(carry & 0xff);\n                carry >>= 8;\n            }\n        }\n\n        // deal with leading zeros\n        for (let k = 0; value[k] === this._leader && k < value.length - 1; ++k) {\n            bytes.push(0)\n        }\n\n        return arrayify(new Uint8Array(bytes.reverse()))\n    }\n}\n\nconst Base32 = new BaseX(\"abcdefghijklmnopqrstuvwxyz234567\");\nconst Base58 = new BaseX(\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\");\n\nexport { Base32, Base58 };\n\n//console.log(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\"))\n//console.log(Base58.encode(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\")))\n","export enum SupportedAlgorithm { sha256 = \"sha256\", sha512 = \"sha512\" };\n\n","\"use strict\";\n\nimport { arrayify, BytesLike, hexlify } from \"@ethersproject/bytes\";\nimport { computeHmac, SupportedAlgorithm } from \"@ethersproject/sha2\";\n\nexport function pbkdf2(password: BytesLike, salt: BytesLike, iterations: number, keylen: number, hashAlgorithm: string): string {\n    password = arrayify(password);\n    salt = arrayify(salt);\n    let hLen;\n    let l = 1;\n    const DK = new Uint8Array(keylen)\n    const block1 = new Uint8Array(salt.length + 4)\n    block1.set(salt);\n    //salt.copy(block1, 0, 0, salt.length)\n\n    let r: number;\n    let T: Uint8Array;\n\n    for (let i = 1; i <= l; i++) {\n        //block1.writeUInt32BE(i, salt.length)\n        block1[salt.length] = (i >> 24) & 0xff;\n        block1[salt.length + 1] = (i >> 16) & 0xff;\n        block1[salt.length + 2] = (i >> 8) & 0xff;\n        block1[salt.length + 3] = i & 0xff;\n\n        //let U = createHmac(password).update(block1).digest();\n        let U = arrayify(computeHmac(<SupportedAlgorithm>hashAlgorithm, password, block1));\n\n        if (!hLen) {\n            hLen = U.length\n            T = new Uint8Array(hLen)\n            l = Math.ceil(keylen / hLen)\n            r = keylen - (l - 1) * hLen\n        }\n\n        //U.copy(T, 0, 0, hLen)\n        T.set(U);\n\n\n        for (let j = 1; j < iterations; j++) {\n            //U = createHmac(password).update(U).digest();\n            U = arrayify(computeHmac(<SupportedAlgorithm>hashAlgorithm, password, U));\n            for (let k = 0; k < hLen; k++) T[k] ^= U[k]\n        }\n\n\n        const destPos = (i - 1) * hLen\n        const len = (i === l ? r : hLen)\n        //T.copy(DK, destPos, 0, len)\n        DK.set(arrayify(T).slice(0, len), destPos);\n    }\n\n    return hexlify(DK)\n}\n\n","export const version = \"sha2/5.7.0\";\n","\"use strict\";\n\nimport hash from \"hash.js\";\n//const _ripemd160 = _hash.ripemd160;\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nimport { SupportedAlgorithm } from \"./types\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport function ripemd160(data: BytesLike): string {\n    return \"0x\" + (hash.ripemd160().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function sha256(data: BytesLike): string {\n    return \"0x\" + (hash.sha256().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function sha512(data: BytesLike): string {\n    return \"0x\" + (hash.sha512().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function computeHmac(algorithm: SupportedAlgorithm, key: BytesLike, data: BytesLike): string {\n    if (!SupportedAlgorithm[algorithm]) {\n        logger.throwError(\"unsupported algorithm \" + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n\n    return \"0x\" + hash.hmac((<any>hash)[algorithm], arrayify(key)).update(arrayify(data)).digest(\"hex\");\n}\n\n","export const version = \"wordlists/5.7.0\";\n","\"use strict\";\n\n// This gets overridden by rollup\nconst exportWordlist = false;\n\nimport { id } from \"@ethersproject/hash\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nexport const logger = new Logger(version);\n\nexport abstract class Wordlist {\n    readonly locale: string;\n\n    constructor(locale: string) {\n        logger.checkAbstract(new.target, Wordlist);\n        defineReadOnly(this, \"locale\", locale);\n    }\n\n    abstract getWord(index: number): string;\n    abstract getWordIndex(word: string): number;\n\n    // Subclasses may override this\n    split(mnemonic: string): Array<string> {\n        return mnemonic.toLowerCase().split(/ +/g)\n    }\n\n    // Subclasses may override this\n    join(words: Array<string>): string {\n        return words.join(\" \");\n    }\n\n    static check(wordlist: Wordlist): string {\n        const words = [];\n        for (let i = 0; i < 2048; i++) {\n            const word = wordlist.getWord(i);\n            /* istanbul ignore if */\n            if (i !== wordlist.getWordIndex(word)) { return \"0x\"; }\n            words.push(word);\n        }\n        return id(words.join(\"\\n\") + \"\\n\");\n    }\n\n    static register(lang: Wordlist, name?: string): void {\n        if (!name) { name = lang.locale; }\n\n        /* istanbul ignore if */\n        if (exportWordlist) {\n            try {\n                const anyGlobal = (window as any)\n                if (anyGlobal._ethers && anyGlobal._ethers.wordlists) {\n                    if (!anyGlobal._ethers.wordlists[name]) {\n                         defineReadOnly(anyGlobal._ethers.wordlists, name, lang);\n                    }\n                }\n            } catch (error) { }\n        }\n    }\n\n}\n\n","\"use strict\";\n\nimport { Wordlist } from \"./wordlist\";\n\n\nconst words = \"AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo\";\n\nlet wordlist: Array<string> = null;\n\n\nfunction loadWords(lang: Wordlist): void {\n    if (wordlist != null) { return; }\n    wordlist = words.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \");\n\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== \"0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60\") {\n        wordlist = null;\n        throw new Error(\"BIP39 Wordlist for en (English) FAILED\");\n    }\n}\n\nclass LangEn extends Wordlist {\n    constructor() {\n        super(\"en\");\n    }\n\n    getWord(index: number): string {\n        loadWords(this);\n        return wordlist[index];\n    }\n\n    getWordIndex(word: string): number {\n        loadWords(this);\n        return wordlist.indexOf(word);\n    }\n}\n\nconst langEn = new LangEn();\nWordlist.register(langEn);\n\nexport { langEn };\n","\"use strict\";\n\n// Wordlists\n// See: https://github.com/bitcoin/bips/blob/master/bip-0039/bip-0039-wordlists.md\n\n// Browser; only include English by default\n\nimport { Wordlist } from \"./wordlist\";\n\nimport { langEn as en } from \"./lang-en\";\n\nexport const wordlists: { [ locale: string ]: Wordlist } = {\n  en: en\n}\n","export const version = \"hdnode/5.7.0\";\n","\"use strict\";\n\n// See: https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\n// See: https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki\n\n\nimport { ExternallyOwnedAccount } from \"@ethersproject/abstract-signer\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { arrayify, BytesLike, concat, hexDataSlice, hexZeroPad, hexlify } from \"@ethersproject/bytes\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from \"@ethersproject/strings\";\nimport { pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { SigningKey } from \"@ethersproject/signing-key\";\nimport { computeHmac, ripemd160, sha256, SupportedAlgorithm } from \"@ethersproject/sha2\";\nimport { computeAddress } from \"@ethersproject/transactions\";\nimport { Wordlist, wordlists } from \"@ethersproject/wordlists\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst N = BigNumber.from(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\");\n\n\n// \"Bitcoin seed\"\nconst MasterSecret = toUtf8Bytes(\"Bitcoin seed\");\n\nconst HardenedBit = 0x80000000;\n\n// Returns a byte with the MSB bits set\nfunction getUpperMask(bits: number): number {\n   return ((1 << bits) - 1) << (8 - bits);\n}\n\n// Returns a byte with the LSB bits set\nfunction getLowerMask(bits: number): number {\n   return (1 << bits) - 1;\n}\n\nfunction bytes32(value: BigNumber | Uint8Array): string {\n    return hexZeroPad(hexlify(value), 32);\n}\n\nfunction base58check(data: Uint8Array): string {\n    return Base58.encode(concat([ data, hexDataSlice(sha256(sha256(data)), 0, 4) ]));\n}\n\nfunction getWordlist(wordlist: string | Wordlist): Wordlist {\n    if (wordlist == null) {\n        return wordlists[\"en\"];\n    }\n\n    if (typeof(wordlist) === \"string\") {\n        const words = wordlists[wordlist];\n        if (words == null) {\n            logger.throwArgumentError(\"unknown locale\", \"wordlist\", wordlist);\n        }\n        return words;\n    }\n\n    return wordlist;\n}\n\nconst _constructorGuard: any = {};\n\nexport const defaultPath = \"m/44'/60'/0'/0/0\";\n\nexport interface Mnemonic {\n    readonly phrase: string;\n    readonly path: string;\n    readonly locale: string;\n};\n\nexport class HDNode implements ExternallyOwnedAccount {\n    readonly privateKey: string;\n    readonly publicKey: string;\n\n    readonly fingerprint: string;\n    readonly parentFingerprint: string;\n\n    readonly address: string;\n\n    readonly mnemonic?: Mnemonic;\n    readonly path: string;\n\n    readonly chainCode: string;\n\n    readonly index: number;\n    readonly depth: number;\n\n    /**\n     *  This constructor should not be called directly.\n     *\n     *  Please use:\n     *   - fromMnemonic\n     *   - fromSeed\n     */\n    constructor(constructorGuard: any, privateKey: string, publicKey: string, parentFingerprint: string, chainCode: string, index: number, depth: number, mnemonicOrPath: Mnemonic | string) {\n        /* istanbul ignore if */\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"HDNode constructor cannot be called directly\");\n        }\n\n        if (privateKey) {\n            const signingKey = new SigningKey(privateKey);\n            defineReadOnly(this, \"privateKey\", signingKey.privateKey);\n            defineReadOnly(this, \"publicKey\", signingKey.compressedPublicKey);\n        } else {\n            defineReadOnly(this, \"privateKey\", null);\n            defineReadOnly(this, \"publicKey\", hexlify(publicKey));\n        }\n\n        defineReadOnly(this, \"parentFingerprint\", parentFingerprint);\n        defineReadOnly(this, \"fingerprint\", hexDataSlice(ripemd160(sha256(this.publicKey)), 0, 4));\n\n        defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n\n        defineReadOnly(this, \"chainCode\", chainCode);\n\n        defineReadOnly(this, \"index\", index);\n        defineReadOnly(this, \"depth\", depth);\n\n        if (mnemonicOrPath == null) {\n            // From a source that does not preserve the path (e.g. extended keys)\n            defineReadOnly(this, \"mnemonic\", null);\n            defineReadOnly(this, \"path\", null);\n\n        } else if (typeof(mnemonicOrPath) === \"string\") {\n            // From a source that does not preserve the mnemonic (e.g. neutered)\n            defineReadOnly(this, \"mnemonic\", null);\n            defineReadOnly(this, \"path\", mnemonicOrPath);\n\n        } else {\n            // From a fully qualified source\n            defineReadOnly(this, \"mnemonic\", mnemonicOrPath);\n            defineReadOnly(this, \"path\", mnemonicOrPath.path);\n        }\n    }\n\n    get extendedKey(): string {\n        // We only support the mainnet values for now, but if anyone needs\n        // testnet values, let me know. I believe current sentiment is that\n        // we should always use mainnet, and use BIP-44 to derive the network\n        //   - Mainnet: public=0x0488B21E, private=0x0488ADE4\n        //   - Testnet: public=0x043587CF, private=0x04358394\n\n        if (this.depth >= 256) { throw new Error(\"Depth too large!\"); }\n\n        return base58check(concat([\n            ((this.privateKey != null) ? \"0x0488ADE4\": \"0x0488B21E\"),\n            hexlify(this.depth),\n            this.parentFingerprint,\n            hexZeroPad(hexlify(this.index), 4),\n            this.chainCode,\n            ((this.privateKey != null) ? concat([ \"0x00\", this.privateKey ]): this.publicKey),\n        ]));\n    }\n\n    neuter(): HDNode {\n        return new HDNode(_constructorGuard, null, this.publicKey, this.parentFingerprint, this.chainCode, this.index, this.depth, this.path);\n    }\n\n    private _derive(index: number): HDNode {\n        if (index > 0xffffffff) { throw new Error(\"invalid index - \" + String(index)); }\n\n        // Base path\n        let path = this.path;\n        if (path) { path += \"/\" + (index & ~HardenedBit); }\n\n        const data = new Uint8Array(37);\n\n        if (index & HardenedBit) {\n            if (!this.privateKey) {\n                throw new Error(\"cannot derive child of neutered node\");\n            }\n\n            // Data = 0x00 || ser_256(k_par)\n            data.set(arrayify(this.privateKey), 1);\n\n            // Hardened path\n            if (path) { path += \"'\"; }\n\n        } else {\n            // Data = ser_p(point(k_par))\n            data.set(arrayify(this.publicKey));\n        }\n\n        // Data += ser_32(i)\n        for (let i = 24; i >= 0; i -= 8) { data[33 + (i >> 3)] = ((index >> (24 - i)) & 0xff); }\n\n        const I = arrayify(computeHmac(SupportedAlgorithm.sha512, this.chainCode, data));\n        const IL = I.slice(0, 32);\n        const IR = I.slice(32);\n\n        // The private key\n        let ki: string = null\n\n        // The public key\n        let Ki: string = null;\n\n        if (this.privateKey) {\n            ki = bytes32(BigNumber.from(IL).add(this.privateKey).mod(N));\n        } else {\n            const ek = new SigningKey(hexlify(IL));\n            Ki = ek._addPoint(this.publicKey);\n        }\n\n        let mnemonicOrPath: Mnemonic | string = path;\n\n        const srcMnemonic =  this.mnemonic;\n        if (srcMnemonic) {\n            mnemonicOrPath = Object.freeze({\n                phrase: srcMnemonic.phrase,\n                path: path,\n                locale: (srcMnemonic.locale || \"en\")\n            });\n        }\n\n        return new HDNode(_constructorGuard, ki, Ki, this.fingerprint, bytes32(IR), index, this.depth + 1, mnemonicOrPath);\n    }\n\n    derivePath(path: string): HDNode {\n        const components = path.split(\"/\");\n\n        if (components.length === 0 || (components[0] === \"m\" && this.depth !== 0)) {\n            throw new Error(\"invalid path - \" + path);\n        }\n\n        if (components[0] === \"m\") { components.shift(); }\n\n        let result: HDNode = this;\n        for (let i = 0; i < components.length; i++) {\n            const component = components[i];\n            if (component.match(/^[0-9]+'$/)) {\n                const index = parseInt(component.substring(0, component.length - 1));\n                if (index >= HardenedBit) { throw new Error(\"invalid path index - \" + component); }\n                result = result._derive(HardenedBit + index);\n            } else if (component.match(/^[0-9]+$/)) {\n                const index = parseInt(component);\n                if (index >= HardenedBit) { throw new Error(\"invalid path index - \" + component); }\n                result = result._derive(index);\n            } else {\n                throw new Error(\"invalid path component - \" + component);\n            }\n        }\n\n        return result;\n    }\n\n\n    static _fromSeed(seed: BytesLike, mnemonic: Mnemonic): HDNode {\n        const seedArray: Uint8Array = arrayify(seed);\n        if (seedArray.length < 16 || seedArray.length > 64) { throw new Error(\"invalid seed\"); }\n\n        const I: Uint8Array = arrayify(computeHmac(SupportedAlgorithm.sha512, MasterSecret, seedArray));\n\n        return new HDNode(_constructorGuard, bytes32(I.slice(0, 32)), null, \"0x00000000\", bytes32(I.slice(32)), 0, 0, mnemonic);\n    }\n\n    static fromMnemonic(mnemonic: string, password?: string, wordlist?: string | Wordlist): HDNode {\n\n        // If a locale name was passed in, find the associated wordlist\n        wordlist = getWordlist(wordlist);\n\n        // Normalize the case and spacing in the mnemonic (throws if the mnemonic is invalid)\n        mnemonic = entropyToMnemonic(mnemonicToEntropy(mnemonic, wordlist), wordlist);\n\n        return HDNode._fromSeed(mnemonicToSeed(mnemonic, password), {\n            phrase: mnemonic,\n            path: \"m\",\n            locale: wordlist.locale\n        });\n    }\n\n    static fromSeed(seed: BytesLike): HDNode {\n        return HDNode._fromSeed(seed, null);\n    }\n\n    static fromExtendedKey(extendedKey: string): HDNode {\n        const bytes = Base58.decode(extendedKey);\n\n        if (bytes.length !== 82 || base58check(bytes.slice(0, 78)) !== extendedKey) {\n            logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n        }\n\n        const depth = bytes[4];\n        const parentFingerprint = hexlify(bytes.slice(5, 9));\n        const index = parseInt(hexlify(bytes.slice(9, 13)).substring(2), 16);\n        const chainCode = hexlify(bytes.slice(13, 45));\n        const key = bytes.slice(45, 78);\n\n        switch (hexlify(bytes.slice(0, 4))) {\n            // Public Key\n            case \"0x0488b21e\": case \"0x043587cf\":\n                return new HDNode(_constructorGuard, null, hexlify(key), parentFingerprint, chainCode, index, depth, null);\n\n            // Private Key\n            case \"0x0488ade4\": case \"0x04358394 \":\n                if (key[0] !== 0) { break; }\n                return new HDNode(_constructorGuard, hexlify(key.slice(1)), null, parentFingerprint, chainCode, index, depth, null);\n        }\n\n        return logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n    }\n}\n\nexport function mnemonicToSeed(mnemonic: string, password?: string): string {\n    if (!password) { password = \"\"; }\n\n    const salt = toUtf8Bytes(\"mnemonic\" + password, UnicodeNormalizationForm.NFKD);\n\n    return pbkdf2(toUtf8Bytes(mnemonic, UnicodeNormalizationForm.NFKD), salt, 2048, 64, \"sha512\");\n}\n\nexport function mnemonicToEntropy(mnemonic: string, wordlist?: string | Wordlist): string {\n    wordlist = getWordlist(wordlist);\n\n    logger.checkNormalize();\n\n    const words = wordlist.split(mnemonic);\n    if ((words.length % 3) !== 0) { throw new Error(\"invalid mnemonic\"); }\n\n    const entropy = arrayify(new Uint8Array(Math.ceil(11 * words.length / 8)));\n\n    let offset = 0;\n    for (let i = 0; i < words.length; i++) {\n        let index = wordlist.getWordIndex(words[i].normalize(\"NFKD\"));\n        if (index === -1) { throw new Error(\"invalid mnemonic\"); }\n\n        for (let bit = 0; bit < 11; bit++) {\n            if (index & (1 << (10 - bit))) {\n                entropy[offset >> 3] |= (1 << (7 - (offset % 8)));\n            }\n            offset++;\n        }\n    }\n\n    const entropyBits = 32 * words.length / 3;\n\n    const checksumBits = words.length / 3;\n    const checksumMask = getUpperMask(checksumBits);\n\n    const checksum = arrayify(sha256(entropy.slice(0, entropyBits / 8)))[0] & checksumMask;\n\n    if (checksum !== (entropy[entropy.length - 1] & checksumMask)) {\n        throw new Error(\"invalid checksum\");\n    }\n\n    return hexlify(entropy.slice(0, entropyBits / 8));\n}\n\nexport function entropyToMnemonic(entropy: BytesLike, wordlist?: string | Wordlist): string {\n    wordlist = getWordlist(wordlist);\n\n    entropy = arrayify(entropy);\n\n    if ((entropy.length % 4) !== 0 || entropy.length < 16 || entropy.length > 32) {\n        throw new Error(\"invalid entropy\");\n    }\n\n    const indices: Array<number> = [ 0 ];\n\n    let remainingBits = 11;\n    for (let i = 0; i < entropy.length; i++) {\n\n        // Consume the whole byte (with still more to go)\n        if (remainingBits > 8) {\n            indices[indices.length - 1] <<= 8;\n            indices[indices.length - 1] |= entropy[i];\n\n            remainingBits -= 8;\n\n        // This byte will complete an 11-bit index\n        } else {\n            indices[indices.length - 1] <<= remainingBits;\n            indices[indices.length - 1] |= entropy[i] >> (8 - remainingBits);\n\n            // Start the next word\n            indices.push(entropy[i] & getLowerMask(8 - remainingBits));\n\n            remainingBits += 3;\n        }\n    }\n\n    // Compute the checksum bits\n    const checksumBits = entropy.length / 4;\n    const checksum = arrayify(sha256(entropy))[0] & getUpperMask(checksumBits);\n\n    // Shift the checksum into the word indices\n    indices[indices.length - 1] <<= checksumBits;\n    indices[indices.length - 1] |= (checksum >> (8 - checksumBits));\n\n    return wordlist.join(indices.map((index) => (<Wordlist>wordlist).getWord(index)));\n}\n\nexport function isValidMnemonic(mnemonic: string, wordlist?: Wordlist): boolean {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n        return true;\n    } catch (error) { }\n    return false;\n}\n\nexport function getAccountPath(index: number): string {\n    if (typeof(index) !== \"number\" || index < 0 || index >= HardenedBit || index % 1) {\n        logger.throwArgumentError(\"invalid account index\", \"index\", index);\n    }\n    return `m/44'/60'/${ index }'/0/0`;\n}\n","\"use strict\";\n\nimport { arrayify } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n// Debugging line for testing browser lib in node\n//const window = { crypto: { getRandomValues: () => { } } };\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis\nfunction getGlobal(): any {\n  if (typeof self !== 'undefined') { return self; }\n  if (typeof window !== 'undefined') { return window; }\n  if (typeof global !== 'undefined') { return global; }\n  throw new Error('unable to locate global object');\n};\n\nconst anyGlobal = getGlobal();\n\nlet crypto: any = anyGlobal.crypto || anyGlobal.msCrypto;\nif (!crypto || !crypto.getRandomValues) {\n\n    logger.warn(\"WARNING: Missing strong random number source\");\n\n    crypto = {\n        getRandomValues: function(buffer: Uint8Array): Uint8Array {\n            return logger.throwError(\"no secure random source avaialble\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"crypto.getRandomValues\"\n            });\n        }\n    };\n}\n\nexport function randomBytes(length: number): Uint8Array {\n    if (length <= 0 || length > 1024 || (length % 1) || length != length) {\n        logger.throwArgumentError(\"invalid length\", \"length\", length);\n    }\n\n    const result = new Uint8Array(length);\n    crypto.getRandomValues(result);\n    return arrayify(result);\n};\n","export const version = \"random/5.7.0\";\n","\"use strict\";\n\nexport function shuffled(array: Array<any>): Array<any> {\n    array = array.slice();\n\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const tmp = array[i];\n        array[i] = array[j];\n        array[j] = tmp;\n    }\n\n    return array;\n}\n","\"use strict\";\n\n(function(root) {\n\n    function checkInt(value) {\n        return (parseInt(value) === value);\n    }\n\n    function checkInts(arrayish) {\n        if (!checkInt(arrayish.length)) { return false; }\n\n        for (var i = 0; i < arrayish.length; i++) {\n            if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function coerceArray(arg, copy) {\n\n        // ArrayBuffer view\n        if (arg.buffer && ArrayBuffer.isView(arg) && arg.name === 'Uint8Array') {\n\n            if (copy) {\n                if (arg.slice) {\n                    arg = arg.slice();\n                } else {\n                    arg = Array.prototype.slice.call(arg);\n                }\n            }\n\n            return arg;\n        }\n\n        // It's an array; check it is a valid representation of a byte\n        if (Array.isArray(arg)) {\n            if (!checkInts(arg)) {\n                throw new Error('Array contains invalid value: ' + arg);\n            }\n\n            return new Uint8Array(arg);\n        }\n\n        // Something else, but behaves like an array (maybe a Buffer? Arguments?)\n        if (checkInt(arg.length) && checkInts(arg)) {\n            return new Uint8Array(arg);\n        }\n\n        throw new Error('unsupported array-like object');\n    }\n\n    function createArray(length) {\n        return new Uint8Array(length);\n    }\n\n    function copyArray(sourceArray, targetArray, targetStart, sourceStart, sourceEnd) {\n        if (sourceStart != null || sourceEnd != null) {\n            if (sourceArray.slice) {\n                sourceArray = sourceArray.slice(sourceStart, sourceEnd);\n            } else {\n                sourceArray = Array.prototype.slice.call(sourceArray, sourceStart, sourceEnd);\n            }\n        }\n        targetArray.set(sourceArray, targetStart);\n    }\n\n\n\n    var convertUtf8 = (function() {\n        function toBytes(text) {\n            var result = [], i = 0;\n            text = encodeURI(text);\n            while (i < text.length) {\n                var c = text.charCodeAt(i++);\n\n                // if it is a % sign, encode the following 2 bytes as a hex value\n                if (c === 37) {\n                    result.push(parseInt(text.substr(i, 2), 16))\n                    i += 2;\n\n                // otherwise, just the actual byte\n                } else {\n                    result.push(c)\n                }\n            }\n\n            return coerceArray(result);\n        }\n\n        function fromBytes(bytes) {\n            var result = [], i = 0;\n\n            while (i < bytes.length) {\n                var c = bytes[i];\n\n                if (c < 128) {\n                    result.push(String.fromCharCode(c));\n                    i++;\n                } else if (c > 191 && c < 224) {\n                    result.push(String.fromCharCode(((c & 0x1f) << 6) | (bytes[i + 1] & 0x3f)));\n                    i += 2;\n                } else {\n                    result.push(String.fromCharCode(((c & 0x0f) << 12) | ((bytes[i + 1] & 0x3f) << 6) | (bytes[i + 2] & 0x3f)));\n                    i += 3;\n                }\n            }\n\n            return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n    var convertHex = (function() {\n        function toBytes(text) {\n            var result = [];\n            for (var i = 0; i < text.length; i += 2) {\n                result.push(parseInt(text.substr(i, 2), 16));\n            }\n\n            return result;\n        }\n\n        // http://ixti.net/development/javascript/2011/11/11/base64-encodedecode-of-utf8-in-browser-with-js.html\n        var Hex = '0123456789abcdef';\n\n        function fromBytes(bytes) {\n                var result = [];\n                for (var i = 0; i < bytes.length; i++) {\n                    var v = bytes[i];\n                    result.push(Hex[(v & 0xf0) >> 4] + Hex[v & 0x0f]);\n                }\n                return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n\n    // Number of rounds by keysize\n    var numberOfRounds = {16: 10, 24: 12, 32: 14}\n\n    // Round constant words\n    var rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91];\n\n    // S-box and Inverse S-box (S is for Substitution)\n    var S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];\n    var Si =[0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d];\n\n    // Transformations for encryption\n    var T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];\n    var T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];\n    var T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];\n    var T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c];\n\n    // Transformations for decryption\n    var T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];\n    var T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];\n    var T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];\n    var T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0];\n\n    // Transformations for decryption key expansion\n    var U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];\n    var U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];\n    var U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];\n    var U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];\n\n    function convertToInt32(bytes) {\n        var result = [];\n        for (var i = 0; i < bytes.length; i += 4) {\n            result.push(\n                (bytes[i    ] << 24) |\n                (bytes[i + 1] << 16) |\n                (bytes[i + 2] <<  8) |\n                 bytes[i + 3]\n            );\n        }\n        return result;\n    }\n\n    var AES = function(key) {\n        if (!(this instanceof AES)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        Object.defineProperty(this, 'key', {\n            value: coerceArray(key, true)\n        });\n\n        this._prepare();\n    }\n\n\n    AES.prototype._prepare = function() {\n\n        var rounds = numberOfRounds[this.key.length];\n        if (rounds == null) {\n            throw new Error('invalid key size (must be 16, 24 or 32 bytes)');\n        }\n\n        // encryption round keys\n        this._Ke = [];\n\n        // decryption round keys\n        this._Kd = [];\n\n        for (var i = 0; i <= rounds; i++) {\n            this._Ke.push([0, 0, 0, 0]);\n            this._Kd.push([0, 0, 0, 0]);\n        }\n\n        var roundKeyCount = (rounds + 1) * 4;\n        var KC = this.key.length / 4;\n\n        // convert the key into ints\n        var tk = convertToInt32(this.key);\n\n        // copy values into round key arrays\n        var index;\n        for (var i = 0; i < KC; i++) {\n            index = i >> 2;\n            this._Ke[index][i % 4] = tk[i];\n            this._Kd[rounds - index][i % 4] = tk[i];\n        }\n\n        // key expansion (fips-197 section 5.2)\n        var rconpointer = 0;\n        var t = KC, tt;\n        while (t < roundKeyCount) {\n            tt = tk[KC - 1];\n            tk[0] ^= ((S[(tt >> 16) & 0xFF] << 24) ^\n                      (S[(tt >>  8) & 0xFF] << 16) ^\n                      (S[ tt        & 0xFF] <<  8) ^\n                       S[(tt >> 24) & 0xFF]        ^\n                      (rcon[rconpointer] << 24));\n            rconpointer += 1;\n\n            // key expansion (for non-256 bit)\n            if (KC != 8) {\n                for (var i = 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n\n            // key expansion for 256-bit keys is \"slightly different\" (fips-197)\n            } else {\n                for (var i = 1; i < (KC / 2); i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n                tt = tk[(KC / 2) - 1];\n\n                tk[KC / 2] ^= (S[ tt        & 0xFF]        ^\n                              (S[(tt >>  8) & 0xFF] <<  8) ^\n                              (S[(tt >> 16) & 0xFF] << 16) ^\n                              (S[(tt >> 24) & 0xFF] << 24));\n\n                for (var i = (KC / 2) + 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n            }\n\n            // copy values into round key arrays\n            var i = 0, r, c;\n            while (i < KC && t < roundKeyCount) {\n                r = t >> 2;\n                c = t % 4;\n                this._Ke[r][c] = tk[i];\n                this._Kd[rounds - r][c] = tk[i++];\n                t++;\n            }\n        }\n\n        // inverse-cipher-ify the decryption round key (fips-197 section 5.3)\n        for (var r = 1; r < rounds; r++) {\n            for (var c = 0; c < 4; c++) {\n                tt = this._Kd[r][c];\n                this._Kd[r][c] = (U1[(tt >> 24) & 0xFF] ^\n                                  U2[(tt >> 16) & 0xFF] ^\n                                  U3[(tt >>  8) & 0xFF] ^\n                                  U4[ tt        & 0xFF]);\n            }\n        }\n    }\n\n    AES.prototype.encrypt = function(plaintext) {\n        if (plaintext.length != 16) {\n            throw new Error('invalid plaintext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Ke.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(plaintext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Ke[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T1[(t[ i         ] >> 24) & 0xff] ^\n                        T2[(t[(i + 1) % 4] >> 16) & 0xff] ^\n                        T3[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T4[ t[(i + 3) % 4]        & 0xff] ^\n                        this._Ke[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Ke[rounds][i];\n            result[4 * i    ] = (S[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (S[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (S[ t[(i + 3) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n    AES.prototype.decrypt = function(ciphertext) {\n        if (ciphertext.length != 16) {\n            throw new Error('invalid ciphertext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Kd.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(ciphertext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Kd[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T5[(t[ i          ] >> 24) & 0xff] ^\n                        T6[(t[(i + 3) % 4] >> 16) & 0xff] ^\n                        T7[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T8[ t[(i + 1) % 4]        & 0xff] ^\n                        this._Kd[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Kd[rounds][i];\n            result[4 * i    ] = (Si[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (Si[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (Si[ t[(i + 1) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n\n    /**\n     *  Mode Of Operation - Electonic Codebook (ECB)\n     */\n    var ModeOfOperationECB = function(key) {\n        if (!(this instanceof ModeOfOperationECB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Electronic Code Block\";\n        this.name = \"ecb\";\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationECB.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n            block = this._aes.encrypt(block);\n            copyArray(block, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationECB.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n            copyArray(block, plaintext, i);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Block Chaining (CBC)\n     */\n    var ModeOfOperationCBC = function(key, iv) {\n        if (!(this instanceof ModeOfOperationCBC)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Block Chaining\";\n        this.name = \"cbc\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastCipherblock = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCBC.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n\n            for (var j = 0; j < 16; j++) {\n                block[j] ^= this._lastCipherblock[j];\n            }\n\n            this._lastCipherblock = this._aes.encrypt(block);\n            copyArray(this._lastCipherblock, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationCBC.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n\n            for (var j = 0; j < 16; j++) {\n                plaintext[i + j] = block[j] ^ this._lastCipherblock[j];\n            }\n\n            copyArray(ciphertext, this._lastCipherblock, 0, i, i + 16);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Feedback (CFB)\n     */\n    var ModeOfOperationCFB = function(key, iv, segmentSize) {\n        if (!(this instanceof ModeOfOperationCFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Feedback\";\n        this.name = \"cfb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 size)');\n        }\n\n        if (!segmentSize) { segmentSize = 1; }\n\n        this.segmentSize = segmentSize;\n\n        this._shiftRegister = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCFB.prototype.encrypt = function(plaintext) {\n        if ((plaintext.length % this.segmentSize) != 0) {\n            throw new Error('invalid plaintext size (must be segmentSize bytes)');\n        }\n\n        var encrypted = coerceArray(plaintext, true);\n\n        var xorSegment;\n        for (var i = 0; i < encrypted.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n            for (var j = 0; j < this.segmentSize; j++) {\n                encrypted[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(encrypted, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return encrypted;\n    }\n\n    ModeOfOperationCFB.prototype.decrypt = function(ciphertext) {\n        if ((ciphertext.length % this.segmentSize) != 0) {\n            throw new Error('invalid ciphertext size (must be segmentSize bytes)');\n        }\n\n        var plaintext = coerceArray(ciphertext, true);\n\n        var xorSegment;\n        for (var i = 0; i < plaintext.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n\n            for (var j = 0; j < this.segmentSize; j++) {\n                plaintext[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(ciphertext, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return plaintext;\n    }\n\n    /**\n     *  Mode Of Operation - Output Feedback (OFB)\n     */\n    var ModeOfOperationOFB = function(key, iv) {\n        if (!(this instanceof ModeOfOperationOFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Output Feedback\";\n        this.name = \"ofb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastPrecipher = coerceArray(iv, true);\n        this._lastPrecipherIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationOFB.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._lastPrecipherIndex === 16) {\n                this._lastPrecipher = this._aes.encrypt(this._lastPrecipher);\n                this._lastPrecipherIndex = 0;\n            }\n            encrypted[i] ^= this._lastPrecipher[this._lastPrecipherIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt;\n\n\n    /**\n     *  Counter object for CTR common mode of operation\n     */\n    var Counter = function(initialValue) {\n        if (!(this instanceof Counter)) {\n            throw Error('Counter must be instanitated with `new`');\n        }\n\n        // We allow 0, but anything false-ish uses the default 1\n        if (initialValue !== 0 && !initialValue) { initialValue = 1; }\n\n        if (typeof(initialValue) === 'number') {\n            this._counter = createArray(16);\n            this.setValue(initialValue);\n\n        } else {\n            this.setBytes(initialValue);\n        }\n    }\n\n    Counter.prototype.setValue = function(value) {\n        if (typeof(value) !== 'number' || parseInt(value) != value) {\n            throw new Error('invalid counter value (must be an integer)');\n        }\n\n        for (var index = 15; index >= 0; --index) {\n            this._counter[index] = value % 256;\n            value = value >> 8;\n        }\n    }\n\n    Counter.prototype.setBytes = function(bytes) {\n        bytes = coerceArray(bytes, true);\n\n        if (bytes.length != 16) {\n            throw new Error('invalid counter bytes size (must be 16 bytes)');\n        }\n\n        this._counter = bytes;\n    };\n\n    Counter.prototype.increment = function() {\n        for (var i = 15; i >= 0; i--) {\n            if (this._counter[i] === 255) {\n                this._counter[i] = 0;\n            } else {\n                this._counter[i]++;\n                break;\n            }\n        }\n    }\n\n\n    /**\n     *  Mode Of Operation - Counter (CTR)\n     */\n    var ModeOfOperationCTR = function(key, counter) {\n        if (!(this instanceof ModeOfOperationCTR)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Counter\";\n        this.name = \"ctr\";\n\n        if (!(counter instanceof Counter)) {\n            counter = new Counter(counter)\n        }\n\n        this._counter = counter;\n\n        this._remainingCounter = null;\n        this._remainingCounterIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCTR.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._remainingCounterIndex === 16) {\n                this._remainingCounter = this._aes.encrypt(this._counter._counter);\n                this._remainingCounterIndex = 0;\n                this._counter.increment();\n            }\n            encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt;\n\n\n    ///////////////////////\n    // Padding\n\n    // See:https://tools.ietf.org/html/rfc2315\n    function pkcs7pad(data) {\n        data = coerceArray(data, true);\n        var padder = 16 - (data.length % 16);\n        var result = createArray(data.length + padder);\n        copyArray(data, result);\n        for (var i = data.length; i < result.length; i++) {\n            result[i] = padder;\n        }\n        return result;\n    }\n\n    function pkcs7strip(data) {\n        data = coerceArray(data, true);\n        if (data.length < 16) { throw new Error('PKCS#7 invalid length'); }\n\n        var padder = data[data.length - 1];\n        if (padder > 16) { throw new Error('PKCS#7 padding byte out of range'); }\n\n        var length = data.length - padder;\n        for (var i = 0; i < padder; i++) {\n            if (data[length + i] !== padder) {\n                throw new Error('PKCS#7 invalid padding byte');\n            }\n        }\n\n        var result = createArray(length);\n        copyArray(data, result, 0, 0, length);\n        return result;\n    }\n\n    ///////////////////////\n    // Exporting\n\n\n    // The block cipher\n    var aesjs = {\n        AES: AES,\n        Counter: Counter,\n\n        ModeOfOperation: {\n            ecb: ModeOfOperationECB,\n            cbc: ModeOfOperationCBC,\n            cfb: ModeOfOperationCFB,\n            ofb: ModeOfOperationOFB,\n            ctr: ModeOfOperationCTR\n        },\n\n        utils: {\n            hex: convertHex,\n            utf8: convertUtf8\n        },\n\n        padding: {\n            pkcs7: {\n                pad: pkcs7pad,\n                strip: pkcs7strip\n            }\n        },\n\n        _arrayTest: {\n            coerceArray: coerceArray,\n            createArray: createArray,\n            copyArray: copyArray,\n        }\n    };\n\n\n    // node.js\n    if (typeof exports !== 'undefined') {\n        module.exports = aesjs\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define(aesjs);\n\n    // Web Browsers\n    } else {\n\n        // If there was an existing library at \"aesjs\" make sure it's still available\n        if (root.aesjs) {\n            aesjs._aesjs = root.aesjs;\n        }\n\n        root.aesjs = aesjs;\n    }\n\n\n})(this);\n","export const version = \"json-wallets/5.7.0\";\n","\"use strict\";\n\nimport { arrayify, Bytes, BytesLike, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from '@ethersproject/strings';\n\nexport function looseArrayify(hexString: string): Uint8Array {\n    if (typeof(hexString) === 'string' && hexString.substring(0, 2) !== '0x') {\n        hexString = '0x' + hexString;\n    }\n    return arrayify(hexString);\n}\n\nexport function zpad(value: String | number, length: number): String {\n    value = String(value);\n    while (value.length < length) { value = '0' + value; }\n    return value;\n}\n\nexport function getPassword(password: Bytes | string): Uint8Array {\n    if (typeof(password) === 'string') {\n        return toUtf8Bytes(password, UnicodeNormalizationForm.NFKC);\n    }\n    return arrayify(password);\n}\n\nexport function searchPath(object: any, path: string): string {\n    let currentChild = object;\n\n    const comps = path.toLowerCase().split('/');\n    for (let i = 0; i < comps.length; i++) {\n\n        // Search for a child object with a case-insensitive matching key\n        let matchingChild = null;\n        for (const key in currentChild) {\n             if (key.toLowerCase() === comps[i]) {\n                 matchingChild = currentChild[key];\n                 break;\n             }\n        }\n\n        // Didn't find one. :'(\n        if (matchingChild === null) {\n            return null;\n        }\n\n        // Now check this child...\n        currentChild = matchingChild;\n    }\n\n    return currentChild;\n}\n\n// See: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)\nexport function uuidV4(randomBytes: BytesLike): string {\n    const bytes = arrayify(randomBytes);\n\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n\n    const value = hexlify(bytes);\n\n    return [\n       value.substring(2, 10),\n       value.substring(10, 14),\n       value.substring(14, 18),\n       value.substring(18, 22),\n       value.substring(22, 34),\n    ].join(\"-\");\n}\n\n","\"use strict\";\n\nimport aes from \"aes-js\";\n\nimport { ExternallyOwnedAccount } from \"@ethersproject/abstract-signer\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify, Bytes } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { Description } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { getPassword, looseArrayify, searchPath } from \"./utils\";\n\nexport interface _CrowdsaleAccount {\n    address: string;\n    privateKey: string;\n\n    _isCrowdsaleAccount: boolean;\n}\n\nexport class CrowdsaleAccount extends Description<_CrowdsaleAccount> implements ExternallyOwnedAccount {\n    readonly address: string;\n    readonly privateKey: string;\n    readonly mnemonic?: string;\n    readonly path?: string;\n\n    readonly _isCrowdsaleAccount: boolean;\n\n    isCrowdsaleAccount(value: any): value is CrowdsaleAccount {\n        return !!(value && value._isCrowdsaleAccount);\n    }\n}\n\n// See: https://github.com/ethereum/pyethsaletool\nexport function decrypt(json: string, password: Bytes | string): ExternallyOwnedAccount {\n    const data = JSON.parse(json);\n\n    password = getPassword(password);\n\n    // Ethereum Address\n    const ethaddr = getAddress(searchPath(data, \"ethaddr\"));\n\n    // Encrypted Seed\n    const encseed = looseArrayify(searchPath(data, \"encseed\"));\n    if (!encseed || (encseed.length % 16) !== 0) {\n        logger.throwArgumentError(\"invalid encseed\", \"json\", json);\n    }\n\n    const key = arrayify(pbkdf2(password, password, 2000, 32, \"sha256\")).slice(0, 16);\n\n    const iv = encseed.slice(0, 16);\n    const encryptedSeed = encseed.slice(16);\n\n    // Decrypt the seed\n    const aesCbc = new aes.ModeOfOperation.cbc(key, iv);\n    const seed = aes.padding.pkcs7.strip(arrayify(aesCbc.decrypt(encryptedSeed)));\n\n    // This wallet format is weird... Convert the binary encoded hex to a string.\n    let seedHex = \"\";\n    for (let i = 0; i < seed.length; i++) {\n        seedHex += String.fromCharCode(seed[i]);\n    }\n\n    const seedHexBytes = toUtf8Bytes(seedHex);\n\n    const privateKey = keccak256(seedHexBytes);\n\n    return new CrowdsaleAccount ({\n        _isCrowdsaleAccount: true,\n        address: ethaddr,\n        privateKey: privateKey\n    });\n}\n\n","\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\n\n\nexport function isCrowdsaleWallet(json: string): boolean {\n    let data: any = null;\n    try {\n        data = JSON.parse(json);\n    } catch (error) { return false; }\n\n    return (data.encseed && data.ethaddr);\n}\n\nexport function isKeystoreWallet(json: string): boolean {\n    let data: any = null;\n    try {\n        data = JSON.parse(json);\n    } catch (error) { return false; }\n\n    if (!data.version || parseInt(data.version) !== data.version || parseInt(data.version) !== 3) {\n        return false;\n    }\n\n    // @TODO: Put more checks to make sure it has kdf, iv and all that good stuff\n    return true;\n}\n\n//export function isJsonWallet(json: string): boolean {\n//    return (isSecretStorageWallet(json) || isCrowdsaleWallet(json));\n//}\n\nexport function getJsonWalletAddress(json: string): string {\n    if (isCrowdsaleWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).ethaddr);\n        } catch (error) { return null; }\n    }\n\n    if (isKeystoreWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).address);\n        } catch (error) { return null; }\n    }\n\n    return null;\n}\n\n","\"use strict\";\n\n(function(root) {\n    const MAX_VALUE = 0x7fffffff;\n\n    // The SHA256 and PBKDF2 implementation are from scrypt-async-js:\n    // See: https://github.com/dchest/scrypt-async-js\n    function SHA256(m) {\n        const K = new Uint32Array([\n           0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,\n           0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,\n           0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,\n           0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n           0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152,\n           0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n           0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc,\n           0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n           0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819,\n           0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08,\n           0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f,\n           0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n           0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n       ]);\n\n        let h0 = 0x6a09e667, h1 = 0xbb67ae85, h2 = 0x3c6ef372, h3 = 0xa54ff53a;\n        let h4 = 0x510e527f, h5 = 0x9b05688c, h6 = 0x1f83d9ab, h7 = 0x5be0cd19;\n        const w = new Uint32Array(64);\n\n        function blocks(p) {\n            let off = 0, len = p.length;\n            while (len >= 64) {\n                let a = h0, b = h1, c = h2, d = h3, e = h4, f = h5, g = h6, h = h7, u, i, j, t1, t2;\n\n                for (i = 0; i < 16; i++) {\n                    j = off + i*4;\n                    w[i] = ((p[j] & 0xff)<<24) | ((p[j+1] & 0xff)<<16) |\n                    ((p[j+2] & 0xff)<<8) | (p[j+3] & 0xff);\n                }\n\n                for (i = 16; i < 64; i++) {\n                    u = w[i-2];\n                    t1 = ((u>>>17) | (u<<(32-17))) ^ ((u>>>19) | (u<<(32-19))) ^ (u>>>10);\n\n                    u = w[i-15];\n                    t2 = ((u>>>7) | (u<<(32-7))) ^ ((u>>>18) | (u<<(32-18))) ^ (u>>>3);\n\n                    w[i] = (((t1 + w[i-7]) | 0) + ((t2 + w[i-16]) | 0)) | 0;\n                }\n\n                for (i = 0; i < 64; i++) {\n                    t1 = ((((((e>>>6) | (e<<(32-6))) ^ ((e>>>11) | (e<<(32-11))) ^\n                             ((e>>>25) | (e<<(32-25)))) + ((e & f) ^ (~e & g))) | 0) +\n                          ((h + ((K[i] + w[i]) | 0)) | 0)) | 0;\n\n                    t2 = ((((a>>>2) | (a<<(32-2))) ^ ((a>>>13) | (a<<(32-13))) ^\n                           ((a>>>22) | (a<<(32-22)))) + ((a & b) ^ (a & c) ^ (b & c))) | 0;\n\n                    h = g;\n                    g = f;\n                    f = e;\n                    e = (d + t1) | 0;\n                    d = c;\n                    c = b;\n                    b = a;\n                    a = (t1 + t2) | 0;\n                }\n\n                h0 = (h0 + a) | 0;\n                h1 = (h1 + b) | 0;\n                h2 = (h2 + c) | 0;\n                h3 = (h3 + d) | 0;\n                h4 = (h4 + e) | 0;\n                h5 = (h5 + f) | 0;\n                h6 = (h6 + g) | 0;\n                h7 = (h7 + h) | 0;\n\n                off += 64;\n                len -= 64;\n            }\n        }\n\n        blocks(m);\n\n        let i, bytesLeft = m.length % 64,\n        bitLenHi = (m.length / 0x20000000) | 0,\n        bitLenLo = m.length << 3,\n        numZeros = (bytesLeft < 56) ? 56 : 120,\n        p = m.slice(m.length - bytesLeft, m.length);\n\n        p.push(0x80);\n        for (i = bytesLeft + 1; i < numZeros; i++) { p.push(0); }\n        p.push((bitLenHi >>> 24) & 0xff);\n        p.push((bitLenHi >>> 16) & 0xff);\n        p.push((bitLenHi >>> 8)  & 0xff);\n        p.push((bitLenHi >>> 0)  & 0xff);\n        p.push((bitLenLo >>> 24) & 0xff);\n        p.push((bitLenLo >>> 16) & 0xff);\n        p.push((bitLenLo >>> 8)  & 0xff);\n        p.push((bitLenLo >>> 0)  & 0xff);\n\n        blocks(p);\n\n        return [\n            (h0 >>> 24) & 0xff, (h0 >>> 16) & 0xff, (h0 >>> 8) & 0xff, (h0 >>> 0) & 0xff,\n            (h1 >>> 24) & 0xff, (h1 >>> 16) & 0xff, (h1 >>> 8) & 0xff, (h1 >>> 0) & 0xff,\n            (h2 >>> 24) & 0xff, (h2 >>> 16) & 0xff, (h2 >>> 8) & 0xff, (h2 >>> 0) & 0xff,\n            (h3 >>> 24) & 0xff, (h3 >>> 16) & 0xff, (h3 >>> 8) & 0xff, (h3 >>> 0) & 0xff,\n            (h4 >>> 24) & 0xff, (h4 >>> 16) & 0xff, (h4 >>> 8) & 0xff, (h4 >>> 0) & 0xff,\n            (h5 >>> 24) & 0xff, (h5 >>> 16) & 0xff, (h5 >>> 8) & 0xff, (h5 >>> 0) & 0xff,\n            (h6 >>> 24) & 0xff, (h6 >>> 16) & 0xff, (h6 >>> 8) & 0xff, (h6 >>> 0) & 0xff,\n            (h7 >>> 24) & 0xff, (h7 >>> 16) & 0xff, (h7 >>> 8) & 0xff, (h7 >>> 0) & 0xff\n        ];\n    }\n\n    function PBKDF2_HMAC_SHA256_OneIter(password, salt, dkLen) {\n        // compress password if it's longer than hash block length\n        password = (password.length <= 64) ? password : SHA256(password);\n\n        const innerLen = 64 + salt.length + 4;\n        const inner = new Array(innerLen);\n        const outerKey = new Array(64);\n\n        let i;\n        let dk = [];\n\n        // inner = (password ^ ipad) || salt || counter\n        for (i = 0; i < 64; i++) { inner[i] = 0x36; }\n        for (i = 0; i < password.length; i++) { inner[i] ^= password[i]; }\n        for (i = 0; i < salt.length; i++) { inner[64 + i] = salt[i]; }\n        for (i = innerLen - 4; i < innerLen; i++) { inner[i] = 0; }\n\n        // outerKey = password ^ opad\n        for (i = 0; i < 64; i++) outerKey[i] = 0x5c;\n        for (i = 0; i < password.length; i++) outerKey[i] ^= password[i];\n\n        // increments counter inside inner\n        function incrementCounter() {\n            for (let i = innerLen - 1; i >= innerLen - 4; i--) {\n                inner[i]++;\n                if (inner[i] <= 0xff) return;\n                inner[i] = 0;\n            }\n        }\n\n        // output blocks = SHA256(outerKey || SHA256(inner)) ...\n        while (dkLen >= 32) {\n            incrementCounter();\n            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))));\n            dkLen -= 32;\n        }\n        if (dkLen > 0) {\n            incrementCounter();\n            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))).slice(0, dkLen));\n        }\n\n        return dk;\n    }\n\n    // The following is an adaptation of scryptsy\n    // See: https://www.npmjs.com/package/scryptsy\n    function blockmix_salsa8(BY, Yi, r, x, _X) {\n        let i;\n\n        arraycopy(BY, (2 * r - 1) * 16, _X, 0, 16);\n        for (i = 0; i < 2 * r; i++) {\n            blockxor(BY, i * 16, _X, 16);\n            salsa20_8(_X, x);\n            arraycopy(_X, 0, BY, Yi + (i * 16), 16);\n        }\n\n        for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + (i * 2) * 16, BY, (i * 16), 16);\n        }\n\n        for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + (i * 2 + 1) * 16, BY, (i + r) * 16, 16);\n        }\n    }\n\n    function R(a, b) {\n        return (a << b) | (a >>> (32 - b));\n    }\n\n    function salsa20_8(B, x) {\n        arraycopy(B, 0, x, 0, 16);\n\n        for (let i = 8; i > 0; i -= 2) {\n            x[ 4] ^= R(x[ 0] + x[12], 7);\n            x[ 8] ^= R(x[ 4] + x[ 0], 9);\n            x[12] ^= R(x[ 8] + x[ 4], 13);\n            x[ 0] ^= R(x[12] + x[ 8], 18);\n            x[ 9] ^= R(x[ 5] + x[ 1], 7);\n            x[13] ^= R(x[ 9] + x[ 5], 9);\n            x[ 1] ^= R(x[13] + x[ 9], 13);\n            x[ 5] ^= R(x[ 1] + x[13], 18);\n            x[14] ^= R(x[10] + x[ 6], 7);\n            x[ 2] ^= R(x[14] + x[10], 9);\n            x[ 6] ^= R(x[ 2] + x[14], 13);\n            x[10] ^= R(x[ 6] + x[ 2], 18);\n            x[ 3] ^= R(x[15] + x[11], 7);\n            x[ 7] ^= R(x[ 3] + x[15], 9);\n            x[11] ^= R(x[ 7] + x[ 3], 13);\n            x[15] ^= R(x[11] + x[ 7], 18);\n            x[ 1] ^= R(x[ 0] + x[ 3], 7);\n            x[ 2] ^= R(x[ 1] + x[ 0], 9);\n            x[ 3] ^= R(x[ 2] + x[ 1], 13);\n            x[ 0] ^= R(x[ 3] + x[ 2], 18);\n            x[ 6] ^= R(x[ 5] + x[ 4], 7);\n            x[ 7] ^= R(x[ 6] + x[ 5], 9);\n            x[ 4] ^= R(x[ 7] + x[ 6], 13);\n            x[ 5] ^= R(x[ 4] + x[ 7], 18);\n            x[11] ^= R(x[10] + x[ 9], 7);\n            x[ 8] ^= R(x[11] + x[10], 9);\n            x[ 9] ^= R(x[ 8] + x[11], 13);\n            x[10] ^= R(x[ 9] + x[ 8], 18);\n            x[12] ^= R(x[15] + x[14], 7);\n            x[13] ^= R(x[12] + x[15], 9);\n            x[14] ^= R(x[13] + x[12], 13);\n            x[15] ^= R(x[14] + x[13], 18);\n        }\n\n        for (let i = 0; i < 16; ++i) {\n            B[i] += x[i];\n        }\n    }\n\n    // naive approach... going back to loop unrolling may yield additional performance\n    function blockxor(S, Si, D, len) {\n        for (let i = 0; i < len; i++) {\n            D[i] ^= S[Si + i]\n        }\n    }\n\n    function arraycopy(src, srcPos, dest, destPos, length) {\n        while (length--) {\n            dest[destPos++] = src[srcPos++];\n        }\n    }\n\n    function checkBufferish(o) {\n        if (!o || typeof(o.length) !== 'number') { return false; }\n\n        for (let i = 0; i < o.length; i++) {\n            const v = o[i];\n            if (typeof(v) !== 'number' || v % 1 || v < 0 || v >= 256) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function ensureInteger(value, name) {\n        if (typeof(value) !== \"number\" || (value % 1)) { throw new Error('invalid ' + name); }\n        return value;\n    }\n\n    // N = Cpu cost, r = Memory cost, p = parallelization cost\n    // callback(error, progress, key)\n    function _scrypt(password, salt, N, r, p, dkLen, callback) {\n\n        N = ensureInteger(N, 'N');\n        r = ensureInteger(r, 'r');\n        p = ensureInteger(p, 'p');\n\n        dkLen = ensureInteger(dkLen, 'dkLen');\n\n        if (N === 0 || (N & (N - 1)) !== 0) { throw new Error('N must be power of 2'); }\n\n        if (N > MAX_VALUE / 128 / r) { throw new Error('N too large'); }\n        if (r > MAX_VALUE / 128 / p) { throw new Error('r too large'); }\n\n        if (!checkBufferish(password)) {\n            throw new Error('password must be an array or buffer');\n        }\n        password = Array.prototype.slice.call(password);\n\n        if (!checkBufferish(salt)) {\n            throw new Error('salt must be an array or buffer');\n        }\n        salt = Array.prototype.slice.call(salt);\n\n        let b = PBKDF2_HMAC_SHA256_OneIter(password, salt, p * 128 * r);\n        const B = new Uint32Array(p * 32 * r)\n        for (let i = 0; i < B.length; i++) {\n            const j = i * 4;\n            B[i] = ((b[j + 3] & 0xff) << 24) |\n                   ((b[j + 2] & 0xff) << 16) |\n                   ((b[j + 1] & 0xff) << 8) |\n                   ((b[j + 0] & 0xff) << 0);\n        }\n\n        const XY = new Uint32Array(64 * r);\n        const V = new Uint32Array(32 * r * N);\n\n        const Yi = 32 * r;\n\n        // scratch space\n        const x = new Uint32Array(16);       // salsa20_8\n        const _X = new Uint32Array(16);      // blockmix_salsa8\n\n        const totalOps = p * N * 2;\n        let currentOp = 0;\n        let lastPercent10 = null;\n\n        // Set this to true to abandon the scrypt on the next step\n        let stop = false;\n\n        // State information\n        let state = 0;\n        let i0 = 0, i1;\n        let Bi;\n\n        // How many blockmix_salsa8 can we do per step?\n        const limit = callback ? parseInt(1000 / r): 0xffffffff;\n\n        // Trick from scrypt-async; if there is a setImmediate shim in place, use it\n        const nextTick = (typeof(setImmediate) !== 'undefined') ? setImmediate : setTimeout;\n\n        // This is really all I changed; making scryptsy a state machine so we occasionally\n        // stop and give other evnts on the evnt loop a chance to run. ~RicMoo\n        const incrementalSMix = function() {\n            if (stop) {\n                return callback(new Error('cancelled'), currentOp / totalOps);\n            }\n\n            let steps;\n\n            switch (state) {\n                case 0:\n                    // for (var i = 0; i < p; i++)...\n                    Bi = i0 * 32 * r;\n\n                    arraycopy(B, Bi, XY, 0, Yi);                       // ROMix - 1\n\n                    state = 1;                                         // Move to ROMix 2\n                    i1 = 0;\n\n                    // Fall through\n\n                case 1:\n\n                    // Run up to 1000 steps of the first inner smix loop\n                    steps = N - i1;\n                    if (steps > limit) { steps = limit; }\n                    for (let i = 0; i < steps; i++) {                  // ROMix - 2\n                        arraycopy(XY, 0, V, (i1 + i) * Yi, Yi)         // ROMix - 3\n                        blockmix_salsa8(XY, Yi, r, x, _X);             // ROMix - 4\n                    }\n\n                    // for (var i = 0; i < N; i++)\n                    i1 += steps;\n                    currentOp += steps;\n\n                    if (callback) {\n                        // Call the callback with the progress (optionally stopping us)\n                        const percent10 = parseInt(1000 * currentOp / totalOps);\n                        if (percent10 !== lastPercent10) {\n                            stop = callback(null, currentOp / totalOps);\n                            if (stop) { break; }\n                            lastPercent10 = percent10;\n                        }\n                    }\n\n                    if (i1 < N) { break; }\n\n                    i1 = 0;                                          // Move to ROMix 6\n                    state = 2;\n\n                    // Fall through\n\n                case 2:\n\n                    // Run up to 1000 steps of the second inner smix loop\n                    steps = N - i1;\n                    if (steps > limit) { steps = limit; }\n                    for (let i = 0; i < steps; i++) {                // ROMix - 6\n                        const offset = (2 * r - 1) * 16;             // ROMix - 7\n                        const j = XY[offset] & (N - 1);\n                        blockxor(V, j * Yi, XY, Yi);                 // ROMix - 8 (inner)\n                        blockmix_salsa8(XY, Yi, r, x, _X);           // ROMix - 9 (outer)\n                    }\n\n                    // for (var i = 0; i < N; i++)...\n                    i1 += steps;\n                    currentOp += steps;\n\n                    // Call the callback with the progress (optionally stopping us)\n                    if (callback) {\n                        const percent10 = parseInt(1000 * currentOp / totalOps);\n                        if (percent10 !== lastPercent10) {\n                            stop = callback(null, currentOp / totalOps);\n                            if (stop) { break; }\n                            lastPercent10 = percent10;\n                        }\n                    }\n\n                    if (i1 < N) { break; }\n\n                    arraycopy(XY, 0, B, Bi, Yi);                     // ROMix - 10\n\n                    // for (var i = 0; i < p; i++)...\n                    i0++;\n                    if (i0 < p) {\n                        state = 0;\n                        break;\n                    }\n\n                    b = [];\n                    for (let i = 0; i < B.length; i++) {\n                        b.push((B[i] >>  0) & 0xff);\n                        b.push((B[i] >>  8) & 0xff);\n                        b.push((B[i] >> 16) & 0xff);\n                        b.push((B[i] >> 24) & 0xff);\n                    }\n\n                    const derivedKey = PBKDF2_HMAC_SHA256_OneIter(password, b, dkLen);\n\n                    // Send the result to the callback\n                    if (callback) { callback(null, 1.0, derivedKey); }\n\n                    // Done; don't break (which would reschedule)\n                    return derivedKey;\n            }\n\n            // Schedule the next steps\n            if (callback) { nextTick(incrementalSMix); }\n        }\n\n        // Run the smix state machine until completion\n        if (!callback) {\n            while (true) {\n                const derivedKey = incrementalSMix();\n                if (derivedKey != undefined) { return derivedKey; }\n            }\n        }\n\n        // Bootstrap the async incremental smix\n        incrementalSMix();\n    }\n\n    const lib = {\n        scrypt: function(password, salt, N, r, p, dkLen, progressCallback) {\n            return new Promise(function(resolve, reject) {\n                let lastProgress = 0;\n                if (progressCallback) { progressCallback(0); }\n                _scrypt(password, salt, N, r, p, dkLen, function(error, progress, key) {\n                    if (error) {\n                        reject(error);\n                    } else if (key) {\n                        if (progressCallback && lastProgress !== 1) {\n                            progressCallback(1);\n                        }\n                        resolve(new Uint8Array(key));\n                    } else if (progressCallback && progress !== lastProgress) {\n                        lastProgress = progress;\n                        return progressCallback(progress);\n                    }\n                });\n            });\n        },\n        syncScrypt: function(password, salt, N, r, p, dkLen) {\n            return new Uint8Array(_scrypt(password, salt, N, r, p, dkLen));\n        }\n    };\n\n    // node.js\n    if (typeof(exports) !== 'undefined') {\n       module.exports = lib;\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define(lib);\n\n    // Web Browsers\n    } else if (root) {\n\n        // If there was an existing library \"scrypt\", make sure it is still available\n        if (root.scrypt) {\n            root._scrypt = root.scrypt;\n        }\n\n        root.scrypt = lib;\n    }\n\n})(this);\n","\"use strict\";\n\nimport aes from \"aes-js\";\nimport scrypt from \"scrypt-js\";\n\nimport { ExternallyOwnedAccount } from \"@ethersproject/abstract-signer\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify, Bytes, BytesLike, concat, hexlify } from \"@ethersproject/bytes\";\nimport { defaultPath, entropyToMnemonic, HDNode, Mnemonic, mnemonicToEntropy } from \"@ethersproject/hdnode\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 as _pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { randomBytes } from \"@ethersproject/random\";\nimport { Description } from \"@ethersproject/properties\";\nimport { computeAddress } from \"@ethersproject/transactions\";\n\nimport { getPassword, looseArrayify, searchPath, uuidV4, zpad } from \"./utils\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n// Exported Types\n\nfunction hasMnemonic(value: any): value is { mnemonic: Mnemonic } {\n    return (value != null && value.mnemonic && value.mnemonic.phrase);\n}\n\nexport interface _KeystoreAccount {\n    address: string;\n    privateKey: string;\n    mnemonic?: Mnemonic;\n\n    _isKeystoreAccount: boolean;\n}\n\nexport class KeystoreAccount extends Description<_KeystoreAccount> implements ExternallyOwnedAccount {\n    readonly address: string;\n    readonly privateKey: string;\n    readonly mnemonic?: Mnemonic;\n\n    readonly _isKeystoreAccount: boolean;\n\n    isKeystoreAccount(value: any): value is KeystoreAccount {\n        return !!(value && value._isKeystoreAccount);\n    }\n}\n\nexport type ProgressCallback = (percent: number) => void;\n\nexport type EncryptOptions = {\n   iv?: BytesLike;\n   entropy?: BytesLike;\n   client?: string;\n   salt?: BytesLike;\n   uuid?: string;\n   scrypt?: {\n       N?: number;\n       r?: number;\n       p?: number;\n   }\n}\n\nfunction _decrypt(data: any, key: Uint8Array, ciphertext: Uint8Array): Uint8Array {\n    const cipher = searchPath(data, \"crypto/cipher\");\n    if (cipher === \"aes-128-ctr\") {\n        const iv = looseArrayify(searchPath(data, \"crypto/cipherparams/iv\"))\n        const counter = new aes.Counter(iv);\n\n        const aesCtr = new aes.ModeOfOperation.ctr(key, counter);\n\n        return arrayify(aesCtr.decrypt(ciphertext));\n    }\n\n    return null;\n}\n\nfunction _getAccount(data: any, key: Uint8Array): KeystoreAccount {\n    const ciphertext = looseArrayify(searchPath(data, \"crypto/ciphertext\"));\n\n    const computedMAC = hexlify(keccak256(concat([ key.slice(16, 32), ciphertext ]))).substring(2);\n    if (computedMAC !== searchPath(data, \"crypto/mac\").toLowerCase()) {\n        throw new Error(\"invalid password\");\n    }\n\n    const privateKey = _decrypt(data, key.slice(0, 16), ciphertext);\n\n    if (!privateKey) {\n        logger.throwError(\"unsupported cipher\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"decrypt\"\n        });\n    }\n\n    const mnemonicKey = key.slice(32, 64);\n\n    const address = computeAddress(privateKey);\n    if (data.address) {\n        let check = data.address.toLowerCase();\n        if (check.substring(0, 2) !== \"0x\") { check = \"0x\" + check; }\n\n        if (getAddress(check) !== address) {\n            throw new Error(\"address mismatch\");\n        }\n    }\n\n    const account: _KeystoreAccount = {\n        _isKeystoreAccount: true,\n        address: address,\n        privateKey: hexlify(privateKey)\n    };\n\n    // Version 0.1 x-ethers metadata must contain an encrypted mnemonic phrase\n    if (searchPath(data, \"x-ethers/version\") === \"0.1\") {\n        const mnemonicCiphertext = looseArrayify(searchPath(data, \"x-ethers/mnemonicCiphertext\"));\n        const mnemonicIv = looseArrayify(searchPath(data, \"x-ethers/mnemonicCounter\"));\n\n        const mnemonicCounter = new aes.Counter(mnemonicIv);\n        const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n\n        const path = searchPath(data, \"x-ethers/path\") || defaultPath;\n        const locale = searchPath(data, \"x-ethers/locale\") || \"en\";\n\n        const entropy = arrayify(mnemonicAesCtr.decrypt(mnemonicCiphertext));\n\n        try {\n            const mnemonic = entropyToMnemonic(entropy, locale);\n            const node = HDNode.fromMnemonic(mnemonic, null, locale).derivePath(path);\n\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n\n            account.mnemonic = node.mnemonic;\n\n        } catch (error) {\n            // If we don't have the locale wordlist installed to\n            // read this mnemonic, just bail and don't set the\n            // mnemonic\n            if (error.code !== Logger.errors.INVALID_ARGUMENT || error.argument !== \"wordlist\") {\n                throw error;\n            }\n        }\n    }\n\n    return new KeystoreAccount(account);\n}\n\ntype ScryptFunc<T> = (pw: Uint8Array, salt: Uint8Array, n: number, r: number, p: number, dkLen: number, callback?: ProgressCallback) => T;\ntype Pbkdf2Func<T> = (pw: Uint8Array, salt: Uint8Array, c: number, dkLen: number, prfFunc: string) => T;\n\nfunction pbkdf2Sync(passwordBytes: Uint8Array, salt: Uint8Array, count: number, dkLen: number, prfFunc: string): Uint8Array {\n    return arrayify(_pbkdf2(passwordBytes, salt, count, dkLen, prfFunc));\n}\n\nfunction pbkdf2(passwordBytes: Uint8Array, salt: Uint8Array, count: number, dkLen: number, prfFunc: string): Promise<Uint8Array> {\n    return Promise.resolve(pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc));\n}\n\nfunction _computeKdfKey<T>(data: any, password: Bytes | string, pbkdf2Func: Pbkdf2Func<T>, scryptFunc: ScryptFunc<T>, progressCallback?: ProgressCallback): T {\n    const passwordBytes = getPassword(password);\n\n    const kdf = searchPath(data, \"crypto/kdf\");\n\n    if (kdf && typeof(kdf) === \"string\") {\n        const throwError = function(name: string, value: any): never {\n            return logger.throwArgumentError(\"invalid key-derivation function parameters\", name, value);\n        }\n\n        if (kdf.toLowerCase() === \"scrypt\") {\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n            const N = parseInt(searchPath(data, \"crypto/kdfparams/n\"));\n            const r = parseInt(searchPath(data, \"crypto/kdfparams/r\"));\n            const p = parseInt(searchPath(data, \"crypto/kdfparams/p\"));\n\n            // Check for all required parameters\n            if (!N || !r || !p) { throwError(\"kdf\", kdf); }\n\n            // Make sure N is a power of 2\n            if ((N & (N - 1)) !== 0) { throwError(\"N\", N); }\n\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) { throwError(\"dklen\", dkLen); }\n\n            return scryptFunc(passwordBytes, salt, N, r, p, 64, progressCallback);\n\n        } else if (kdf.toLowerCase() === \"pbkdf2\") {\n\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n\n            let prfFunc: string = null;\n            const prf = searchPath(data, \"crypto/kdfparams/prf\");\n            if (prf === \"hmac-sha256\") {\n                prfFunc = \"sha256\";\n            } else if (prf === \"hmac-sha512\") {\n                prfFunc = \"sha512\";\n            } else {\n                throwError(\"prf\", prf);\n            }\n\n            const count = parseInt(searchPath(data, \"crypto/kdfparams/c\"));\n\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) { throwError(\"dklen\", dkLen); }\n\n            return pbkdf2Func(passwordBytes, salt, count, dkLen, prfFunc);\n        }\n    }\n\n    return logger.throwArgumentError(\"unsupported key-derivation function\", \"kdf\", kdf);\n}\n\n\nexport function decryptSync(json: string, password: Bytes | string): KeystoreAccount {\n    const data = JSON.parse(json);\n\n    const key = _computeKdfKey(data, password, pbkdf2Sync, scrypt.syncScrypt);\n    return _getAccount(data, key);\n}\n\nexport async function decrypt(json: string, password: Bytes | string, progressCallback?: ProgressCallback): Promise<KeystoreAccount> {\n    const data = JSON.parse(json);\n\n    const key = await _computeKdfKey(data, password, pbkdf2, scrypt.scrypt, progressCallback);\n    return _getAccount(data, key);\n}\n\n\nexport function encrypt(account: ExternallyOwnedAccount, password: Bytes | string, options?: EncryptOptions, progressCallback?: ProgressCallback): Promise<string> {\n\n    try {\n        // Check the address matches the private key\n        if (getAddress(account.address) !== computeAddress(account.privateKey)) {\n            throw new Error(\"address/privateKey mismatch\");\n        }\n\n        // Check the mnemonic (if any) matches the private key\n        if (hasMnemonic(account)) {\n            const mnemonic = account.mnemonic;\n            const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path || defaultPath);\n\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n        }\n\n    } catch (e) {\n        return Promise.reject(e);\n    }\n\n    // The options are optional, so adjust the call as needed\n    if (typeof(options) === \"function\" && !progressCallback) {\n        progressCallback = options;\n        options = {};\n    }\n    if (!options) { options = {}; }\n\n    const privateKey: Uint8Array = arrayify(account.privateKey);\n    const passwordBytes = getPassword(password);\n\n    let entropy: Uint8Array = null\n    let path: string = null;\n    let locale: string = null;\n    if (hasMnemonic(account)) {\n        const srcMnemonic = account.mnemonic;\n        entropy = arrayify(mnemonicToEntropy(srcMnemonic.phrase, srcMnemonic.locale || \"en\"));\n        path = srcMnemonic.path || defaultPath;\n        locale = srcMnemonic.locale || \"en\";\n    }\n\n    let client = options.client;\n    if (!client) { client = \"ethers.js\"; }\n\n    // Check/generate the salt\n    let salt: Uint8Array = null;\n    if (options.salt) {\n        salt = arrayify(options.salt);\n    } else {\n        salt = randomBytes(32);;\n    }\n\n    // Override initialization vector\n    let iv: Uint8Array = null;\n    if (options.iv) {\n        iv = arrayify(options.iv);\n        if (iv.length !== 16) { throw new Error(\"invalid iv\"); }\n    } else {\n       iv = randomBytes(16);\n    }\n\n    // Override the uuid\n    let uuidRandom: Uint8Array = null;\n    if (options.uuid) {\n        uuidRandom = arrayify(options.uuid);\n        if (uuidRandom.length !== 16) { throw new Error(\"invalid uuid\"); }\n    } else {\n        uuidRandom = randomBytes(16);\n    }\n\n    // Override the scrypt password-based key derivation function parameters\n    let N = (1 << 17), r = 8, p = 1;\n    if (options.scrypt) {\n        if (options.scrypt.N) { N = options.scrypt.N; }\n        if (options.scrypt.r) { r = options.scrypt.r; }\n        if (options.scrypt.p) { p = options.scrypt.p; }\n    }\n\n    // We take 64 bytes:\n    //   - 32 bytes   As normal for the Web3 secret storage (derivedKey, macPrefix)\n    //   - 32 bytes   AES key to encrypt mnemonic with (required here to be Ethers Wallet)\n    return scrypt.scrypt(passwordBytes, salt, N, r, p, 64, progressCallback).then((key) => {\n        key = arrayify(key);\n\n        // This will be used to encrypt the wallet (as per Web3 secret storage)\n        const derivedKey = key.slice(0, 16);\n        const macPrefix = key.slice(16, 32);\n\n        // This will be used to encrypt the mnemonic phrase (if any)\n        const mnemonicKey = key.slice(32, 64);\n\n        // Encrypt the private key\n        const counter = new aes.Counter(iv);\n        const aesCtr = new aes.ModeOfOperation.ctr(derivedKey, counter);\n        const ciphertext = arrayify(aesCtr.encrypt(privateKey));\n\n        // Compute the message authentication code, used to check the password\n        const mac = keccak256(concat([macPrefix, ciphertext]))\n\n        // See: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\n        const data: { [key: string]: any } = {\n            address: account.address.substring(2).toLowerCase(),\n            id: uuidV4(uuidRandom),\n            version: 3,\n            crypto: {\n                cipher: \"aes-128-ctr\",\n                cipherparams: {\n                    iv: hexlify(iv).substring(2),\n                },\n                ciphertext: hexlify(ciphertext).substring(2),\n                kdf: \"scrypt\",\n                kdfparams: {\n                    salt: hexlify(salt).substring(2),\n                    n: N,\n                    dklen: 32,\n                    p: p,\n                    r: r\n                },\n                mac: mac.substring(2)\n            }\n        };\n\n        // If we have a mnemonic, encrypt it into the JSON wallet\n        if (entropy) {\n            const mnemonicIv = randomBytes(16);\n            const mnemonicCounter = new aes.Counter(mnemonicIv);\n            const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n            const mnemonicCiphertext = arrayify(mnemonicAesCtr.encrypt(entropy));\n            const now = new Date();\n            const timestamp = (now.getUTCFullYear() + \"-\" +\n                               zpad(now.getUTCMonth() + 1, 2) + \"-\" +\n                               zpad(now.getUTCDate(), 2) + \"T\" +\n                               zpad(now.getUTCHours(), 2) + \"-\" +\n                               zpad(now.getUTCMinutes(), 2) + \"-\" +\n                               zpad(now.getUTCSeconds(), 2) + \".0Z\"\n                              );\n            data[\"x-ethers\"] = {\n                client: client,\n                gethFilename: (\"UTC--\" + timestamp + \"--\" + data.address),\n                mnemonicCounter: hexlify(mnemonicIv).substring(2),\n                mnemonicCiphertext: hexlify(mnemonicCiphertext).substring(2),\n                path: path,\n                locale: locale,\n                version: \"0.1\"\n            };\n        }\n\n        return JSON.stringify(data);\n    });\n}\n","\"use strict\";\n\nimport { Bytes } from \"@ethersproject/bytes\";\nimport { ExternallyOwnedAccount } from \"@ethersproject/abstract-signer\";\n\nimport { decrypt as decryptCrowdsale } from \"./crowdsale\";\nimport { getJsonWalletAddress, isCrowdsaleWallet, isKeystoreWallet } from \"./inspect\";\nimport { decrypt as decryptKeystore, decryptSync as decryptKeystoreSync, encrypt as encryptKeystore, EncryptOptions, ProgressCallback } from \"./keystore\";\n\nfunction decryptJsonWallet(json: string, password: Bytes | string, progressCallback?: ProgressCallback): Promise<ExternallyOwnedAccount> {\n    if (isCrowdsaleWallet(json)) {\n        if (progressCallback) { progressCallback(0); }\n        const account = decryptCrowdsale(json, password)\n        if (progressCallback) { progressCallback(1); }\n        return Promise.resolve(account);\n    }\n\n    if (isKeystoreWallet(json)) {\n        return decryptKeystore(json, password, progressCallback);\n    }\n\n    return Promise.reject(new Error(\"invalid JSON wallet\"));\n}\n\nfunction decryptJsonWalletSync(json: string, password: Bytes | string): ExternallyOwnedAccount {\n    if (isCrowdsaleWallet(json)) {\n        return decryptCrowdsale(json, password)\n    }\n\n    if (isKeystoreWallet(json)) {\n        return decryptKeystoreSync(json, password);\n    }\n\n    throw new Error(\"invalid JSON wallet\");\n}\n\nexport {\n    decryptCrowdsale,\n\n    decryptKeystore,\n    decryptKeystoreSync,\n    encryptKeystore,\n\n    isCrowdsaleWallet,\n    isKeystoreWallet,\n    getJsonWalletAddress,\n\n    decryptJsonWallet,\n    decryptJsonWalletSync,\n\n    ProgressCallback,\n    EncryptOptions,\n};\n","\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { Provider, TransactionRequest } from \"@ethersproject/abstract-provider\";\nimport { ExternallyOwnedAccount, Signer, TypedDataDomain, TypedDataField, TypedDataSigner } from \"@ethersproject/abstract-signer\";\nimport { arrayify, Bytes, BytesLike, concat, hexDataSlice, isHexString, joinSignature, SignatureLike } from \"@ethersproject/bytes\";\nimport { hashMessage, _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { defaultPath, HDNode, entropyToMnemonic, Mnemonic } from \"@ethersproject/hdnode\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { randomBytes } from \"@ethersproject/random\";\nimport { SigningKey } from \"@ethersproject/signing-key\";\nimport { decryptJsonWallet, decryptJsonWalletSync, encryptKeystore, ProgressCallback } from \"@ethersproject/json-wallets\";\nimport { computeAddress, recoverAddress, serialize, UnsignedTransaction } from \"@ethersproject/transactions\";\nimport { Wordlist } from \"@ethersproject/wordlists\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction isAccount(value: any): value is ExternallyOwnedAccount {\n    return (value != null && isHexString(value.privateKey, 32) && value.address != null);\n}\n\nfunction hasMnemonic(value: any): value is { mnemonic: Mnemonic } {\n    const mnemonic = value.mnemonic;\n    return (mnemonic && mnemonic.phrase);\n}\n\nexport class Wallet extends Signer implements ExternallyOwnedAccount, TypedDataSigner {\n\n    readonly address: string;\n    readonly provider: Provider;\n\n    // Wrapping the _signingKey and _mnemonic in a getter function prevents\n    // leaking the private key in console.log; still, be careful! :)\n    readonly _signingKey: () => SigningKey;\n    readonly _mnemonic: () => Mnemonic;\n\n    constructor(privateKey: BytesLike | ExternallyOwnedAccount | SigningKey, provider?: Provider) {\n        super();\n\n        if (isAccount(privateKey)) {\n            const signingKey = new SigningKey(privateKey.privateKey);\n            defineReadOnly(this, \"_signingKey\", () => signingKey);\n            defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n\n            if (this.address !== getAddress(privateKey.address)) {\n                logger.throwArgumentError(\"privateKey/address mismatch\", \"privateKey\", \"[REDACTED]\");\n            }\n\n            if (hasMnemonic(privateKey)) {\n                const srcMnemonic = privateKey.mnemonic;\n                defineReadOnly(this, \"_mnemonic\", () => (\n                    {\n                        phrase: srcMnemonic.phrase,\n                        path: srcMnemonic.path || defaultPath,\n                        locale: srcMnemonic.locale || \"en\"\n                    }\n                ));\n                const mnemonic = this.mnemonic;\n                const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path);\n                if (computeAddress(node.privateKey) !== this.address) {\n                    logger.throwArgumentError(\"mnemonic/address mismatch\", \"privateKey\", \"[REDACTED]\");\n                }\n            } else {\n                defineReadOnly(this, \"_mnemonic\", (): Mnemonic => null);\n            }\n\n\n        } else {\n            if (SigningKey.isSigningKey(privateKey)) {\n                /* istanbul ignore if */\n                if (privateKey.curve !== \"secp256k1\") {\n                    logger.throwArgumentError(\"unsupported curve; must be secp256k1\", \"privateKey\", \"[REDACTED]\");\n                }\n                defineReadOnly(this, \"_signingKey\", () => (<SigningKey>privateKey));\n\n            } else {\n                // A lot of common tools do not prefix private keys with a 0x (see: #1166)\n                if (typeof(privateKey) === \"string\") {\n                    if (privateKey.match(/^[0-9a-f]*$/i) && privateKey.length === 64) {\n                        privateKey = \"0x\" + privateKey;\n                    }\n                }\n\n                const signingKey = new SigningKey(privateKey);\n                defineReadOnly(this, \"_signingKey\", () => signingKey);\n            }\n\n            defineReadOnly(this, \"_mnemonic\", (): Mnemonic => null);\n            defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n        }\n\n        /* istanbul ignore if */\n        if (provider && !Provider.isProvider(provider)) {\n            logger.throwArgumentError(\"invalid provider\", \"provider\", provider);\n        }\n\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n\n    get mnemonic(): Mnemonic { return this._mnemonic(); }\n    get privateKey(): string { return this._signingKey().privateKey; }\n    get publicKey(): string { return this._signingKey().publicKey; }\n\n    getAddress(): Promise<string> {\n        return Promise.resolve(this.address);\n    }\n\n    connect(provider: Provider): Wallet {\n        return new Wallet(this, provider);\n    }\n\n    signTransaction(transaction: TransactionRequest): Promise<string> {\n        return resolveProperties(transaction).then((tx) => {\n            if (tx.from != null) {\n                if (getAddress(tx.from) !== this.address) {\n                    logger.throwArgumentError(\"transaction from address mismatch\", \"transaction.from\", transaction.from);\n                }\n                delete tx.from;\n            }\n\n            const signature = this._signingKey().signDigest(keccak256(serialize(<UnsignedTransaction>tx)));\n            return serialize(<UnsignedTransaction>tx, signature);\n        });\n    }\n\n    async signMessage(message: Bytes | string): Promise<string> {\n        return joinSignature(this._signingKey().signDigest(hashMessage(message)));\n    }\n\n    async _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        // Populate any ENS names\n        const populated = await _TypedDataEncoder.resolveNames(domain, types, value, (name: string) => {\n            if (this.provider == null) {\n                logger.throwError(\"cannot resolve ENS names without a provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"resolveName\",\n                    value: name\n                });\n            }\n            return this.provider.resolveName(name);\n        });\n\n        return joinSignature(this._signingKey().signDigest(_TypedDataEncoder.hash(populated.domain, types, populated.value)));\n    }\n\n    encrypt(password: Bytes | string, options?: any, progressCallback?: ProgressCallback): Promise<string> {\n        if (typeof(options) === \"function\" && !progressCallback) {\n            progressCallback = options;\n            options = {};\n        }\n\n        if (progressCallback && typeof(progressCallback) !== \"function\") {\n            throw new Error(\"invalid callback\");\n        }\n\n        if (!options) { options = {}; }\n\n        return encryptKeystore(this, password, options, progressCallback);\n    }\n\n\n    /**\n     *  Static methods to create Wallet instances.\n     */\n    static createRandom(options?: any): Wallet {\n        let entropy: Uint8Array = randomBytes(16);\n\n        if (!options) { options = { }; }\n\n        if (options.extraEntropy) {\n            entropy = arrayify(hexDataSlice(keccak256(concat([ entropy, options.extraEntropy ])), 0, 16));\n        }\n\n        const mnemonic = entropyToMnemonic(entropy, options.locale);\n        return Wallet.fromMnemonic(mnemonic, options.path, options.locale);\n    }\n\n    static fromEncryptedJson(json: string, password: Bytes | string, progressCallback?: ProgressCallback): Promise<Wallet> {\n        return decryptJsonWallet(json, password, progressCallback).then((account) => {\n            return new Wallet(account);\n        });\n    }\n\n    static fromEncryptedJsonSync(json: string, password: Bytes | string): Wallet {\n        return new Wallet(decryptJsonWalletSync(json, password));\n    }\n\n    static fromMnemonic(mnemonic: string, path?: string, wordlist?: Wordlist): Wallet {\n        if (!path) { path = defaultPath; }\n        return new Wallet(HDNode.fromMnemonic(mnemonic, null, wordlist).derivePath(path));\n    }\n}\n\nexport function verifyMessage(message: Bytes | string, signature: SignatureLike): string {\n    return recoverAddress(hashMessage(message), signature);\n}\n\nexport function verifyTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>, signature: SignatureLike): string {\n    return recoverAddress(_TypedDataEncoder.hash(domain, types, value), signature);\n}\n","export const version = \"wallet/5.7.0\";\n","export const version = \"networks/5.7.1\";\n","\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { Network, Networkish } from \"./types\";\n\nexport {\n    Network,\n    Networkish\n};\n\ntype DefaultProviderFunc = (providers: any, options?: any) => any;\n\ninterface Renetworkable extends DefaultProviderFunc {\n    renetwork: (network: Network) => DefaultProviderFunc;\n};\n\nfunction isRenetworkable(value: any): value is Renetworkable {\n    return (value && typeof(value.renetwork) === \"function\");\n}\n\nfunction ethDefaultProvider(network: string | Network): Renetworkable {\n    const func = function(providers: any, options?: any): any {\n        if (options == null) { options = { }; }\n        const providerList: Array<any> = [];\n\n        if (providers.InfuraProvider && options.infura !== \"-\") {\n            try {\n                providerList.push(new providers.InfuraProvider(network, options.infura));\n            } catch(error) { }\n        }\n\n        if (providers.EtherscanProvider && options.etherscan !== \"-\") {\n            try {\n                providerList.push(new providers.EtherscanProvider(network, options.etherscan));\n            } catch(error) { }\n        }\n\n        if (providers.AlchemyProvider && options.alchemy !== \"-\") {\n            try {\n                providerList.push(new providers.AlchemyProvider(network, options.alchemy));\n            } catch(error) { }\n        }\n\n        if (providers.PocketProvider && options.pocket !== \"-\") {\n            // These networks are currently faulty on Pocket as their\n            // network does not handle the Berlin hardfork, which is\n            // live on these ones.\n            // @TODO: This goes away once Pocket has upgraded their nodes\n            const skip = [ \"goerli\", \"ropsten\", \"rinkeby\", \"sepolia\" ];\n            try {\n                const provider = new providers.PocketProvider(network, options.pocket);\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                    providerList.push(provider);\n                }\n            } catch(error) { }\n        }\n\n        if (providers.CloudflareProvider && options.cloudflare !== \"-\") {\n            try {\n                providerList.push(new providers.CloudflareProvider(network));\n            } catch(error) { }\n        }\n\n        if (providers.AnkrProvider && options.ankr !== \"-\") {\n            try {\n                const skip = [ \"ropsten\" ];\n                const provider = new providers.AnkrProvider(network, options.ankr);\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                    providerList.push(provider);\n                }\n            } catch(error) { }\n        }\n\n        if (providerList.length === 0) { return null; }\n\n        if (providers.FallbackProvider) {\n            let quorum = 1;\n            if (options.quorum != null) {\n                quorum = options.quorum;\n            } else if (network === \"homestead\") {\n                quorum = 2;\n            }\n            return new providers.FallbackProvider(providerList, quorum);\n        }\n\n        return providerList[0];\n    };\n\n    func.renetwork = function(network: Network) {\n        return ethDefaultProvider(network);\n    };\n\n    return func;\n}\n\nfunction etcDefaultProvider(url: string, network: string | Network): Renetworkable {\n    const func = function(providers: any, options?: any): any {\n        if (providers.JsonRpcProvider) {\n            return new providers.JsonRpcProvider(url, network);\n        }\n\n        return null;\n    };\n\n    func.renetwork = function(network: Network) {\n        return etcDefaultProvider(url, network);\n    };\n\n    return func;\n}\n\nconst homestead: Network = {\n    chainId: 1,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"homestead\",\n    _defaultProvider: ethDefaultProvider(\"homestead\")\n};\n\nconst ropsten: Network = {\n    chainId: 3,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"ropsten\",\n    _defaultProvider: ethDefaultProvider(\"ropsten\")\n};\n\nconst classicMordor: Network = {\n    chainId: 63,\n    name: \"classicMordor\",\n    _defaultProvider: etcDefaultProvider(\"https://www.ethercluster.com/mordor\", \"classicMordor\")\n};\n\n// See: https://chainlist.org\nconst networks: { [name: string]: Network } = {\n    unspecified: { chainId: 0, name: \"unspecified\" },\n\n    homestead: homestead,\n    mainnet: homestead,\n\n    morden: { chainId: 2, name: \"morden\" },\n\n    ropsten: ropsten,\n    testnet: ropsten,\n\n    rinkeby: {\n        chainId: 4,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"rinkeby\",\n        _defaultProvider: ethDefaultProvider(\"rinkeby\")\n    },\n\n    kovan: {\n        chainId: 42,\n        name: \"kovan\",\n        _defaultProvider: ethDefaultProvider(\"kovan\")\n    },\n\n    goerli: {\n        chainId: 5,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"goerli\",\n        _defaultProvider: ethDefaultProvider(\"goerli\")\n    },\n\n    kintsugi: { chainId: 1337702, name: \"kintsugi\" },\n\n    sepolia: {\n        chainId: 11155111,\n        name: \"sepolia\",\n        _defaultProvider: ethDefaultProvider(\"sepolia\")\n    },\n\n\n    // ETC (See: #351)\n    classic: {\n        chainId: 61,\n        name: \"classic\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/etc\", \"classic\")\n    },\n\n    classicMorden: { chainId: 62, name: \"classicMorden\" },\n\n    classicMordor: classicMordor,\n    classicTestnet: classicMordor,\n\n    classicKotti: {\n        chainId: 6,\n        name: \"classicKotti\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/kotti\", \"classicKotti\")\n    },\n\n    xdai: { chainId: 100, name: \"xdai\" },\n\n    matic: {\n        chainId: 137,\n        name: \"matic\",\n        _defaultProvider: ethDefaultProvider(\"matic\")\n    },\n    maticmum: { chainId: 80001, name: \"maticmum\" },\n\n    optimism: {\n        chainId: 10,\n        name: \"optimism\",\n        _defaultProvider: ethDefaultProvider(\"optimism\")\n    },\n    \"optimism-kovan\": { chainId: 69, name: \"optimism-kovan\" },\n    \"optimism-goerli\": { chainId: 420, name: \"optimism-goerli\" },\n\n    arbitrum: { chainId: 42161, name: \"arbitrum\" },\n    \"arbitrum-rinkeby\": { chainId: 421611, name: \"arbitrum-rinkeby\" },\n    \"arbitrum-goerli\": { chainId: 421613, name: \"arbitrum-goerli\" },\n\n    bnb: { chainId: 56, name: \"bnb\" },\n    bnbt: { chainId: 97, name: \"bnbt\" },\n}\n\n/**\n *  getNetwork\n *\n *  Converts a named common networks or chain ID (network ID) to a Network\n *  and verifies a network is a valid Network..\n */\nexport function getNetwork(network: Networkish): Network {\n    // No network (null)\n    if (network == null) { return null; }\n\n    if (typeof(network) === \"number\") {\n        for (const name in networks) {\n            const standard = networks[name];\n            if (standard.chainId === network) {\n                return {\n                    name: standard.name,\n                    chainId: standard.chainId,\n                    ensAddress: (standard.ensAddress || null),\n                    _defaultProvider: (standard._defaultProvider || null)\n                };\n            }\n        }\n\n        return {\n            chainId: network,\n            name: \"unknown\"\n        };\n    }\n\n    if (typeof(network) === \"string\") {\n        const standard = networks[network];\n        if (standard == null) { return null; }\n        return {\n            name: standard.name,\n            chainId: standard.chainId,\n            ensAddress: standard.ensAddress,\n            _defaultProvider: (standard._defaultProvider || null)\n        };\n    }\n\n    const standard  = networks[network.name];\n\n    // Not a standard network; check that it is a valid network in general\n    if (!standard) {\n        if (typeof(network.chainId) !== \"number\") {\n            logger.throwArgumentError(\"invalid network chainId\", \"network\", network);\n        }\n        return network;\n    }\n\n    // Make sure the chainId matches the expected network chainId (or is 0; disable EIP-155)\n    if (network.chainId !== 0 && network.chainId !== standard.chainId) {\n        logger.throwArgumentError(\"network chainId mismatch\", \"network\", network);\n    }\n\n    // @TODO: In the next major version add an attach function to a defaultProvider\n    // class and move the _defaultProvider internal to this file (extend Network)\n    let defaultProvider: DefaultProviderFunc = network._defaultProvider || null;\n    if (defaultProvider == null && standard._defaultProvider) {\n        if (isRenetworkable(standard._defaultProvider)) {\n            defaultProvider = standard._defaultProvider.renetwork(network);\n        } else {\n            defaultProvider = standard._defaultProvider;\n        }\n    }\n\n    // Standard Network (allow overriding the ENS address)\n    return {\n        name: network.name,\n        chainId: standard.chainId,\n        ensAddress: (network.ensAddress || standard.ensAddress || null),\n        _defaultProvider: defaultProvider\n    };\n}\n","\"use strict\";\n\nimport { decode as base64Decode, encode as base64Encode } from \"@ethersproject/base64\";\nimport { hexlify, isBytesLike } from \"@ethersproject/bytes\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { getUrl, GetUrlResponse, Options } from \"./geturl\";\n\nfunction staller(duration: number): Promise<void> {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\n\nfunction bodyify(value: any, type: string): string {\n    if (value == null) { return null; }\n\n    if (typeof(value) === \"string\") { return value; }\n\n    if (isBytesLike(value)) {\n        if (type && (type.split(\"/\")[0] === \"text\" || type.split(\";\")[0].trim() === \"application/json\")) {\n            try {\n                return toUtf8String(value);\n            } catch (error) { };\n        }\n        return hexlify(value);\n    }\n\n    return value;\n}\n\n// Exported Types\nexport type ConnectionInfo = {\n    url: string,\n    headers?: { [key: string]: string | number }\n\n    user?: string,\n    password?: string,\n\n    allowInsecureAuthentication?: boolean,\n    allowGzip?: boolean,\n\n    throttleLimit?: number,\n    throttleSlotInterval?: number;\n    throttleCallback?: (attempt: number, url: string) => Promise<boolean>,\n\n    skipFetchSetup?: boolean;\n    fetchOptions?: Record<string, string>;\n    errorPassThrough?: boolean;\n\n    timeout?: number,\n};\n\nexport interface OnceBlockable {\n    once(eventName: \"block\", handler: () => void): void;\n}\n\nexport interface OncePollable {\n    once(eventName: \"poll\", handler: () => void): void;\n}\n\nexport type PollOptions = {\n    timeout?: number,\n    floor?: number,\n    ceiling?: number,\n    interval?: number,\n    retryLimit?: number,\n    onceBlock?: OnceBlockable\n    oncePoll?: OncePollable\n};\n\nexport type FetchJsonResponse = {\n    statusCode: number;\n    headers: { [ header: string ]: string };\n};\n\n\ntype Header = { key: string, value: string };\n\nfunction unpercent(value: string): Uint8Array {\n    return toUtf8Bytes(value.replace(/%([0-9a-f][0-9a-f])/gi, (all, code) => {\n        return String.fromCharCode(parseInt(code, 16));\n    }));\n}\n\n// This API is still a work in progress; the future changes will likely be:\n// - ConnectionInfo => FetchDataRequest<T = any>\n// - FetchDataRequest.body? = string | Uint8Array | { contentType: string, data: string | Uint8Array }\n//   - If string => text/plain, Uint8Array => application/octet-stream (if content-type unspecified)\n// - FetchDataRequest.processFunc = (body: Uint8Array, response: FetchDataResponse) => T\n// For this reason, it should be considered internal until the API is finalized\nexport function _fetchData<T = Uint8Array>(connection: string | ConnectionInfo, body?: Uint8Array, processFunc?: (value: Uint8Array, response: FetchJsonResponse) => T): Promise<T> {\n\n    // How many times to retry in the event of a throttle\n    const attemptLimit = (typeof(connection) === \"object\" && connection.throttleLimit != null) ? connection.throttleLimit: 12;\n    logger.assertArgument((attemptLimit > 0 && (attemptLimit % 1) === 0),\n        \"invalid connection throttle limit\", \"connection.throttleLimit\", attemptLimit);\n\n    const throttleCallback = ((typeof(connection) === \"object\") ? connection.throttleCallback: null);\n    const throttleSlotInterval = ((typeof(connection) === \"object\" && typeof(connection.throttleSlotInterval) === \"number\") ? connection.throttleSlotInterval: 100);\n    logger.assertArgument((throttleSlotInterval > 0 && (throttleSlotInterval % 1) === 0),\n        \"invalid connection throttle slot interval\", \"connection.throttleSlotInterval\", throttleSlotInterval);\n\n    const errorPassThrough = ((typeof(connection) === \"object\") ? !!(connection.errorPassThrough): false);\n\n    const headers: { [key: string]: Header } = { };\n\n    let url: string = null;\n\n    // @TODO: Allow ConnectionInfo to override some of these values\n    const options: Options = {\n        method: \"GET\",\n    };\n\n    let allow304 = false;\n\n    let timeout = 2 * 60 * 1000;\n\n    if (typeof(connection) === \"string\") {\n        url = connection;\n\n    } else if (typeof(connection) === \"object\") {\n        if (connection == null || connection.url == null) {\n            logger.throwArgumentError(\"missing URL\", \"connection.url\", connection);\n        }\n\n        url = connection.url;\n\n        if (typeof(connection.timeout) === \"number\" && connection.timeout > 0) {\n            timeout = connection.timeout;\n        }\n\n        if (connection.headers) {\n            for (const key in connection.headers) {\n                headers[key.toLowerCase()] = { key: key, value: String(connection.headers[key]) };\n                if ([\"if-none-match\", \"if-modified-since\"].indexOf(key.toLowerCase()) >= 0) {\n                    allow304 = true;\n                }\n            }\n        }\n\n        options.allowGzip = !!connection.allowGzip;\n\n        if (connection.user != null && connection.password != null) {\n            if (url.substring(0, 6) !== \"https:\" && connection.allowInsecureAuthentication !== true) {\n                logger.throwError(\n                    \"basic authentication requires a secure https url\",\n                    Logger.errors.INVALID_ARGUMENT,\n                    { argument: \"url\", url: url, user: connection.user, password: \"[REDACTED]\" }\n                );\n            }\n\n            const authorization = connection.user + \":\" + connection.password;\n            headers[\"authorization\"] = {\n                key: \"Authorization\",\n                value: \"Basic \" + base64Encode(toUtf8Bytes(authorization))\n            };\n        }\n\n        if (connection.skipFetchSetup != null) {\n            options.skipFetchSetup = !!connection.skipFetchSetup;\n        }\n\n        if (connection.fetchOptions != null) {\n            options.fetchOptions = shallowCopy(connection.fetchOptions);\n        }\n    }\n\n    const reData = new RegExp(\"^data:([^;:]*)?(;base64)?,(.*)$\", \"i\");\n    const dataMatch = ((url) ? url.match(reData): null);\n    if (dataMatch) {\n        try {\n            const response = {\n                statusCode: 200,\n                statusMessage: \"OK\",\n                headers: { \"content-type\": (dataMatch[1] || \"text/plain\")},\n                body: (dataMatch[2] ? base64Decode(dataMatch[3]): unpercent(dataMatch[3]))\n            };\n\n            let result: T = <T><unknown>response.body;\n            if (processFunc) {\n                result = processFunc(response.body, response);\n            }\n            return Promise.resolve(<T><unknown>result);\n\n        } catch (error) {\n            logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                body: bodyify(dataMatch[1], dataMatch[2]),\n                error: error,\n                requestBody: null,\n                requestMethod: \"GET\",\n                url: url\n            });\n        }\n    }\n\n    if (body) {\n        options.method = \"POST\";\n        options.body = body;\n        if (headers[\"content-type\"] == null) {\n            headers[\"content-type\"] = { key: \"Content-Type\", value: \"application/octet-stream\" };\n        }\n        if (headers[\"content-length\"] == null) {\n            headers[\"content-length\"] = { key: \"Content-Length\", value: String(body.length) };\n        }\n    }\n\n    const flatHeaders: { [ key: string ]: string } = { };\n    Object.keys(headers).forEach((key) => {\n        const header = headers[key];\n        flatHeaders[header.key] = header.value;\n    });\n    options.headers = flatHeaders;\n\n    const runningTimeout = (function() {\n        let timer: NodeJS.Timer = null;\n        const promise: Promise<never> = new Promise(function(resolve, reject) {\n            if (timeout) {\n                timer = setTimeout(() => {\n                    if (timer == null) { return; }\n                    timer = null;\n\n                    reject(logger.makeError(\"timeout\", Logger.errors.TIMEOUT, {\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        timeout: timeout,\n                        url: url\n                    }));\n                }, timeout);\n            }\n        });\n\n        const cancel = function() {\n            if (timer == null) { return; }\n            clearTimeout(timer);\n            timer = null;\n        }\n\n        return { promise, cancel };\n    })();\n\n    const runningFetch = (async function() {\n\n        for (let attempt = 0; attempt < attemptLimit; attempt++) {\n            let response: GetUrlResponse = null;\n\n            try {\n                response = await getUrl(url, options);\n\n                if (attempt < attemptLimit) {\n                    if (response.statusCode === 301 || response.statusCode === 302) {\n                        // Redirection; for now we only support absolute locataions\n                        const location = response.headers.location || \"\";\n                        if (options.method === \"GET\" && location.match(/^https:/)) {\n                            url = response.headers.location;\n                            continue;\n                        }\n\n                    } else if (response.statusCode === 429) {\n                        // Exponential back-off throttling\n                        let tryAgain = true;\n                        if (throttleCallback) {\n                            tryAgain = await throttleCallback(attempt, url);\n                        }\n\n                        if (tryAgain) {\n                            let stall = 0;\n\n                            const retryAfter = response.headers[\"retry-after\"];\n                            if (typeof(retryAfter) === \"string\" && retryAfter.match(/^[1-9][0-9]*$/)) {\n                                stall = parseInt(retryAfter) * 1000;\n                            } else {\n                                stall = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                            }\n\n                            //console.log(\"Stalling 429\");\n                            await staller(stall);\n                            continue;\n                        }\n                    }\n                }\n\n            } catch (error) {\n                response = (<any>error).response;\n                if (response == null) {\n                    runningTimeout.cancel();\n                    logger.throwError(\"missing response\", Logger.errors.SERVER_ERROR, {\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        serverError: error,\n                        url: url\n                    });\n                }\n            }\n\n\n            let body = response.body;\n\n            if (allow304 && response.statusCode === 304) {\n                body = null;\n            } else if (!errorPassThrough && (response.statusCode < 200 || response.statusCode >= 300)) {\n                runningTimeout.cancel();\n                logger.throwError(\"bad response\", Logger.errors.SERVER_ERROR, {\n                    status: response.statusCode,\n                    headers: response.headers,\n                    body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"]: null)),\n                    requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                    requestMethod: options.method,\n                    url: url\n                });\n            }\n\n            if (processFunc) {\n                try {\n                    const result = await processFunc(body, response);\n                    runningTimeout.cancel();\n                    return result;\n\n                } catch (error) {\n                    // Allow the processFunc to trigger a throttle\n                    if (error.throttleRetry && attempt < attemptLimit) {\n                        let tryAgain = true;\n                        if (throttleCallback) {\n                            tryAgain = await throttleCallback(attempt, url);\n                        }\n\n                        if (tryAgain) {\n                            const timeout = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                            //console.log(\"Stalling callback\");\n                            await staller(timeout);\n                            continue;\n                        }\n                    }\n\n                    runningTimeout.cancel();\n                    logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                        body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"]: null)),\n                        error: error,\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        url: url\n                    });\n                }\n            }\n\n            runningTimeout.cancel();\n\n            // If we had a processFunc, it either returned a T or threw above.\n            // The \"body\" is now a Uint8Array.\n            return <T>(<unknown>body);\n        }\n\n        return logger.throwError(\"failed response\", Logger.errors.SERVER_ERROR, {\n            requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n            requestMethod: options.method,\n            url: url\n        });\n    })();\n\n    return Promise.race([ runningTimeout.promise, runningFetch ]);\n}\n\nexport function fetchJson(connection: string | ConnectionInfo, json?: string, processFunc?: (value: any, response: FetchJsonResponse) => any): Promise<any> {\n    let processJsonFunc = (value: Uint8Array, response: FetchJsonResponse) => {\n        let result: any = null;\n        if (value != null) {\n            try {\n                result = JSON.parse(toUtf8String(value));\n            } catch (error) {\n                logger.throwError(\"invalid JSON\", Logger.errors.SERVER_ERROR, {\n                    body: value,\n                    error: error\n                });\n            }\n        }\n\n        if (processFunc) {\n            result = processFunc(result, response);\n        }\n\n        return result;\n    }\n\n    // If we have json to send, we must\n    // - add content-type of application/json (unless already overridden)\n    // - convert the json to bytes\n    let body: Uint8Array = null;\n    if (json != null) {\n        body = toUtf8Bytes(json);\n\n        // Create a connection with the content-type set for JSON\n        const updated: ConnectionInfo = (typeof(connection) === \"string\") ? ({ url: connection }): shallowCopy(connection);\n        if (updated.headers) {\n            const hasContentType = (Object.keys(updated.headers).filter((k) => (k.toLowerCase() === \"content-type\")).length) !== 0;\n            if (!hasContentType) {\n                updated.headers = shallowCopy(updated.headers);\n                updated.headers[\"content-type\"] = \"application/json\";\n            }\n        } else {\n            updated.headers = { \"content-type\": \"application/json\" };\n        }\n        connection = updated;\n    }\n\n    return _fetchData<any>(connection, body, processJsonFunc);\n}\n\nexport function poll<T>(func: () => Promise<T>, options?: PollOptions): Promise<T> {\n    if (!options) { options = {}; }\n    options = shallowCopy(options);\n    if (options.floor == null) { options.floor = 0; }\n    if (options.ceiling == null) { options.ceiling = 10000; }\n    if (options.interval == null) { options.interval = 250; }\n\n    return new Promise(function(resolve, reject) {\n\n        let timer: NodeJS.Timer = null;\n        let done: boolean = false;\n\n        // Returns true if cancel was successful. Unsuccessful cancel means we're already done.\n        const cancel = (): boolean => {\n            if (done) { return false; }\n            done = true;\n            if (timer) { clearTimeout(timer); }\n            return true;\n        };\n\n        if (options.timeout) {\n            timer = setTimeout(() => {\n                if (cancel()) { reject(new Error(\"timeout\")); }\n            }, options.timeout)\n        }\n\n        const retryLimit = options.retryLimit;\n\n        let attempt = 0;\n        function check() {\n            return func().then(function(result) {\n\n                // If we have a result, or are allowed null then we're done\n                if (result !== undefined) {\n                    if (cancel()) { resolve(result); }\n\n                } else if (options.oncePoll) {\n                    options.oncePoll.once(\"poll\", check);\n\n                } else if (options.onceBlock) {\n                    options.onceBlock.once(\"block\", check);\n\n                // Otherwise, exponential back-off (up to 10s) our next request\n                } else if (!done) {\n                    attempt++;\n                    if (attempt > retryLimit) {\n                        if (cancel()) { reject(new Error(\"retry limit reached\")); }\n                        return;\n                    }\n\n                    let timeout = options.interval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                    if (timeout < options.floor) { timeout = options.floor; }\n                    if (timeout > options.ceiling) { timeout = options.ceiling; }\n\n                    setTimeout(check, timeout);\n                }\n\n                return null;\n            }, function(error) {\n                if (cancel()) { reject(error); }\n            });\n        }\n        check();\n    });\n}\n\n","\"use strict\";\n\nimport { arrayify } from \"@ethersproject/bytes\";\n\nimport type { GetUrlResponse, Options } from \"./types\";\n\nexport { GetUrlResponse, Options };\n\nexport async function getUrl(href: string, options?: Options): Promise<GetUrlResponse> {\n    if (options == null) { options = { }; }\n\n    const request: RequestInit = {\n        method: (options.method || \"GET\"),\n        headers: (options.headers || { }),\n        body: (options.body || undefined),\n    };\n\n    if (options.skipFetchSetup !== true) {\n        request.mode = <RequestMode>\"cors\";              // no-cors, cors, *same-origin\n        request.cache = <RequestCache>\"no-cache\";        // *default, no-cache, reload, force-cache, only-if-cached\n        request.credentials = <RequestCredentials>\"same-origin\";  // include, *same-origin, omit\n        request.redirect = <RequestRedirect>\"follow\";    // manual, *follow, error\n        request.referrer = \"client\";                     // no-referrer, *client\n    };\n\n    if (options.fetchOptions != null) {\n        const opts = options.fetchOptions;\n        if (opts.mode) { request.mode = <RequestMode>(opts.mode); }\n        if (opts.cache) { request.cache = <RequestCache>(opts.cache); }\n        if (opts.credentials) { request.credentials = <RequestCredentials>(opts.credentials); }\n        if (opts.redirect) { request.redirect = <RequestRedirect>(opts.redirect); }\n        if (opts.referrer) { request.referrer = opts.referrer; }\n    }\n\n    const response = await fetch(href, request);\n    const body = await response.arrayBuffer();\n\n    const headers: { [ name: string ]: string } = { };\n    if (response.headers.forEach) {\n        response.headers.forEach((value, key) => {\n            headers[key.toLowerCase()] = value;\n        });\n    } else {\n        (<() => Array<string>>((<any>(response.headers)).keys))().forEach((key) => {\n            headers[key.toLowerCase()] = response.headers.get(key);\n        });\n    }\n\n    return {\n        headers: headers,\n        statusCode: response.status,\n        statusMessage: response.statusText,\n        body: arrayify(new Uint8Array(body)),\n    }\n}\n","export const version = \"web/5.7.1\";\n","'use strict'\nvar ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l'\n\n// pre-compute lookup table\nvar ALPHABET_MAP = {}\nfor (var z = 0; z < ALPHABET.length; z++) {\n  var x = ALPHABET.charAt(z)\n\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')\n  ALPHABET_MAP[x] = z\n}\n\nfunction polymodStep (pre) {\n  var b = pre >> 25\n  return ((pre & 0x1FFFFFF) << 5) ^\n    (-((b >> 0) & 1) & 0x3b6a57b2) ^\n    (-((b >> 1) & 1) & 0x26508e6d) ^\n    (-((b >> 2) & 1) & 0x1ea119fa) ^\n    (-((b >> 3) & 1) & 0x3d4233dd) ^\n    (-((b >> 4) & 1) & 0x2a1462b3)\n}\n\nfunction prefixChk (prefix) {\n  var chk = 1\n  for (var i = 0; i < prefix.length; ++i) {\n    var c = prefix.charCodeAt(i)\n    if (c < 33 || c > 126) return 'Invalid prefix (' + prefix + ')'\n\n    chk = polymodStep(chk) ^ (c >> 5)\n  }\n  chk = polymodStep(chk)\n\n  for (i = 0; i < prefix.length; ++i) {\n    var v = prefix.charCodeAt(i)\n    chk = polymodStep(chk) ^ (v & 0x1f)\n  }\n  return chk\n}\n\nfunction encode (prefix, words, LIMIT) {\n  LIMIT = LIMIT || 90\n  if ((prefix.length + 7 + words.length) > LIMIT) throw new TypeError('Exceeds length limit')\n\n  prefix = prefix.toLowerCase()\n\n  // determine chk mod\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') throw new Error(chk)\n\n  var result = prefix + '1'\n  for (var i = 0; i < words.length; ++i) {\n    var x = words[i]\n    if ((x >> 5) !== 0) throw new Error('Non 5-bit word')\n\n    chk = polymodStep(chk) ^ x\n    result += ALPHABET.charAt(x)\n  }\n\n  for (i = 0; i < 6; ++i) {\n    chk = polymodStep(chk)\n  }\n  chk ^= 1\n\n  for (i = 0; i < 6; ++i) {\n    var v = (chk >> ((5 - i) * 5)) & 0x1f\n    result += ALPHABET.charAt(v)\n  }\n\n  return result\n}\n\nfunction __decode (str, LIMIT) {\n  LIMIT = LIMIT || 90\n  if (str.length < 8) return str + ' too short'\n  if (str.length > LIMIT) return 'Exceeds length limit'\n\n  // don't allow mixed case\n  var lowered = str.toLowerCase()\n  var uppered = str.toUpperCase()\n  if (str !== lowered && str !== uppered) return 'Mixed-case string ' + str\n  str = lowered\n\n  var split = str.lastIndexOf('1')\n  if (split === -1) return 'No separator character for ' + str\n  if (split === 0) return 'Missing prefix for ' + str\n\n  var prefix = str.slice(0, split)\n  var wordChars = str.slice(split + 1)\n  if (wordChars.length < 6) return 'Data too short'\n\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') return chk\n\n  var words = []\n  for (var i = 0; i < wordChars.length; ++i) {\n    var c = wordChars.charAt(i)\n    var v = ALPHABET_MAP[c]\n    if (v === undefined) return 'Unknown character ' + c\n    chk = polymodStep(chk) ^ v\n\n    // not in the checksum?\n    if (i + 6 >= wordChars.length) continue\n    words.push(v)\n  }\n\n  if (chk !== 1) return 'Invalid checksum for ' + str\n  return { prefix: prefix, words: words }\n}\n\nfunction decodeUnsafe () {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n}\n\nfunction decode (str) {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n\n  throw new Error(res)\n}\n\nfunction convert (data, inBits, outBits, pad) {\n  var value = 0\n  var bits = 0\n  var maxV = (1 << outBits) - 1\n\n  var result = []\n  for (var i = 0; i < data.length; ++i) {\n    value = (value << inBits) | data[i]\n    bits += inBits\n\n    while (bits >= outBits) {\n      bits -= outBits\n      result.push((value >> bits) & maxV)\n    }\n  }\n\n  if (pad) {\n    if (bits > 0) {\n      result.push((value << (outBits - bits)) & maxV)\n    }\n  } else {\n    if (bits >= inBits) return 'Excess padding'\n    if ((value << (outBits - bits)) & maxV) return 'Non-zero padding'\n  }\n\n  return result\n}\n\nfunction toWordsUnsafe (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n}\n\nfunction toWords (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nfunction fromWordsUnsafe (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n}\n\nfunction fromWords (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nmodule.exports = {\n  decodeUnsafe: decodeUnsafe,\n  decode: decode,\n  encode: encode,\n  toWordsUnsafe: toWordsUnsafe,\n  toWords: toWords,\n  fromWordsUnsafe: fromWordsUnsafe,\n  fromWords: fromWords\n}\n","export const version = \"providers/5.7.1\";\n","\"use strict\";\n\nimport { Block, TransactionReceipt, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { getAddress, getContractAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { hexDataLength, hexDataSlice, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { AccessList, accessListify, parse as parseTransaction } from \"@ethersproject/transactions\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport type FormatFunc = (value: any) => any;\n\nexport type FormatFuncs = { [ key: string ]: FormatFunc };\n\nexport type Formats = {\n    transaction: FormatFuncs,\n    transactionRequest: FormatFuncs,\n    receipt: FormatFuncs,\n    receiptLog: FormatFuncs,\n    block: FormatFuncs,\n    blockWithTransactions: FormatFuncs,\n    filter: FormatFuncs,\n    filterLog: FormatFuncs,\n};\n\nexport class Formatter {\n    readonly formats: Formats;\n\n    constructor() {\n        this.formats = this.getDefaultFormats();\n    }\n\n    getDefaultFormats(): Formats {\n        const formats: Formats = <Formats>({ });\n\n        const address = this.address.bind(this);\n        const bigNumber = this.bigNumber.bind(this);\n        const blockTag = this.blockTag.bind(this);\n        const data = this.data.bind(this);\n        const hash = this.hash.bind(this);\n        const hex = this.hex.bind(this);\n        const number = this.number.bind(this);\n        const type = this.type.bind(this);\n\n        const strictData = (v: any) => { return this.data(v, true); };\n\n        formats.transaction = {\n            hash: hash,\n\n            type: type,\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n\n            blockHash: Formatter.allowNull(hash, null),\n            blockNumber: Formatter.allowNull(number, null),\n            transactionIndex: Formatter.allowNull(number, null),\n\n            confirmations: Formatter.allowNull(number, null),\n\n            from: address,\n\n            // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas)\n            // must be set\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n\n            gasLimit: bigNumber,\n            to: Formatter.allowNull(address, null),\n            value: bigNumber,\n            nonce: number,\n            data: data,\n\n            r: Formatter.allowNull(this.uint256),\n            s: Formatter.allowNull(this.uint256),\n            v: Formatter.allowNull(number),\n\n            creates: Formatter.allowNull(address, null),\n\n            raw: Formatter.allowNull(data),\n        };\n\n        formats.transactionRequest = {\n            from: Formatter.allowNull(address),\n            nonce: Formatter.allowNull(number),\n            gasLimit: Formatter.allowNull(bigNumber),\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n            to: Formatter.allowNull(address),\n            value: Formatter.allowNull(bigNumber),\n            data: Formatter.allowNull(strictData),\n            type: Formatter.allowNull(number),\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n        };\n\n        formats.receiptLog = {\n            transactionIndex: number,\n            blockNumber: number,\n            transactionHash: hash,\n            address: address,\n            topics: Formatter.arrayOf(hash),\n            data: data,\n            logIndex: number,\n            blockHash: hash,\n        };\n\n        formats.receipt = {\n            to: Formatter.allowNull(this.address, null),\n            from: Formatter.allowNull(this.address, null),\n            contractAddress: Formatter.allowNull(address, null),\n            transactionIndex: number,\n            // should be allowNull(hash), but broken-EIP-658 support is handled in receipt\n            root: Formatter.allowNull(hex),\n            gasUsed: bigNumber,\n            logsBloom: Formatter.allowNull(data),// @TODO: should this be data?\n            blockHash: hash,\n            transactionHash: hash,\n            logs: Formatter.arrayOf(this.receiptLog.bind(this)),\n            blockNumber: number,\n            confirmations: Formatter.allowNull(number, null),\n            cumulativeGasUsed: bigNumber,\n            effectiveGasPrice: Formatter.allowNull(bigNumber),\n            status: Formatter.allowNull(number),\n            type: type\n        };\n\n        formats.block = {\n            hash: Formatter.allowNull(hash),\n            parentHash: hash,\n            number: number,\n\n            timestamp: number,\n            nonce: Formatter.allowNull(hex),\n            difficulty: this.difficulty.bind(this),\n\n            gasLimit: bigNumber,\n            gasUsed: bigNumber,\n\n            miner: Formatter.allowNull(address),\n            extraData: data,\n\n            transactions: Formatter.allowNull(Formatter.arrayOf(hash)),\n\n            baseFeePerGas: Formatter.allowNull(bigNumber)\n        };\n\n        formats.blockWithTransactions = shallowCopy(formats.block);\n        formats.blockWithTransactions.transactions = Formatter.allowNull(Formatter.arrayOf(this.transactionResponse.bind(this)));\n\n        formats.filter = {\n            fromBlock: Formatter.allowNull(blockTag, undefined),\n            toBlock: Formatter.allowNull(blockTag, undefined),\n            blockHash: Formatter.allowNull(hash, undefined),\n            address: Formatter.allowNull(address, undefined),\n            topics: Formatter.allowNull(this.topics.bind(this), undefined),\n        };\n\n        formats.filterLog = {\n            blockNumber: Formatter.allowNull(number),\n            blockHash: Formatter.allowNull(hash),\n            transactionIndex: number,\n\n            removed: Formatter.allowNull(this.boolean.bind(this)),\n\n            address: address,\n            data: Formatter.allowFalsish(data, \"0x\"),\n\n            topics: Formatter.arrayOf(hash),\n\n            transactionHash: hash,\n            logIndex: number,\n        };\n\n        return formats;\n    }\n\n    accessList(accessList: Array<any>): AccessList {\n        return accessListify(accessList || []);\n    }\n\n    // Requires a BigNumberish that is within the IEEE754 safe integer range; returns a number\n    // Strict! Used on input.\n    number(number: any): number {\n        if (number === \"0x\") { return 0; }\n        return BigNumber.from(number).toNumber();\n    }\n\n    type(number: any): number {\n        if (number === \"0x\" || number == null) { return 0; }\n        return BigNumber.from(number).toNumber();\n    }\n\n    // Strict! Used on input.\n    bigNumber(value: any): BigNumber {\n        return BigNumber.from(value);\n    }\n\n    // Requires a boolean, \"true\" or  \"false\"; returns a boolean\n    boolean(value: any): boolean {\n        if (typeof(value) === \"boolean\") { return value; }\n        if (typeof(value) === \"string\") {\n            value = value.toLowerCase();\n            if (value === \"true\") { return true; }\n            if (value === \"false\") { return false; }\n        }\n        throw new Error(\"invalid boolean - \" + value);\n    }\n\n    hex(value: any, strict?: boolean): string {\n        if (typeof(value) === \"string\") {\n            if (!strict && value.substring(0, 2) !== \"0x\") { value = \"0x\" + value; }\n            if (isHexString(value)) {\n               return value.toLowerCase();\n            }\n        }\n        return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n    }\n\n    data(value: any, strict?: boolean): string {\n        const result = this.hex(value, strict);\n        if ((result.length % 2) !== 0) {\n            throw new Error(\"invalid data; odd-length - \" + value);\n        }\n        return result;\n    }\n\n    // Requires an address\n    // Strict! Used on input.\n    address(value: any): string {\n        return getAddress(value);\n    }\n\n    callAddress(value: any): string {\n        if (!isHexString(value, 32)) { return null; }\n        const address = getAddress(hexDataSlice(value, 12));\n        return (address === AddressZero) ? null: address;\n    }\n\n    contractAddress(value: any): string {\n        return getContractAddress(value);\n    }\n\n    // Strict! Used on input.\n    blockTag(blockTag: any): string {\n        if (blockTag == null) { return \"latest\"; }\n\n        if (blockTag === \"earliest\") { return \"0x0\"; }\n\n        switch (blockTag) {\n            case \"earliest\": return \"0x0\";\n            case \"latest\": case \"pending\": case \"safe\": case \"finalized\":\n                return blockTag;\n        }\n\n        if (typeof(blockTag) === \"number\" || isHexString(blockTag)) {\n            return hexValue(<number | string>blockTag);\n        }\n\n        throw new Error(\"invalid blockTag\");\n    }\n\n    // Requires a hash, optionally requires 0x prefix; returns prefixed lowercase hash.\n    hash(value: any, strict?: boolean): string {\n        const result = this.hex(value, strict);\n        if (hexDataLength(result) !== 32) {\n            return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n        }\n        return result;\n    }\n\n    // Returns the difficulty as a number, or if too large (i.e. PoA network) null\n    difficulty(value: any): number {\n        if (value == null) { return null; }\n\n        const v = BigNumber.from(value);\n\n        try {\n            return v.toNumber();\n        } catch (error) { }\n\n       return null;\n    }\n\n    uint256(value: any): string {\n        if (!isHexString(value)) {\n            throw new Error(\"invalid uint256\");\n        }\n        return hexZeroPad(value, 32);\n    }\n\n    _block(value: any, format: any): Block {\n        if (value.author != null && value.miner == null) {\n            value.miner = value.author;\n        }\n        // The difficulty may need to come from _difficulty in recursed blocks\n        const difficulty = (value._difficulty != null) ? value._difficulty: value.difficulty;\n        const result = Formatter.check(format, value);\n        result._difficulty = ((difficulty == null) ? null: BigNumber.from(difficulty));\n        return result;\n    }\n\n    block(value: any): Block {\n        return this._block(value, this.formats.block);\n    }\n\n    blockWithTransactions(value: any): Block {\n        return this._block(value, this.formats.blockWithTransactions);\n    }\n\n    // Strict! Used on input.\n    transactionRequest(value: any): any {\n        return Formatter.check(this.formats.transactionRequest, value);\n    }\n\n    transactionResponse(transaction: any): TransactionResponse {\n\n        // Rename gas to gasLimit\n        if (transaction.gas != null && transaction.gasLimit == null) {\n            transaction.gasLimit = transaction.gas;\n        }\n\n        // Some clients (TestRPC) do strange things like return 0x0 for the\n        // 0 address; correct this to be a real address\n        if (transaction.to && BigNumber.from(transaction.to).isZero()) {\n            transaction.to = \"0x0000000000000000000000000000000000000000\";\n        }\n\n        // Rename input to data\n        if (transaction.input != null && transaction.data == null) {\n            transaction.data = transaction.input;\n        }\n\n        // If to and creates are empty, populate the creates from the transaction\n        if (transaction.to == null && transaction.creates == null) {\n            transaction.creates = this.contractAddress(transaction);\n        }\n\n        if ((transaction.type === 1 || transaction.type === 2)&& transaction.accessList == null) {\n            transaction.accessList = [ ];\n        }\n\n        const result: TransactionResponse = Formatter.check(this.formats.transaction, transaction);\n\n        if (transaction.chainId != null) {\n            let chainId = transaction.chainId;\n\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n\n            result.chainId = chainId;\n\n        } else {\n            let chainId = transaction.networkId;\n\n            // geth-etc returns chainId\n            if (chainId == null && result.v == null) {\n                chainId = transaction.chainId;\n            }\n\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n\n            if (typeof(chainId) !== \"number\" && result.v != null) {\n                chainId = (result.v - 35) / 2;\n                if (chainId < 0) { chainId = 0; }\n                chainId = parseInt(chainId);\n            }\n\n            if (typeof(chainId) !== \"number\") { chainId = 0; }\n\n            result.chainId = chainId;\n        }\n\n        // 0x0000... should actually be null\n        if (result.blockHash && result.blockHash.replace(/0/g, \"\") === \"x\") {\n            result.blockHash = null;\n        }\n\n        return result;\n    }\n\n    transaction(value: any): any {\n        return parseTransaction(value);\n    }\n\n    receiptLog(value: any): any {\n        return Formatter.check(this.formats.receiptLog, value);\n    }\n\n    receipt(value: any): TransactionReceipt {\n        const result: TransactionReceipt = Formatter.check(this.formats.receipt, value);\n\n        // RSK incorrectly implemented EIP-658, so we munge things a bit here for it\n        if (result.root != null) {\n            if (result.root.length <= 4) {\n                // Could be 0x00, 0x0, 0x01 or 0x1\n                const value = BigNumber.from(result.root).toNumber();\n                if (value === 0 || value === 1) {\n                    // Make sure if both are specified, they match\n                    if (result.status != null && (result.status !== value)) {\n                        logger.throwArgumentError(\"alt-root-status/status mismatch\", \"value\", { root: result.root, status: result.status });\n                    }\n                    result.status = value;\n                    delete result.root;\n                } else {\n                    logger.throwArgumentError(\"invalid alt-root-status\", \"value.root\", result.root);\n                }\n            } else if (result.root.length !== 66) {\n                // Must be a valid bytes32\n                logger.throwArgumentError(\"invalid root hash\", \"value.root\", result.root);\n            }\n        }\n\n        if (result.status != null) {\n            result.byzantium = true;\n        }\n\n        return result;\n    }\n\n    topics(value: any): any {\n        if (Array.isArray(value)) {\n            return value.map((v) => this.topics(v));\n\n        } else if (value != null) {\n            return this.hash(value, true);\n        }\n\n        return null;\n    }\n\n    filter(value: any): any {\n        return Formatter.check(this.formats.filter, value);\n    }\n\n    filterLog(value: any): any {\n        return Formatter.check(this.formats.filterLog, value);\n    }\n\n    static check(format: { [ name: string ]: FormatFunc }, object: any): any {\n        const result: any = {};\n        for (const key in format) {\n            try {\n                const value = format[key](object[key]);\n                if (value !== undefined) { result[key] = value; }\n            } catch (error) {\n                error.checkKey = key;\n                error.checkValue = object[key];\n                throw error;\n            }\n        }\n        return result;\n    }\n\n    // if value is null-ish, nullValue is returned\n    static allowNull(format: FormatFunc, nullValue?: any): FormatFunc {\n        return (function(value: any) {\n            if (value == null) { return nullValue; }\n            return format(value);\n        });\n    }\n\n    // If value is false-ish, replaceValue is returned\n    static allowFalsish(format: FormatFunc, replaceValue: any): FormatFunc {\n        return (function(value: any) {\n            if (!value) { return replaceValue; }\n            return format(value);\n        });\n    }\n\n    // Requires an Array satisfying check\n    static arrayOf(format: FormatFunc): FormatFunc {\n        return (function(array: any): Array<any> {\n            if (!Array.isArray(array)) { throw new Error(\"not an array\"); }\n\n            const result: any = [];\n\n            array.forEach(function(value) {\n                result.push(format(value));\n            });\n\n            return result;\n        });\n    }\n}\n\nexport interface CommunityResourcable {\n    isCommunityResource(): boolean;\n}\n\nexport function isCommunityResourcable(value: any): value is CommunityResourcable {\n    return (value && typeof(value.isCommunityResource) === \"function\");\n}\n\nexport function isCommunityResource(value: any): boolean {\n    return (isCommunityResourcable(value) && value.isCommunityResource());\n}\n\n// Show the throttle message only once\nlet throttleMessage = false;\nexport function showThrottleMessage() {\n    if (throttleMessage) { return; }\n    throttleMessage = true;\n\n    console.log(\"========= NOTICE =========\")\n    console.log(\"Request-Rate Exceeded  (this message will not be repeated)\");\n    console.log(\"\");\n    console.log(\"The default API keys for each service are provided as a highly-throttled,\");\n    console.log(\"community resource for low-traffic projects and early prototyping.\");\n    console.log(\"\");\n    console.log(\"While your application will continue to function, we highly recommended\");\n    console.log(\"signing up for your own API keys to improve performance, increase your\");\n    console.log(\"request rate/limit and enable other perks, such as metrics and advanced APIs.\");\n    console.log(\"\");\n    console.log(\"For more details: https:/\\/docs.ethers.io/api-keys/\");\n    console.log(\"==========================\");\n}\n\n","\"use strict\";\n\nimport {\n    Block, BlockTag, BlockWithTransactions, EventType, Filter, FilterByBlockHash, ForkEvent,\n    Listener, Log, Provider, TransactionReceipt, TransactionRequest, TransactionResponse\n} from \"@ethersproject/abstract-provider\";\nimport { encode as base64Encode } from \"@ethersproject/base64\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, concat, hexConcat, hexDataLength, hexDataSlice, hexlify, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { HashZero } from \"@ethersproject/constants\";\nimport { dnsEncode, namehash } from \"@ethersproject/hash\";\nimport { getNetwork, Network, Networkish } from \"@ethersproject/networks\";\nimport { Deferrable, defineReadOnly, getStatic, resolveProperties } from \"@ethersproject/properties\";\nimport { Transaction } from \"@ethersproject/transactions\";\nimport { sha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { fetchJson, poll } from \"@ethersproject/web\";\n\nimport bech32 from \"bech32\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { Formatter } from \"./formatter\";\n\nconst MAX_CCIP_REDIRECTS = 10;\n\n//////////////////////////////\n// Event Serializeing\n\nfunction checkTopic(topic: string): string {\n     if (topic == null) { return \"null\"; }\n     if (hexDataLength(topic) !== 32) {\n         logger.throwArgumentError(\"invalid topic\", \"topic\", topic);\n     }\n     return topic.toLowerCase();\n}\n\nfunction serializeTopics(topics: Array<string | Array<string>>): string {\n    // Remove trailing null AND-topics; they are redundant\n    topics = topics.slice();\n    while (topics.length > 0 && topics[topics.length - 1] == null) { topics.pop(); }\n\n    return topics.map((topic) => {\n        if (Array.isArray(topic)) {\n\n            // Only track unique OR-topics\n            const unique: { [ topic: string ]: boolean } = { }\n            topic.forEach((topic) => {\n                unique[checkTopic(topic)] = true;\n            });\n\n            // The order of OR-topics does not matter\n            const sorted = Object.keys(unique);\n            sorted.sort();\n\n            return sorted.join(\"|\");\n\n        } else {\n            return checkTopic(topic);\n        }\n    }).join(\"&\");\n}\n\nfunction deserializeTopics(data: string): Array<string | Array<string>> {\n    if (data === \"\") { return [ ]; }\n\n    return data.split(/&/g).map((topic) => {\n        if (topic === \"\") { return [ ]; }\n\n        const comps = topic.split(\"|\").map((topic) => {\n            return ((topic === \"null\") ? null: topic);\n        });\n\n        return ((comps.length === 1) ? comps[0]: comps);\n    });\n}\n\nfunction getEventTag(eventName: EventType): string {\n    if (typeof(eventName) === \"string\") {\n        eventName = eventName.toLowerCase();\n\n        if (hexDataLength(eventName) === 32) {\n            return \"tx:\" + eventName;\n        }\n\n        if (eventName.indexOf(\":\") === -1) {\n            return eventName;\n        }\n\n    } else if (Array.isArray(eventName)) {\n        return \"filter:*:\" + serializeTopics(eventName);\n\n    } else if (ForkEvent.isForkEvent(eventName)) {\n        logger.warn(\"not implemented\");\n        throw new Error(\"not implemented\");\n\n    } else if (eventName && typeof(eventName) === \"object\") {\n        return \"filter:\" + (eventName.address || \"*\") + \":\" + serializeTopics(eventName.topics || []);\n    }\n\n    throw new Error(\"invalid event - \" + eventName);\n}\n\n//////////////////////////////\n// Helper Object\n\nfunction getTime() {\n    return (new Date()).getTime();\n}\n\nfunction stall(duration: number): Promise<void> {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\n\n//////////////////////////////\n// Provider Object\n\n\n/**\n *  EventType\n *   - \"block\"\n *   - \"poll\"\n *   - \"didPoll\"\n *   - \"pending\"\n *   - \"error\"\n *   - \"network\"\n *   - filter\n *   - topics array\n *   - transaction hash\n */\n\nconst PollableEvents = [ \"block\", \"network\", \"pending\", \"poll\" ];\n\nexport class Event {\n    readonly listener: Listener;\n    readonly once: boolean;\n    readonly tag: string;\n\n    _lastBlockNumber: number\n    _inflight: boolean;\n\n    constructor(tag: string, listener: Listener, once: boolean) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"listener\", listener);\n        defineReadOnly(this, \"once\", once);\n\n        this._lastBlockNumber = -2;\n        this._inflight = false;\n    }\n\n    get event(): EventType {\n        switch (this.type) {\n            case \"tx\":\n               return this.hash;\n            case \"filter\":\n               return this.filter;\n        }\n        return this.tag;\n    }\n\n    get type(): string {\n        return this.tag.split(\":\")[0]\n    }\n\n    get hash(): string {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"tx\") { return null; }\n        return comps[1];\n    }\n\n    get filter(): Filter {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"filter\") { return null; }\n        const address = comps[1];\n\n        const topics = deserializeTopics(comps[2]);\n        const filter: Filter = { };\n\n        if (topics.length > 0) { filter.topics = topics; }\n        if (address && address !== \"*\") { filter.address = address; }\n\n        return filter;\n    }\n\n    pollable(): boolean {\n        return (this.tag.indexOf(\":\") >= 0 || PollableEvents.indexOf(this.tag) >= 0);\n    }\n}\n\nexport interface EnsResolver {\n\n    // Name this Resolver is associated with\n    readonly name: string;\n\n    // The address of the resolver\n    readonly address: string;\n\n    // Multichain address resolution (also normal address resolution)\n    // See: https://eips.ethereum.org/EIPS/eip-2304\n    getAddress(coinType?: 60): Promise<null | string>\n\n    // Contenthash field\n    // See: https://eips.ethereum.org/EIPS/eip-1577\n    getContentHash(): Promise<null | string>;\n\n    // Storage of text records\n    // See: https://eips.ethereum.org/EIPS/eip-634\n    getText(key: string): Promise<null | string>;\n};\n\nexport interface EnsProvider {\n    resolveName(name: string): Promise<null | string>;\n    lookupAddress(address: string): Promise<null | string>;\n    getResolver(name: string): Promise<null | EnsResolver>;\n}\n\ntype CoinInfo = {\n    symbol: string,\n    ilk?: string,     // General family\n    prefix?: string,  // Bech32 prefix\n    p2pkh?: number,   // Pay-to-Public-Key-Hash Version\n    p2sh?: number,    // Pay-to-Script-Hash Version\n};\n\n// https://github.com/satoshilabs/slips/blob/master/slip-0044.md\nconst coinInfos: { [ coinType: string ]: CoinInfo } = {\n    \"0\":   { symbol: \"btc\",  p2pkh: 0x00, p2sh: 0x05, prefix: \"bc\" },\n    \"2\":   { symbol: \"ltc\",  p2pkh: 0x30, p2sh: 0x32, prefix: \"ltc\" },\n    \"3\":   { symbol: \"doge\", p2pkh: 0x1e, p2sh: 0x16 },\n    \"60\":  { symbol: \"eth\",  ilk: \"eth\" },\n    \"61\":  { symbol: \"etc\",  ilk: \"eth\" },\n    \"700\": { symbol: \"xdai\", ilk: \"eth\" },\n};\n\nfunction bytes32ify(value: number): string {\n    return hexZeroPad(BigNumber.from(value).toHexString(), 32);\n}\n\n// Compute the Base58Check encoded data (checksum is first 4 bytes of sha256d)\nfunction base58Encode(data: Uint8Array): string {\n    return Base58.encode(concat([ data, hexDataSlice(sha256(sha256(data)), 0, 4) ]));\n}\n\nexport interface Avatar {\n    url: string;\n    linkage: Array<{ type: string, content: string }>;\n}\n\nconst matcherIpfs = new RegExp(\"^(ipfs):/\\/(.*)$\", \"i\");\nconst matchers = [\n    new RegExp(\"^(https):/\\/(.*)$\", \"i\"),\n    new RegExp(\"^(data):(.*)$\", \"i\"),\n    matcherIpfs,\n    new RegExp(\"^eip155:[0-9]+/(erc[0-9]+):(.*)$\", \"i\"),\n];\n\nfunction _parseString(result: string, start: number): null | string {\n    try {\n        return toUtf8String(_parseBytes(result, start));\n    } catch(error) { }\n    return null;\n}\n\nfunction _parseBytes(result: string, start: number): null | string {\n    if (result === \"0x\") { return null; }\n\n    const offset = BigNumber.from(hexDataSlice(result, start, start + 32)).toNumber();\n    const length = BigNumber.from(hexDataSlice(result, offset, offset + 32)).toNumber();\n\n    return hexDataSlice(result, offset + 32, offset + 32 + length);\n}\n\n// Trim off the ipfs:// prefix and return the default gateway URL\nfunction getIpfsLink(link: string): string {\n    if (link.match(/^ipfs:\\/\\/ipfs\\//i)) {\n        link = link.substring(12);\n    } else if (link.match(/^ipfs:\\/\\//i)) {\n        link = link.substring(7);\n    } else {\n        logger.throwArgumentError(\"unsupported IPFS format\", \"link\", link);\n    }\n\n    return `https:/\\/gateway.ipfs.io/ipfs/${ link }`;\n}\n\nfunction numPad(value: number): Uint8Array {\n    const result = arrayify(value);\n    if (result.length > 32) { throw new Error(\"internal; should not happen\"); }\n\n    const padded = new Uint8Array(32);\n    padded.set(result, 32 - result.length);\n    return padded;\n}\n\nfunction bytesPad(value: Uint8Array): Uint8Array {\n    if ((value.length % 32) === 0) { return value; }\n\n    const result = new Uint8Array(Math.ceil(value.length / 32) * 32);\n    result.set(value);\n    return result;\n}\n\n// ABI Encodes a series of (bytes, bytes, ...)\nfunction encodeBytes(datas: Array<BytesLike>) {\n    const result: Array<Uint8Array> = [ ];\n\n    let byteCount = 0;\n\n    // Add place-holders for pointers as we add items\n    for (let i = 0; i < datas.length; i++) {\n        result.push(null);\n        byteCount += 32;\n    }\n\n    for (let i = 0; i < datas.length; i++) {\n        const data = arrayify(datas[i]);\n\n        // Update the bytes offset\n        result[i] = numPad(byteCount);\n\n        // The length and padded value of data\n        result.push(numPad(data.length));\n        result.push(bytesPad(data));\n        byteCount += 32 + Math.ceil(data.length / 32) * 32;\n    }\n\n    return hexConcat(result);\n}\n\nexport class Resolver implements EnsResolver {\n    readonly provider: BaseProvider;\n\n    readonly name: string;\n    readonly address: string;\n\n    readonly _resolvedAddress: null | string;\n\n    // For EIP-2544 names, the ancestor that provided the resolver\n    _supportsEip2544: null | Promise<boolean>;\n\n    // The resolvedAddress is only for creating a ReverseLookup resolver\n    constructor(provider: BaseProvider, address: string, name: string, resolvedAddress?: string) {\n        defineReadOnly(this, \"provider\", provider);\n        defineReadOnly(this, \"name\", name);\n        defineReadOnly(this, \"address\", provider.formatter.address(address));\n        defineReadOnly(this, \"_resolvedAddress\", resolvedAddress);\n    }\n\n    supportsWildcard(): Promise<boolean> {\n        if (!this._supportsEip2544) {\n            // supportsInterface(bytes4 = selector(\"resolve(bytes,bytes)\"))\n            this._supportsEip2544 = this.provider.call({\n                to: this.address,\n                data: \"0x01ffc9a79061b92300000000000000000000000000000000000000000000000000000000\"\n            }).then((result) => {\n                return BigNumber.from(result).eq(1);\n            }).catch((error) => {\n                if (error.code === Logger.errors.CALL_EXCEPTION) { return false; }\n                // Rethrow the error: link is down, etc. Let future attempts retry.\n                this._supportsEip2544 = null;\n                throw error;\n            });\n        }\n\n        return this._supportsEip2544;\n    }\n\n    async _fetch(selector: string, parameters?: string): Promise<null | string> {\n\n        // e.g. keccak256(\"addr(bytes32,uint256)\")\n        const tx = {\n            to: this.address,\n            ccipReadEnabled: true,\n            data: hexConcat([ selector, namehash(this.name), (parameters || \"0x\") ])\n        };\n\n        // Wildcard support; use EIP-2544 to resolve the request\n        let parseBytes = false;\n        if (await this.supportsWildcard()) {\n            parseBytes = true;\n\n            // selector(\"resolve(bytes,bytes)\")\n            tx.data = hexConcat([ \"0x9061b923\", encodeBytes([ dnsEncode(this.name), tx.data ]) ]);\n        }\n\n        try {\n            let result = await this.provider.call(tx);\n            if ((arrayify(result).length % 32) === 4) {\n                logger.throwError(\"resolver threw error\", Logger.errors.CALL_EXCEPTION, {\n                    transaction: tx, data: result\n                });\n            }\n            if (parseBytes) { result = _parseBytes(result, 0); }\n            return result;\n        } catch (error) {\n            if (error.code === Logger.errors.CALL_EXCEPTION) { return null; }\n            throw error;\n        }\n    }\n\n    async _fetchBytes(selector: string, parameters?: string): Promise<null | string> {\n        const result = await this._fetch(selector, parameters);\n        if (result != null) { return _parseBytes(result, 0); }\n        return null;\n    }\n\n    _getAddress(coinType: number, hexBytes: string): string {\n        const coinInfo = coinInfos[String(coinType)];\n\n        if (coinInfo == null) {\n            logger.throwError(`unsupported coin type: ${ coinType }`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `getAddress(${ coinType })`\n            });\n        }\n\n        if (coinInfo.ilk === \"eth\") {\n            return this.provider.formatter.address(hexBytes);\n        }\n\n        const bytes = arrayify(hexBytes);\n\n        // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG\n        if (coinInfo.p2pkh != null) {\n            const p2pkh = hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);\n            if (p2pkh) {\n                const length = parseInt(p2pkh[1], 16);\n                if (p2pkh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([ [ coinInfo.p2pkh ], (\"0x\" + p2pkh[2]) ]));\n                }\n            }\n        }\n\n        // P2SH: OP_HASH160 <scriptHash> OP_EQUAL\n        if (coinInfo.p2sh != null) {\n            const p2sh = hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);\n            if (p2sh) {\n                const length = parseInt(p2sh[1], 16);\n                if (p2sh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([ [ coinInfo.p2sh ], (\"0x\" + p2sh[2]) ]));\n                }\n            }\n        }\n\n        // Bech32\n        if (coinInfo.prefix != null) {\n            const length = bytes[1];\n\n            // https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki#witness-program\n            let version = bytes[0];\n            if (version === 0x00) {\n                if (length !== 20 && length !== 32) {\n                    version = -1;\n                }\n            } else {\n                version = -1;\n            }\n\n            if (version >= 0 && bytes.length === 2 + length && length >= 1 && length <= 75) {\n                const words = bech32.toWords(bytes.slice(2));\n                words.unshift(version);\n                return bech32.encode(coinInfo.prefix, words);\n            }\n        }\n\n        return null;\n    }\n\n\n    async getAddress(coinType?: number): Promise<string> {\n        if (coinType == null) { coinType = 60; }\n\n        // If Ethereum, use the standard `addr(bytes32)`\n        if (coinType === 60) {\n            try {\n                // keccak256(\"addr(bytes32)\")\n                const result = await this._fetch(\"0x3b3b57de\");\n\n                // No address\n                if (result === \"0x\" || result === HashZero) { return null; }\n\n                return this.provider.formatter.callAddress(result);\n            } catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) { return null; }\n                throw error;\n            }\n        }\n\n        // keccak256(\"addr(bytes32,uint256\")\n        const hexBytes = await this._fetchBytes(\"0xf1cb7e06\", bytes32ify(coinType));\n\n        // No address\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        // Compute the address\n        const address = this._getAddress(coinType, hexBytes);\n\n        if (address == null) {\n            logger.throwError(`invalid or unsupported coin data`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `getAddress(${ coinType })`,\n                coinType: coinType,\n                data: hexBytes\n            });\n        }\n\n        return address;\n    }\n\n    async getAvatar(): Promise<null | Avatar> {\n        const linkage: Array<{ type: string, content: string }> = [ { type: \"name\", content: this.name } ];\n        try {\n            // test data for ricmoo.eth\n            //const avatar = \"eip155:1/erc721:0x265385c7f4132228A0d54EB1A9e7460b91c0cC68/29233\";\n            const avatar = await this.getText(\"avatar\");\n            if (avatar == null) { return null; }\n\n            for (let i = 0; i < matchers.length; i++) {\n                const match = avatar.match(matchers[i]);\n                if (match == null) { continue; }\n\n                const scheme = match[1].toLowerCase();\n\n                switch (scheme) {\n                    case \"https\":\n                        linkage.push({ type: \"url\", content: avatar });\n                        return { linkage, url: avatar };\n\n                    case \"data\":\n                        linkage.push({ type: \"data\", content: avatar });\n                        return { linkage, url: avatar };\n\n                    case \"ipfs\":\n                        linkage.push({ type: \"ipfs\", content: avatar });\n                        return { linkage, url: getIpfsLink(avatar) };\n\n                    case \"erc721\":\n                    case \"erc1155\": {\n                        // Depending on the ERC type, use tokenURI(uint256) or url(uint256)\n                        const selector = (scheme === \"erc721\") ? \"0xc87b56dd\": \"0x0e89341c\";\n                        linkage.push({ type: scheme, content: avatar });\n\n                        // The owner of this name\n                        const owner = (this._resolvedAddress || await this.getAddress());\n\n                        const comps = (match[2] || \"\").split(\"/\");\n                        if (comps.length !== 2) { return null; }\n\n                        const addr = await this.provider.formatter.address(comps[0]);\n                        const tokenId = hexZeroPad(BigNumber.from(comps[1]).toHexString(), 32);\n\n                        // Check that this account owns the token\n                        if (scheme === \"erc721\") {\n                            // ownerOf(uint256 tokenId)\n                            const tokenOwner = this.provider.formatter.callAddress(await this.provider.call({\n                                to: addr, data: hexConcat([ \"0x6352211e\", tokenId ])\n                            }));\n                            if (owner !== tokenOwner) { return null; }\n                            linkage.push({ type: \"owner\", content: tokenOwner });\n\n                        } else if (scheme === \"erc1155\") {\n                            // balanceOf(address owner, uint256 tokenId)\n                            const balance = BigNumber.from(await this.provider.call({\n                                to: addr, data: hexConcat([ \"0x00fdd58e\", hexZeroPad(owner, 32), tokenId ])\n                            }));\n                            if (balance.isZero()) { return null; }\n                            linkage.push({ type: \"balance\", content: balance.toString() });\n                        }\n\n                        // Call the token contract for the metadata URL\n                        const tx = {\n                            to: this.provider.formatter.address(comps[0]),\n                            data: hexConcat([ selector, tokenId ])\n                        };\n\n                        let metadataUrl = _parseString(await this.provider.call(tx), 0);\n                        if (metadataUrl == null) { return null; }\n                        linkage.push({ type: \"metadata-url-base\", content: metadataUrl });\n\n                        // ERC-1155 allows a generic {id} in the URL\n                        if (scheme === \"erc1155\") {\n                            metadataUrl = metadataUrl.replace(\"{id}\", tokenId.substring(2));\n                            linkage.push({ type: \"metadata-url-expanded\", content: metadataUrl });\n                        }\n\n                        // Transform IPFS metadata links\n                        if (metadataUrl.match(/^ipfs:/i)) {\n                            metadataUrl = getIpfsLink(metadataUrl);\n                        }\n\n                        linkage.push({ type: \"metadata-url\", content: metadataUrl });\n\n                        // Get the token metadata\n                        const metadata = await fetchJson(metadataUrl);\n                        if (!metadata) { return null; }\n                        linkage.push({ type: \"metadata\", content: JSON.stringify(metadata) });\n\n                        // Pull the image URL out\n                        let imageUrl = metadata.image;\n                        if (typeof(imageUrl) !== \"string\") { return null; }\n\n                        if (imageUrl.match(/^(https:\\/\\/|data:)/i)) {\n                            // Allow\n                        } else {\n                            // Transform IPFS link to gateway\n                            const ipfs = imageUrl.match(matcherIpfs);\n                            if (ipfs == null) { return null; }\n\n                            linkage.push({ type: \"url-ipfs\", content: imageUrl });\n                            imageUrl = getIpfsLink(imageUrl);\n                        }\n\n                        linkage.push({ type: \"url\", content: imageUrl });\n\n                        return { linkage, url: imageUrl };\n                    }\n                }\n            }\n        } catch (error) { }\n\n        return null;\n    }\n\n    async getContentHash(): Promise<string> {\n\n        // keccak256(\"contenthash()\")\n        const hexBytes = await this._fetchBytes(\"0xbc1c58d1\");\n\n        // No contenthash\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        // IPFS (CID: 1, Type: DAG-PB)\n        const ipfs = hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n        if (ipfs) {\n            const length = parseInt(ipfs[3], 16);\n            if (ipfs[4].length === length * 2) {\n                return \"ipfs:/\\/\" + Base58.encode(\"0x\" + ipfs[1]);\n            }\n        }\n\n        // IPNS (CID: 1, Type: libp2p-key)\n        const ipns = hexBytes.match(/^0xe5010172(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n        if (ipns) {\n            const length = parseInt(ipns[3], 16);\n            if (ipns[4].length === length * 2) {\n                return \"ipns:/\\/\" + Base58.encode(\"0x\" + ipns[1]);\n            }\n        }\n\n        // Swarm (CID: 1, Type: swarm-manifest; hash/length hard-coded to keccak256/32)\n        const swarm = hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/)\n        if (swarm) {\n            if (swarm[1].length === (32 * 2)) {\n                return \"bzz:/\\/\" + swarm[1]\n            }\n        }\n\n        const skynet = hexBytes.match(/^0x90b2c605([0-9a-f]*)$/);\n        if (skynet) {\n            if (skynet[1].length === (34 * 2)) {\n                // URL Safe base64; https://datatracker.ietf.org/doc/html/rfc4648#section-5\n                const urlSafe: Record<string, string> = { \"=\": \"\", \"+\": \"-\", \"/\": \"_\" };\n                const hash = base64Encode(\"0x\" + skynet[1]).replace(/[=+\\/]/g, (a) => (urlSafe[a]));\n                return \"sia:/\\/\" + hash;\n            }\n        }\n\n        return logger.throwError(`invalid or unsupported content hash data`, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"getContentHash()\",\n            data: hexBytes\n        });\n    }\n\n    async getText(key: string): Promise<string> {\n\n        // The key encoded as parameter to fetchBytes\n        let keyBytes = toUtf8Bytes(key);\n\n        // The nodehash consumes the first slot, so the string pointer targets\n        // offset 64, with the length at offset 64 and data starting at offset 96\n        keyBytes = concat([ bytes32ify(64), bytes32ify(keyBytes.length), keyBytes ]);\n\n        // Pad to word-size (32 bytes)\n        if ((keyBytes.length % 32) !== 0) {\n            keyBytes = concat([ keyBytes, hexZeroPad(\"0x\", 32 - (key.length % 32)) ])\n        }\n\n        const hexBytes = await this._fetchBytes(\"0x59d1d43c\", hexlify(keyBytes));\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        return toUtf8String(hexBytes);\n    }\n}\n\nlet defaultFormatter: Formatter = null;\n\nlet nextPollId = 1;\n\nexport class BaseProvider extends Provider implements EnsProvider {\n    _networkPromise: Promise<Network>;\n    _network: Network;\n\n    _events: Array<Event>;\n\n    formatter: Formatter;\n\n    // To help mitigate the eventually consistent nature of the blockchain\n    // we keep a mapping of events we emit. If we emit an event X, we expect\n    // that a user should be able to query for that event in the callback,\n    // if the node returns null, we stall the response until we get back a\n    // meaningful value, since we may be hitting a re-org, or a node that\n    // has not indexed the event yet.\n    // Events:\n    //   - t:{hash}    - Transaction hash\n    //   - b:{hash}    - BlockHash\n    //   - block       - The most recent emitted block\n    _emitted: { [ eventName: string ]: number | \"pending\" };\n\n    _pollingInterval: number;\n    _poller: NodeJS.Timer;\n    _bootstrapPoll: NodeJS.Timer;\n\n    _lastBlockNumber: number;\n    _maxFilterBlockRange: number;\n\n    _fastBlockNumber: number;\n    _fastBlockNumberPromise: Promise<number>;\n    _fastQueryDate: number;\n\n    _maxInternalBlockNumber: number;\n    _internalBlockNumber: Promise<{ blockNumber: number, reqTime: number, respTime: number }>;\n\n    readonly anyNetwork: boolean;\n\n    disableCcipRead: boolean;\n\n\n    /**\n     *  ready\n     *\n     *  A Promise<Network> that resolves only once the provider is ready.\n     *\n     *  Sub-classes that call the super with a network without a chainId\n     *  MUST set this. Standard named networks have a known chainId.\n     *\n     */\n\n    constructor(network: Networkish | Promise<Network>) {\n        super();\n\n        // Events being listened to\n        this._events = [];\n\n        this._emitted = { block: -2 };\n\n        this.disableCcipRead = false;\n\n        this.formatter = new.target.getFormatter();\n\n        // If network is any, this Provider allows the underlying\n        // network to change dynamically, and we auto-detect the\n        // current network\n        defineReadOnly(this, \"anyNetwork\", (network === \"any\"));\n        if (this.anyNetwork) { network = this.detectNetwork(); }\n\n        if (network instanceof Promise) {\n            this._networkPromise = network;\n\n            // Squash any \"unhandled promise\" errors; that do not need to be handled\n            network.catch((error) => { });\n\n            // Trigger initial network setting (async)\n            this._ready().catch((error) => { });\n\n        } else {\n            const knownNetwork = getStatic<(network: Networkish) => Network>(new.target, \"getNetwork\")(network);\n            if (knownNetwork) {\n                defineReadOnly(this, \"_network\", knownNetwork);\n                this.emit(\"network\", knownNetwork, null);\n\n            } else {\n                logger.throwArgumentError(\"invalid network\", \"network\", network);\n            }\n        }\n\n        this._maxInternalBlockNumber = -1024;\n\n        this._lastBlockNumber = -2;\n        this._maxFilterBlockRange = 10;\n\n        this._pollingInterval = 4000;\n\n        this._fastQueryDate = 0;\n    }\n\n    async _ready(): Promise<Network> {\n        if (this._network == null) {\n            let network: Network = null;\n            if (this._networkPromise) {\n                try {\n                    network = await this._networkPromise;\n                } catch (error) { }\n            }\n\n            // Try the Provider's network detection (this MUST throw if it cannot)\n            if (network == null) {\n                network = await this.detectNetwork();\n            }\n\n            // This should never happen; every Provider sub-class should have\n            // suggested a network by here (or have thrown).\n            if (!network) {\n                logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, { });\n            }\n\n            // Possible this call stacked so do not call defineReadOnly again\n            if (this._network == null) {\n                if (this.anyNetwork) {\n                    this._network = network;\n                } else {\n                    defineReadOnly(this, \"_network\", network);\n                }\n                this.emit(\"network\", network, null);\n            }\n        }\n\n        return this._network;\n    }\n\n    // This will always return the most recently established network.\n    // For \"any\", this can change (a \"network\" event is emitted before\n    // any change is reflected); otherwise this cannot change\n    get ready(): Promise<Network> {\n        return poll(() => {\n            return this._ready().then((network) => {\n                return network;\n            }, (error) => {\n                // If the network isn't running yet, we will wait\n                if (error.code === Logger.errors.NETWORK_ERROR && error.event === \"noNetwork\") {\n                    return undefined;\n                }\n                throw error;\n            });\n        });\n    }\n\n    // @TODO: Remove this and just create a singleton formatter\n    static getFormatter(): Formatter {\n        if (defaultFormatter == null) {\n            defaultFormatter = new Formatter();\n        }\n        return defaultFormatter;\n    }\n\n    // @TODO: Remove this and just use getNetwork\n    static getNetwork(network: Networkish): Network {\n        return getNetwork((network == null) ? \"homestead\": network);\n    }\n\n    async ccipReadFetch(tx: Transaction, calldata: string, urls: Array<string>): Promise<null | string> {\n        if (this.disableCcipRead || urls.length === 0) { return null; }\n\n        const sender = tx.to.toLowerCase();\n        const data = calldata.toLowerCase();\n\n        const errorMessages: Array<string> = [ ];\n\n        for (let i = 0; i < urls.length; i++) {\n            const url = urls[i];\n\n            // URL expansion\n            const href = url.replace(\"{sender}\", sender).replace(\"{data}\", data);\n\n            // If no {data} is present, use POST; otherwise GET\n            const json: string | null = (url.indexOf(\"{data}\") >= 0) ? null: JSON.stringify({ data, sender });\n\n            const result = await fetchJson({ url: href, errorPassThrough: true }, json, (value, response) => {\n                value.status = response.statusCode;\n                return value;\n            });\n\n            if (result.data) { return result.data; }\n\n            const errorMessage = (result.message || \"unknown error\");\n\n            // 4xx indicates the result is not present; stop\n            if (result.status >= 400 && result.status < 500) {\n                return logger.throwError(`response not found during CCIP fetch: ${ errorMessage }`, Logger.errors.SERVER_ERROR, { url, errorMessage });\n            }\n\n            // 5xx indicates server issue; try the next url\n            errorMessages.push(errorMessage);\n        }\n\n        return logger.throwError(`error encountered during CCIP fetch: ${ errorMessages.map((m) => JSON.stringify(m)).join(\", \") }`, Logger.errors.SERVER_ERROR, {\n            urls, errorMessages\n        });\n    }\n\n    // Fetches the blockNumber, but will reuse any result that is less\n    // than maxAge old or has been requested since the last request\n    async _getInternalBlockNumber(maxAge: number): Promise<number> {\n        await this._ready();\n\n        // Allowing stale data up to maxAge old\n        if (maxAge > 0) {\n\n            // While there are pending internal block requests...\n            while (this._internalBlockNumber) {\n\n                // ...\"remember\" which fetch we started with\n                const internalBlockNumber = this._internalBlockNumber;\n\n                try {\n                    // Check the result is not too stale\n                    const result = await internalBlockNumber;\n                    if ((getTime() - result.respTime) <= maxAge) {\n                        return result.blockNumber;\n                    }\n\n                    // Too old; fetch a new value\n                    break;\n\n                } catch(error) {\n\n                    // The fetch rejected; if we are the first to get the\n                    // rejection, drop through so we replace it with a new\n                    // fetch; all others blocked will then get that fetch\n                    // which won't match the one they \"remembered\" and loop\n                    if (this._internalBlockNumber === internalBlockNumber) {\n                        break;\n                    }\n                }\n            }\n        }\n\n        const reqTime = getTime();\n\n        const checkInternalBlockNumber = resolveProperties({\n            blockNumber: this.perform(\"getBlockNumber\", { }),\n            networkError: this.getNetwork().then((network) => (null), (error) => (error))\n        }).then(({ blockNumber, networkError }) => {\n            if (networkError) {\n                // Unremember this bad internal block number\n                if (this._internalBlockNumber === checkInternalBlockNumber) {\n                    this._internalBlockNumber = null;\n                }\n                throw networkError;\n            }\n\n            const respTime = getTime();\n\n            blockNumber = BigNumber.from(blockNumber).toNumber();\n            if (blockNumber < this._maxInternalBlockNumber) { blockNumber = this._maxInternalBlockNumber; }\n\n            this._maxInternalBlockNumber = blockNumber;\n            this._setFastBlockNumber(blockNumber); // @TODO: Still need this?\n            return { blockNumber, reqTime, respTime };\n        });\n\n        this._internalBlockNumber = checkInternalBlockNumber;\n\n        // Swallow unhandled exceptions; if needed they are handled else where\n        checkInternalBlockNumber.catch((error) => {\n            // Don't null the dead (rejected) fetch, if it has already been updated\n            if (this._internalBlockNumber === checkInternalBlockNumber) {\n                this._internalBlockNumber = null;\n            }\n        });\n\n        return (await checkInternalBlockNumber).blockNumber;\n    }\n\n    async poll(): Promise<void> {\n        const pollId = nextPollId++;\n\n        // Track all running promises, so we can trigger a post-poll once they are complete\n        const runners: Array<Promise<void>> = [];\n\n        let blockNumber: number = null;\n        try {\n            blockNumber = await this._getInternalBlockNumber(100 + this.pollingInterval / 2);\n        } catch (error) {\n            this.emit(\"error\", error);\n            return;\n        }\n        this._setFastBlockNumber(blockNumber);\n\n        // Emit a poll event after we have the latest (fast) block number\n        this.emit(\"poll\", pollId, blockNumber);\n\n        // If the block has not changed, meh.\n        if (blockNumber === this._lastBlockNumber) {\n            this.emit(\"didPoll\", pollId);\n            return;\n        }\n\n        // First polling cycle, trigger a \"block\" events\n        if (this._emitted.block === -2) {\n            this._emitted.block = blockNumber - 1;\n        }\n\n        if (Math.abs((<number>(this._emitted.block)) - blockNumber) > 1000) {\n            logger.warn(`network block skew detected; skipping block events (emitted=${ this._emitted.block } blockNumber${ blockNumber })`);\n            this.emit(\"error\", logger.makeError(\"network block skew detected\", Logger.errors.NETWORK_ERROR, {\n                blockNumber: blockNumber,\n                event: \"blockSkew\",\n                previousBlockNumber: this._emitted.block\n            }));\n            this.emit(\"block\", blockNumber);\n\n        } else {\n            // Notify all listener for each block that has passed\n            for (let i = (<number>this._emitted.block) + 1; i <= blockNumber; i++) {\n                this.emit(\"block\", i);\n            }\n        }\n\n        // The emitted block was updated, check for obsolete events\n        if ((<number>this._emitted.block) !== blockNumber) {\n            this._emitted.block = blockNumber;\n\n            Object.keys(this._emitted).forEach((key) => {\n                // The block event does not expire\n                if (key === \"block\") { return; }\n\n                // The block we were at when we emitted this event\n                const eventBlockNumber = this._emitted[key];\n\n                // We cannot garbage collect pending transactions or blocks here\n                // They should be garbage collected by the Provider when setting\n                // \"pending\" events\n                if (eventBlockNumber === \"pending\") { return; }\n\n                // Evict any transaction hashes or block hashes over 12 blocks\n                // old, since they should not return null anyways\n                if (blockNumber - eventBlockNumber > 12) {\n                    delete this._emitted[key];\n                }\n            });\n        }\n\n        // First polling cycle\n        if (this._lastBlockNumber === -2) {\n            this._lastBlockNumber = blockNumber - 1;\n        }\n        // Find all transaction hashes we are waiting on\n        this._events.forEach((event) => {\n            switch (event.type) {\n                case \"tx\": {\n                    const hash = event.hash;\n                    let runner = this.getTransactionReceipt(hash).then((receipt) => {\n                        if (!receipt || receipt.blockNumber == null) { return null; }\n                        this._emitted[\"t:\" + hash] = receipt.blockNumber;\n                        this.emit(hash, receipt);\n                        return null;\n                    }).catch((error: Error) => { this.emit(\"error\", error); });\n\n                    runners.push(runner);\n\n                    break;\n                }\n\n                case \"filter\": {\n                    // We only allow a single getLogs to be in-flight at a time\n                    if (!event._inflight) {\n                        event._inflight = true;\n\n                        // This is the first filter for this event, so we want to\n                        // restrict events to events that happened no earlier than now\n                        if (event._lastBlockNumber === -2) {\n                            event._lastBlockNumber = blockNumber - 1;\n                        }\n\n                        // Filter from the last *known* event; due to load-balancing\n                        // and some nodes returning updated block numbers before\n                        // indexing events, a logs result with 0 entries cannot be\n                        // trusted and we must retry a range which includes it again\n                        const filter = event.filter;\n                        filter.fromBlock = event._lastBlockNumber + 1;\n                        filter.toBlock = blockNumber;\n\n                        // Prevent fitler ranges from growing too wild, since it is quite\n                        // likely there just haven't been any events to move the lastBlockNumber.\n                        const minFromBlock = filter.toBlock - this._maxFilterBlockRange;\n                        if (minFromBlock > filter.fromBlock) { filter.fromBlock = minFromBlock; }\n\n                        if (filter.fromBlock < 0) { filter.fromBlock = 0; }\n\n                        const runner = this.getLogs(filter).then((logs) => {\n                            // Allow the next getLogs\n                            event._inflight = false;\n\n                            if (logs.length === 0) { return; }\n\n                            logs.forEach((log: Log) => {\n                                // Only when we get an event for a given block number\n                                // can we trust the events are indexed\n                                if (log.blockNumber > event._lastBlockNumber) {\n                                    event._lastBlockNumber = log.blockNumber;\n                                }\n\n                                // Make sure we stall requests to fetch blocks and txs\n                                this._emitted[\"b:\" + log.blockHash] = log.blockNumber;\n                                this._emitted[\"t:\" + log.transactionHash] = log.blockNumber;\n\n                                this.emit(filter, log);\n                            });\n                        }).catch((error: Error) => {\n                            this.emit(\"error\", error);\n\n                            // Allow another getLogs (the range was not updated)\n                            event._inflight = false;\n                        });\n                        runners.push(runner);\n                    }\n\n                    break;\n                }\n            }\n        });\n\n        this._lastBlockNumber = blockNumber;\n\n        // Once all events for this loop have been processed, emit \"didPoll\"\n        Promise.all(runners).then(() => {\n            this.emit(\"didPoll\", pollId);\n        }).catch((error) => { this.emit(\"error\", error); });\n\n        return;\n    }\n\n    // Deprecated; do not use this\n    resetEventsBlock(blockNumber: number): void {\n        this._lastBlockNumber = blockNumber - 1;\n        if (this.polling) { this.poll(); }\n    }\n\n    get network(): Network {\n        return this._network;\n    }\n\n    // This method should query the network if the underlying network\n    // can change, such as when connected to a JSON-RPC backend\n    async detectNetwork(): Promise<Network> {\n        return logger.throwError(\"provider does not support network detection\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"provider.detectNetwork\"\n        });\n    }\n\n    async getNetwork(): Promise<Network> {\n        const network = await this._ready();\n\n        // Make sure we are still connected to the same network; this is\n        // only an external call for backends which can have the underlying\n        // network change spontaneously\n        const currentNetwork = await this.detectNetwork();\n        if (network.chainId !== currentNetwork.chainId) {\n\n            // We are allowing network changes, things can get complex fast;\n            // make sure you know what you are doing if you use \"any\"\n            if (this.anyNetwork) {\n                this._network = currentNetwork;\n\n                // Reset all internal block number guards and caches\n                this._lastBlockNumber = -2;\n                this._fastBlockNumber = null;\n                this._fastBlockNumberPromise = null;\n                this._fastQueryDate = 0;\n                this._emitted.block = -2;\n                this._maxInternalBlockNumber = -1024;\n                this._internalBlockNumber = null;\n\n                // The \"network\" event MUST happen before this method resolves\n                // so any events have a chance to unregister, so we stall an\n                // additional event loop before returning from /this/ call\n                this.emit(\"network\", currentNetwork, network);\n                await stall(0);\n\n                return this._network;\n            }\n\n            const error = logger.makeError(\"underlying network changed\", Logger.errors.NETWORK_ERROR, {\n                event: \"changed\",\n                network: network,\n                detectedNetwork: currentNetwork\n            });\n\n            this.emit(\"error\", error);\n            throw error;\n        }\n\n        return network;\n    }\n\n    get blockNumber(): number {\n        this._getInternalBlockNumber(100 + this.pollingInterval / 2).then((blockNumber) => {\n            this._setFastBlockNumber(blockNumber);\n        }, (error) => { });\n\n        return (this._fastBlockNumber != null) ? this._fastBlockNumber: -1;\n    }\n\n    get polling(): boolean {\n        return (this._poller != null);\n    }\n\n    set polling(value: boolean) {\n        if (value && !this._poller) {\n            this._poller = setInterval(() => { this.poll(); }, this.pollingInterval);\n\n            if (!this._bootstrapPoll) {\n                this._bootstrapPoll = setTimeout(() => {\n                    this.poll();\n\n                    // We block additional polls until the polling interval\n                    // is done, to prevent overwhelming the poll function\n                    this._bootstrapPoll = setTimeout(() => {\n                        // If polling was disabled, something may require a poke\n                        // since starting the bootstrap poll and it was disabled\n                        if (!this._poller) { this.poll(); }\n\n                        // Clear out the bootstrap so we can do another\n                        this._bootstrapPoll = null;\n                    }, this.pollingInterval);\n                }, 0);\n            }\n\n        } else if (!value && this._poller) {\n            clearInterval(this._poller);\n            this._poller = null;\n        }\n    }\n\n    get pollingInterval(): number {\n        return this._pollingInterval;\n    }\n\n    set pollingInterval(value: number) {\n        if (typeof(value) !== \"number\" || value <= 0 || parseInt(String(value)) != value) {\n            throw new Error(\"invalid polling interval\");\n        }\n\n        this._pollingInterval = value;\n\n        if (this._poller) {\n            clearInterval(this._poller);\n            this._poller = setInterval(() => { this.poll(); }, this._pollingInterval);\n        }\n    }\n\n    _getFastBlockNumber(): Promise<number> {\n        const now = getTime();\n\n        // Stale block number, request a newer value\n        if ((now - this._fastQueryDate) > 2 * this._pollingInterval) {\n            this._fastQueryDate = now;\n            this._fastBlockNumberPromise = this.getBlockNumber().then((blockNumber) => {\n                if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n                    this._fastBlockNumber = blockNumber;\n                }\n                return this._fastBlockNumber;\n            });\n        }\n\n        return this._fastBlockNumberPromise;\n    }\n\n    _setFastBlockNumber(blockNumber: number): void {\n        // Older block, maybe a stale request\n        if (this._fastBlockNumber != null && blockNumber < this._fastBlockNumber) { return; }\n\n        // Update the time we updated the blocknumber\n        this._fastQueryDate = getTime();\n\n        // Newer block number, use  it\n        if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n            this._fastBlockNumber = blockNumber;\n            this._fastBlockNumberPromise = Promise.resolve(blockNumber);\n        }\n    }\n\n    async waitForTransaction(transactionHash: string, confirmations?: number, timeout?: number): Promise<TransactionReceipt> {\n        return this._waitForTransaction(transactionHash, (confirmations == null) ? 1: confirmations, timeout || 0, null);\n    }\n\n    async _waitForTransaction(transactionHash: string, confirmations: number, timeout: number, replaceable: { data: string, from: string, nonce: number, to: string, value: BigNumber, startBlock: number }): Promise<TransactionReceipt> {\n        const receipt = await this.getTransactionReceipt(transactionHash);\n\n        // Receipt is already good\n        if ((receipt ? receipt.confirmations: 0) >= confirmations) { return receipt; }\n\n        // Poll until the receipt is good...\n        return new Promise((resolve, reject) => {\n            const cancelFuncs: Array<() => void> = [];\n\n            let done = false;\n            const alreadyDone = function() {\n                if (done) { return true; }\n                done = true;\n                cancelFuncs.forEach((func) => { func(); });\n                return false;\n            };\n\n            const minedHandler = (receipt: TransactionReceipt) => {\n                if (receipt.confirmations < confirmations) { return; }\n                if (alreadyDone()) { return; }\n                resolve(receipt);\n            }\n            this.on(transactionHash, minedHandler);\n            cancelFuncs.push(() => { this.removeListener(transactionHash, minedHandler); });\n\n            if (replaceable) {\n                let lastBlockNumber = replaceable.startBlock;\n                let scannedBlock: number = null;\n                const replaceHandler = async (blockNumber: number) => {\n                    if (done) { return; }\n\n                    // Wait 1 second; this is only used in the case of a fault, so\n                    // we will trade off a little bit of latency for more consistent\n                    // results and fewer JSON-RPC calls\n                    await stall(1000);\n\n                    this.getTransactionCount(replaceable.from).then(async (nonce) => {\n                        if (done) { return; }\n\n                        if (nonce <= replaceable.nonce) {\n                            lastBlockNumber = blockNumber;\n\n                        } else {\n                            // First check if the transaction was mined\n                            {\n                                const mined = await this.getTransaction(transactionHash);\n                                if (mined && mined.blockNumber != null) { return; }\n                            }\n\n                            // First time scanning. We start a little earlier for some\n                            // wiggle room here to handle the eventually consistent nature\n                            // of blockchain (e.g. the getTransactionCount was for a\n                            // different block)\n                            if (scannedBlock == null) {\n                                scannedBlock = lastBlockNumber - 3;\n                                if (scannedBlock < replaceable.startBlock) {\n                                    scannedBlock = replaceable.startBlock;\n                                }\n                            }\n\n                            while (scannedBlock <= blockNumber) {\n                                if (done) { return; }\n\n                                const block = await this.getBlockWithTransactions(scannedBlock);\n                                for (let ti = 0; ti < block.transactions.length; ti++) {\n                                    const tx = block.transactions[ti];\n\n                                    // Successfully mined!\n                                    if (tx.hash === transactionHash) { return; }\n\n                                    // Matches our transaction from and nonce; its a replacement\n                                    if (tx.from === replaceable.from && tx.nonce === replaceable.nonce) {\n                                        if (done) { return; }\n\n                                        // Get the receipt of the replacement\n                                        const receipt = await this.waitForTransaction(tx.hash, confirmations);\n\n                                        // Already resolved or rejected (prolly a timeout)\n                                        if (alreadyDone()) { return; }\n\n                                        // The reason we were replaced\n                                        let reason = \"replaced\";\n                                        if (tx.data === replaceable.data && tx.to === replaceable.to && tx.value.eq(replaceable.value)) {\n                                            reason = \"repriced\";\n                                        } else  if (tx.data === \"0x\" && tx.from === tx.to && tx.value.isZero()) {\n                                            reason = \"cancelled\"\n                                        }\n\n                                        // Explain why we were replaced\n                                        reject(logger.makeError(\"transaction was replaced\", Logger.errors.TRANSACTION_REPLACED, {\n                                            cancelled: (reason === \"replaced\" || reason === \"cancelled\"),\n                                            reason,\n                                            replacement: this._wrapTransaction(tx),\n                                            hash: transactionHash,\n                                            receipt\n                                        }));\n\n                                        return;\n                                    }\n                                }\n                                scannedBlock++;\n                            }\n                        }\n\n                        if (done) { return; }\n                        this.once(\"block\", replaceHandler);\n\n                    }, (error) => {\n                        if (done) { return; }\n                        this.once(\"block\", replaceHandler);\n                    });\n                };\n\n                if (done) { return; }\n                this.once(\"block\", replaceHandler);\n\n                cancelFuncs.push(() => {\n                    this.removeListener(\"block\", replaceHandler);\n                });\n            }\n\n            if (typeof(timeout) === \"number\" && timeout > 0) {\n                const timer = setTimeout(() => {\n                    if (alreadyDone()) { return; }\n                    reject(logger.makeError(\"timeout exceeded\", Logger.errors.TIMEOUT, { timeout: timeout }));\n                }, timeout);\n                if (timer.unref) { timer.unref(); }\n\n                cancelFuncs.push(() => { clearTimeout(timer); });\n            }\n        });\n    }\n\n    async getBlockNumber(): Promise<number> {\n        return this._getInternalBlockNumber(0);\n    }\n\n    async getGasPrice(): Promise<BigNumber> {\n        await this.getNetwork();\n\n        const result = await this.perform(\"getGasPrice\", { });\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getGasPrice\",\n                result, error\n            });\n        }\n    }\n\n    async getBalance(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<BigNumber> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getBalance\", params);\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getBalance\",\n                params, result, error\n            });\n        }\n    }\n\n    async getTransactionCount(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<number> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getTransactionCount\", params);\n        try {\n            return BigNumber.from(result).toNumber();\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getTransactionCount\",\n                params, result, error\n            });\n        }\n    }\n\n    async getCode(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getCode\", params);\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getCode\",\n                params, result, error\n            });\n        }\n    }\n\n    async getStorageAt(addressOrName: string | Promise<string>, position: BigNumberish | Promise<BigNumberish>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag),\n            position: Promise.resolve(position).then((p) => hexValue(p))\n        });\n        const result = await this.perform(\"getStorageAt\", params);\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getStorageAt\",\n                params, result, error\n            });\n        }\n    }\n\n    // This should be called by any subclass wrapping a TransactionResponse\n    _wrapTransaction(tx: Transaction, hash?: string, startBlock?: number): TransactionResponse {\n        if (hash != null && hexDataLength(hash) !== 32) { throw new Error(\"invalid response - sendTransaction\"); }\n\n        const result = <TransactionResponse>tx;\n\n        // Check the hash we expect is the same as the hash the server reported\n        if (hash != null && tx.hash !== hash) {\n            logger.throwError(\"Transaction hash mismatch from Provider.sendTransaction.\", Logger.errors.UNKNOWN_ERROR, { expectedHash: tx.hash, returnedHash: hash });\n        }\n\n        result.wait = async (confirms?: number, timeout?: number) => {\n            if (confirms == null) { confirms = 1; }\n            if (timeout == null) { timeout = 0; }\n\n            // Get the details to detect replacement\n            let replacement = undefined;\n            if (confirms !== 0 && startBlock != null) {\n                replacement = {\n                    data: tx.data,\n                    from: tx.from,\n                    nonce: tx.nonce,\n                    to: tx.to,\n                    value: tx.value,\n                    startBlock\n                };\n            }\n\n            const receipt = await this._waitForTransaction(tx.hash, confirms, timeout, replacement);\n            if (receipt == null && confirms === 0) { return null; }\n\n            // No longer pending, allow the polling loop to garbage collect this\n            this._emitted[\"t:\" + tx.hash] = receipt.blockNumber;\n\n            if (receipt.status === 0) {\n                logger.throwError(\"transaction failed\", Logger.errors.CALL_EXCEPTION, {\n                    transactionHash: tx.hash,\n                    transaction: tx,\n                    receipt: receipt\n                });\n            }\n            return receipt;\n        };\n\n        return result;\n    }\n\n    async sendTransaction(signedTransaction: string | Promise<string>): Promise<TransactionResponse> {\n        await this.getNetwork();\n        const hexTx = await Promise.resolve(signedTransaction).then(t => hexlify(t));\n        const tx = this.formatter.transaction(signedTransaction);\n        if (tx.confirmations == null) { tx.confirmations = 0; }\n        const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n        try {\n            const hash = await this.perform(\"sendTransaction\", { signedTransaction: hexTx });\n            return this._wrapTransaction(tx, hash, blockNumber);\n        } catch (error) {\n            (<any>error).transaction = tx;\n            (<any>error).transactionHash = tx.hash;\n            throw error;\n        }\n    }\n\n    async _getTransactionRequest(transaction: Deferrable<TransactionRequest>): Promise<Transaction> {\n        const values: any = await transaction;\n\n        const tx: any = { };\n\n        [\"from\", \"to\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? this._getAddress(v): null))\n        });\n\n        [\"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"value\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? BigNumber.from(v): null));\n        });\n\n        [\"type\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => ((v != null) ? v: null));\n        });\n\n        if (values.accessList) {\n            tx.accessList = this.formatter.accessList(values.accessList);\n        }\n\n        [\"data\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? hexlify(v): null));\n        });\n\n        return this.formatter.transactionRequest(await resolveProperties(tx));\n    }\n\n    async _getFilter(filter: Filter | FilterByBlockHash | Promise<Filter | FilterByBlockHash>): Promise<Filter | FilterByBlockHash> {\n        filter = await filter;\n\n        const result: any = { };\n\n        if (filter.address != null) {\n            result.address = this._getAddress(filter.address);\n        }\n\n        [\"blockHash\", \"topics\"].forEach((key) => {\n            if ((<any>filter)[key] == null) { return; }\n            result[key] = (<any>filter)[key];\n        });\n\n        [\"fromBlock\", \"toBlock\"].forEach((key) => {\n            if ((<any>filter)[key] == null) { return; }\n            result[key] = this._getBlockTag((<any>filter)[key]);\n        });\n\n        return this.formatter.filter(await resolveProperties(result));\n    }\n\n    async _call(transaction: TransactionRequest, blockTag: BlockTag, attempt: number): Promise<string> {\n        if (attempt >= MAX_CCIP_REDIRECTS) {\n            logger.throwError(\"CCIP read exceeded maximum redirections\", Logger.errors.SERVER_ERROR, {\n                redirects: attempt, transaction\n            });\n        }\n\n        const txSender = transaction.to;\n\n        const result = await this.perform(\"call\", { transaction, blockTag });\n\n        // CCIP Read request via OffchainLookup(address,string[],bytes,bytes4,bytes)\n        if (attempt >= 0 && blockTag === \"latest\" && txSender != null && result.substring(0, 10) === \"0x556f1830\" && (hexDataLength(result) % 32 === 4)) {\n            try {\n                const data = hexDataSlice(result, 4);\n\n                // Check the sender of the OffchainLookup matches the transaction\n                const sender = hexDataSlice(data, 0, 32);\n                if (!BigNumber.from(sender).eq(txSender)) {\n                    logger.throwError(\"CCIP Read sender did not match\", Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction, data: result\n                    });\n                }\n\n                // Read the URLs from the response\n                const urls: Array<string> = [];\n                const urlsOffset = BigNumber.from(hexDataSlice(data, 32, 64)).toNumber();\n                const urlsLength = BigNumber.from(hexDataSlice(data, urlsOffset, urlsOffset + 32)).toNumber();\n                const urlsData = hexDataSlice(data, urlsOffset + 32);\n                for (let u = 0; u < urlsLength; u++) {\n                    const url = _parseString(urlsData, u * 32);\n                    if (url == null) {\n                        logger.throwError(\"CCIP Read contained corrupt URL string\", Logger.errors.CALL_EXCEPTION, {\n                            name: \"OffchainLookup\",\n                            signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                            transaction, data: result\n                        });\n                    }\n                    urls.push(url);\n                }\n\n                // Get the CCIP calldata to forward\n                const calldata = _parseBytes(data, 64);\n\n                // Get the callbackSelector (bytes4)\n                if (!BigNumber.from(hexDataSlice(data, 100, 128)).isZero()) {\n                    logger.throwError(\"CCIP Read callback selector included junk\", Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction, data: result\n                    });\n                }\n                const callbackSelector = hexDataSlice(data, 96, 100);\n\n                // Get the extra data to send back to the contract as context\n                const extraData = _parseBytes(data, 128);\n\n                const ccipResult = await this.ccipReadFetch(<Transaction>transaction, calldata, urls);\n                if (ccipResult == null) {\n                    logger.throwError(\"CCIP Read disabled or provided no URLs\", Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction, data: result\n                    });\n                }\n\n                const tx = {\n                    to: txSender,\n                    data: hexConcat([ callbackSelector, encodeBytes([ ccipResult, extraData ]) ])\n                };\n\n                return this._call(tx, blockTag, attempt + 1);\n\n            } catch (error) {\n                if (error.code === Logger.errors.SERVER_ERROR) { throw error; }\n            }\n        }\n\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"call\",\n                params: { transaction, blockTag }, result, error\n            });\n        }\n\n    }\n\n    async call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const resolved = await resolveProperties({\n            transaction: this._getTransactionRequest(transaction),\n            blockTag: this._getBlockTag(blockTag),\n            ccipReadEnabled: Promise.resolve(transaction.ccipReadEnabled)\n        });\n        return this._call(resolved.transaction, resolved.blockTag, resolved.ccipReadEnabled ? 0: -1);\n    }\n\n    async estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            transaction: this._getTransactionRequest(transaction)\n        });\n\n        const result = await this.perform(\"estimateGas\", params);\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"estimateGas\",\n                params, result, error\n            });\n        }\n    }\n\n    async _getAddress(addressOrName: string | Promise<string>): Promise<string> {\n        addressOrName = await addressOrName;\n        if (typeof(addressOrName) !== \"string\") {\n            logger.throwArgumentError(\"invalid address or ENS name\", \"name\", addressOrName);\n        }\n\n        const address = await this.resolveName(addressOrName);\n        if (address == null) {\n            logger.throwError(\"ENS name not configured\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `resolveName(${ JSON.stringify(addressOrName) })`\n            });\n        }\n        return address;\n    }\n\n    async _getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>, includeTransactions?: boolean): Promise<Block | BlockWithTransactions> {\n        await this.getNetwork();\n\n        blockHashOrBlockTag = await blockHashOrBlockTag;\n\n        // If blockTag is a number (not \"latest\", etc), this is the block number\n        let blockNumber = -128;\n\n        const params: { [key: string]: any } = {\n            includeTransactions: !!includeTransactions\n        };\n\n        if (isHexString(blockHashOrBlockTag, 32)) {\n            params.blockHash = blockHashOrBlockTag;\n        } else {\n            try {\n                params.blockTag = await this._getBlockTag(blockHashOrBlockTag);\n                if (isHexString(params.blockTag)) {\n                    blockNumber = parseInt(params.blockTag.substring(2), 16);\n                }\n            } catch (error) {\n                logger.throwArgumentError(\"invalid block hash or block tag\", \"blockHashOrBlockTag\", blockHashOrBlockTag);\n            }\n        }\n\n        return poll(async () => {\n            const block = await this.perform(\"getBlock\", params);\n\n            // Block was not found\n            if (block == null) {\n\n                // For blockhashes, if we didn't say it existed, that blockhash may\n                // not exist. If we did see it though, perhaps from a log, we know\n                // it exists, and this node is just not caught up yet.\n                if (params.blockHash != null) {\n                    if (this._emitted[\"b:\" + params.blockHash] == null) { return null; }\n                }\n\n                // For block tags, if we are asking for a future block, we return null\n                if (params.blockTag != null) {\n                    if (blockNumber > this._emitted.block) { return null; }\n                }\n\n                // Retry on the next block\n                return undefined;\n            }\n\n            // Add transactions\n            if (includeTransactions) {\n                let blockNumber: number = null;\n                for (let i = 0; i < block.transactions.length; i++) {\n                    const tx = block.transactions[i];\n                    if (tx.blockNumber == null) {\n                        tx.confirmations = 0;\n\n                    } else if (tx.confirmations == null) {\n                        if (blockNumber == null) {\n                            blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                        }\n\n                        // Add the confirmations using the fast block number (pessimistic)\n                        let confirmations = (blockNumber - tx.blockNumber) + 1;\n                        if (confirmations <= 0) { confirmations = 1; }\n                        tx.confirmations = confirmations;\n                    }\n                }\n\n                const blockWithTxs: any = this.formatter.blockWithTransactions(block);\n                blockWithTxs.transactions = blockWithTxs.transactions.map((tx: TransactionResponse) => this._wrapTransaction(tx));\n                return blockWithTxs;\n            }\n\n            return this.formatter.block(block);\n\n        }, { oncePoll: this });\n    }\n\n    getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<Block> {\n        return <Promise<Block>>(this._getBlock(blockHashOrBlockTag, false));\n    }\n\n    getBlockWithTransactions(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<BlockWithTransactions> {\n        return <Promise<BlockWithTransactions>>(this._getBlock(blockHashOrBlockTag, true));\n    }\n\n    async getTransaction(transactionHash: string | Promise<string>): Promise<TransactionResponse> {\n        await this.getNetwork();\n        transactionHash = await transactionHash;\n\n        const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n\n        return poll(async () => {\n            const result = await this.perform(\"getTransaction\", params);\n\n            if (result == null) {\n                if (this._emitted[\"t:\" + transactionHash] == null) {\n                    return null;\n                }\n                return undefined;\n            }\n\n            const tx = this.formatter.transactionResponse(result);\n\n            if (tx.blockNumber == null) {\n                tx.confirmations = 0;\n\n            } else if (tx.confirmations == null) {\n                const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n\n                // Add the confirmations using the fast block number (pessimistic)\n                let confirmations = (blockNumber - tx.blockNumber) + 1;\n                if (confirmations <= 0) { confirmations = 1; }\n                tx.confirmations = confirmations;\n            }\n\n            return this._wrapTransaction(tx);\n        }, { oncePoll: this });\n    }\n\n    async getTransactionReceipt(transactionHash: string | Promise<string>): Promise<TransactionReceipt> {\n        await this.getNetwork();\n\n        transactionHash = await transactionHash;\n\n        const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n\n        return poll(async () => {\n            const result = await this.perform(\"getTransactionReceipt\", params);\n\n            if (result == null) {\n                if (this._emitted[\"t:\" + transactionHash] == null) {\n                    return null;\n                }\n                return undefined;\n            }\n\n            // \"geth-etc\" returns receipts before they are ready\n            if (result.blockHash == null) { return undefined; }\n\n            const receipt = this.formatter.receipt(result);\n\n            if (receipt.blockNumber == null) {\n                receipt.confirmations = 0;\n\n            } else if (receipt.confirmations == null) {\n                const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n\n                // Add the confirmations using the fast block number (pessimistic)\n                let confirmations = (blockNumber - receipt.blockNumber) + 1;\n                if (confirmations <= 0) { confirmations = 1; }\n                receipt.confirmations = confirmations;\n            }\n\n            return receipt;\n        }, { oncePoll: this });\n    }\n\n    async getLogs(filter: Filter | FilterByBlockHash | Promise<Filter | FilterByBlockHash>): Promise<Array<Log>> {\n        await this.getNetwork();\n        const params = await resolveProperties({ filter: this._getFilter(filter) });\n        const logs: Array<Log> = await this.perform(\"getLogs\", params);\n        logs.forEach((log) => {\n            if (log.removed == null) { log.removed = false; }\n        });\n        return Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs);\n    }\n\n    async getEtherPrice(): Promise<number> {\n        await this.getNetwork();\n        return this.perform(\"getEtherPrice\", { });\n    }\n\n    async _getBlockTag(blockTag: BlockTag | Promise<BlockTag>): Promise<BlockTag> {\n        blockTag = await blockTag;\n\n        if (typeof(blockTag) === \"number\" && blockTag < 0) {\n            if (blockTag % 1) {\n                logger.throwArgumentError(\"invalid BlockTag\", \"blockTag\", blockTag);\n            }\n\n            let blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n            blockNumber += blockTag;\n            if (blockNumber < 0) { blockNumber = 0; }\n            return this.formatter.blockTag(blockNumber)\n        }\n\n        return this.formatter.blockTag(blockTag);\n    }\n\n\n    async getResolver(name: string): Promise<null | Resolver> {\n        let currentName = name;\n        while (true) {\n            if (currentName === \"\" || currentName === \".\") { return null; }\n\n            // Optimization since the eth node cannot change and does\n            // not have a wildcard resolver\n            if (name !== \"eth\" && currentName === \"eth\") { return null; }\n\n            // Check the current node for a resolver\n            const addr = await this._getResolver(currentName, \"getResolver\");\n\n            // Found a resolver!\n            if (addr != null) {\n                const resolver = new Resolver(this, addr, name);\n\n                // Legacy resolver found, using EIP-2544 so it isn't safe to use\n                if (currentName !== name && !(await resolver.supportsWildcard())) { return null; }\n\n                return resolver;\n            }\n\n            // Get the parent node\n            currentName = currentName.split(\".\").slice(1).join(\".\");\n        }\n\n    }\n\n    async _getResolver(name: string, operation?: string): Promise<string> {\n        if (operation == null) { operation = \"ENS\"; }\n\n        const network = await this.getNetwork();\n\n        // No ENS...\n        if (!network.ensAddress) {\n            logger.throwError(\n                \"network does not support ENS\",\n                Logger.errors.UNSUPPORTED_OPERATION,\n                { operation, network: network.name }\n            );\n        }\n\n        try {\n            // keccak256(\"resolver(bytes32)\")\n            const addrData = await this.call({\n                to: network.ensAddress,\n                data: (\"0x0178b8bf\" + namehash(name).substring(2))\n            });\n            return this.formatter.callAddress(addrData);\n        } catch (error) {\n            // ENS registry cannot throw errors on resolver(bytes32)\n        }\n\n        return null;\n    }\n\n    async resolveName(name: string | Promise<string>): Promise<null | string> {\n        name = await name;\n\n        // If it is already an address, nothing to resolve\n        try {\n            return Promise.resolve(this.formatter.address(name));\n        } catch (error) {\n            // If is is a hexstring, the address is bad (See #694)\n            if (isHexString(name)) { throw error; }\n        }\n\n        if (typeof(name) !== \"string\") {\n            logger.throwArgumentError(\"invalid ENS name\", \"name\", name);\n        }\n\n        // Get the addr from the resolver\n        const resolver = await this.getResolver(name);\n        if (!resolver) { return null; }\n\n        return await resolver.getAddress();\n    }\n\n    async lookupAddress(address: string | Promise<string>): Promise<null | string> {\n        address = await address;\n        address = this.formatter.address(address);\n\n        const node = address.substring(2).toLowerCase() + \".addr.reverse\";\n\n        const resolverAddr = await this._getResolver(node, \"lookupAddress\");\n        if (resolverAddr == null) { return null; }\n\n        // keccak(\"name(bytes32)\")\n        const name = _parseString(await this.call({\n            to: resolverAddr,\n            data: (\"0x691f3431\" + namehash(node).substring(2))\n        }), 0);\n\n        const addr = await this.resolveName(name);\n        if (addr != address) { return null; }\n\n        return name;\n    }\n\n    async getAvatar(nameOrAddress: string): Promise<null | string> {\n        let resolver: Resolver = null;\n        if (isHexString(nameOrAddress)) {\n            // Address; reverse lookup\n            const address = this.formatter.address(nameOrAddress);\n\n            const node = address.substring(2).toLowerCase() + \".addr.reverse\";\n\n            const resolverAddress = await this._getResolver(node, \"getAvatar\");\n            if (!resolverAddress) { return null; }\n\n            // Try resolving the avatar against the addr.reverse resolver\n            resolver = new Resolver(this, resolverAddress, node);\n            try {\n                const avatar = await resolver.getAvatar();\n                if (avatar) { return avatar.url; }\n            } catch (error) {\n                if (error.code !== Logger.errors.CALL_EXCEPTION) { throw error; }\n            }\n\n            // Try getting the name and performing forward lookup; allowing wildcards\n            try {\n                // keccak(\"name(bytes32)\")\n                const name = _parseString(await this.call({\n                    to: resolverAddress,\n                    data: (\"0x691f3431\" + namehash(node).substring(2))\n                }), 0);\n                resolver = await this.getResolver(name);\n            } catch (error) {\n                if (error.code !== Logger.errors.CALL_EXCEPTION) { throw error; }\n                return null;\n            }\n\n        } else {\n            // ENS name; forward lookup with wildcard\n            resolver = await this.getResolver(nameOrAddress);\n            if (!resolver) { return null; }\n        }\n\n        const avatar = await resolver.getAvatar();\n        if (avatar == null) { return null; }\n\n        return avatar.url;\n    }\n\n    perform(method: string, params: any): Promise<any> {\n        return logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n    }\n\n    _startEvent(event: Event): void {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n\n    _stopEvent(event: Event): void {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n\n    _addEventListener(eventName: EventType, listener: Listener, once: boolean): this {\n        const event = new Event(getEventTag(eventName), listener, once)\n        this._events.push(event);\n        this._startEvent(event);\n\n        return this;\n    }\n\n    on(eventName: EventType, listener: Listener): this {\n        return this._addEventListener(eventName, listener, false);\n    }\n\n    once(eventName: EventType, listener: Listener): this {\n        return this._addEventListener(eventName, listener, true);\n    }\n\n\n    emit(eventName: EventType, ...args: Array<any>): boolean {\n        let result = false;\n\n        let stopped: Array<Event> = [ ];\n\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag) { return true; }\n\n            setTimeout(() => {\n                event.listener.apply(this, args);\n            }, 0);\n\n            result = true;\n\n            if (event.once) {\n                stopped.push(event);\n                return false;\n            }\n\n            return true;\n        });\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return result;\n    }\n\n    listenerCount(eventName?: EventType): number {\n        if (!eventName) { return this._events.length; }\n\n        let eventTag = getEventTag(eventName);\n        return this._events.filter((event) => {\n            return (event.tag === eventTag);\n        }).length;\n    }\n\n    listeners(eventName?: EventType): Array<Listener> {\n        if (eventName == null) {\n            return this._events.map((event) => event.listener);\n        }\n\n        let eventTag = getEventTag(eventName);\n        return this._events\n            .filter((event) => (event.tag === eventTag))\n            .map((event) => event.listener);\n    }\n\n    off(eventName: EventType, listener?: Listener): this {\n        if (listener == null) {\n            return this.removeAllListeners(eventName);\n        }\n\n        const stopped: Array<Event> = [ ];\n\n        let found = false;\n\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag || event.listener != listener) { return true; }\n            if (found) { return true; }\n            found = true;\n            stopped.push(event);\n            return false;\n        });\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return this;\n    }\n\n    removeAllListeners(eventName?: EventType): this {\n        let stopped: Array<Event> = [ ];\n        if (eventName == null) {\n            stopped = this._events;\n\n            this._events = [ ];\n        } else {\n            const eventTag = getEventTag(eventName);\n            this._events = this._events.filter((event) => {\n                if (event.tag !== eventTag) { return true; }\n                stopped.push(event);\n                return false;\n            });\n        }\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return this;\n    }\n}\n","\"use strict\";\n\n// See: https://github.com/ethereum/wiki/wiki/JSON-RPC\n\nimport { Provider, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { Signer, TypedDataDomain, TypedDataField, TypedDataSigner } from \"@ethersproject/abstract-signer\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Bytes, hexlify, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { checkProperties, deepCopy, Deferrable, defineReadOnly, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { AccessList, accessListify } from \"@ethersproject/transactions\";\nimport { ConnectionInfo, fetchJson, poll } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { BaseProvider, Event } from \"./base-provider\";\n\n\nconst errorGas = [ \"call\", \"estimateGas\" ];\n\nfunction spelunk(value: any, requireData: boolean): null | { message: string, data: null | string } {\n    if (value == null) { return null; }\n\n    // These *are* the droids we're looking for.\n    if (typeof(value.message) === \"string\" && value.message.match(\"reverted\")) {\n        const data = isHexString(value.data) ? value.data: null;\n        if (!requireData || data) {\n            return { message: value.message, data };\n        }\n    }\n\n    // Spelunk further...\n    if (typeof(value) === \"object\") {\n        for (const key in value) {\n            const result = spelunk(value[key], requireData);\n            if (result) { return result; }\n        }\n        return null;\n    }\n\n    // Might be a JSON string we can further descend...\n    if (typeof(value) === \"string\") {\n        try {\n            return spelunk(JSON.parse(value), requireData);\n        } catch (error) { }\n    }\n\n    return null;\n}\n\nfunction checkError(method: string, error: any, params: any): any {\n\n    const transaction = params.transaction || params.signedTransaction;\n\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\") {\n        const result = spelunk(error, true);\n        if (result) { return result.data; }\n\n        // Nothing descriptive..\n        logger.throwError(\"missing revert data in call exception; Transaction reverted without a reason string\", Logger.errors.CALL_EXCEPTION, {\n            data: \"0x\", transaction, error\n        });\n    }\n\n    if (method === \"estimateGas\") {\n        // Try to find something, with a preference on SERVER_ERROR body\n        let result = spelunk(error.body, false);\n        if (result == null) { result = spelunk(error, false); }\n\n        // Found \"reverted\", this is a CALL_EXCEPTION\n        if (result) {\n            logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                reason: result.message, method, transaction, error\n            });\n        }\n    }\n\n    // @TODO: Should we spelunk for message too?\n\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR && error.error && typeof(error.error.message) === \"string\") {\n        message = error.error.message;\n    } else if (typeof(error.body) === \"string\") {\n        message = error.body;\n    } else if (typeof(error.responseText) === \"string\") {\n        message = error.responseText;\n    }\n    message = (message || \"\").toLowerCase();\n\n    // \"insufficient funds for gas * price + value + cost(data)\"\n    if (message.match(/insufficient funds|base fee exceeds gas limit/i)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n            error, method, transaction\n        });\n    }\n\n    // \"nonce too low\"\n    if (message.match(/nonce (is )?too low/i)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n            error, method, transaction\n        });\n    }\n\n    // \"replacement transaction underpriced\"\n    if (message.match(/replacement transaction underpriced|transaction gas price.*too low/i)) {\n        logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n        });\n    }\n\n    // \"replacement transaction underpriced\"\n    if (message.match(/only replay-protected/i)) {\n        logger.throwError(\"legacy pre-eip-155 transactions not supported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            error, method, transaction\n        });\n    }\n\n    if (errorGas.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n\n    throw error;\n}\n\nfunction timer(timeout: number): Promise<any> {\n    return new Promise(function(resolve) {\n        setTimeout(resolve, timeout);\n    });\n}\n\nfunction getResult(payload: { error?: { code?: number, data?: any, message?: string }, result?: any }): any {\n    if (payload.error) {\n        // @TODO: not any\n        const error: any = new Error(payload.error.message);\n        error.code = payload.error.code;\n        error.data = payload.error.data;\n        throw error;\n    }\n\n    return payload.result;\n}\n\nfunction getLowerCase(value: string): string {\n    if (value) { return value.toLowerCase(); }\n    return value;\n}\n\nconst _constructorGuard = {};\n\nexport class JsonRpcSigner extends Signer implements TypedDataSigner {\n    readonly provider: JsonRpcProvider;\n    _index: number;\n    _address: string;\n\n    constructor(constructorGuard: any, provider: JsonRpcProvider, addressOrIndex?: string | number) {\n        super();\n\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"do not call the JsonRpcSigner constructor directly; use provider.getSigner\");\n        }\n\n        defineReadOnly(this, \"provider\", provider);\n\n        if (addressOrIndex == null) { addressOrIndex = 0; }\n\n        if (typeof(addressOrIndex) === \"string\") {\n            defineReadOnly(this, \"_address\", this.provider.formatter.address(addressOrIndex));\n            defineReadOnly(this, \"_index\", null);\n\n        } else if (typeof(addressOrIndex) === \"number\") {\n            defineReadOnly(this, \"_index\", addressOrIndex);\n            defineReadOnly(this, \"_address\", null);\n\n        } else {\n            logger.throwArgumentError(\"invalid address or index\", \"addressOrIndex\", addressOrIndex);\n        }\n    }\n\n    connect(provider: Provider): JsonRpcSigner {\n        return logger.throwError(\"cannot alter JSON-RPC Signer connection\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"connect\"\n        });\n    }\n\n    connectUnchecked(): JsonRpcSigner {\n        return new UncheckedJsonRpcSigner(_constructorGuard, this.provider, this._address || this._index);\n    }\n\n    getAddress(): Promise<string> {\n        if (this._address) {\n            return Promise.resolve(this._address);\n        }\n\n        return this.provider.send(\"eth_accounts\", []).then((accounts) => {\n            if (accounts.length <= this._index) {\n                logger.throwError(\"unknown account #\" + this._index, Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"getAddress\"\n                });\n            }\n            return this.provider.formatter.address(accounts[this._index])\n        });\n    }\n\n    sendUncheckedTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        transaction = shallowCopy(transaction);\n\n        const fromAddress = this.getAddress().then((address) => {\n            if (address) { address = address.toLowerCase(); }\n            return address;\n        });\n\n        // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user\n        // wishes to use this, it is easy to specify explicitly, otherwise\n        // we look it up for them.\n        if (transaction.gasLimit == null) {\n            const estimate = shallowCopy(transaction);\n            estimate.from = fromAddress;\n            transaction.gasLimit = this.provider.estimateGas(estimate);\n        }\n\n        if (transaction.to != null) {\n            transaction.to = Promise.resolve(transaction.to).then(async (to) => {\n                if (to == null) { return null; }\n                const address = await this.provider.resolveName(to);\n                if (address == null) {\n                    logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                }\n                return address;\n            });\n        }\n\n        return resolveProperties({\n            tx: resolveProperties(transaction),\n            sender: fromAddress\n        }).then(({ tx, sender }) => {\n\n            if (tx.from != null) {\n                if (tx.from.toLowerCase() !== sender) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n            } else {\n                tx.from = sender;\n            }\n\n            const hexTx = (<any>this.provider.constructor).hexlifyTransaction(tx, { from: true });\n\n            return this.provider.send(\"eth_sendTransaction\", [ hexTx ]).then((hash) => {\n                return hash;\n            }, (error) => {\n                if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                    logger.throwError(\"user rejected transaction\", Logger.errors.ACTION_REJECTED, {\n                        action: \"sendTransaction\",\n                        transaction: tx\n                    });\n                }\n\n                return checkError(\"sendTransaction\", error, hexTx);\n            });\n        });\n    }\n\n    signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        return logger.throwError(\"signing transactions is unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"signTransaction\"\n        });\n    }\n\n    async sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        // This cannot be mined any earlier than any recent block\n        const blockNumber = await this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval);\n\n        // Send the transaction\n        const hash = await this.sendUncheckedTransaction(transaction);\n\n        try {\n            // Unfortunately, JSON-RPC only provides and opaque transaction hash\n            // for a response, and we need the actual transaction, so we poll\n            // for it; it should show up very quickly\n            return await poll(async () => {\n                const tx = await this.provider.getTransaction(hash);\n                if (tx === null) { return undefined; }\n                return this.provider._wrapTransaction(tx, hash, blockNumber);\n            }, { oncePoll: this.provider });\n        } catch (error) {\n            (<any>error).transactionHash = hash;\n            throw error;\n        }\n    }\n\n    async signMessage(message: Bytes | string): Promise<string> {\n        const data = ((typeof(message) === \"string\") ? toUtf8Bytes(message): message);\n        const address = await this.getAddress();\n        try {\n            return await this.provider.send(\"personal_sign\", [ hexlify(data), address.toLowerCase() ]);\n        } catch (error) {\n            if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                logger.throwError(\"user rejected signing\", Logger.errors.ACTION_REJECTED, {\n                    action: \"signMessage\",\n                    from: address,\n                    messageData: message\n                });\n            }\n            throw error;\n        }\n    }\n\n    async _legacySignMessage(message: Bytes | string): Promise<string> {\n        const data = ((typeof(message) === \"string\") ? toUtf8Bytes(message): message);\n        const address = await this.getAddress();\n\n        try {\n            // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n            return await this.provider.send(\"eth_sign\", [ address.toLowerCase(), hexlify(data) ]);\n        } catch (error) {\n            if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                logger.throwError(\"user rejected signing\", Logger.errors.ACTION_REJECTED, {\n                    action: \"_legacySignMessage\",\n                    from: address,\n                    messageData: message\n                });\n            }\n            throw error;\n        }\n    }\n\n    async _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        // Populate any ENS names (in-place)\n        const populated = await _TypedDataEncoder.resolveNames(domain, types, value, (name: string) => {\n            return this.provider.resolveName(name);\n        });\n\n        const address = await this.getAddress();\n\n        try {\n            return await this.provider.send(\"eth_signTypedData_v4\", [\n                address.toLowerCase(),\n                JSON.stringify(_TypedDataEncoder.getPayload(populated.domain, types, populated.value))\n            ]);\n        } catch (error) {\n            if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                logger.throwError(\"user rejected signing\", Logger.errors.ACTION_REJECTED, {\n                    action: \"_signTypedData\",\n                    from: address,\n                    messageData: { domain: populated.domain, types, value: populated.value }\n                });\n            }\n            throw error;\n        }\n    }\n\n    async unlock(password: string): Promise<boolean> {\n        const provider = this.provider;\n\n        const address = await this.getAddress();\n\n        return provider.send(\"personal_unlockAccount\", [ address.toLowerCase(), password, null ]);\n    }\n}\n\nclass UncheckedJsonRpcSigner extends JsonRpcSigner {\n    sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        return this.sendUncheckedTransaction(transaction).then((hash) => {\n            return <TransactionResponse>{\n                hash: hash,\n                nonce: null,\n                gasLimit: null,\n                gasPrice: null,\n                data: null,\n                value: null,\n                chainId: null,\n                confirmations: 0,\n                from: null,\n                wait: (confirmations?: number) => { return this.provider.waitForTransaction(hash, confirmations); }\n            };\n        });\n    }\n}\n\nconst allowedTransactionKeys: { [ key: string ]: boolean } = {\n    chainId: true, data: true, gasLimit: true, gasPrice:true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true\n}\n\nexport class JsonRpcProvider extends BaseProvider {\n    readonly connection: ConnectionInfo;\n\n    _pendingFilter: Promise<number>;\n    _nextId: number;\n\n    // During any given event loop, the results for a given call will\n    // all be the same, so we can dedup the calls to save requests and\n    // bandwidth. @TODO: Try out generalizing this against send?\n    _eventLoopCache: Record<string, Promise<any>>;\n    get _cache(): Record<string, Promise<any>> {\n        if (this._eventLoopCache == null) {\n            this._eventLoopCache = { };\n        }\n        return this._eventLoopCache;\n    }\n\n    constructor(url?: ConnectionInfo | string, network?: Networkish) {\n        let networkOrReady: Networkish | Promise<Network> = network;\n\n        // The network is unknown, query the JSON-RPC for it\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then((network) => {\n                        resolve(network);\n                    }, (error) => {\n                        reject(error);\n                    });\n                }, 0);\n            });\n        }\n\n        super(networkOrReady);\n\n        // Default URL\n        if (!url) { url = getStatic<() => string>(this.constructor, \"defaultUrl\")(); }\n\n        if (typeof(url) === \"string\") {\n            defineReadOnly(this, \"connection\",Object.freeze({\n                url: url\n            }));\n        } else {\n            defineReadOnly(this, \"connection\", Object.freeze(shallowCopy(url)));\n        }\n\n        this._nextId = 42;\n    }\n\n    static defaultUrl(): string {\n        return \"http:/\\/localhost:8545\";\n    }\n\n    detectNetwork(): Promise<Network> {\n        if (!this._cache[\"detectNetwork\"]) {\n            this._cache[\"detectNetwork\"] = this._uncachedDetectNetwork();\n\n            // Clear this cache at the beginning of the next event loop\n            setTimeout(() => {\n                this._cache[\"detectNetwork\"] = null;\n            }, 0);\n        }\n        return this._cache[\"detectNetwork\"];\n    }\n\n    async _uncachedDetectNetwork(): Promise<Network> {\n        await timer(0);\n\n        let chainId = null;\n        try {\n            chainId = await this.send(\"eth_chainId\", [ ]);\n        } catch (error) {\n            try {\n                chainId = await this.send(\"net_version\", [ ]);\n            } catch (error) { }\n        }\n\n        if (chainId != null) {\n            const getNetwork = getStatic<(network: Networkish) => Network>(this.constructor, \"getNetwork\");\n            try {\n                return getNetwork(BigNumber.from(chainId).toNumber());\n            } catch (error) {\n                return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n                    chainId: chainId,\n                    event: \"invalidNetwork\",\n                    serverError: error\n                });\n            }\n        }\n\n        return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n            event: \"noNetwork\"\n        });\n    }\n\n    getSigner(addressOrIndex?: string | number): JsonRpcSigner {\n        return new JsonRpcSigner(_constructorGuard, this, addressOrIndex);\n    }\n\n    getUncheckedSigner(addressOrIndex?: string | number): UncheckedJsonRpcSigner {\n        return this.getSigner(addressOrIndex).connectUnchecked();\n    }\n\n    listAccounts(): Promise<Array<string>> {\n        return this.send(\"eth_accounts\", []).then((accounts: Array<string>) => {\n            return accounts.map((a) => this.formatter.address(a));\n        });\n    }\n\n    send(method: string, params: Array<any>): Promise<any> {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n\n        this.emit(\"debug\", {\n            action: \"request\",\n            request: deepCopy(request),\n            provider: this\n        });\n\n        // We can expand this in the future to any call, but for now these\n        // are the biggest wins and do not require any serializing parameters.\n        const cache = ([ \"eth_chainId\", \"eth_blockNumber\" ].indexOf(method) >= 0);\n        if (cache && this._cache[method]) {\n            return this._cache[method];\n        }\n\n        const result = fetchJson(this.connection, JSON.stringify(request), getResult).then((result) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                request: request,\n                response: result,\n                provider: this\n            });\n\n            return result;\n\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                error: error,\n                request: request,\n                provider: this\n            });\n\n            throw error;\n        });\n\n        // Cache the fetch, but clear it on the next event loop\n        if (cache) {\n            this._cache[method] = result;\n            setTimeout(() => {\n                this._cache[method] = null;\n            }, 0);\n        }\n\n        return result;\n    }\n\n    prepareRequest(method: string, params: any): [ string, Array<any> ] {\n        switch (method) {\n            case \"getBlockNumber\":\n                return [ \"eth_blockNumber\", [] ];\n\n            case \"getGasPrice\":\n                return [ \"eth_gasPrice\", [] ];\n\n            case \"getBalance\":\n                return [ \"eth_getBalance\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getTransactionCount\":\n                return [ \"eth_getTransactionCount\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getCode\":\n                return [ \"eth_getCode\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getStorageAt\":\n                return [ \"eth_getStorageAt\", [ getLowerCase(params.address), hexZeroPad(params.position, 32), params.blockTag ] ];\n\n            case \"sendTransaction\":\n                return [ \"eth_sendRawTransaction\", [ params.signedTransaction ] ]\n\n            case \"getBlock\":\n                if (params.blockTag) {\n                    return [ \"eth_getBlockByNumber\", [ params.blockTag, !!params.includeTransactions ] ];\n                } else if (params.blockHash) {\n                    return [ \"eth_getBlockByHash\", [ params.blockHash, !!params.includeTransactions ] ];\n                }\n                return null;\n\n            case \"getTransaction\":\n                return [ \"eth_getTransactionByHash\", [ params.transactionHash ] ];\n\n            case \"getTransactionReceipt\":\n                return [ \"eth_getTransactionReceipt\", [ params.transactionHash ] ];\n\n            case \"call\": {\n                const hexlifyTransaction = getStatic<(t: TransactionRequest, a?: { [key: string]: boolean }) => { [key: string]: string }>(this.constructor, \"hexlifyTransaction\");\n                return [ \"eth_call\", [ hexlifyTransaction(params.transaction, { from: true }), params.blockTag ] ];\n            }\n\n            case \"estimateGas\": {\n                const hexlifyTransaction = getStatic<(t: TransactionRequest, a?: { [key: string]: boolean }) => { [key: string]: string }>(this.constructor, \"hexlifyTransaction\");\n                return [ \"eth_estimateGas\", [ hexlifyTransaction(params.transaction, { from: true }) ] ];\n            }\n\n            case \"getLogs\":\n                if (params.filter && params.filter.address != null) {\n                    params.filter.address = getLowerCase(params.filter.address);\n                }\n                return [ \"eth_getLogs\", [ params.filter ] ];\n\n            default:\n                break;\n        }\n\n        return null;\n    }\n\n    async perform(method: string, params: any): Promise<any> {\n        // Legacy networks do not like the type field being passed along (which\n        // is fair), so we delete type if it is 0 and a non-EIP-1559 network\n        if (method === \"call\" || method === \"estimateGas\") {\n            const tx = params.transaction;\n            if (tx && tx.type != null && BigNumber.from(tx.type).isZero()) {\n                // If there are no EIP-1559 properties, it might be non-EIP-1559\n                if (tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null) {\n                    const feeData = await this.getFeeData();\n                    if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {\n                        // Network doesn't know about EIP-1559 (and hence type)\n                        params = shallowCopy(params);\n                        params.transaction = shallowCopy(tx);\n                        delete params.transaction.type;\n                    }\n                }\n            }\n        }\n\n        const args = this.prepareRequest(method,  params);\n\n        if (args == null) {\n            logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n        }\n        try {\n            return await this.send(args[0], args[1])\n        } catch (error) {\n            return checkError(method, error, params);\n        }\n    }\n\n    _startEvent(event: Event): void {\n        if (event.tag === \"pending\") { this._startPending(); }\n        super._startEvent(event);\n    }\n\n    _startPending(): void {\n        if (this._pendingFilter != null) { return; }\n        const self = this;\n\n        const pendingFilter: Promise<number> = this.send(\"eth_newPendingTransactionFilter\", []);\n        this._pendingFilter = pendingFilter;\n\n        pendingFilter.then(function(filterId) {\n            function poll() {\n                self.send(\"eth_getFilterChanges\", [ filterId ]).then(function(hashes: Array<string>) {\n                    if (self._pendingFilter != pendingFilter) { return null; }\n\n                    let seq = Promise.resolve();\n                    hashes.forEach(function(hash) {\n                        // @TODO: This should be garbage collected at some point... How? When?\n                        self._emitted[\"t:\" + hash.toLowerCase()] = \"pending\";\n                        seq = seq.then(function() {\n                            return self.getTransaction(hash).then(function(tx) {\n                                self.emit(\"pending\", tx);\n                                return null;\n                            });\n                        });\n                    });\n\n                    return seq.then(function() {\n                        return timer(1000);\n                    });\n                }).then(function() {\n                    if (self._pendingFilter != pendingFilter) {\n                        self.send(\"eth_uninstallFilter\", [ filterId ]);\n                        return;\n                    }\n                    setTimeout(function() { poll(); }, 0);\n\n                    return null;\n                }).catch((error: Error) => { });\n            }\n            poll();\n\n            return filterId;\n        }).catch((error: Error) => { });\n    }\n\n    _stopEvent(event: Event): void {\n        if (event.tag === \"pending\" && this.listenerCount(\"pending\") === 0) {\n            this._pendingFilter = null;\n        }\n        super._stopEvent(event);\n    }\n\n    // Convert an ethers.js transaction into a JSON-RPC transaction\n    //  - gasLimit => gas\n    //  - All values hexlified\n    //  - All numeric values zero-striped\n    //  - All addresses are lowercased\n    // NOTE: This allows a TransactionRequest, but all values should be resolved\n    //       before this is called\n    // @TODO: This will likely be removed in future versions and prepareRequest\n    //        will be the preferred method for this.\n    static hexlifyTransaction(transaction: TransactionRequest, allowExtra?: { [key: string]: boolean }): { [key: string]: string | AccessList } {\n        // Check only allowed properties are given\n        const allowed = shallowCopy(allowedTransactionKeys);\n        if (allowExtra) {\n            for (const key in allowExtra) {\n                if (allowExtra[key]) { allowed[key] = true; }\n            }\n        }\n\n        checkProperties(transaction, allowed);\n\n        const result: { [key: string]: string | AccessList } = {};\n\n        // JSON-RPC now requires numeric values to be \"quantity\" values\n        [\"chainId\", \"gasLimit\", \"gasPrice\", \"type\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"value\"].forEach(function(key) {\n            if ((<any>transaction)[key] == null) { return; }\n            const value = hexValue(BigNumber.from((<any>transaction)[key]));\n            if (key === \"gasLimit\") { key = \"gas\"; }\n            result[key] = value;\n        });\n\n        [\"from\", \"to\", \"data\"].forEach(function(key) {\n            if ((<any>transaction)[key] == null) { return; }\n            result[key] = hexlify((<any>transaction)[key]);\n        });\n\n        if ((<any>transaction).accessList) {\n            result[\"accessList\"] = accessListify((<any>transaction).accessList);\n        }\n\n        return result;\n    }\n}\n","\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\n\nlet WS: any = null;\n\ntry {\n    WS = (WebSocket as any);\n    if (WS == null) { throw new Error(\"inject please\"); }\n} catch (error) {\n    const logger = new Logger(version);\n    WS = function() {\n        logger.throwError(\"WebSockets not supported in this environment\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"new WebSocket()\"\n        });\n    }\n}\n//export default WS;\n//module.exports = WS;\nexport { WS as WebSocket };\n","\"use strict\";\n\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Event } from \"./base-provider\";\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\nimport { WebSocket } from \"./ws\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n/**\n *  Notes:\n *\n *  This provider differs a bit from the polling providers. One main\n *  difference is how it handles consistency. The polling providers\n *  will stall responses to ensure a consistent state, while this\n *  WebSocket provider assumes the connected backend will manage this.\n *\n *  For example, if a polling provider emits an event which indicates\n *  the event occurred in blockhash XXX, a call to fetch that block by\n *  its hash XXX, if not present will retry until it is present. This\n *  can occur when querying a pool of nodes that are mildly out of sync\n *  with each other.\n */\n\nlet NextId = 1;\n\nexport type InflightRequest = {\n     callback: (error: Error, result: any) => void;\n     payload: string;\n};\n\nexport type Subscription = {\n    tag: string;\n    processFunc: (payload: any) => void;\n};\n\nexport interface WebSocketLike {\n    onopen: ((...args: Array<any>) => any) | null;\n    onmessage: ((...args: Array<any>) => any) | null;\n    onerror: ((...args: Array<any>) => any) | null;\n\n    readyState: number;\n\n    send(payload: any): void;\n    close(code?: number, reason?: string): void;\n}\n\n// For more info about the Real-time Event API see:\n//   https://geth.ethereum.org/docs/rpc/pubsub\n\nexport class WebSocketProvider extends JsonRpcProvider {\n    readonly _websocket: any;\n    readonly _requests: { [ name: string ]: InflightRequest };\n    readonly _detectNetwork: Promise<Network>;\n\n    // Maps event tag to subscription ID (we dedupe identical events)\n    readonly _subIds: { [ tag: string ]: Promise<string> };\n\n    // Maps Subscription ID to Subscription\n    readonly _subs: { [ name: string ]: Subscription };\n\n    _wsReady: boolean;\n\n    constructor(url: string | WebSocketLike, network?: Networkish) {\n\n        // This will be added in the future; please open an issue to expedite\n        if (network === \"any\") {\n            logger.throwError(\"WebSocketProvider does not support 'any' network yet\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"network:any\"\n            });\n        }\n\n        if (typeof(url) === \"string\") {\n            super(url, network);\n        } else {\n            super(\"_websocket\", network);\n        }\n\n        this._pollingInterval = -1;\n\n        this._wsReady = false;\n\n        if (typeof(url) === \"string\") {\n            defineReadOnly(this, \"_websocket\", new WebSocket(this.connection.url));\n        } else {\n            defineReadOnly(this, \"_websocket\", url);\n        }\n\n        defineReadOnly(this, \"_requests\", { });\n        defineReadOnly(this, \"_subs\", { });\n        defineReadOnly(this, \"_subIds\", { });\n        defineReadOnly(this, \"_detectNetwork\", super.detectNetwork());\n\n        // Stall sending requests until the socket is open...\n        this.websocket.onopen = () => {\n            this._wsReady = true;\n            Object.keys(this._requests).forEach((id) => {\n                this.websocket.send(this._requests[id].payload);\n            });\n        };\n\n        this.websocket.onmessage = (messageEvent: { data: string }) => {\n            const data = messageEvent.data;\n            const result = JSON.parse(data);\n            if (result.id != null) {\n                const id = String(result.id);\n                const request = this._requests[id];\n                delete this._requests[id];\n\n                if (result.result !== undefined) {\n                    request.callback(null, result.result);\n\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: JSON.parse(request.payload),\n                        response: result.result,\n                        provider: this\n                    });\n\n                } else {\n                    let error: Error = null;\n                    if (result.error) {\n                        error = new Error(result.error.message || \"unknown error\");\n                        defineReadOnly(<any>error, \"code\", result.error.code || null);\n                        defineReadOnly(<any>error, \"response\", data);\n                    } else {\n                        error = new Error(\"unknown error\");\n                    }\n\n                    request.callback(error, undefined);\n\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: JSON.parse(request.payload),\n                        provider: this\n                    });\n\n                }\n\n            } else if (result.method === \"eth_subscription\") {\n                // Subscription...\n                const sub = this._subs[result.params.subscription];\n                if (sub) {\n                    //this.emit.apply(this,                  );\n                    sub.processFunc(result.params.result)\n                }\n\n            } else {\n                console.warn(\"this should not happen\");\n            }\n        };\n\n        // This Provider does not actually poll, but we want to trigger\n        // poll events for things that depend on them (like stalling for\n        // block and transaction lookups)\n        const fauxPoll = setInterval(() => {\n            this.emit(\"poll\");\n        }, 1000);\n        if (fauxPoll.unref) { fauxPoll.unref(); }\n    }\n\n    // Cannot narrow the type of _websocket, as that is not backwards compatible\n    // so we add a getter and let the WebSocket be a public API.\n    get websocket(): WebSocketLike { return this._websocket; }\n\n    detectNetwork(): Promise<Network> {\n        return this._detectNetwork;\n    }\n\n    get pollingInterval(): number {\n        return 0;\n    }\n\n    resetEventsBlock(blockNumber: number): void {\n        logger.throwError(\"cannot reset events block on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"resetEventBlock\"\n        });\n    }\n\n    set pollingInterval(value: number) {\n        logger.throwError(\"cannot set polling interval on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPollingInterval\"\n        });\n    }\n\n    async poll(): Promise<void> {\n        return null;\n    }\n\n    set polling(value: boolean) {\n        if (!value) { return; }\n\n        logger.throwError(\"cannot set polling on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPolling\"\n        });\n    }\n\n    send(method: string, params?: Array<any>): Promise<any> {\n        const rid = NextId++;\n\n        return new Promise((resolve, reject) => {\n            function callback(error: Error, result: any) {\n                if (error) { return reject(error); }\n                return resolve(result);\n            }\n\n            const payload = JSON.stringify({\n                method: method,\n                params: params,\n                id: rid,\n                jsonrpc: \"2.0\"\n            });\n\n            this.emit(\"debug\", {\n                action: \"request\",\n                request: JSON.parse(payload),\n                provider: this\n            });\n\n            this._requests[String(rid)] = { callback, payload };\n\n            if (this._wsReady) { this.websocket.send(payload); }\n        });\n    }\n\n    static defaultUrl(): string {\n        return \"ws:/\\/localhost:8546\";\n    }\n\n    async _subscribe(tag: string, param: Array<any>, processFunc: (result: any) => void): Promise<void> {\n        let subIdPromise = this._subIds[tag];\n        if (subIdPromise == null) {\n            subIdPromise = Promise.all(param).then((param) => {\n                return this.send(\"eth_subscribe\", param);\n            });\n            this._subIds[tag] = subIdPromise;\n        }\n        const subId = await subIdPromise;\n        this._subs[subId] = { tag, processFunc };\n    }\n\n    _startEvent(event: Event): void {\n        switch (event.type) {\n            case \"block\":\n                this._subscribe(\"block\", [ \"newHeads\" ], (result: any) => {\n                    const blockNumber = BigNumber.from(result.number).toNumber();\n                    this._emitted.block = blockNumber;\n                    this.emit(\"block\", blockNumber);\n                });\n                break;\n\n            case \"pending\":\n                this._subscribe(\"pending\", [ \"newPendingTransactions\" ], (result: any) => {\n                    this.emit(\"pending\", result);\n                });\n                break;\n\n            case \"filter\":\n                this._subscribe(event.tag, [ \"logs\", this._getFilter(event.filter) ], (result: any) => {\n                    if (result.removed == null) { result.removed = false; }\n                    this.emit(event.filter, this.formatter.filterLog(result));\n                });\n                break;\n\n            case \"tx\": {\n                const emitReceipt = (event: Event) => {\n                    const hash = event.hash;\n                    this.getTransactionReceipt(hash).then((receipt) => {\n                        if (!receipt) { return; }\n                        this.emit(hash, receipt);\n                    });\n                };\n\n                // In case it is already mined\n                emitReceipt(event);\n\n                // To keep things simple, we start up a single newHeads subscription\n                // to keep an eye out for transactions we are watching for.\n                // Starting a subscription for an event (i.e. \"tx\") that is already\n                // running is (basically) a nop.\n                this._subscribe(\"tx\", [ \"newHeads\" ], (result: any) => {\n                    this._events.filter((e) => (e.type === \"tx\")).forEach(emitReceipt);\n                });\n                break;\n            }\n\n            // Nothing is needed\n            case \"debug\":\n            case \"poll\":\n            case \"willPoll\":\n            case \"didPoll\":\n            case \"error\":\n                break;\n\n            default:\n                console.log(\"unhandled:\", event);\n                break;\n        }\n    }\n\n    _stopEvent(event: Event): void {\n        let tag = event.tag;\n\n        if (event.type === \"tx\") {\n            // There are remaining transaction event listeners\n            if (this._events.filter((e) => (e.type === \"tx\")).length) {\n                return;\n            }\n            tag = \"tx\";\n        } else if (this.listenerCount(event.event)) {\n            // There are remaining event listeners\n            return;\n        }\n\n        const subId = this._subIds[tag];\n        if (!subId) { return; }\n\n       delete this._subIds[tag];\n       subId.then((subId) => {\n            if (!this._subs[subId]) { return; }\n            delete this._subs[subId];\n            this.send(\"eth_unsubscribe\", [ subId ]);\n        });\n    }\n\n    async destroy(): Promise<void> {\n        // Wait until we have connected before trying to disconnect\n        if (this.websocket.readyState === WebSocket.CONNECTING) {\n            await (new Promise((resolve) => {\n                this.websocket.onopen = function() {\n                    resolve(true);\n                };\n\n                this.websocket.onerror = function() {\n                    resolve(false);\n                };\n            }));\n        }\n\n        // Hangup\n        // See: https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n        this.websocket.close(1000);\n    }\n}\n","\n\"use strict\";\n\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly, getStatic } from \"@ethersproject/properties\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { CommunityResourcable } from \"./formatter\";\nimport { JsonRpcProvider, JsonRpcSigner } from \"./json-rpc-provider\";\n\ntype getUrlFunc = (network: Network, apiKey: string) => string | ConnectionInfo;\n\n// A StaticJsonRpcProvider is useful when you *know* for certain that\n// the backend will never change, as it never calls eth_chainId to\n// verify its backend. However, if the backend does change, the effects\n// are undefined and may include:\n// - inconsistent results\n// - locking up the UI\n// - block skew warnings\n// - wrong results\n// If the network is not explicit (i.e. auto-detection is expected), the\n// node MUST be running and available to respond to requests BEFORE this\n// is instantiated.\nexport class StaticJsonRpcProvider extends JsonRpcProvider {\n    async detectNetwork(): Promise<Network> {\n        let network = this.network;\n        if (network == null) {\n            network = await super.detectNetwork();\n\n            if (!network) {\n                logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, { });\n            }\n\n            // If still not set, set it\n            if (this._network == null) {\n                // A static network does not support \"any\"\n                defineReadOnly(this, \"_network\", network);\n\n                this.emit(\"network\", network, null);\n            }\n        }\n        return network;\n    }\n}\n\nexport abstract class UrlJsonRpcProvider extends StaticJsonRpcProvider implements CommunityResourcable {\n    readonly apiKey: any;\n\n    constructor(network?: Networkish, apiKey?: any) {\n        logger.checkAbstract(new.target, UrlJsonRpcProvider);\n\n        // Normalize the Network and API Key\n        network = getStatic<(network: Networkish) => Network>(new.target, \"getNetwork\")(network);\n        apiKey = getStatic<(apiKey: string) => string>(new.target, \"getApiKey\")(apiKey);\n\n        const connection = getStatic<getUrlFunc>(new.target, \"getUrl\")(network, apiKey);\n\n        super(connection, network);\n\n        if (typeof(apiKey) === \"string\") {\n            defineReadOnly(this, \"apiKey\", apiKey);\n        } else if (apiKey != null) {\n            Object.keys(apiKey).forEach((key) => {\n                defineReadOnly<any, any>(this, key, apiKey[key]);\n            });\n        }\n    }\n\n    _startPending(): void {\n        logger.warn(\"WARNING: API provider does not support pending filters\");\n    }\n\n    isCommunityResource(): boolean {\n        return false;\n    }\n\n    getSigner(address?: string): JsonRpcSigner {\n        return logger.throwError(\n            \"API provider does not support signing\",\n            Logger.errors.UNSUPPORTED_OPERATION,\n            { operation: \"getSigner\" }\n        );\n    }\n\n    listAccounts(): Promise<Array<string>> {\n        return Promise.resolve([]);\n    }\n\n    // Return a defaultApiKey if null, otherwise validate the API key\n    static getApiKey(apiKey: any): any {\n        return apiKey;\n    }\n\n    // Returns the url or connection for the given network and API key. The\n    // API key will have been sanitized by the getApiKey first, so any validation\n    // or transformations can be done there.\n    static getUrl(network: Network, apiKey: any): string | ConnectionInfo {\n        return logger.throwError(\"not implemented; sub-classes must override getUrl\", Logger.errors.NOT_IMPLEMENTED, {\n            operation: \"getUrl\"\n        });\n    }\n}\n","\"use strict\";\n\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { CommunityResourcable, showThrottleMessage } from \"./formatter\";\nimport { WebSocketProvider } from \"./websocket-provider\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\n// This key was provided to ethers.js by Alchemy to be used by the\n// default provider, but it is recommended that for your own\n// production environments, that you acquire your own API key at:\n//   https://dashboard.alchemyapi.io\n\nconst defaultApiKey = \"_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC\"\n\nexport class AlchemyWebSocketProvider extends WebSocketProvider implements CommunityResourcable {\n    readonly apiKey: string;\n\n    constructor(network?: Networkish, apiKey?: any) {\n        const provider = new AlchemyProvider(network, apiKey);\n\n        const url = provider.connection.url.replace(/^http/i, \"ws\")\n                                           .replace(\".alchemyapi.\", \".ws.alchemyapi.\");\n\n        super(url, provider.network);\n        defineReadOnly(this, \"apiKey\", provider.apiKey);\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n\nexport class AlchemyProvider extends UrlJsonRpcProvider {\n\n    static getWebSocketProvider(network?: Networkish, apiKey?: any): AlchemyWebSocketProvider {\n        return new AlchemyWebSocketProvider(network, apiKey);\n    }\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey == null) { return defaultApiKey; }\n        if (apiKey && typeof(apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey;\n    }\n\n    static getUrl(network: Network, apiKey: string): ConnectionInfo {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"eth-mainnet.alchemyapi.io/v2/\";\n                break;\n            case \"ropsten\":\n                host = \"eth-ropsten.alchemyapi.io/v2/\";\n                break;\n            case \"rinkeby\":\n                host = \"eth-rinkeby.alchemyapi.io/v2/\";\n                break;\n            case \"goerli\":\n                host = \"eth-goerli.alchemyapi.io/v2/\";\n                break;\n            case \"kovan\":\n                host = \"eth-kovan.alchemyapi.io/v2/\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.g.alchemy.com/v2/\";\n                break;\n            case \"arbitrum\":\n                host = \"arb-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"arbitrum-rinkeby\":\n                host = \"arb-rinkeby.g.alchemy.com/v2/\";\n                break;\n            case \"arbitrum-goerli\":\n                host = \"arb-goerli.g.alchemy.com/v2/\";\n                break;\n            case \"optimism\":\n                host = \"opt-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"optimism-kovan\":\n                host = \"opt-kovan.g.alchemy.com/v2/\";\n                break;\n            case \"optimism-goerli\":\n                host = \"opt-goerli.g.alchemy.com/v2/\"\n                break;\n            default:\n               logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n\n        return {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + apiKey),\n            throttleCallback: (attempt: number, url: string) => {\n                if (apiKey === defaultApiKey) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n","\nimport { Network } from \"@ethersproject/networks\";\n\nimport { showThrottleMessage } from \"./formatter\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nimport type { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n\nconst defaultApiKey = \"9f7d929b018cdffb338517efa06f58359e86ff1ffd350bc889738523659e7972\";\n\nfunction getHost(name: string): string {\n    switch (name) {\n        case \"homestead\":\n            return \"rpc.ankr.com/eth/\";\n        case \"ropsten\":\n            return \"rpc.ankr.com/eth_ropsten/\";\n        case \"rinkeby\":\n            return \"rpc.ankr.com/eth_rinkeby/\";\n        case \"goerli\":\n            return \"rpc.ankr.com/eth_goerli/\";\n\n        case \"matic\":\n            return \"rpc.ankr.com/polygon/\";\n\n        case \"arbitrum\":\n            return \"rpc.ankr.com/arbitrum/\";\n    }\n    return logger.throwArgumentError(\"unsupported network\", \"name\", name);\n}\n\nexport class AnkrProvider extends UrlJsonRpcProvider {\n    readonly apiKey: string;\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey == null) { return defaultApiKey; }\n        return apiKey;\n    }\n\n    static getUrl(network: Network, apiKey: any): ConnectionInfo {\n        if (apiKey == null) { apiKey = defaultApiKey; }\n        const connection: ConnectionInfo = {\n            allowGzip: true,\n            url: (\"https:/\\/\" + getHost(network.name) + apiKey),\n            throttleCallback: (attempt: number, url: string) => {\n                if (apiKey.apiKey === defaultApiKey) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n\n        if (apiKey.projectSecret != null) {\n            connection.user = \"\";\n            connection.password = apiKey.projectSecret\n        }\n\n        return connection;\n    }\n}\n","\"use strict\";\n\nimport { Network } from \"@ethersproject/networks\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport class CloudflareProvider extends UrlJsonRpcProvider {\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey != null) {\n            logger.throwArgumentError(\"apiKey not supported for cloudflare\", \"apiKey\", apiKey);\n        }\n        return null;\n    }\n\n    static getUrl(network: Network, apiKey?: any): string {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://cloudflare-eth.com/\";\n                break;\n            default:\n               logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n\n        return host;\n    }\n\n    async perform(method: string, params: any): Promise<any> {\n        // The Cloudflare provider does not support eth_blockNumber,\n        // so we get the latest block and pull it from that\n        if (method === \"getBlockNumber\") {\n            const block = await super.perform(\"getBlock\", { blockTag: \"latest\" });\n            return block.number;\n        }\n\n        return super.perform(method, params);\n    }\n}\n","\"use strict\";\n\nimport { BlockTag, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { hexlify, hexValue, isHexString } from \"@ethersproject/bytes\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { ConnectionInfo, fetchJson } from \"@ethersproject/web\";\n\nimport { showThrottleMessage } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { BaseProvider } from \"./base-provider\";\n\n\n// The transaction has already been sanitized by the calls in Provider\nfunction getTransactionPostData(transaction: TransactionRequest): Record<string, string> {\n    const result: Record<string, string> = { };\n    for (let key in transaction) {\n        if ((<any>transaction)[key] == null) { continue; }\n        let value = (<any>transaction)[key];\n        if (key === \"type\" && value === 0) { continue; }\n\n        // Quantity-types require no leading zero, unless 0\n        if ((<any>{ type: true, gasLimit: true, gasPrice: true, maxFeePerGs: true, maxPriorityFeePerGas: true, nonce: true, value: true })[key]) {\n            value = hexValue(hexlify(value));\n        } else if (key === \"accessList\") {\n            value = \"[\" + accessListify(value).map((set) => {\n                return `{address:\"${ set.address }\",storageKeys:[\"${ set.storageKeys.join('\",\"') }\"]}`;\n            }).join(\",\") + \"]\";\n        } else {\n            value = hexlify(value);\n        }\n        result[key] = value;\n    }\n    return result;\n}\n\nfunction getResult(result: { status?: number, message?: string, result?: any }): any {\n    // getLogs, getHistory have weird success responses\n    if (result.status == 0 && (result.message === \"No records found\" || result.message === \"No transactions found\")) {\n        return result.result;\n    }\n\n    if (result.status != 1 || typeof(result.message) !== \"string\" || !result.message.match(/^OK/)) {\n        const error: any = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        if ((result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n            error.throttleRetry = true;\n        }\n        throw error;\n    }\n\n    return result.result;\n}\n\nfunction getJsonResult(result: { jsonrpc: string, result?: any, error?: { code?: number, data?: any, message?: string} } ): any {\n    // This response indicates we are being throttled\n    if (result && (<any>result).status == 0 && (<any>result).message == \"NOTOK\" && (result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n        const error: any = new Error(\"throttled response\");\n        error.result = JSON.stringify(result);\n        error.throttleRetry = true;\n        throw error;\n    }\n\n    if (result.jsonrpc != \"2.0\") {\n        // @TODO: not any\n        const error: any = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        throw error;\n    }\n\n    if (result.error) {\n        // @TODO: not any\n        const error: any = new Error(result.error.message || \"unknown error\");\n        if (result.error.code) { error.code = result.error.code; }\n        if (result.error.data) { error.data = result.error.data; }\n        throw error;\n    }\n\n    return result.result;\n}\n\n// The blockTag was normalized as a string by the Provider pre-perform operations\nfunction checkLogTag(blockTag: string): number | \"latest\" {\n    if (blockTag === \"pending\") { throw new Error(\"pending not supported\"); }\n    if (blockTag === \"latest\") { return blockTag; }\n\n    return parseInt(blockTag.substring(2), 16);\n}\n\n\nfunction checkError(method: string, error: any, transaction: any): any {\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\" && error.code === Logger.errors.SERVER_ERROR) {\n        const e = error.error;\n\n        // Etherscan keeps changing their string\n        if (e && (e.message.match(/reverted/i) || e.message.match(/VM execution error/i))) {\n            // Etherscan prefixes the data like \"Reverted 0x1234\"\n            let data = e.data;\n            if (data) { data = \"0x\" + data.replace(/^.*0x/i, \"\"); }\n\n            if (isHexString(data)) { return data; }\n\n            logger.throwError(\"missing revert data in call exception\", Logger.errors.CALL_EXCEPTION, {\n                error, data: \"0x\"\n            });\n        }\n    }\n\n    // Get the message from any nested error structure\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR) {\n        if (error.error && typeof(error.error.message) === \"string\") {\n            message = error.error.message;\n        } else if (typeof(error.body) === \"string\") {\n            message = error.body;\n        } else if (typeof(error.responseText) === \"string\") {\n            message = error.responseText;\n        }\n    }\n    message = (message || \"\").toLowerCase();\n\n    // \"Insufficient funds. The account you tried to send transaction from does not have enough funds. Required 21464000000000 and got: 0\"\n    if (message.match(/insufficient funds/)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n           error, method, transaction\n        });\n    }\n\n    // \"Transaction with the same hash was already imported.\"\n    if (message.match(/same hash was already imported|transaction nonce is too low|nonce too low/)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n           error, method, transaction\n        });\n    }\n\n    // \"Transaction gas price is too low. There is another transaction with same nonce in the queue. Try increasing the gas price or incrementing the nonce.\"\n    if (message.match(/another transaction with same nonce/)) {\n         logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n         });\n    }\n\n    if (message.match(/execution failed due to an exception|execution reverted/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n\n    throw error;\n}\n\nexport class EtherscanProvider extends BaseProvider{\n    readonly baseUrl: string;\n    readonly apiKey: string | null;\n\n    constructor(network?: Networkish, apiKey?: string) {\n        super(network);\n\n        defineReadOnly(this, \"baseUrl\", this.getBaseUrl());\n        defineReadOnly(this, \"apiKey\", apiKey || null);\n    }\n\n    getBaseUrl(): string {\n        switch(this.network ? this.network.name: \"invalid\") {\n            case \"homestead\":\n                return \"https:/\\/api.etherscan.io\";\n            case \"ropsten\":\n                return \"https:/\\/api-ropsten.etherscan.io\";\n            case \"rinkeby\":\n                return \"https:/\\/api-rinkeby.etherscan.io\";\n            case \"kovan\":\n                return \"https:/\\/api-kovan.etherscan.io\";\n            case \"goerli\":\n                return \"https:/\\/api-goerli.etherscan.io\";\n            case \"sepolia\":\n                return \"https:/\\/api-sepolia.etherscan.io\";\n            case \"optimism\":\n                return \"https:/\\/api-optimistic.etherscan.io\";\n            case \"optimism-kovan\":\n                return \"https:/\\/api-kovan-optimistic.etherscan.io\";\n            default:\n        }\n\n        return logger.throwArgumentError(\"unsupported network\", \"network\", this.network.name);\n    }\n\n    getUrl(module: string, params: Record<string, string>): string {\n        const query = Object.keys(params).reduce((accum, key) => {\n            const value = params[key];\n            if (value != null) {\n                accum += `&${ key }=${ value }`\n            }\n            return accum\n        }, \"\");\n        const apiKey = ((this.apiKey) ? `&apikey=${ this.apiKey }`: \"\");\n        return `${ this.baseUrl }/api?module=${ module }${ query }${ apiKey }`;\n    }\n\n    getPostUrl(): string {\n        return `${ this.baseUrl }/api`;\n    }\n\n    getPostData(module: string, params: Record<string, any>): Record<string, any> {\n        params.module = module;\n        params.apikey = this.apiKey;\n        return params;\n    }\n\n    async fetch(module: string, params: Record<string, any>, post?: boolean): Promise<any> {\n        const url = (post ? this.getPostUrl(): this.getUrl(module, params));\n        const payload = (post ? this.getPostData(module, params): null);\n        const procFunc = (module === \"proxy\") ? getJsonResult: getResult;\n\n        this.emit(\"debug\", {\n            action: \"request\",\n            request: url,\n            provider: this\n        });\n\n        const connection: ConnectionInfo = {\n            url: url,\n            throttleSlotInterval: 1000,\n            throttleCallback: (attempt: number, url: string) => {\n                if (this.isCommunityResource()) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n\n        let payloadStr: string = null;\n        if (payload) {\n            connection.headers = { \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\" };\n            payloadStr = Object.keys(payload).map((key) => {\n                return `${ key }=${ payload[key] }`\n            }).join(\"&\");\n        }\n\n        const result = await fetchJson(connection, payloadStr, procFunc || getJsonResult);\n\n        this.emit(\"debug\", {\n            action: \"response\",\n            request: url,\n            response: deepCopy(result),\n            provider: this\n        });\n\n        return result;\n    }\n\n    async detectNetwork(): Promise<Network> {\n        return this.network;\n    }\n\n    async perform(method: string, params: any): Promise<any> {\n\n        switch (method) {\n            case \"getBlockNumber\":\n                return this.fetch(\"proxy\", { action: \"eth_blockNumber\" });\n\n            case \"getGasPrice\":\n                return this.fetch(\"proxy\", { action: \"eth_gasPrice\" });\n\n            case \"getBalance\":\n                // Returns base-10 result\n                return this.fetch(\"account\", {\n                    action: \"balance\",\n                    address: params.address,\n                    tag: params.blockTag\n                });\n\n            case \"getTransactionCount\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionCount\",\n                    address: params.address,\n                    tag: params.blockTag\n                });\n\n            case \"getCode\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getCode\",\n                    address: params.address,\n                    tag: params.blockTag\n                });\n\n            case \"getStorageAt\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getStorageAt\",\n                    address: params.address,\n                    position: params.position,\n                    tag: params.blockTag\n                });\n\n            case \"sendTransaction\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_sendRawTransaction\",\n                    hex: params.signedTransaction\n                }, true).catch((error) => {\n                    return checkError(\"sendTransaction\", error, params.signedTransaction);\n                });\n\n            case \"getBlock\":\n                if (params.blockTag) {\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getBlockByNumber\",\n                        tag: params.blockTag,\n                        boolean: (params.includeTransactions ? \"true\": \"false\")\n                    });\n                }\n                throw new Error(\"getBlock by blockHash not implemented\");\n\n            case \"getTransaction\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionByHash\",\n                    txhash: params.transactionHash\n                });\n\n            case \"getTransactionReceipt\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionReceipt\",\n                    txhash: params.transactionHash\n                });\n\n            case \"call\": {\n                if (params.blockTag !== \"latest\") {\n                    throw new Error(\"EtherscanProvider does not support blockTag for call\");\n                }\n\n                const postData = getTransactionPostData(params.transaction);\n                postData.module = \"proxy\";\n                postData.action = \"eth_call\";\n\n                try {\n                    return await this.fetch(\"proxy\", postData, true);\n                } catch (error) {\n                    return checkError(\"call\", error, params.transaction);\n                }\n            }\n\n            case \"estimateGas\": {\n                const postData = getTransactionPostData(params.transaction);\n                postData.module = \"proxy\";\n                postData.action = \"eth_estimateGas\";\n\n                try {\n                    return await this.fetch(\"proxy\", postData, true);\n                } catch (error) {\n                    return checkError(\"estimateGas\", error, params.transaction);\n                }\n            }\n\n            case \"getLogs\": {\n                const args: Record<string, any> = { action: \"getLogs\" }\n\n                if (params.filter.fromBlock) {\n                    args.fromBlock = checkLogTag(params.filter.fromBlock);\n                }\n\n                if (params.filter.toBlock) {\n                    args.toBlock = checkLogTag(params.filter.toBlock);\n                }\n\n                if (params.filter.address) {\n                    args.address = params.filter.address;\n                }\n\n                // @TODO: We can handle slightly more complicated logs using the logs API\n                if (params.filter.topics && params.filter.topics.length > 0) {\n                    if (params.filter.topics.length > 1) {\n                        logger.throwError(\"unsupported topic count\", Logger.errors.UNSUPPORTED_OPERATION, { topics: params.filter.topics });\n                    }\n\n                    if (params.filter.topics.length === 1) {\n                        const topic0 = params.filter.topics[0];\n                        if (typeof(topic0) !== \"string\" || topic0.length !== 66) {\n                            logger.throwError(\"unsupported topic format\", Logger.errors.UNSUPPORTED_OPERATION, { topic0: topic0 });\n                        }\n                        args.topic0 = topic0;\n                    }\n                }\n\n                const logs: Array<any> = await this.fetch(\"logs\", args);\n\n                // Cache txHash => blockHash\n                let blocks: { [tag: string]: string } = {};\n\n                // Add any missing blockHash to the logs\n                for (let i = 0; i < logs.length; i++) {\n                    const log = logs[i];\n                    if (log.blockHash != null) { continue; }\n                    if (blocks[log.blockNumber] == null) {\n                        const block = await this.getBlock(log.blockNumber);\n                        if (block) {\n                            blocks[log.blockNumber] = block.hash;\n                        }\n                    }\n                    log.blockHash = blocks[log.blockNumber];\n                }\n\n                return logs;\n            }\n\n            case \"getEtherPrice\":\n                if (this.network.name !== \"homestead\") { return 0.0; }\n                return parseFloat((await this.fetch(\"stats\", { action: \"ethprice\" })).ethusd);\n\n            default:\n                break;\n         }\n\n        return super.perform(method, params);\n    }\n\n    // Note: The `page` page parameter only allows pagination within the\n    //       10,000 window available without a page and offset parameter\n    //       Error: Result window is too large, PageNo x Offset size must\n    //              be less than or equal to 10000\n    async getHistory(addressOrName: string | Promise<string>, startBlock?: BlockTag, endBlock?: BlockTag): Promise<Array<TransactionResponse>> {\n        const params = {\n            action: \"txlist\",\n            address: (await this.resolveName(addressOrName)),\n            startblock: ((startBlock == null) ? 0: startBlock),\n            endblock: ((endBlock == null) ? 99999999: endBlock),\n            sort: \"asc\"\n        };\n\n        const result = await this.fetch(\"account\", params);\n\n        return result.map((tx: any) => {\n            [\"contractAddress\", \"to\"].forEach(function(key) {\n                if (tx[key] == \"\") { delete tx[key]; }\n            });\n            if (tx.creates == null && tx.contractAddress != null) {\n                tx.creates = tx.contractAddress;\n            }\n            const item = this.formatter.transactionResponse(tx);\n            if (tx.timeStamp) { item.timestamp = parseInt(tx.timeStamp); }\n            return item;\n        });\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey == null);\n    }\n}\n","\"use strict\";\n\nimport { Block, BlockWithTransactions, Provider } from \"@ethersproject/abstract-provider\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { isHexString } from \"@ethersproject/bytes\";\nimport { Network } from \"@ethersproject/networks\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\nimport { shuffled } from \"@ethersproject/random\";\nimport { poll } from \"@ethersproject/web\";\n\nimport { BaseProvider } from \"./base-provider\";\nimport { isCommunityResource } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction now() { return (new Date()).getTime(); }\n\n// Returns to network as long as all agree, or null if any is null.\n// Throws an error if any two networks do not match.\nfunction checkNetworks(networks: Array<Network>): Network {\n    let result = null;\n\n    for (let i = 0; i < networks.length; i++) {\n        const network = networks[i];\n\n        // Null! We do not know our network; bail.\n        if (network == null) { return null; }\n\n        if (result) {\n            // Make sure the network matches the previous networks\n            if (!(result.name === network.name && result.chainId === network.chainId &&\n                ((result.ensAddress === network.ensAddress) || (result.ensAddress == null && network.ensAddress == null)))) {\n\n                logger.throwArgumentError(\"provider mismatch\", \"networks\", networks);\n           }\n        } else {\n            result = network;\n        }\n    }\n\n    return result;\n}\n\nfunction median(values: Array<number>, maxDelta?: number): number {\n    values = values.slice().sort();\n    const middle = Math.floor(values.length / 2);\n\n    // Odd length; take the middle\n    if (values.length % 2) {\n        return values[middle];\n    }\n\n    // Even length; take the average of the two middle\n    const a = values[middle - 1], b = values[middle];\n\n    if (maxDelta != null && Math.abs(a - b) > maxDelta) {\n        return null;\n    }\n\n    return (a + b) / 2;\n}\n\nfunction serialize(value: any): string {\n    if (value === null) {\n        return \"null\";\n    } else if (typeof(value) === \"number\" || typeof(value) === \"boolean\") {\n        return JSON.stringify(value);\n    } else if (typeof(value) === \"string\") {\n        return value;\n    } else if (BigNumber.isBigNumber(value)) {\n        return value.toString();\n    } else if (Array.isArray(value)) {\n        return JSON.stringify(value.map((i) => serialize(i)));\n    } else if (typeof(value) === \"object\") {\n        const keys = Object.keys(value);\n        keys.sort();\n        return \"{\" + keys.map((key) => {\n            let v = value[key];\n            if (typeof(v) === \"function\") {\n                v = \"[function]\";\n            } else {\n                v = serialize(v);\n            }\n            return JSON.stringify(key) + \":\" + v;\n        }).join(\",\") + \"}\";\n    }\n\n    throw new Error(\"unknown value type: \" + typeof(value));\n}\n\n// Next request ID to use for emitting debug info\nlet nextRid = 1;\n\n\nexport interface FallbackProviderConfig {\n    // The Provider\n    provider: Provider;\n\n    // The priority to favour this Provider; lower values are used first (higher priority)\n    priority?: number;\n\n    // Timeout before also triggering the next provider; this does not stop\n    // this provider and if its result comes back before a quorum is reached\n    // it will be incorporated into the vote\n    // - lower values will cause more network traffic but may result in a\n    //   faster result.\n    stallTimeout?: number;\n\n    // How much this provider contributes to the quorum; sometimes a specific\n    // provider may be more reliable or trustworthy than others, but usually\n    // this should be left as the default\n    weight?: number;\n};\n\n// A Staller is used to provide a delay to give a Provider a chance to response\n// before asking the next Provider to try.\ntype Staller = {\n    wait: (func: () => void) => Promise<void>\n    getPromise: () => Promise<void>,\n    cancel: () => void\n};\n\nfunction stall(duration: number): Staller {\n    let cancel: () => void = null;\n\n    let timer: NodeJS.Timer = null;\n    let promise = <Promise<void>>(new Promise((resolve) => {\n        cancel = function() {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n            resolve();\n        }\n        timer = setTimeout(cancel, duration);\n    }));\n\n    const wait = (func: () => void) => {\n        promise = promise.then(func);\n        return promise;\n    }\n\n    function getPromise(): Promise<void> {\n        return promise;\n    }\n\n    return { cancel, getPromise, wait };\n}\n\nconst ForwardErrors = [\n    Logger.errors.CALL_EXCEPTION,\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n    Logger.errors.UNPREDICTABLE_GAS_LIMIT\n];\n\nconst ForwardProperties = [\n    \"address\",\n    \"args\",\n    \"errorArgs\",\n    \"errorSignature\",\n    \"method\",\n    \"transaction\",\n];\n\n\n// @TODO: Make this an object with staller and cancel built-in\ninterface RunningConfig extends FallbackProviderConfig {\n    start?: number;\n    done?: boolean;\n    cancelled?: boolean;\n    runner?: Promise<any>;\n    staller?: Staller;\n    result?: any;\n    error?: Error;\n};\n\nfunction exposeDebugConfig(config: RunningConfig, now?: number): any {\n    const result: any = {\n        weight: config.weight\n    };\n    Object.defineProperty(result, \"provider\", { get: () => config.provider });\n    if (config.start) { result.start = config.start; }\n    if (now) { result.duration = (now - config.start); }\n    if (config.done) {\n        if (config.error) {\n            result.error = config.error;\n        } else {\n            result.result = config.result || null;\n        }\n    }\n    return result;\n}\n\nfunction normalizedTally(normalize: (value: any) => string, quorum: number): (configs: Array<RunningConfig>) => any {\n    return function(configs: Array<RunningConfig>): any {\n\n        // Count the votes for each result\n        const tally: { [ key: string]: { count: number, result: any } } = { };\n        configs.forEach((c) => {\n            const value = normalize(c.result);\n            if (!tally[value]) { tally[value] = { count: 0, result: c.result }; }\n            tally[value].count++;\n        });\n\n        // Check for a quorum on any given result\n        const keys = Object.keys(tally);\n        for (let i = 0; i < keys.length; i++) {\n            const check = tally[keys[i]];\n            if (check.count >= quorum) {\n                return check.result;\n            }\n        }\n\n        // No quroum\n        return undefined;\n    }\n}\nfunction getProcessFunc(provider: FallbackProvider, method: string, params: { [ key: string ]: any }): (configs: Array<RunningConfig>) => any {\n\n    let normalize = serialize;\n\n    switch (method) {\n        case \"getBlockNumber\":\n            // Return the median value, unless there is (median + 1) is also\n            // present, in which case that is probably true and the median\n            // is going to be stale soon. In the event of a malicious node,\n            // the lie will be true soon enough.\n            return function(configs: Array<RunningConfig>): number {\n                const values = configs.map((c) => c.result);\n\n                // Get the median block number\n                let blockNumber = median(configs.map((c) => c.result), 2);\n                if (blockNumber == null) { return undefined; }\n\n                blockNumber = Math.ceil(blockNumber);\n\n                // If the next block height is present, its prolly safe to use\n                if (values.indexOf(blockNumber + 1) >= 0) { blockNumber++; }\n\n                // Don't ever roll back the blockNumber\n                if (blockNumber >= provider._highestBlockNumber) {\n                    provider._highestBlockNumber = blockNumber;\n                }\n\n                return provider._highestBlockNumber;\n            };\n\n        case \"getGasPrice\":\n            // Return the middle (round index up) value, similar to median\n            // but do not average even entries and choose the higher.\n            // Malicious actors must compromise 50% of the nodes to lie.\n            return function(configs: Array<RunningConfig>): BigNumber {\n                const values = configs.map((c) => c.result);\n                values.sort();\n                return values[Math.floor(values.length / 2)];\n            }\n\n        case \"getEtherPrice\":\n            // Returns the median price. Malicious actors must compromise at\n            // least 50% of the nodes to lie (in a meaningful way).\n            return function(configs: Array<RunningConfig>): number {\n                return median(configs.map((c) => c.result));\n            }\n\n        // No additional normalizing required; serialize is enough\n        case \"getBalance\":\n        case \"getTransactionCount\":\n        case \"getCode\":\n        case \"getStorageAt\":\n        case \"call\":\n        case \"estimateGas\":\n        case \"getLogs\":\n            break;\n\n        // We drop the confirmations from transactions as it is approximate\n        case \"getTransaction\":\n        case \"getTransactionReceipt\":\n            normalize = function(tx: any): string {\n                if (tx == null) { return null; }\n\n                tx = shallowCopy(tx);\n                tx.confirmations = -1;\n                return serialize(tx);\n            }\n            break;\n\n        // We drop the confirmations from transactions as it is approximate\n        case \"getBlock\":\n            // We drop the confirmations from transactions as it is approximate\n            if (params.includeTransactions) {\n                normalize = function(block: BlockWithTransactions): string {\n                    if (block == null) { return null; }\n\n                    block = shallowCopy(block);\n                    block.transactions = block.transactions.map((tx) => {\n                        tx = shallowCopy(tx);\n                        tx.confirmations = -1;\n                        return tx;\n                    });\n                    return serialize(block);\n                };\n            } else {\n                normalize = function(block: Block): string {\n                    if (block == null) { return null; }\n                    return serialize(block);\n                }\n            }\n            break;\n\n        default:\n            throw new Error(\"unknown method: \" + method);\n    }\n\n    // Return the result if and only if the expected quorum is\n    // satisfied and agreed upon for the final result.\n    return normalizedTally(normalize, provider.quorum);\n\n}\n\n// If we are doing a blockTag query, we need to make sure the backend is\n// caught up to the FallbackProvider, before sending a request to it.\nasync function waitForSync(config: RunningConfig, blockNumber: number): Promise<BaseProvider> {\n    const provider = <BaseProvider>(config.provider);\n\n    if ((provider.blockNumber != null && provider.blockNumber >= blockNumber) || blockNumber === -1) {\n        return provider;\n    }\n\n    return poll(() => {\n        return new Promise((resolve, reject) => {\n            setTimeout(function() {\n\n                // We are synced\n                if (provider.blockNumber >= blockNumber) { return resolve(provider); }\n\n                // We're done; just quit\n                if (config.cancelled) { return resolve(null); }\n\n                // Try again, next block\n                return resolve(undefined);\n            }, 0);\n        });\n    }, { oncePoll: provider });\n}\n\nasync function getRunner(config: RunningConfig, currentBlockNumber: number, method: string, params: { [ key: string]: any }): Promise<any> {\n    let provider = config.provider;\n\n    switch (method) {\n        case \"getBlockNumber\":\n        case \"getGasPrice\":\n            return provider[method]();\n        case \"getEtherPrice\":\n            if ((<any>provider).getEtherPrice) {\n                return (<any>provider).getEtherPrice();\n            }\n            break;\n        case \"getBalance\":\n        case \"getTransactionCount\":\n        case \"getCode\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider[method](params.address, params.blockTag || \"latest\");\n        case \"getStorageAt\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider.getStorageAt(params.address, params.position, params.blockTag || \"latest\");\n        case \"getBlock\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider[(params.includeTransactions ? \"getBlockWithTransactions\": \"getBlock\")](params.blockTag || params.blockHash);\n        case \"call\":\n        case \"estimateGas\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            if (method === \"call\" && params.blockTag) {\n                return provider[method](params.transaction, params.blockTag);\n            }\n            return provider[method](params.transaction);\n        case \"getTransaction\":\n        case \"getTransactionReceipt\":\n            return provider[method](params.transactionHash);\n        case \"getLogs\": {\n            let filter = params.filter;\n            if ((filter.fromBlock && isHexString(filter.fromBlock)) || (filter.toBlock && isHexString(filter.toBlock))) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider.getLogs(filter);\n        }\n    }\n\n    return logger.throwError(\"unknown method error\", Logger.errors.UNKNOWN_ERROR, {\n        method: method,\n        params: params\n    });\n}\n\nexport class FallbackProvider extends BaseProvider {\n    readonly providerConfigs: ReadonlyArray<FallbackProviderConfig>;\n    readonly quorum: number;\n\n    // Due to the highly asyncronous nature of the blockchain, we need\n    // to make sure we never unroll the blockNumber due to our random\n    // sample of backends\n    _highestBlockNumber: number;\n\n    constructor(providers: Array<Provider | FallbackProviderConfig>, quorum?: number) {\n        if (providers.length === 0) {\n            logger.throwArgumentError(\"missing providers\", \"providers\", providers);\n        }\n\n        const providerConfigs: Array<FallbackProviderConfig> = providers.map((configOrProvider, index) => {\n            if (Provider.isProvider(configOrProvider)) {\n                const stallTimeout = isCommunityResource(configOrProvider) ? 2000: 750;\n                const priority = 1;\n                return Object.freeze({ provider: configOrProvider, weight: 1, stallTimeout, priority });\n            }\n\n            const config: FallbackProviderConfig = shallowCopy(configOrProvider);\n\n            if (config.priority == null) { config.priority = 1; }\n            if (config.stallTimeout == null) {\n                config.stallTimeout = isCommunityResource(configOrProvider) ? 2000: 750;\n            }\n            if (config.weight == null) { config.weight = 1; }\n\n            const weight = config.weight;\n            if (weight % 1 || weight > 512 || weight < 1) {\n                logger.throwArgumentError(\"invalid weight; must be integer in [1, 512]\", `providers[${ index }].weight`, weight);\n            }\n\n            return Object.freeze(config);\n        });\n\n        const total = providerConfigs.reduce((accum, c) => (accum + c.weight), 0);\n\n        if (quorum == null) {\n            quorum = total / 2;\n        } else if (quorum > total) {\n            logger.throwArgumentError(\"quorum will always fail; larger than total weight\", \"quorum\", quorum);\n        }\n\n        // Are all providers' networks are known\n        let networkOrReady: Network | Promise<Network> = checkNetworks(providerConfigs.map((c) => (<any>(c.provider)).network));\n\n        // Not all networks are known; we must stall\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then(resolve, reject);\n                }, 0);\n            });\n        }\n\n        super(networkOrReady);\n\n        // Preserve a copy, so we do not get mutated\n        defineReadOnly(this, \"providerConfigs\", Object.freeze(providerConfigs));\n        defineReadOnly(this, \"quorum\", quorum);\n\n        this._highestBlockNumber = -1;\n    }\n\n    async detectNetwork(): Promise<Network> {\n        const networks = await Promise.all(this.providerConfigs.map((c) => c.provider.getNetwork()));\n        return checkNetworks(networks);\n    }\n\n    async perform(method: string, params: { [name: string]: any }): Promise<any> {\n        // Sending transactions is special; always broadcast it to all backends\n        if (method === \"sendTransaction\") {\n            const results: Array<string | Error> = await Promise.all(this.providerConfigs.map((c) => {\n                return c.provider.sendTransaction(params.signedTransaction).then((result) => {\n                    return result.hash;\n                }, (error) => {\n                    return error;\n                });\n            }));\n\n            // Any success is good enough (other errors are likely \"already seen\" errors\n            for (let i = 0; i < results.length; i++) {\n                const result = results[i];\n                if (typeof(result) === \"string\") { return result; }\n            }\n\n            // They were all an error; pick the first error\n            throw results[0];\n        }\n\n        // We need to make sure we are in sync with our backends, so we need\n        // to know this before we can make a lot of calls\n        if (this._highestBlockNumber === -1 && method !== \"getBlockNumber\") {\n            await this.getBlockNumber();\n        }\n\n        const processFunc = getProcessFunc(this, method, params);\n\n        // Shuffle the providers and then sort them by their priority; we\n        // shallowCopy them since we will store the result in them too\n        const configs: Array<RunningConfig> = shuffled(this.providerConfigs.map(shallowCopy));\n        configs.sort((a, b) => (a.priority - b.priority));\n\n        const currentBlockNumber = this._highestBlockNumber;\n\n        let i = 0;\n        let first = true;\n        while (true) {\n            const t0 = now();\n\n            // Compute the inflight weight (exclude anything past)\n            let inflightWeight = configs.filter((c) => (c.runner && ((t0 - c.start) < c.stallTimeout)))\n                                        .reduce((accum, c) => (accum + c.weight), 0);\n\n            // Start running enough to meet quorum\n            while (inflightWeight < this.quorum && i < configs.length) {\n                const config = configs[i++];\n\n                const rid = nextRid++;\n\n                config.start = now();\n                config.staller = stall(config.stallTimeout);\n                config.staller.wait(() => { config.staller = null; });\n\n                config.runner = getRunner(config, currentBlockNumber, method, params).then((result) => {\n                    config.done = true;\n                    config.result = result;\n\n                    if (this.listenerCount(\"debug\")) {\n                        this.emit(\"debug\", {\n                            action: \"request\",\n                            rid: rid,\n                            backend: exposeDebugConfig(config, now()),\n                            request: { method: method, params: deepCopy(params) },\n                            provider: this\n                        });\n                     }\n\n                }, (error) => {\n                    config.done = true;\n                    config.error = error;\n\n                    if (this.listenerCount(\"debug\")) {\n                        this.emit(\"debug\", {\n                            action: \"request\",\n                            rid: rid,\n                            backend: exposeDebugConfig(config, now()),\n                            request: { method: method, params: deepCopy(params) },\n                            provider: this\n                        });\n                    }\n                });\n\n                if (this.listenerCount(\"debug\")) {\n                    this.emit(\"debug\", {\n                        action: \"request\",\n                        rid: rid,\n                        backend: exposeDebugConfig(config, null),\n                        request: { method: method, params: deepCopy(params) },\n                        provider: this\n                    });\n                }\n\n                inflightWeight += config.weight;\n            }\n\n            // Wait for anything meaningful to finish or stall out\n            const waiting: Array<Promise<any>> = [ ];\n            configs.forEach((c) => {\n                if (c.done || !c.runner) { return; }\n                waiting.push(c.runner);\n                if (c.staller) { waiting.push(c.staller.getPromise()); }\n            });\n\n            if (waiting.length) { await Promise.race(waiting); }\n\n            // Check the quorum and process the results; the process function\n            // may additionally decide the quorum is not met\n            const results = configs.filter((c) => (c.done && c.error == null));\n            if (results.length >= this.quorum) {\n                const result = processFunc(results);\n                if (result !== undefined) {\n                    // Shut down any stallers\n                    configs.forEach(c => {\n                        if (c.staller) { c.staller.cancel(); }\n                        c.cancelled = true;\n                    });\n                    return result;\n                }\n                if (!first) { await stall(100).getPromise(); }\n                first = false;\n            }\n\n            // No result, check for errors that should be forwarded\n            const errors = configs.reduce((accum, c) => {\n                if (!c.done || c.error == null) { return accum; }\n\n                const code = (<any>(c.error)).code;\n                if (ForwardErrors.indexOf(code) >= 0) {\n                    if (!accum[code]) { accum[code] = { error: c.error, weight: 0 }; }\n                    accum[code].weight += c.weight;\n                }\n\n                return accum;\n            }, <{ [ code: string ]: { error: Error, weight: number } }>({ }));\n\n            Object.keys(errors).forEach((errorCode: string) => {\n                const tally = errors[errorCode];\n                if (tally.weight < this.quorum) { return; }\n\n                // Shut down any stallers\n                configs.forEach(c => {\n                    if (c.staller) { c.staller.cancel(); }\n                    c.cancelled = true;\n                });\n\n                const e = <any>(tally.error);\n\n                const props: { [ name: string ]: any } = { };\n                ForwardProperties.forEach((name) => {\n                    if (e[name] == null) { return; }\n                    props[name] = e[name];\n                });\n\n                logger.throwError(e.reason || e.message, <any>errorCode, props);\n            });\n\n            // All configs have run to completion; we will never get more data\n            if (configs.filter((c) => !c.done).length === 0) { break; }\n        }\n\n        // Shut down any stallers; shouldn't be any\n        configs.forEach(c => {\n            if (c.staller) { c.staller.cancel(); }\n            c.cancelled = true;\n        });\n\n        return logger.throwError(\"failed to meet quorum\", Logger.errors.SERVER_ERROR, {\n            method: method,\n            params: params,\n            //results: configs.map((c) => c.result),\n            //errors: configs.map((c) => c.error),\n            results: configs.map((c) => exposeDebugConfig(c)),\n            provider: this\n        });\n    }\n}\n","\"use strict\";\n\nconst IpcProvider: any = null;\n\nexport {\n    IpcProvider\n};\n","\"use strict\";\n\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { CommunityResourcable, showThrottleMessage } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\n\nconst defaultProjectId = \"84842078b09946638c03157f83405213\"\n\nexport class InfuraWebSocketProvider extends WebSocketProvider implements CommunityResourcable {\n    readonly apiKey: string;\n    readonly projectId: string;\n    readonly projectSecret: string;\n\n    constructor(network?: Networkish, apiKey?: any) {\n        const provider = new InfuraProvider(network, apiKey);\n        const connection = provider.connection;\n        if (connection.password) {\n            logger.throwError(\"INFURA WebSocket project secrets unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"InfuraProvider.getWebSocketProvider()\"\n            });\n        }\n\n        const url = connection.url.replace(/^http/i, \"ws\").replace(\"/v3/\", \"/ws/v3/\");\n        super(url, network);\n\n        defineReadOnly(this, \"apiKey\", provider.projectId);\n        defineReadOnly(this, \"projectId\", provider.projectId);\n        defineReadOnly(this, \"projectSecret\", provider.projectSecret);\n    }\n\n    isCommunityResource(): boolean {\n        return (this.projectId === defaultProjectId);\n    }\n}\n\nexport class InfuraProvider extends UrlJsonRpcProvider {\n    readonly projectId: string;\n    readonly projectSecret: string;\n\n    static getWebSocketProvider(network?: Networkish, apiKey?: any): InfuraWebSocketProvider {\n        return new InfuraWebSocketProvider(network, apiKey);\n    }\n\n    static getApiKey(apiKey: any): any {\n        const apiKeyObj: { apiKey: string, projectId: string, projectSecret: string } = {\n            apiKey: defaultProjectId,\n            projectId: defaultProjectId,\n            projectSecret: null\n        };\n\n        if (apiKey == null) { return apiKeyObj; }\n\n        if (typeof(apiKey) === \"string\") {\n            apiKeyObj.projectId = apiKey;\n\n        } else if (apiKey.projectSecret != null) {\n            logger.assertArgument((typeof(apiKey.projectId) === \"string\"),\n                \"projectSecret requires a projectId\", \"projectId\", apiKey.projectId);\n            logger.assertArgument((typeof(apiKey.projectSecret) === \"string\"),\n                \"invalid projectSecret\", \"projectSecret\", \"[REDACTED]\");\n\n            apiKeyObj.projectId = apiKey.projectId;\n            apiKeyObj.projectSecret = apiKey.projectSecret;\n\n        } else if (apiKey.projectId) {\n            apiKeyObj.projectId = apiKey.projectId;\n        }\n\n        apiKeyObj.apiKey = apiKeyObj.projectId;\n\n        return apiKeyObj;\n    }\n\n    static getUrl(network: Network, apiKey: any): ConnectionInfo {\n        let host: string = null;\n        switch(network ? network.name: \"unknown\") {\n            case \"homestead\":\n                host = \"mainnet.infura.io\";\n                break;\n            case \"ropsten\":\n                host = \"ropsten.infura.io\";\n                break;\n            case \"rinkeby\":\n                host = \"rinkeby.infura.io\";\n                break;\n            case \"kovan\":\n                host = \"kovan.infura.io\";\n                break;\n            case \"goerli\":\n                host = \"goerli.infura.io\";\n                break;\n            case \"sepolia\":\n                host = \"sepolia.infura.io\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.infura.io\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.infura.io\";\n                break;\n            case \"optimism\":\n                host = \"optimism-mainnet.infura.io\";\n                break;\n            case \"optimism-kovan\":\n                host = \"optimism-kovan.infura.io\";\n                break;\n            case \"arbitrum\":\n                host = \"arbitrum-mainnet.infura.io\";\n                break;\n            case \"arbitrum-rinkeby\":\n                host = \"arbitrum-rinkeby.infura.io\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n\n        const connection: ConnectionInfo = {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + \"/v3/\" + apiKey.projectId),\n            throttleCallback: (attempt: number, url: string) => {\n                if (apiKey.projectId === defaultProjectId) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n\n        if (apiKey.projectSecret != null) {\n            connection.user = \"\";\n            connection.password = apiKey.projectSecret\n        }\n\n        return connection;\n    }\n\n    isCommunityResource(): boolean {\n        return (this.projectId === defaultProjectId);\n    }\n}\n","\nimport { deepCopy } from \"@ethersproject/properties\";\nimport { fetchJson } from \"@ethersproject/web\";\n\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n\n// Experimental\n\nexport class JsonRpcBatchProvider extends JsonRpcProvider {\n    _pendingBatchAggregator: NodeJS.Timer;\n    _pendingBatch: Array<{\n        request: { method: string, params: Array<any>, id: number, jsonrpc: \"2.0\" },\n        resolve: (result: any) => void,\n        reject: (error: Error) => void\n    }>;\n\n    send(method: string, params: Array<any>): Promise<any> {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n\n        if (this._pendingBatch == null) {\n            this._pendingBatch = [ ];\n        }\n\n        const inflightRequest: any = { request, resolve: null, reject: null };\n\n        const promise = new Promise((resolve, reject) => {\n            inflightRequest.resolve = resolve;\n            inflightRequest.reject = reject;\n        });\n\n        this._pendingBatch.push(inflightRequest);\n\n        if (!this._pendingBatchAggregator) {\n            // Schedule batch for next event loop + short duration\n            this._pendingBatchAggregator = setTimeout(() => {\n\n                // Get teh current batch and clear it, so new requests\n                // go into the next batch\n                const batch = this._pendingBatch;\n                this._pendingBatch = null;\n                this._pendingBatchAggregator = null;\n\n                // Get the request as an array of requests\n                const request = batch.map((inflight) => inflight.request);\n\n                this.emit(\"debug\", {\n                    action: \"requestBatch\",\n                    request: deepCopy(request),\n                    provider: this\n                });\n\n                return fetchJson(this.connection, JSON.stringify(request)).then((result) => {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: request,\n                        response: result,\n                        provider: this\n                    });\n\n                    // For each result, feed it to the correct Promise, depending\n                    // on whether it was a success or error\n                    batch.forEach((inflightRequest, index) => {\n                        const payload = result[index];\n                        if (payload.error) {\n                            const error = new Error(payload.error.message);\n                            (<any>error).code = payload.error.code;\n                            (<any>error).data = payload.error.data;\n                            inflightRequest.reject(error);\n                        } else {\n                            inflightRequest.resolve(payload.result);\n                        }\n                    });\n\n                }, (error) => {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: request,\n                        provider: this\n                    });\n\n                    batch.forEach((inflightRequest) => {\n                        inflightRequest.reject(error);\n                    });\n                });\n\n            }, 10);\n        }\n\n        return promise;\n    }\n}\n","/* istanbul ignore file */\n\n\"use strict\";\n\nimport { Network } from \"@ethersproject/networks\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n// Special API key provided by Nodesmith for ethers.js\nconst defaultApiKey = \"ETHERS_JS_SHARED\";\n\nexport class NodesmithProvider extends UrlJsonRpcProvider {\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey && typeof(apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey || defaultApiKey;\n    }\n\n    static getUrl(network: Network, apiKey?: any): string {\n        logger.warn(\"NodeSmith will be discontinued on 2019-12-20; please migrate to another platform.\");\n\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc\";\n                break;\n            case \"ropsten\":\n                host = \"https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc\";\n                break;\n            case \"rinkeby\":\n                host = \"https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc\";\n                break;\n            case \"goerli\":\n                host = \"https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc\";\n                break;\n            case \"kovan\":\n                host = \"https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc\";\n                break;\n            default:\n               logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n\n        return (host + \"?apiKey=\" + apiKey);\n    }\n}\n","\"use strict\";\n\nimport { Network } from \"@ethersproject/networks\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nconst defaultApplicationId = \"62e1ad51b37b8e00394bda3b\";\n\n\nexport class PocketProvider extends UrlJsonRpcProvider {\n    readonly applicationId: string;\n    readonly applicationSecretKey: string;\n    readonly loadBalancer: boolean;\n\n    static getApiKey(apiKey: any): any {\n        const apiKeyObj: { applicationId: string, applicationSecretKey: string, loadBalancer: boolean } = {\n            applicationId: null,\n            loadBalancer: true,\n            applicationSecretKey: null\n        };\n\n        // Parse applicationId and applicationSecretKey\n        if (apiKey == null) {\n            apiKeyObj.applicationId = defaultApplicationId;\n\n        } else if (typeof (apiKey) === \"string\") {\n            apiKeyObj.applicationId = apiKey;\n\n        } else if (apiKey.applicationSecretKey != null) {\n            apiKeyObj.applicationId = apiKey.applicationId;\n            apiKeyObj.applicationSecretKey = apiKey.applicationSecretKey;\n\n        } else if (apiKey.applicationId) {\n            apiKeyObj.applicationId = apiKey.applicationId;\n\n        } else {\n            logger.throwArgumentError(\"unsupported PocketProvider apiKey\", \"apiKey\", apiKey);\n        }\n\n        return apiKeyObj;\n    }\n\n    static getUrl(network: Network, apiKey: any): ConnectionInfo {\n        let host: string = null;\n        switch (network ? network.name : \"unknown\") {\n            case \"goerli\":\n                host = \"eth-goerli.gateway.pokt.network\";\n                break;\n            case \"homestead\":\n                host = \"eth-mainnet.gateway.pokt.network\";\n                break;\n            case \"kovan\":\n                host = \"poa-kovan.gateway.pokt.network\";\n                break;\n            case \"matic\":\n                host = \"poly-mainnet.gateway.pokt.network\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai-rpc.gateway.pokt.network\";\n                break;\n            case \"rinkeby\":\n                host = \"eth-rinkeby.gateway.pokt.network\";\n                break;\n            case \"ropsten\":\n                host = \"eth-ropsten.gateway.pokt.network\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n\n        const url = `https:/\\/${ host }/v1/lb/${ apiKey.applicationId }`\n\n        const connection: ConnectionInfo = { headers: { }, url };\n        if (apiKey.applicationSecretKey != null) {\n            connection.user = \"\";\n            connection.password = apiKey.applicationSecretKey\n        }\n\n        return connection;\n    }\n\n    isCommunityResource(): boolean {\n        return (this.applicationId === defaultApplicationId);\n    }\n}\n","\"use strict\";\n\nimport { Networkish } from \"@ethersproject/networks\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n\n// Exported Types\nexport type ExternalProvider = {\n    isMetaMask?: boolean;\n    isStatus?: boolean;\n    host?: string;\n    path?: string;\n    sendAsync?: (request: { method: string, params?: Array<any> }, callback: (error: any, response: any) => void) => void\n    send?: (request: { method: string, params?: Array<any> }, callback: (error: any, response: any) => void) => void\n    request?: (request: { method: string, params?: Array<any> }) => Promise<any>\n}\n\nlet _nextId = 1;\n\nexport type JsonRpcFetchFunc = (method: string, params?: Array<any>) => Promise<any>;\n\ntype Web3LegacySend = (request: any, callback: (error: Error, response: any) => void) => void;\n\nfunction buildWeb3LegacyFetcher(provider: ExternalProvider, sendFunc: Web3LegacySend) : JsonRpcFetchFunc {\n    const fetcher = \"Web3LegacyFetcher\";\n\n    return function(method: string, params: Array<any>): Promise<any> {\n        const request = {\n            method: method,\n            params: params,\n            id: (_nextId++),\n            jsonrpc: \"2.0\"\n        };\n\n        return new Promise((resolve, reject) => {\n            this.emit(\"debug\", {\n                action: \"request\",\n                fetcher,\n                request: deepCopy(request),\n                provider: this\n            });\n\n            sendFunc(request, (error, response) => {\n\n                if (error) {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        fetcher,\n                        error,\n                        request,\n                        provider: this\n                    });\n\n                    return reject(error);\n                }\n\n                this.emit(\"debug\", {\n                    action: \"response\",\n                    fetcher,\n                    request,\n                    response,\n                    provider: this\n                });\n\n                if (response.error) {\n                    const error = new Error(response.error.message);\n                    (<any>error).code = response.error.code;\n                    (<any>error).data = response.error.data;\n                    return reject(error);\n                }\n\n                resolve(response.result);\n            });\n        });\n    }\n}\n\nfunction buildEip1193Fetcher(provider: ExternalProvider): JsonRpcFetchFunc {\n    return function(method: string, params: Array<any>): Promise<any> {\n        if (params == null) { params = [ ]; }\n\n        const request = { method, params };\n\n        this.emit(\"debug\", {\n            action: \"request\",\n            fetcher: \"Eip1193Fetcher\",\n            request: deepCopy(request),\n            provider: this\n        });\n\n        return provider.request(request).then((response) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                response,\n                provider: this\n            });\n\n            return response;\n\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                error,\n                provider: this\n            });\n\n            throw error;\n        });\n    }\n}\n\nexport class Web3Provider extends JsonRpcProvider {\n    readonly provider: ExternalProvider;\n    readonly jsonRpcFetchFunc: JsonRpcFetchFunc;\n\n    constructor(provider: ExternalProvider | JsonRpcFetchFunc, network?: Networkish) {\n        if (provider == null) {\n            logger.throwArgumentError(\"missing provider\", \"provider\", provider);\n        }\n\n        let path: string = null;\n        let jsonRpcFetchFunc: JsonRpcFetchFunc = null;\n        let subprovider: ExternalProvider = null;\n\n        if (typeof(provider) === \"function\") {\n            path = \"unknown:\";\n            jsonRpcFetchFunc = provider;\n\n        } else {\n            path = provider.host || provider.path || \"\";\n            if (!path && provider.isMetaMask) {\n                path = \"metamask\";\n            }\n\n            subprovider = provider;\n\n            if (provider.request) {\n                if (path === \"\") { path = \"eip-1193:\"; }\n                jsonRpcFetchFunc = buildEip1193Fetcher(provider);\n            } else if (provider.sendAsync) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));\n            } else if (provider.send) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider));\n            } else {\n                logger.throwArgumentError(\"unsupported provider\", \"provider\", provider);\n            }\n\n            if (!path) { path = \"unknown:\"; }\n        }\n\n        super(path, network);\n\n        defineReadOnly(this, \"jsonRpcFetchFunc\", jsonRpcFetchFunc);\n        defineReadOnly(this, \"provider\", subprovider);\n    }\n\n    send(method: string, params: Array<any>): Promise<any> {\n        return this.jsonRpcFetchFunc(method, params);\n    }\n}\n","\"use strict\";\n\nimport {\n    Block,\n    BlockTag,\n    EventType,\n    FeeData,\n    Filter,\n    Log,\n    Listener,\n    Provider,\n    TransactionReceipt,\n    TransactionRequest,\n    TransactionResponse\n} from \"@ethersproject/abstract-provider\";\n\nimport { getNetwork } from \"@ethersproject/networks\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\n\nimport { BaseProvider, EnsProvider, EnsResolver, Resolver } from \"./base-provider\";\n\nimport { AlchemyProvider, AlchemyWebSocketProvider } from \"./alchemy-provider\";\nimport { AnkrProvider } from \"./ankr-provider\";\nimport { CloudflareProvider } from \"./cloudflare-provider\";\nimport { EtherscanProvider } from \"./etherscan-provider\";\nimport { FallbackProvider, FallbackProviderConfig } from \"./fallback-provider\";\nimport { IpcProvider } from \"./ipc-provider\";\nimport { InfuraProvider, InfuraWebSocketProvider } from \"./infura-provider\";\nimport { JsonRpcProvider, JsonRpcSigner } from \"./json-rpc-provider\";\nimport { JsonRpcBatchProvider } from \"./json-rpc-batch-provider\";\nimport { NodesmithProvider } from \"./nodesmith-provider\";\nimport { PocketProvider } from \"./pocket-provider\";\nimport { StaticJsonRpcProvider, UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Web3Provider } from \"./web3-provider\";\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { ExternalProvider, JsonRpcFetchFunc } from \"./web3-provider\";\n\nimport { CommunityResourcable, Formatter, isCommunityResourcable, isCommunityResource, showThrottleMessage } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n////////////////////////\n// Helper Functions\n\nfunction getDefaultProvider(network?: Networkish, options?: any): BaseProvider {\n    if (network == null) { network = \"homestead\"; }\n\n    // If passed a URL, figure out the right type of provider based on the scheme\n    if (typeof(network) === \"string\") {\n        // @TODO: Add support for IpcProvider; maybe if it ends in \".ipc\"?\n\n        // Handle http and ws (and their secure variants)\n        const match = network.match(/^(ws|http)s?:/i);\n        if (match) {\n            switch (match[1].toLowerCase()) {\n                case \"http\": case \"https\":\n                    return new JsonRpcProvider(network);\n                case \"ws\": case \"wss\":\n                    return new WebSocketProvider(network);\n                default:\n                    logger.throwArgumentError(\"unsupported URL scheme\", \"network\", network);\n            }\n        }\n    }\n\n    const n = getNetwork(network);\n    if (!n || !n._defaultProvider) {\n        logger.throwError(\"unsupported getDefaultProvider network\", Logger.errors.NETWORK_ERROR, {\n            operation: \"getDefaultProvider\",\n            network: network\n        });\n    }\n\n    return n._defaultProvider({\n        FallbackProvider,\n\n        AlchemyProvider,\n        AnkrProvider,\n        CloudflareProvider,\n        EtherscanProvider,\n        InfuraProvider,\n        JsonRpcProvider,\n        NodesmithProvider,\n        PocketProvider,\n        Web3Provider,\n\n        IpcProvider,\n    }, options);\n}\n\n////////////////////////\n// Exports\n\nexport {\n\n    // Abstract Providers (or Abstract-ish)\n    Provider,\n    BaseProvider,\n\n    Resolver,\n\n    UrlJsonRpcProvider,\n\n    ///////////////////////\n    // Concrete Providers\n\n    FallbackProvider,\n\n    AlchemyProvider,\n    AlchemyWebSocketProvider,\n    AnkrProvider,\n    CloudflareProvider,\n    EtherscanProvider,\n    InfuraProvider,\n    InfuraWebSocketProvider,\n    JsonRpcProvider,\n    JsonRpcBatchProvider,\n    NodesmithProvider,\n    PocketProvider,\n    StaticJsonRpcProvider,\n    Web3Provider,\n    WebSocketProvider,\n\n    IpcProvider,\n\n\n    ///////////////////////\n    // Signer\n\n    JsonRpcSigner,\n\n\n    ///////////////////////\n    // Functions\n\n    getDefaultProvider,\n    getNetwork,\n    isCommunityResource,\n    isCommunityResourcable,\n    showThrottleMessage,\n\n\n    ///////////////////////\n    // Objects\n\n    Formatter,\n\n\n    ///////////////////////\n    // Types\n\n    Block,\n    BlockTag,\n    EventType,\n    FeeData,\n    Filter,\n    Log,\n    Listener,\n    TransactionReceipt,\n    TransactionRequest,\n    TransactionResponse,\n\n    ExternalProvider,\n    JsonRpcFetchFunc,\n\n    FallbackProviderConfig,\n\n    Network,\n    Networkish,\n\n    EnsProvider,\n    EnsResolver,\n\n    CommunityResourcable\n};\n\n","export const version = \"solidity/5.7.0\";\n","\"use strict\";\n\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexlify, zeroPad } from \"@ethersproject/bytes\";\nimport { keccak256 as hashKeccak256 } from \"@ethersproject/keccak256\";\nimport { sha256 as hashSha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\n\nconst regexBytes = new RegExp(\"^bytes([0-9]+)$\");\nconst regexNumber = new RegExp(\"^(u?int)([0-9]*)$\");\nconst regexArray = new RegExp(\"^(.*)\\\\[([0-9]*)\\\\]$\");\n\nconst Zeros = \"0000000000000000000000000000000000000000000000000000000000000000\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n\nfunction _pack(type: string, value: any, isArray?: boolean): Uint8Array {\n    switch(type) {\n        case \"address\":\n            if (isArray) { return zeroPad(value, 32); }\n            return arrayify(value);\n        case \"string\":\n            return toUtf8Bytes(value);\n        case \"bytes\":\n            return arrayify(value);\n        case \"bool\":\n            value = (value ? \"0x01\": \"0x00\");\n            if (isArray) { return zeroPad(value, 32); }\n            return arrayify(value);\n    }\n\n    let match =  type.match(regexNumber);\n    if (match) {\n        //let signed = (match[1] === \"int\")\n        let size = parseInt(match[2] || \"256\")\n\n        if ((match[2] && String(size) !== match[2]) || (size % 8 !== 0) || size === 0 || size > 256) {\n            logger.throwArgumentError(\"invalid number type\", \"type\", type)\n        }\n\n        if (isArray) { size = 256; }\n\n        value = BigNumber.from(value).toTwos(size);\n\n        return zeroPad(value, size / 8);\n    }\n\n    match = type.match(regexBytes);\n    if (match) {\n        const size = parseInt(match[1]);\n\n        if (String(size) !== match[1] || size === 0 || size > 32) {\n            logger.throwArgumentError(\"invalid bytes type\", \"type\", type)\n        }\n        if (arrayify(value).byteLength !== size) {\n            logger.throwArgumentError(`invalid value for ${ type }`, \"value\", value)\n        }\n        if (isArray) { return arrayify((value + Zeros).substring(0, 66)); }\n        return value;\n    }\n\n    match = type.match(regexArray);\n    if (match && Array.isArray(value)) {\n        const baseType = match[1];\n        const count = parseInt(match[2] || String(value.length));\n        if (count != value.length) {\n            logger.throwArgumentError(`invalid array length for ${ type }`, \"value\", value)\n        }\n        const result: Array<Uint8Array> = [];\n        value.forEach(function(value) {\n            result.push(_pack(baseType, value, true));\n        });\n        return concat(result);\n    }\n\n    return logger.throwArgumentError(\"invalid type\", \"type\", type)\n}\n\n// @TODO: Array Enum\n\nexport function pack(types: ReadonlyArray<string>, values: ReadonlyArray<any>) {\n    if (types.length != values.length) {\n        logger.throwArgumentError(\"wrong number of values; expected ${ types.length }\", \"values\", values)\n    }\n    const tight: Array<Uint8Array> = [];\n    types.forEach(function(type, index) {\n        tight.push(_pack(type, values[index]));\n    });\n    return hexlify(concat(tight));\n}\n\nexport function keccak256(types: ReadonlyArray<string>, values: ReadonlyArray<any>) {\n    return hashKeccak256(pack(types, values));\n}\n\nexport function sha256(types: ReadonlyArray<string>, values: ReadonlyArray<any>) {\n    return hashSha256(pack(types, values));\n}\n","export const version = \"units/5.7.0\";\n","\"use strict\";\n\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { formatFixed, parseFixed } from \"@ethersproject/bignumber\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst names = [\n    \"wei\",\n    \"kwei\",\n    \"mwei\",\n    \"gwei\",\n    \"szabo\",\n    \"finney\",\n    \"ether\",\n];\n\n\n// Some environments have issues with RegEx that contain back-tracking, so we cannot\n// use them.\nexport function commify(value: string | number): string {\n    const comps = String(value).split(\".\");\n\n    if (comps.length > 2 || !comps[0].match(/^-?[0-9]*$/) || (comps[1] && !comps[1].match(/^[0-9]*$/)) || value === \".\" || value === \"-.\") {\n        logger.throwArgumentError(\"invalid value\", \"value\", value);\n    }\n\n    // Make sure we have at least one whole digit (0 if none)\n    let whole = comps[0];\n\n    let negative = \"\";\n    if (whole.substring(0, 1) === \"-\") {\n        negative = \"-\";\n        whole = whole.substring(1);\n    }\n\n    // Make sure we have at least 1 whole digit with no leading zeros\n    while (whole.substring(0, 1) === \"0\") { whole = whole.substring(1); }\n    if (whole === \"\") { whole = \"0\"; }\n\n    let suffix = \"\";\n    if (comps.length === 2) { suffix = \".\" + (comps[1] || \"0\"); }\n    while (suffix.length > 2 && suffix[suffix.length - 1] === \"0\") {\n        suffix = suffix.substring(0, suffix.length - 1);\n    }\n\n    const formatted = [];\n    while (whole.length) {\n        if (whole.length <= 3) {\n            formatted.unshift(whole);\n            break;\n        } else {\n            const index = whole.length - 3;\n            formatted.unshift(whole.substring(index));\n            whole = whole.substring(0, index);\n        }\n    }\n\n    return negative + formatted.join(\",\") + suffix;\n}\n\nexport function formatUnits(value: BigNumberish, unitName?: string | BigNumberish): string {\n    if (typeof(unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) { unitName = 3 * index; }\n    }\n    return formatFixed(value, (unitName != null) ? unitName: 18);\n}\n\nexport function parseUnits(value: string, unitName?: BigNumberish): BigNumber {\n    if (typeof(value) !== \"string\") {\n        logger.throwArgumentError(\"value must be a string\", \"value\", value);\n    }\n    if (typeof(unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) { unitName = 3 * index; }\n    }\n    return parseFixed(value, (unitName != null) ? unitName: 18);\n}\n\nexport function formatEther(wei: BigNumberish): string {\n    return formatUnits(wei, 18);\n}\n\nexport function parseEther(ether: string): BigNumber {\n    return parseUnits(ether, 18);\n}\n\n","export const version = \"ethers/5.7.1\";\n","\"use strict\";\n\nimport { BaseContract, Contract, ContractFactory } from \"@ethersproject/contracts\";\n\nimport { BigNumber, FixedNumber } from \"@ethersproject/bignumber\";\n\nimport { Signer, VoidSigner } from \"@ethersproject/abstract-signer\";\nimport { Wallet } from \"@ethersproject/wallet\";\n\nimport * as constants from \"@ethersproject/constants\";\n\nimport * as providers from \"@ethersproject/providers\";\nimport { getDefaultProvider } from \"@ethersproject/providers\";\n\nimport { Wordlist, wordlists} from \"@ethersproject/wordlists\";\n\nimport * as utils from \"./utils\";\n\nimport { ErrorCode as errors, Logger } from \"@ethersproject/logger\";\n\n////////////////////////\n// Types\n\nimport type { TypedDataDomain, TypedDataField } from \"@ethersproject/abstract-signer\";\nimport { BigNumberish } from \"@ethersproject/bignumber\";\nimport { Bytes, BytesLike, Signature } from \"@ethersproject/bytes\";\nimport { Transaction, UnsignedTransaction } from \"@ethersproject/transactions\";\n\n\n////////////////////////\n// Compile-Time Constants\n\n// This is generated by \"npm run dist\"\nimport { version } from \"./_version\";\n\nconst logger = new Logger(version);\n\n////////////////////////\n// Types\n\nimport {\n    ContractFunction,\n    ContractReceipt,\n    ContractTransaction,\n\n    Event,\n    EventFilter,\n\n    Overrides,\n    PayableOverrides,\n    CallOverrides,\n\n    PopulatedTransaction,\n\n    ContractInterface\n} from \"@ethersproject/contracts\";\n\n\n////////////////////////\n// Exports\n\nexport {\n    Signer,\n\n    Wallet,\n    VoidSigner,\n\n    getDefaultProvider,\n    providers,\n\n    BaseContract,\n    Contract,\n    ContractFactory,\n\n    BigNumber,\n    FixedNumber,\n\n    constants,\n    errors,\n\n    logger,\n\n    utils,\n\n    wordlists,\n\n\n    ////////////////////////\n    // Compile-Time Constants\n\n    version,\n\n\n    ////////////////////////\n    // Types\n\n    ContractFunction,\n    ContractReceipt,\n    ContractTransaction,\n    Event,\n    EventFilter,\n\n    Overrides,\n    PayableOverrides,\n    CallOverrides,\n\n    PopulatedTransaction,\n\n    ContractInterface,\n\n    TypedDataDomain,\n    TypedDataField,\n\n    BigNumberish,\n\n    Bytes,\n    BytesLike,\n\n    Signature,\n\n    Transaction,\n    UnsignedTransaction,\n\n    Wordlist\n};\n\n","\"use strict\";\n\n// To modify this file, you must update ./misc/admin/lib/cmds/update-exports.js\n\nimport * as ethers from \"./ethers\";\n\ntry {\n    const anyGlobal = (window as any);\n\n    if (anyGlobal._ethers == null) {\n        anyGlobal._ethers = ethers;\n    }\n} catch (error) { }\n\nexport { ethers };\n\nexport {\n    Signer,\n\n    Wallet,\n    VoidSigner,\n\n    getDefaultProvider,\n    providers,\n\n    BaseContract,\n    Contract,\n    ContractFactory,\n\n    BigNumber,\n    FixedNumber,\n\n    constants,\n    errors,\n\n    logger,\n\n    utils,\n\n    wordlists,\n\n\n    ////////////////////////\n    // Compile-Time Constants\n\n    version,\n\n\n    ////////////////////////\n    // Types\n\n    ContractFunction,\n    ContractReceipt,\n    ContractTransaction,\n    Event,\n    EventFilter,\n\n    Overrides,\n    PayableOverrides,\n    CallOverrides,\n\n    PopulatedTransaction,\n\n    ContractInterface,\n\n    TypedDataDomain,\n    TypedDataField,\n\n    BigNumberish,\n\n    Bytes,\n    BytesLike,\n\n    Signature,\n\n    Transaction,\n    UnsignedTransaction,\n\n    Wordlist\n} from \"./ethers\";\n","\"use strict\";\n\nimport { AbiCoder, checkResultErrors, ConstructorFragment, defaultAbiCoder, ErrorFragment, EventFragment, FormatTypes, Fragment, FunctionFragment, Indexed, Interface, LogDescription, ParamType, Result, TransactionDescription }from \"@ethersproject/abi\";\nimport { getAddress, getCreate2Address, getContractAddress, getIcapAddress, isAddress } from \"@ethersproject/address\";\nimport * as base64 from \"@ethersproject/base64\";\nimport { Base58 as base58 } from \"@ethersproject/basex\";\nimport { arrayify, concat, hexConcat, hexDataSlice, hexDataLength, hexlify, hexStripZeros, hexValue, hexZeroPad, isBytes, isBytesLike, isHexString, joinSignature, zeroPad, splitSignature, stripZeros } from \"@ethersproject/bytes\";\nimport { _TypedDataEncoder, dnsEncode, hashMessage, id, isValidName, namehash } from \"@ethersproject/hash\";\nimport { defaultPath, entropyToMnemonic, getAccountPath, HDNode, isValidMnemonic, mnemonicToEntropy, mnemonicToSeed } from \"@ethersproject/hdnode\";\nimport { getJsonWalletAddress } from \"@ethersproject/json-wallets\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { computeHmac, ripemd160, sha256, sha512 } from \"@ethersproject/sha2\";\nimport { keccak256 as solidityKeccak256, pack as solidityPack, sha256 as soliditySha256 } from \"@ethersproject/solidity\";\nimport { randomBytes, shuffled } from \"@ethersproject/random\";\nimport { checkProperties, deepCopy, defineReadOnly, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport * as RLP from \"@ethersproject/rlp\";\nimport { computePublicKey, recoverPublicKey, SigningKey } from \"@ethersproject/signing-key\";\nimport { formatBytes32String, nameprep, parseBytes32String, _toEscapedUtf8String, toUtf8Bytes, toUtf8CodePoints, toUtf8String, Utf8ErrorFuncs } from \"@ethersproject/strings\";\nimport { accessListify, computeAddress, parse as parseTransaction, recoverAddress, serialize as serializeTransaction, TransactionTypes } from \"@ethersproject/transactions\";\nimport { commify, formatEther, parseEther, formatUnits, parseUnits } from \"@ethersproject/units\";\nimport { verifyMessage, verifyTypedData } from \"@ethersproject/wallet\";\nimport { _fetchData, fetchJson, poll } from \"@ethersproject/web\";\n\n////////////////////////\n// Enums\n\nimport { SupportedAlgorithm } from \"@ethersproject/sha2\";\nimport { UnicodeNormalizationForm, Utf8ErrorReason } from \"@ethersproject/strings\";\nimport { UnsignedTransaction } from \"@ethersproject/transactions\";\n\n////////////////////////\n// Types and Interfaces\n\nimport { CoerceFunc } from \"@ethersproject/abi\";\nimport { Bytes, BytesLike, Hexable } from \"@ethersproject/bytes\"\nimport { Mnemonic } from \"@ethersproject/hdnode\";\nimport { EncryptOptions, ProgressCallback } from \"@ethersproject/json-wallets\";\nimport { Deferrable } from \"@ethersproject/properties\";\nimport { Utf8ErrorFunc } from \"@ethersproject/strings\";\nimport { AccessList, AccessListish } from \"@ethersproject/transactions\";\nimport { ConnectionInfo, FetchJsonResponse, OnceBlockable, OncePollable, PollOptions } from \"@ethersproject/web\";\n\n////////////////////////\n// Exports\n\nexport {\n    AbiCoder,\n    defaultAbiCoder,\n\n    Fragment,\n    ConstructorFragment,\n    ErrorFragment,\n    EventFragment,\n    FunctionFragment,\n    ParamType,\n    FormatTypes,\n\n    checkResultErrors,\n    Result,\n\n    Logger,\n\n    RLP,\n\n    _fetchData,\n    fetchJson,\n    poll,\n\n    checkProperties,\n    deepCopy,\n    defineReadOnly,\n    getStatic,\n    resolveProperties,\n    shallowCopy,\n\n    arrayify,\n\n    concat,\n    stripZeros,\n    zeroPad,\n\n    isBytes,\n    isBytesLike,\n\n    defaultPath,\n    HDNode,\n    SigningKey,\n\n    Interface,\n\n    LogDescription,\n    TransactionDescription,\n\n    base58,\n    base64,\n\n    hexlify,\n    isHexString,\n    hexConcat,\n    hexStripZeros,\n    hexValue,\n    hexZeroPad,\n    hexDataLength,\n    hexDataSlice,\n\n    nameprep,\n    _toEscapedUtf8String,\n    toUtf8Bytes,\n    toUtf8CodePoints,\n    toUtf8String,\n    Utf8ErrorFuncs,\n\n    formatBytes32String,\n    parseBytes32String,\n\n    dnsEncode,\n    hashMessage,\n    namehash,\n    isValidName,\n    id,\n\n    _TypedDataEncoder,\n\n    getAddress,\n    getIcapAddress,\n    getContractAddress,\n    getCreate2Address,\n    isAddress,\n\n    formatEther,\n    parseEther,\n\n    formatUnits,\n    parseUnits,\n\n    commify,\n\n    computeHmac,\n    keccak256,\n    ripemd160,\n    sha256,\n    sha512,\n\n    randomBytes,\n    shuffled,\n\n    solidityPack,\n    solidityKeccak256,\n    soliditySha256,\n\n    splitSignature,\n    joinSignature,\n\n    accessListify,\n    parseTransaction,\n    serializeTransaction,\n    TransactionTypes,\n\n    getJsonWalletAddress,\n\n    computeAddress,\n    recoverAddress,\n\n    computePublicKey,\n    recoverPublicKey,\n\n    verifyMessage,\n    verifyTypedData,\n\n    getAccountPath,\n    mnemonicToEntropy,\n    entropyToMnemonic,\n    isValidMnemonic,\n    mnemonicToSeed,\n\n\n    ////////////////////////\n    // Enums\n\n    SupportedAlgorithm,\n\n    UnicodeNormalizationForm,\n    Utf8ErrorReason,\n\n    ////////////////////////\n    // Types\n\n    Bytes,\n    BytesLike,\n    Hexable,\n\n    AccessList,\n    AccessListish,\n    UnsignedTransaction,\n\n    CoerceFunc,\n\n    Indexed,\n\n    Mnemonic,\n\n    Deferrable,\n\n    Utf8ErrorFunc,\n\n    ConnectionInfo,\n    OnceBlockable,\n    OncePollable,\n    PollOptions,\n    FetchJsonResponse,\n\n    EncryptOptions,\n    ProgressCallback\n}\n\n",null,null,"import { OperatorFunction, TimestampProvider, Timestamp } from '../types';\nimport { dateTimestampProvider } from '../scheduler/dateTimestampProvider';\nimport { map } from './map';\n\n/**\n * Attaches a timestamp to each item emitted by an observable indicating when it was emitted\n *\n * The `timestamp` operator maps the *source* observable stream to an object of type\n * `{value: T, timestamp: R}`. The properties are generically typed. The `value` property contains the value\n * and type of the *source* observable. The `timestamp` is generated by the schedulers `now` function. By\n * default, it uses the `asyncScheduler` which simply returns `Date.now()` (milliseconds since 1970/01/01\n * 00:00:00:000) and therefore is of type `number`.\n *\n * ![](timestamp.png)\n *\n * ## Example\n *\n * In this example there is a timestamp attached to the document's click events\n *\n * ```ts\n * import { fromEvent, timestamp } from 'rxjs';\n *\n * const clickWithTimestamp = fromEvent(document, 'click').pipe(\n *   timestamp()\n * );\n *\n * // Emits data of type { value: PointerEvent, timestamp: number }\n * clickWithTimestamp.subscribe(data => {\n *   console.log(data);\n * });\n * ```\n *\n * @param timestampProvider An object with a `now()` method used to get the current timestamp.\n * @return A function that returns an Observable that attaches a timestamp to\n * each item emitted by the source Observable indicating when it was emitted.\n */\nexport function timestamp<T>(timestampProvider: TimestampProvider = dateTimestampProvider): OperatorFunction<T, Timestamp<T>> {\n  return map((value: T) => ({ value, timestamp: timestampProvider.now() }));\n}\n",null,null,null,null,null,null,"// lookup table from base64 character to byte\nlet encTable = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n// lookup table from base64 character *code* to byte because lookup by number is fast\nlet decTable = [];\nfor (let i = 0; i < encTable.length; i++)\n    decTable[encTable[i].charCodeAt(0)] = i;\n// support base64url variants\ndecTable[\"-\".charCodeAt(0)] = encTable.indexOf(\"+\");\ndecTable[\"_\".charCodeAt(0)] = encTable.indexOf(\"/\");\n/**\n * Decodes a base64 string to a byte array.\n *\n * - ignores white-space, including line breaks and tabs\n * - allows inner padding (can decode concatenated base64 strings)\n * - does not require padding\n * - understands base64url encoding:\n *   \"-\" instead of \"+\",\n *   \"_\" instead of \"/\",\n *   no padding\n */\nexport function base64decode(base64Str) {\n    // estimate byte size, not accounting for inner padding and whitespace\n    let es = base64Str.length * 3 / 4;\n    // if (es % 3 !== 0)\n    // throw new Error('invalid base64 string');\n    if (base64Str[base64Str.length - 2] == '=')\n        es -= 2;\n    else if (base64Str[base64Str.length - 1] == '=')\n        es -= 1;\n    let bytes = new Uint8Array(es), bytePos = 0, // position in byte array\n    groupPos = 0, // position in base64 group\n    b, // current byte\n    p = 0 // previous byte\n    ;\n    for (let i = 0; i < base64Str.length; i++) {\n        b = decTable[base64Str.charCodeAt(i)];\n        if (b === undefined) {\n            // noinspection FallThroughInSwitchStatementJS\n            switch (base64Str[i]) {\n                case '=':\n                    groupPos = 0; // reset state when padding found\n                case '\\n':\n                case '\\r':\n                case '\\t':\n                case ' ':\n                    continue; // skip white-space, and padding\n                default:\n                    throw Error(`invalid base64 string.`);\n            }\n        }\n        switch (groupPos) {\n            case 0:\n                p = b;\n                groupPos = 1;\n                break;\n            case 1:\n                bytes[bytePos++] = p << 2 | (b & 48) >> 4;\n                p = b;\n                groupPos = 2;\n                break;\n            case 2:\n                bytes[bytePos++] = (p & 15) << 4 | (b & 60) >> 2;\n                p = b;\n                groupPos = 3;\n                break;\n            case 3:\n                bytes[bytePos++] = (p & 3) << 6 | b;\n                groupPos = 0;\n                break;\n        }\n    }\n    if (groupPos == 1)\n        throw Error(`invalid base64 string.`);\n    return bytes.subarray(0, bytePos);\n}\n/**\n * Encodes a byte array to a base64 string.\n * Adds padding at the end.\n * Does not insert newlines.\n */\nexport function base64encode(bytes) {\n    let base64 = '', groupPos = 0, // position in base64 group\n    b, // current byte\n    p = 0; // carry over from previous byte\n    for (let i = 0; i < bytes.length; i++) {\n        b = bytes[i];\n        switch (groupPos) {\n            case 0:\n                base64 += encTable[b >> 2];\n                p = (b & 3) << 4;\n                groupPos = 1;\n                break;\n            case 1:\n                base64 += encTable[p | b >> 4];\n                p = (b & 15) << 2;\n                groupPos = 2;\n                break;\n            case 2:\n                base64 += encTable[p | b >> 6];\n                base64 += encTable[b & 63];\n                groupPos = 0;\n                break;\n        }\n    }\n    // padding required?\n    if (groupPos) {\n        base64 += encTable[p];\n        base64 += '=';\n        if (groupPos == 1)\n            base64 += '=';\n    }\n    return base64;\n}\n","/**\n * This handler implements the default behaviour for unknown fields.\n * When reading data, unknown fields are stored on the message, in a\n * symbol property.\n * When writing data, the symbol property is queried and unknown fields\n * are serialized into the output again.\n */\nexport var UnknownFieldHandler;\n(function (UnknownFieldHandler) {\n    /**\n     * The symbol used to store unknown fields for a message.\n     * The property must conform to `UnknownFieldContainer`.\n     */\n    UnknownFieldHandler.symbol = Symbol.for(\"protobuf-ts/unknown\");\n    /**\n     * Store an unknown field during binary read directly on the message.\n     * This method is compatible with `BinaryReadOptions.readUnknownField`.\n     */\n    UnknownFieldHandler.onRead = (typeName, message, fieldNo, wireType, data) => {\n        let container = is(message) ? message[UnknownFieldHandler.symbol] : message[UnknownFieldHandler.symbol] = [];\n        container.push({ no: fieldNo, wireType, data });\n    };\n    /**\n     * Write unknown fields stored for the message to the writer.\n     * This method is compatible with `BinaryWriteOptions.writeUnknownFields`.\n     */\n    UnknownFieldHandler.onWrite = (typeName, message, writer) => {\n        for (let { no, wireType, data } of UnknownFieldHandler.list(message))\n            writer.tag(no, wireType).raw(data);\n    };\n    /**\n     * List unknown fields stored for the message.\n     * Note that there may be multiples fields with the same number.\n     */\n    UnknownFieldHandler.list = (message, fieldNo) => {\n        if (is(message)) {\n            let all = message[UnknownFieldHandler.symbol];\n            return fieldNo ? all.filter(uf => uf.no == fieldNo) : all;\n        }\n        return [];\n    };\n    /**\n     * Returns the last unknown field by field number.\n     */\n    UnknownFieldHandler.last = (message, fieldNo) => UnknownFieldHandler.list(message, fieldNo).slice(-1)[0];\n    const is = (message) => message && Array.isArray(message[UnknownFieldHandler.symbol]);\n})(UnknownFieldHandler || (UnknownFieldHandler = {}));\n/**\n * Merges binary write or read options. Later values override earlier values.\n */\nexport function mergeBinaryOptions(a, b) {\n    return Object.assign(Object.assign({}, a), b);\n}\n/**\n * Protobuf binary format wire types.\n *\n * A wire type provides just enough information to find the length of the\n * following value.\n *\n * See https://developers.google.com/protocol-buffers/docs/encoding#structure\n */\nexport var WireType;\n(function (WireType) {\n    /**\n     * Used for int32, int64, uint32, uint64, sint32, sint64, bool, enum\n     */\n    WireType[WireType[\"Varint\"] = 0] = \"Varint\";\n    /**\n     * Used for fixed64, sfixed64, double.\n     * Always 8 bytes with little-endian byte order.\n     */\n    WireType[WireType[\"Bit64\"] = 1] = \"Bit64\";\n    /**\n     * Used for string, bytes, embedded messages, packed repeated fields\n     *\n     * Only repeated numeric types (types which use the varint, 32-bit,\n     * or 64-bit wire types) can be packed. In proto3, such fields are\n     * packed by default.\n     */\n    WireType[WireType[\"LengthDelimited\"] = 2] = \"LengthDelimited\";\n    /**\n     * Used for groups\n     * @deprecated\n     */\n    WireType[WireType[\"StartGroup\"] = 3] = \"StartGroup\";\n    /**\n     * Used for groups\n     * @deprecated\n     */\n    WireType[WireType[\"EndGroup\"] = 4] = \"EndGroup\";\n    /**\n     * Used for fixed32, sfixed32, float.\n     * Always 4 bytes with little-endian byte order.\n     */\n    WireType[WireType[\"Bit32\"] = 5] = \"Bit32\";\n})(WireType || (WireType = {}));\n","const defaultsWrite = {\n    emitDefaultValues: false,\n    enumAsInteger: false,\n    useProtoFieldName: false,\n    prettySpaces: 0,\n}, defaultsRead = {\n    ignoreUnknownFields: false,\n};\n/**\n * Make options for reading JSON data from partial options.\n */\nexport function jsonReadOptions(options) {\n    return options ? Object.assign(Object.assign({}, defaultsRead), options) : defaultsRead;\n}\n/**\n * Make options for writing JSON data from partial options.\n */\nexport function jsonWriteOptions(options) {\n    return options ? Object.assign(Object.assign({}, defaultsWrite), options) : defaultsWrite;\n}\n/**\n * Merges JSON write or read options. Later values override earlier values. Type registries are merged.\n */\nexport function mergeJsonOptions(a, b) {\n    var _a, _b;\n    let c = Object.assign(Object.assign({}, a), b);\n    c.typeRegistry = [...((_a = a === null || a === void 0 ? void 0 : a.typeRegistry) !== null && _a !== void 0 ? _a : []), ...((_b = b === null || b === void 0 ? void 0 : b.typeRegistry) !== null && _b !== void 0 ? _b : [])];\n    return c;\n}\n","/**\n * The symbol used as a key on message objects to store the message type.\n *\n * Note that this is an experimental feature - it is here to stay, but\n * implementation details may change without notice.\n */\nexport const MESSAGE_TYPE = Symbol.for(\"protobuf-ts/message-type\");\n","/**\n * Converts snake_case to lowerCamelCase.\n *\n * Should behave like protoc:\n * https://github.com/protocolbuffers/protobuf/blob/e8ae137c96444ea313485ed1118c5e43b2099cf1/src/google/protobuf/compiler/java/java_helpers.cc#L118\n */\nexport function lowerCamelCase(snakeCase) {\n    let capNext = false;\n    const sb = [];\n    for (let i = 0; i < snakeCase.length; i++) {\n        let next = snakeCase.charAt(i);\n        if (next == '_') {\n            capNext = true;\n        }\n        else if (/\\d/.test(next)) {\n            sb.push(next);\n            capNext = true;\n        }\n        else if (capNext) {\n            sb.push(next.toUpperCase());\n            capNext = false;\n        }\n        else if (i == 0) {\n            sb.push(next.toLowerCase());\n        }\n        else {\n            sb.push(next);\n        }\n    }\n    return sb.join('');\n}\n","import { lowerCamelCase } from \"./lower-camel-case\";\n/**\n * Scalar value types. This is a subset of field types declared by protobuf\n * enum google.protobuf.FieldDescriptorProto.Type The types GROUP and MESSAGE\n * are omitted, but the numerical values are identical.\n */\nexport var ScalarType;\n(function (ScalarType) {\n    // 0 is reserved for errors.\n    // Order is weird for historical reasons.\n    ScalarType[ScalarType[\"DOUBLE\"] = 1] = \"DOUBLE\";\n    ScalarType[ScalarType[\"FLOAT\"] = 2] = \"FLOAT\";\n    // Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if\n    // negative values are likely.\n    ScalarType[ScalarType[\"INT64\"] = 3] = \"INT64\";\n    ScalarType[ScalarType[\"UINT64\"] = 4] = \"UINT64\";\n    // Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if\n    // negative values are likely.\n    ScalarType[ScalarType[\"INT32\"] = 5] = \"INT32\";\n    ScalarType[ScalarType[\"FIXED64\"] = 6] = \"FIXED64\";\n    ScalarType[ScalarType[\"FIXED32\"] = 7] = \"FIXED32\";\n    ScalarType[ScalarType[\"BOOL\"] = 8] = \"BOOL\";\n    ScalarType[ScalarType[\"STRING\"] = 9] = \"STRING\";\n    // Tag-delimited aggregate.\n    // Group type is deprecated and not supported in proto3. However, Proto3\n    // implementations should still be able to parse the group wire format and\n    // treat group fields as unknown fields.\n    // TYPE_GROUP = 10,\n    // TYPE_MESSAGE = 11,  // Length-delimited aggregate.\n    // New in version 2.\n    ScalarType[ScalarType[\"BYTES\"] = 12] = \"BYTES\";\n    ScalarType[ScalarType[\"UINT32\"] = 13] = \"UINT32\";\n    // TYPE_ENUM = 14,\n    ScalarType[ScalarType[\"SFIXED32\"] = 15] = \"SFIXED32\";\n    ScalarType[ScalarType[\"SFIXED64\"] = 16] = \"SFIXED64\";\n    ScalarType[ScalarType[\"SINT32\"] = 17] = \"SINT32\";\n    ScalarType[ScalarType[\"SINT64\"] = 18] = \"SINT64\";\n})(ScalarType || (ScalarType = {}));\n/**\n * JavaScript representation of 64 bit integral types. Equivalent to the\n * field option \"jstype\".\n *\n * By default, protobuf-ts represents 64 bit types as `bigint`.\n *\n * You can change the default behaviour by enabling the plugin parameter\n * `long_type_string`, which will represent 64 bit types as `string`.\n *\n * Alternatively, you can change the behaviour for individual fields\n * with the field option \"jstype\":\n *\n * ```protobuf\n * uint64 my_field = 1 [jstype = JS_STRING];\n * uint64 other_field = 2 [jstype = JS_NUMBER];\n * ```\n */\nexport var LongType;\n(function (LongType) {\n    /**\n     * Use JavaScript `bigint`.\n     *\n     * Field option `[jstype = JS_NORMAL]`.\n     */\n    LongType[LongType[\"BIGINT\"] = 0] = \"BIGINT\";\n    /**\n     * Use JavaScript `string`.\n     *\n     * Field option `[jstype = JS_STRING]`.\n     */\n    LongType[LongType[\"STRING\"] = 1] = \"STRING\";\n    /**\n     * Use JavaScript `number`.\n     *\n     * Large values will loose precision.\n     *\n     * Field option `[jstype = JS_NUMBER]`.\n     */\n    LongType[LongType[\"NUMBER\"] = 2] = \"NUMBER\";\n})(LongType || (LongType = {}));\n/**\n * Protobuf 2.1.0 introduced packed repeated fields.\n * Setting the field option `[packed = true]` enables packing.\n *\n * In proto3, all repeated fields are packed by default.\n * Setting the field option `[packed = false]` disables packing.\n *\n * Packed repeated fields are encoded with a single tag,\n * then a length-delimiter, then the element values.\n *\n * Unpacked repeated fields are encoded with a tag and\n * value for each element.\n *\n * `bytes` and `string` cannot be packed.\n */\nexport var RepeatType;\n(function (RepeatType) {\n    /**\n     * The field is not repeated.\n     */\n    RepeatType[RepeatType[\"NO\"] = 0] = \"NO\";\n    /**\n     * The field is repeated and should be packed.\n     * Invalid for `bytes` and `string`, they cannot be packed.\n     */\n    RepeatType[RepeatType[\"PACKED\"] = 1] = \"PACKED\";\n    /**\n     * The field is repeated but should not be packed.\n     * The only valid repeat type for repeated `bytes` and `string`.\n     */\n    RepeatType[RepeatType[\"UNPACKED\"] = 2] = \"UNPACKED\";\n})(RepeatType || (RepeatType = {}));\n/**\n * Turns PartialFieldInfo into FieldInfo.\n */\nexport function normalizeFieldInfo(field) {\n    var _a, _b, _c, _d;\n    field.localName = (_a = field.localName) !== null && _a !== void 0 ? _a : lowerCamelCase(field.name);\n    field.jsonName = (_b = field.jsonName) !== null && _b !== void 0 ? _b : lowerCamelCase(field.name);\n    field.repeat = (_c = field.repeat) !== null && _c !== void 0 ? _c : RepeatType.NO;\n    field.opt = (_d = field.opt) !== null && _d !== void 0 ? _d : (field.repeat ? false : field.oneof ? false : field.kind == \"message\");\n    return field;\n}\n/**\n * Read custom field options from a generated message type.\n *\n * @deprecated use readFieldOption()\n */\nexport function readFieldOptions(messageType, fieldName, extensionName, extensionType) {\n    var _a;\n    const options = (_a = messageType.fields.find((m, i) => m.localName == fieldName || i == fieldName)) === null || _a === void 0 ? void 0 : _a.options;\n    return options && options[extensionName] ? extensionType.fromJson(options[extensionName]) : undefined;\n}\nexport function readFieldOption(messageType, fieldName, extensionName, extensionType) {\n    var _a;\n    const options = (_a = messageType.fields.find((m, i) => m.localName == fieldName || i == fieldName)) === null || _a === void 0 ? void 0 : _a.options;\n    if (!options) {\n        return undefined;\n    }\n    const optionVal = options[extensionName];\n    if (optionVal === undefined) {\n        return optionVal;\n    }\n    return extensionType ? extensionType.fromJson(optionVal) : optionVal;\n}\nexport function readMessageOption(messageType, extensionName, extensionType) {\n    const options = messageType.options;\n    const optionVal = options[extensionName];\n    if (optionVal === undefined) {\n        return optionVal;\n    }\n    return extensionType ? extensionType.fromJson(optionVal) : optionVal;\n}\n","/**\n * Is the given value a valid oneof group?\n *\n * We represent protobuf `oneof` as algebraic data types (ADT) in generated\n * code. But when working with messages of unknown type, the ADT does not\n * help us.\n *\n * This type guard checks if the given object adheres to the ADT rules, which\n * are as follows:\n *\n * 1) Must be an object.\n *\n * 2) Must have a \"oneofKind\" discriminator property.\n *\n * 3) If \"oneofKind\" is `undefined`, no member field is selected. The object\n * must not have any other properties.\n *\n * 4) If \"oneofKind\" is a `string`, the member field with this name is\n * selected.\n *\n * 5) If a member field is selected, the object must have a second property\n * with this name. The property must not be `undefined`.\n *\n * 6) No extra properties are allowed. The object has either one property\n * (no selection) or two properties (selection).\n *\n */\nexport function isOneofGroup(any) {\n    if (typeof any != 'object' || any === null || !any.hasOwnProperty('oneofKind')) {\n        return false;\n    }\n    switch (typeof any.oneofKind) {\n        case \"string\":\n            if (any[any.oneofKind] === undefined)\n                return false;\n            return Object.keys(any).length == 2;\n        case \"undefined\":\n            return Object.keys(any).length == 1;\n        default:\n            return false;\n    }\n}\n/**\n * Returns the value of the given field in a oneof group.\n */\nexport function getOneofValue(oneof, kind) {\n    return oneof[kind];\n}\nexport function setOneofValue(oneof, kind, value) {\n    if (oneof.oneofKind !== undefined) {\n        delete oneof[oneof.oneofKind];\n    }\n    oneof.oneofKind = kind;\n    if (value !== undefined) {\n        oneof[kind] = value;\n    }\n}\nexport function setUnknownOneofValue(oneof, kind, value) {\n    if (oneof.oneofKind !== undefined) {\n        delete oneof[oneof.oneofKind];\n    }\n    oneof.oneofKind = kind;\n    if (value !== undefined && kind !== undefined) {\n        oneof[kind] = value;\n    }\n}\n/**\n * Removes the selected field in a oneof group.\n *\n * Note that the recommended way to modify a oneof group is to set\n * a new object:\n *\n * ```ts\n * message.result = { oneofKind: undefined };\n * ```\n */\nexport function clearOneofValue(oneof) {\n    if (oneof.oneofKind !== undefined) {\n        delete oneof[oneof.oneofKind];\n    }\n    oneof.oneofKind = undefined;\n}\n/**\n * Returns the selected value of the given oneof group.\n *\n * Not that the recommended way to access a oneof group is to check\n * the \"oneofKind\" property and let TypeScript narrow down the union\n * type for you:\n *\n * ```ts\n * if (message.result.oneofKind === \"error\") {\n *   message.result.error; // string\n * }\n * ```\n *\n * In the rare case you just need the value, and do not care about\n * which protobuf field is selected, you can use this function\n * for convenience.\n */\nexport function getSelectedOneofValue(oneof) {\n    if (oneof.oneofKind === undefined) {\n        return undefined;\n    }\n    return oneof[oneof.oneofKind];\n}\n","import { LongType, ScalarType } from \"./reflection-info\";\nimport { isOneofGroup } from \"./oneof\";\n// noinspection JSMethodCanBeStatic\nexport class ReflectionTypeCheck {\n    constructor(info) {\n        var _a;\n        this.fields = (_a = info.fields) !== null && _a !== void 0 ? _a : [];\n    }\n    prepare() {\n        if (this.data)\n            return;\n        const req = [], known = [], oneofs = [];\n        for (let field of this.fields) {\n            if (field.oneof) {\n                if (!oneofs.includes(field.oneof)) {\n                    oneofs.push(field.oneof);\n                    req.push(field.oneof);\n                    known.push(field.oneof);\n                }\n            }\n            else {\n                known.push(field.localName);\n                switch (field.kind) {\n                    case \"scalar\":\n                    case \"enum\":\n                        if (!field.opt || field.repeat)\n                            req.push(field.localName);\n                        break;\n                    case \"message\":\n                        if (field.repeat)\n                            req.push(field.localName);\n                        break;\n                    case \"map\":\n                        req.push(field.localName);\n                        break;\n                }\n            }\n        }\n        this.data = { req, known, oneofs: Object.values(oneofs) };\n    }\n    /**\n     * Is the argument a valid message as specified by the\n     * reflection information?\n     *\n     * Checks all field types recursively. The `depth`\n     * specifies how deep into the structure the check will be.\n     *\n     * With a depth of 0, only the presence of fields\n     * is checked.\n     *\n     * With a depth of 1 or more, the field types are checked.\n     *\n     * With a depth of 2 or more, the members of map, repeated\n     * and message fields are checked.\n     *\n     * Message fields will be checked recursively with depth - 1.\n     *\n     * The number of map entries / repeated values being checked\n     * is < depth.\n     */\n    is(message, depth, allowExcessProperties = false) {\n        if (depth < 0)\n            return true;\n        if (message === null || message === undefined || typeof message != 'object')\n            return false;\n        this.prepare();\n        let keys = Object.keys(message), data = this.data;\n        // if a required field is missing in arg, this cannot be a T\n        if (keys.length < data.req.length || data.req.some(n => !keys.includes(n)))\n            return false;\n        if (!allowExcessProperties) {\n            // if the arg contains a key we dont know, this is not a literal T\n            if (keys.some(k => !data.known.includes(k)))\n                return false;\n        }\n        // \"With a depth of 0, only the presence and absence of fields is checked.\"\n        // \"With a depth of 1 or more, the field types are checked.\"\n        if (depth < 1) {\n            return true;\n        }\n        // check oneof group\n        for (const name of data.oneofs) {\n            const group = message[name];\n            if (!isOneofGroup(group))\n                return false;\n            if (group.oneofKind === undefined)\n                continue;\n            const field = this.fields.find(f => f.localName === group.oneofKind);\n            if (!field)\n                return false; // we found no field, but have a kind, something is wrong\n            if (!this.field(group[group.oneofKind], field, allowExcessProperties, depth))\n                return false;\n        }\n        // check types\n        for (const field of this.fields) {\n            if (field.oneof !== undefined)\n                continue;\n            if (!this.field(message[field.localName], field, allowExcessProperties, depth))\n                return false;\n        }\n        return true;\n    }\n    field(arg, field, allowExcessProperties, depth) {\n        let repeated = field.repeat;\n        switch (field.kind) {\n            case \"scalar\":\n                if (arg === undefined)\n                    return field.opt;\n                if (repeated)\n                    return this.scalars(arg, field.T, depth, field.L);\n                return this.scalar(arg, field.T, field.L);\n            case \"enum\":\n                if (arg === undefined)\n                    return field.opt;\n                if (repeated)\n                    return this.scalars(arg, ScalarType.INT32, depth);\n                return this.scalar(arg, ScalarType.INT32);\n            case \"message\":\n                if (arg === undefined)\n                    return true;\n                if (repeated)\n                    return this.messages(arg, field.T(), allowExcessProperties, depth);\n                return this.message(arg, field.T(), allowExcessProperties, depth);\n            case \"map\":\n                if (typeof arg != 'object' || arg === null)\n                    return false;\n                if (depth < 2)\n                    return true;\n                if (!this.mapKeys(arg, field.K, depth))\n                    return false;\n                switch (field.V.kind) {\n                    case \"scalar\":\n                        return this.scalars(Object.values(arg), field.V.T, depth, field.V.L);\n                    case \"enum\":\n                        return this.scalars(Object.values(arg), ScalarType.INT32, depth);\n                    case \"message\":\n                        return this.messages(Object.values(arg), field.V.T(), allowExcessProperties, depth);\n                }\n                break;\n        }\n        return true;\n    }\n    message(arg, type, allowExcessProperties, depth) {\n        if (allowExcessProperties) {\n            return type.isAssignable(arg, depth);\n        }\n        return type.is(arg, depth);\n    }\n    messages(arg, type, allowExcessProperties, depth) {\n        if (!Array.isArray(arg))\n            return false;\n        if (depth < 2)\n            return true;\n        if (allowExcessProperties) {\n            for (let i = 0; i < arg.length && i < depth; i++)\n                if (!type.isAssignable(arg[i], depth - 1))\n                    return false;\n        }\n        else {\n            for (let i = 0; i < arg.length && i < depth; i++)\n                if (!type.is(arg[i], depth - 1))\n                    return false;\n        }\n        return true;\n    }\n    scalar(arg, type, longType) {\n        let argType = typeof arg;\n        switch (type) {\n            case ScalarType.UINT64:\n            case ScalarType.FIXED64:\n            case ScalarType.INT64:\n            case ScalarType.SFIXED64:\n            case ScalarType.SINT64:\n                switch (longType) {\n                    case LongType.BIGINT:\n                        return argType == \"bigint\";\n                    case LongType.NUMBER:\n                        return argType == \"number\" && !isNaN(arg);\n                    default:\n                        return argType == \"string\";\n                }\n            case ScalarType.BOOL:\n                return argType == 'boolean';\n            case ScalarType.STRING:\n                return argType == 'string';\n            case ScalarType.BYTES:\n                return arg instanceof Uint8Array;\n            case ScalarType.DOUBLE:\n            case ScalarType.FLOAT:\n                return argType == 'number' && !isNaN(arg);\n            default:\n                // case ScalarType.UINT32:\n                // case ScalarType.FIXED32:\n                // case ScalarType.INT32:\n                // case ScalarType.SINT32:\n                // case ScalarType.SFIXED32:\n                return argType == 'number' && Number.isInteger(arg);\n        }\n    }\n    scalars(arg, type, depth, longType) {\n        if (!Array.isArray(arg))\n            return false;\n        if (depth < 2)\n            return true;\n        if (Array.isArray(arg))\n            for (let i = 0; i < arg.length && i < depth; i++)\n                if (!this.scalar(arg[i], type, longType))\n                    return false;\n        return true;\n    }\n    mapKeys(map, type, depth) {\n        let keys = Object.keys(map);\n        switch (type) {\n            case ScalarType.INT32:\n            case ScalarType.FIXED32:\n            case ScalarType.SFIXED32:\n            case ScalarType.SINT32:\n            case ScalarType.UINT32:\n                return this.scalars(keys.slice(0, depth).map(k => parseInt(k)), type, depth);\n            case ScalarType.BOOL:\n                return this.scalars(keys.slice(0, depth).map(k => k == 'true' ? true : k == 'false' ? false : k), type, depth);\n            default:\n                return this.scalars(keys, type, depth, LongType.STRING);\n        }\n    }\n}\n","/**\n * Get the type of a JSON value.\n * Distinguishes between array, null and object.\n */\nexport function typeofJsonValue(value) {\n    let t = typeof value;\n    if (t == \"object\") {\n        if (Array.isArray(value))\n            return \"array\";\n        if (value === null)\n            return \"null\";\n    }\n    return t;\n}\n/**\n * Is this a JSON object (instead of an array or null)?\n */\nexport function isJsonObject(value) {\n    return value !== null && typeof value == \"object\" && !Array.isArray(value);\n}\n","// Copyright 2008 Google Inc.  All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n//\n// Code generated by the Protocol Buffer compiler is owned by the owner\n// of the input file used when generating it.  This code is not\n// standalone and requires a support library to be linked with it.  This\n// support library is itself covered by the above license.\n/**\n * Read a 64 bit varint as two JS numbers.\n *\n * Returns tuple:\n * [0]: low bits\n * [0]: high bits\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L175\n */\nexport function varint64read() {\n    let lowBits = 0;\n    let highBits = 0;\n    for (let shift = 0; shift < 28; shift += 7) {\n        let b = this.buf[this.pos++];\n        lowBits |= (b & 0x7F) << shift;\n        if ((b & 0x80) == 0) {\n            this.assertBounds();\n            return [lowBits, highBits];\n        }\n    }\n    let middleByte = this.buf[this.pos++];\n    // last four bits of the first 32 bit number\n    lowBits |= (middleByte & 0x0F) << 28;\n    // 3 upper bits are part of the next 32 bit number\n    highBits = (middleByte & 0x70) >> 4;\n    if ((middleByte & 0x80) == 0) {\n        this.assertBounds();\n        return [lowBits, highBits];\n    }\n    for (let shift = 3; shift <= 31; shift += 7) {\n        let b = this.buf[this.pos++];\n        highBits |= (b & 0x7F) << shift;\n        if ((b & 0x80) == 0) {\n            this.assertBounds();\n            return [lowBits, highBits];\n        }\n    }\n    throw new Error('invalid varint');\n}\n/**\n * Write a 64 bit varint, given as two JS numbers, to the given bytes array.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/writer.js#L344\n */\nexport function varint64write(lo, hi, bytes) {\n    for (let i = 0; i < 28; i = i + 7) {\n        const shift = lo >>> i;\n        const hasNext = !((shift >>> 7) == 0 && hi == 0);\n        const byte = (hasNext ? shift | 0x80 : shift) & 0xFF;\n        bytes.push(byte);\n        if (!hasNext) {\n            return;\n        }\n    }\n    const splitBits = ((lo >>> 28) & 0x0F) | ((hi & 0x07) << 4);\n    const hasMoreBits = !((hi >> 3) == 0);\n    bytes.push((hasMoreBits ? splitBits | 0x80 : splitBits) & 0xFF);\n    if (!hasMoreBits) {\n        return;\n    }\n    for (let i = 3; i < 31; i = i + 7) {\n        const shift = hi >>> i;\n        const hasNext = !((shift >>> 7) == 0);\n        const byte = (hasNext ? shift | 0x80 : shift) & 0xFF;\n        bytes.push(byte);\n        if (!hasNext) {\n            return;\n        }\n    }\n    bytes.push((hi >>> 31) & 0x01);\n}\n// constants for binary math\nconst TWO_PWR_32_DBL = (1 << 16) * (1 << 16);\n/**\n * Parse decimal string of 64 bit integer value as two JS numbers.\n *\n * Returns tuple:\n * [0]: minus sign?\n * [1]: low bits\n * [2]: high bits\n *\n * Copyright 2008 Google Inc.\n */\nexport function int64fromString(dec) {\n    // Check for minus sign.\n    let minus = dec[0] == '-';\n    if (minus)\n        dec = dec.slice(1);\n    // Work 6 decimal digits at a time, acting like we're converting base 1e6\n    // digits to binary. This is safe to do with floating point math because\n    // Number.isSafeInteger(ALL_32_BITS * 1e6) == true.\n    const base = 1e6;\n    let lowBits = 0;\n    let highBits = 0;\n    function add1e6digit(begin, end) {\n        // Note: Number('') is 0.\n        const digit1e6 = Number(dec.slice(begin, end));\n        highBits *= base;\n        lowBits = lowBits * base + digit1e6;\n        // Carry bits from lowBits to\n        if (lowBits >= TWO_PWR_32_DBL) {\n            highBits = highBits + ((lowBits / TWO_PWR_32_DBL) | 0);\n            lowBits = lowBits % TWO_PWR_32_DBL;\n        }\n    }\n    add1e6digit(-24, -18);\n    add1e6digit(-18, -12);\n    add1e6digit(-12, -6);\n    add1e6digit(-6);\n    return [minus, lowBits, highBits];\n}\n/**\n * Format 64 bit integer value (as two JS numbers) to decimal string.\n *\n * Copyright 2008 Google Inc.\n */\nexport function int64toString(bitsLow, bitsHigh) {\n    // Skip the expensive conversion if the number is small enough to use the\n    // built-in conversions.\n    if (bitsHigh <= 0x1FFFFF) {\n        return '' + (TWO_PWR_32_DBL * bitsHigh + (bitsLow >>> 0));\n    }\n    // What this code is doing is essentially converting the input number from\n    // base-2 to base-1e7, which allows us to represent the 64-bit range with\n    // only 3 (very large) digits. Those digits are then trivial to convert to\n    // a base-10 string.\n    // The magic numbers used here are -\n    // 2^24 = 16777216 = (1,6777216) in base-1e7.\n    // 2^48 = 281474976710656 = (2,8147497,6710656) in base-1e7.\n    // Split 32:32 representation into 16:24:24 representation so our\n    // intermediate digits don't overflow.\n    let low = bitsLow & 0xFFFFFF;\n    let mid = (((bitsLow >>> 24) | (bitsHigh << 8)) >>> 0) & 0xFFFFFF;\n    let high = (bitsHigh >> 16) & 0xFFFF;\n    // Assemble our three base-1e7 digits, ignoring carries. The maximum\n    // value in a digit at this step is representable as a 48-bit integer, which\n    // can be stored in a 64-bit floating point number.\n    let digitA = low + (mid * 6777216) + (high * 6710656);\n    let digitB = mid + (high * 8147497);\n    let digitC = (high * 2);\n    // Apply carries from A to B and from B to C.\n    let base = 10000000;\n    if (digitA >= base) {\n        digitB += Math.floor(digitA / base);\n        digitA %= base;\n    }\n    if (digitB >= base) {\n        digitC += Math.floor(digitB / base);\n        digitB %= base;\n    }\n    // Convert base-1e7 digits to base-10, with optional leading zeroes.\n    function decimalFrom1e7(digit1e7, needLeadingZeros) {\n        let partial = digit1e7 ? String(digit1e7) : '';\n        if (needLeadingZeros) {\n            return '0000000'.slice(partial.length) + partial;\n        }\n        return partial;\n    }\n    return decimalFrom1e7(digitC, /*needLeadingZeros=*/ 0) +\n        decimalFrom1e7(digitB, /*needLeadingZeros=*/ digitC) +\n        // If the final 1e7 digit didn't need leading zeros, we would have\n        // returned via the trivial code path at the top.\n        decimalFrom1e7(digitA, /*needLeadingZeros=*/ 1);\n}\n/**\n * Write a 32 bit varint, signed or unsigned. Same as `varint64write(0, value, bytes)`\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/1b18833f4f2a2f681f4e4a25cdf3b0a43115ec26/js/binary/encoder.js#L144\n */\nexport function varint32write(value, bytes) {\n    if (value >= 0) {\n        // write value as varint 32\n        while (value > 0x7f) {\n            bytes.push((value & 0x7f) | 0x80);\n            value = value >>> 7;\n        }\n        bytes.push(value);\n    }\n    else {\n        for (let i = 0; i < 9; i++) {\n            bytes.push(value & 127 | 128);\n            value = value >> 7;\n        }\n        bytes.push(1);\n    }\n}\n/**\n * Read an unsigned 32 bit varint.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L220\n */\nexport function varint32read() {\n    let b = this.buf[this.pos++];\n    let result = b & 0x7F;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7F) << 7;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7F) << 14;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7F) << 21;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    // Extract only last 4 bits\n    b = this.buf[this.pos++];\n    result |= (b & 0x0F) << 28;\n    for (let readBytes = 5; ((b & 0x80) !== 0) && readBytes < 10; readBytes++)\n        b = this.buf[this.pos++];\n    if ((b & 0x80) != 0)\n        throw new Error('invalid varint');\n    this.assertBounds();\n    // Result can have 32 bits, convert it to unsigned\n    return result >>> 0;\n}\n","import { int64fromString, int64toString } from \"./goog-varint\";\nfunction detectBi() {\n    const dv = new DataView(new ArrayBuffer(8));\n    const ok = globalThis.BigInt !== undefined\n        && typeof dv.getBigInt64 === \"function\"\n        && typeof dv.getBigUint64 === \"function\"\n        && typeof dv.setBigInt64 === \"function\"\n        && typeof dv.setBigUint64 === \"function\";\n    return ok ? {\n        MIN: BigInt(\"-9223372036854775808\"),\n        MAX: BigInt(\"9223372036854775807\"),\n        UMIN: BigInt(\"0\"),\n        UMAX: BigInt(\"18446744073709551615\"),\n        C: BigInt,\n        V: dv,\n    } : undefined;\n}\nconst BI = detectBi();\nfunction assertBi(bi) {\n    if (!bi)\n        throw new Error(\"BigInt unavailable, see https://github.com/timostamm/protobuf-ts/blob/v1.0.8/MANUAL.md#bigint-support\");\n}\n// used to validate from(string) input (when bigint is unavailable)\nconst RE_DECIMAL_STR = /^-?[0-9]+$/;\n// constants for binary math\nconst TWO_PWR_32_DBL = (1 << 16) * (1 << 16);\n// base class for PbLong and PbULong provides shared code\nclass SharedPbLong {\n    /**\n     * Create a new instance with the given bits.\n     */\n    constructor(lo, hi) {\n        this.lo = lo | 0;\n        this.hi = hi | 0;\n    }\n    /**\n     * Is this instance equal to 0?\n     */\n    isZero() {\n        return this.lo == 0 && this.hi == 0;\n    }\n    /**\n     * Convert to a native number.\n     */\n    toNumber() {\n        let result = this.hi * TWO_PWR_32_DBL + (this.lo >>> 0);\n        if (!Number.isSafeInteger(result))\n            throw new Error(\"cannot convert to safe number\");\n        return result;\n    }\n}\n/**\n * 64-bit unsigned integer as two 32-bit values.\n * Converts between `string`, `number` and `bigint` representations.\n */\nexport class PbULong extends SharedPbLong {\n    /**\n     * Create instance from a `string`, `number` or `bigint`.\n     */\n    static from(value) {\n        if (BI)\n            // noinspection FallThroughInSwitchStatementJS\n            switch (typeof value) {\n                case \"string\":\n                    if (value == \"0\")\n                        return this.ZERO;\n                    if (value == \"\")\n                        throw new Error('string is no integer');\n                    value = BI.C(value);\n                case \"number\":\n                    if (value === 0)\n                        return this.ZERO;\n                    value = BI.C(value);\n                case \"bigint\":\n                    if (!value)\n                        return this.ZERO;\n                    if (value < BI.UMIN)\n                        throw new Error('signed value for ulong');\n                    if (value > BI.UMAX)\n                        throw new Error('ulong too large');\n                    BI.V.setBigUint64(0, value, true);\n                    return new PbULong(BI.V.getInt32(0, true), BI.V.getInt32(4, true));\n            }\n        else\n            switch (typeof value) {\n                case \"string\":\n                    if (value == \"0\")\n                        return this.ZERO;\n                    value = value.trim();\n                    if (!RE_DECIMAL_STR.test(value))\n                        throw new Error('string is no integer');\n                    let [minus, lo, hi] = int64fromString(value);\n                    if (minus)\n                        throw new Error('signed value');\n                    return new PbULong(lo, hi);\n                case \"number\":\n                    if (value == 0)\n                        return this.ZERO;\n                    if (!Number.isSafeInteger(value))\n                        throw new Error('number is no integer');\n                    if (value < 0)\n                        throw new Error('signed value for ulong');\n                    return new PbULong(value, value / TWO_PWR_32_DBL);\n            }\n        throw new Error('unknown value ' + typeof value);\n    }\n    /**\n     * Convert to decimal string.\n     */\n    toString() {\n        return BI ? this.toBigInt().toString() : int64toString(this.lo, this.hi);\n    }\n    /**\n     * Convert to native bigint.\n     */\n    toBigInt() {\n        assertBi(BI);\n        BI.V.setInt32(0, this.lo, true);\n        BI.V.setInt32(4, this.hi, true);\n        return BI.V.getBigUint64(0, true);\n    }\n}\n/**\n * ulong 0 singleton.\n */\nPbULong.ZERO = new PbULong(0, 0);\n/**\n * 64-bit signed integer as two 32-bit values.\n * Converts between `string`, `number` and `bigint` representations.\n */\nexport class PbLong extends SharedPbLong {\n    /**\n     * Create instance from a `string`, `number` or `bigint`.\n     */\n    static from(value) {\n        if (BI)\n            // noinspection FallThroughInSwitchStatementJS\n            switch (typeof value) {\n                case \"string\":\n                    if (value == \"0\")\n                        return this.ZERO;\n                    if (value == \"\")\n                        throw new Error('string is no integer');\n                    value = BI.C(value);\n                case \"number\":\n                    if (value === 0)\n                        return this.ZERO;\n                    value = BI.C(value);\n                case \"bigint\":\n                    if (!value)\n                        return this.ZERO;\n                    if (value < BI.MIN)\n                        throw new Error('ulong too small');\n                    if (value > BI.MAX)\n                        throw new Error('ulong too large');\n                    BI.V.setBigInt64(0, value, true);\n                    return new PbLong(BI.V.getInt32(0, true), BI.V.getInt32(4, true));\n            }\n        else\n            switch (typeof value) {\n                case \"string\":\n                    if (value == \"0\")\n                        return this.ZERO;\n                    value = value.trim();\n                    if (!RE_DECIMAL_STR.test(value))\n                        throw new Error('string is no integer');\n                    let [minus, lo, hi] = int64fromString(value);\n                    let pbl = new PbLong(lo, hi);\n                    return minus ? pbl.negate() : pbl;\n                case \"number\":\n                    if (value == 0)\n                        return this.ZERO;\n                    if (!Number.isSafeInteger(value))\n                        throw new Error('number is no integer');\n                    return value > 0\n                        ? new PbLong(value, value / TWO_PWR_32_DBL)\n                        : new PbLong(-value, -value / TWO_PWR_32_DBL).negate();\n            }\n        throw new Error('unknown value ' + typeof value);\n    }\n    /**\n     * Do we have a minus sign?\n     */\n    isNegative() {\n        return (this.hi & 0x80000000) !== 0;\n    }\n    /**\n     * Negate two's complement.\n     * Invert all the bits and add one to the result.\n     */\n    negate() {\n        let hi = ~this.hi, lo = this.lo;\n        if (lo)\n            lo = ~lo + 1;\n        else\n            hi += 1;\n        return new PbLong(lo, hi);\n    }\n    /**\n     * Convert to decimal string.\n     */\n    toString() {\n        if (BI)\n            return this.toBigInt().toString();\n        if (this.isNegative()) {\n            let n = this.negate();\n            return '-' + int64toString(n.lo, n.hi);\n        }\n        return int64toString(this.lo, this.hi);\n    }\n    /**\n     * Convert to native bigint.\n     */\n    toBigInt() {\n        assertBi(BI);\n        BI.V.setInt32(0, this.lo, true);\n        BI.V.setInt32(4, this.hi, true);\n        return BI.V.getBigInt64(0, true);\n    }\n}\n/**\n * long 0 singleton.\n */\nPbLong.ZERO = new PbLong(0, 0);\n","/**\n * assert that condition is true or throw error (with message)\n */\nexport function assert(condition, msg) {\n    if (!condition) {\n        throw new Error(msg);\n    }\n}\n/**\n * assert that value cannot exist = type `never`. throw runtime error if it does.\n */\nexport function assertNever(value, msg) {\n    throw new Error(msg !== null && msg !== void 0 ? msg : 'Unexpected object: ' + value);\n}\nconst FLOAT32_MAX = 3.4028234663852886e+38, FLOAT32_MIN = -3.4028234663852886e+38, UINT32_MAX = 0xFFFFFFFF, INT32_MAX = 0X7FFFFFFF, INT32_MIN = -0X80000000;\nexport function assertInt32(arg) {\n    if (typeof arg !== \"number\")\n        throw new Error('invalid int 32: ' + typeof arg);\n    if (!Number.isInteger(arg) || arg > INT32_MAX || arg < INT32_MIN)\n        throw new Error('invalid int 32: ' + arg);\n}\nexport function assertUInt32(arg) {\n    if (typeof arg !== \"number\")\n        throw new Error('invalid uint 32: ' + typeof arg);\n    if (!Number.isInteger(arg) || arg > UINT32_MAX || arg < 0)\n        throw new Error('invalid uint 32: ' + arg);\n}\nexport function assertFloat32(arg) {\n    if (typeof arg !== \"number\")\n        throw new Error('invalid float 32: ' + typeof arg);\n    if (!Number.isFinite(arg))\n        return;\n    if (arg > FLOAT32_MAX || arg < FLOAT32_MIN)\n        throw new Error('invalid float 32: ' + arg);\n}\n","import { LongType } from \"./reflection-info\";\n/**\n * Utility method to convert a PbLong or PbUlong to a JavaScript\n * representation during runtime.\n *\n * Works with generated field information, `undefined` is equivalent\n * to `STRING`.\n */\nexport function reflectionLongConvert(long, type) {\n    switch (type) {\n        case LongType.BIGINT:\n            return long.toBigInt();\n        case LongType.NUMBER:\n            return long.toNumber();\n        default:\n            // case undefined:\n            // case LongType.STRING:\n            return long.toString();\n    }\n}\n","import { isJsonObject, typeofJsonValue } from \"./json-typings\";\nimport { base64decode } from \"./base64\";\nimport { LongType, ScalarType } from \"./reflection-info\";\nimport { PbLong, PbULong } from \"./pb-long\";\nimport { assert, assertFloat32, assertInt32, assertUInt32 } from \"./assert\";\nimport { reflectionLongConvert } from \"./reflection-long-convert\";\n/**\n * Reads proto3 messages in canonical JSON format using reflection information.\n *\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n */\nexport class ReflectionJsonReader {\n    constructor(info) {\n        this.info = info;\n    }\n    prepare() {\n        var _a;\n        if (this.fMap === undefined) {\n            this.fMap = {};\n            const fieldsInput = (_a = this.info.fields) !== null && _a !== void 0 ? _a : [];\n            for (const field of fieldsInput) {\n                this.fMap[field.name] = field;\n                this.fMap[field.jsonName] = field;\n                this.fMap[field.localName] = field;\n            }\n        }\n    }\n    // Cannot parse JSON <type of jsonValue> for <type name>#<fieldName>.\n    assert(condition, fieldName, jsonValue) {\n        if (!condition) {\n            let what = typeofJsonValue(jsonValue);\n            if (what == \"number\" || what == \"boolean\")\n                what = jsonValue.toString();\n            throw new Error(`Cannot parse JSON ${what} for ${this.info.typeName}#${fieldName}`);\n        }\n    }\n    /**\n     * Reads a message from canonical JSON format into the target message.\n     *\n     * Repeated fields are appended. Map entries are added, overwriting\n     * existing keys.\n     *\n     * If a message field is already present, it will be merged with the\n     * new data.\n     */\n    read(input, message, options) {\n        this.prepare();\n        const oneofsHandled = [];\n        for (const [jsonKey, jsonValue] of Object.entries(input)) {\n            const field = this.fMap[jsonKey];\n            if (!field) {\n                if (!options.ignoreUnknownFields)\n                    throw new Error(`Found unknown field while reading ${this.info.typeName} from JSON format. JSON key: ${jsonKey}`);\n                continue;\n            }\n            const localName = field.localName;\n            // handle oneof ADT\n            let target; // this will be the target for the field value, whether it is member of a oneof or not\n            if (field.oneof) {\n                // since json objects are unordered by specification, it is not possible to take the last of multiple oneofs\n                if (oneofsHandled.includes(field.oneof))\n                    throw new Error(`Multiple members of the oneof group \"${field.oneof}\" of ${this.info.typeName} are present in JSON.`);\n                oneofsHandled.push(field.oneof);\n                target = message[field.oneof] = {\n                    oneofKind: localName\n                };\n            }\n            else {\n                target = message;\n            }\n            // we have handled oneof above. we just have read the value into `target`.\n            if (field.kind == 'map') {\n                if (jsonValue === null) {\n                    continue;\n                }\n                // check input\n                this.assert(isJsonObject(jsonValue), field.name, jsonValue);\n                // our target to put map entries into\n                const fieldObj = target[localName];\n                // read entries\n                for (const [jsonObjKey, jsonObjValue] of Object.entries(jsonValue)) {\n                    this.assert(jsonObjValue !== null, field.name + \" map value\", null);\n                    // read value\n                    let val;\n                    switch (field.V.kind) {\n                        case \"message\":\n                            val = field.V.T().internalJsonRead(jsonObjValue, options);\n                            break;\n                        case \"enum\":\n                            val = this.enum(field.V.T(), jsonObjValue, field.name, options.ignoreUnknownFields);\n                            if (val === false)\n                                continue;\n                            break;\n                        case \"scalar\":\n                            val = this.scalar(jsonObjValue, field.V.T, field.V.L, field.name);\n                            break;\n                    }\n                    this.assert(val !== undefined, field.name + \" map value\", jsonObjValue);\n                    // read key\n                    let key = jsonObjKey;\n                    if (field.K == ScalarType.BOOL)\n                        key = key == \"true\" ? true : key == \"false\" ? false : key;\n                    key = this.scalar(key, field.K, LongType.STRING, field.name).toString();\n                    fieldObj[key] = val;\n                }\n            }\n            else if (field.repeat) {\n                if (jsonValue === null)\n                    continue;\n                // check input\n                this.assert(Array.isArray(jsonValue), field.name, jsonValue);\n                // our target to put array entries into\n                const fieldArr = target[localName];\n                // read array entries\n                for (const jsonItem of jsonValue) {\n                    this.assert(jsonItem !== null, field.name, null);\n                    let val;\n                    switch (field.kind) {\n                        case \"message\":\n                            val = field.T().internalJsonRead(jsonItem, options);\n                            break;\n                        case \"enum\":\n                            val = this.enum(field.T(), jsonItem, field.name, options.ignoreUnknownFields);\n                            if (val === false)\n                                continue;\n                            break;\n                        case \"scalar\":\n                            val = this.scalar(jsonItem, field.T, field.L, field.name);\n                            break;\n                    }\n                    this.assert(val !== undefined, field.name, jsonValue);\n                    fieldArr.push(val);\n                }\n            }\n            else {\n                switch (field.kind) {\n                    case \"message\":\n                        if (jsonValue === null && field.T().typeName != 'google.protobuf.Value') {\n                            this.assert(field.oneof === undefined, field.name + \" (oneof member)\", null);\n                            continue;\n                        }\n                        target[localName] = field.T().internalJsonRead(jsonValue, options, target[localName]);\n                        break;\n                    case \"enum\":\n                        let val = this.enum(field.T(), jsonValue, field.name, options.ignoreUnknownFields);\n                        if (val === false)\n                            continue;\n                        target[localName] = val;\n                        break;\n                    case \"scalar\":\n                        target[localName] = this.scalar(jsonValue, field.T, field.L, field.name);\n                        break;\n                }\n            }\n        }\n    }\n    /**\n     * Returns `false` for unrecognized string representations.\n     *\n     * google.protobuf.NullValue accepts only JSON `null`.\n     */\n    enum(type, json, fieldName, ignoreUnknownFields) {\n        if (type[0] == 'google.protobuf.NullValue')\n            assert(json === null, `Unable to parse field ${this.info.typeName}#${fieldName}, enum ${type[0]} only accepts null.`);\n        if (json === null)\n            // we require 0 to be default value for all enums\n            return 0;\n        switch (typeof json) {\n            case \"number\":\n                assert(Number.isInteger(json), `Unable to parse field ${this.info.typeName}#${fieldName}, enum can only be integral number, got ${json}.`);\n                return json;\n            case \"string\":\n                let localEnumName = json;\n                if (type[2] && json.substring(0, type[2].length) === type[2])\n                    // lookup without the shared prefix\n                    localEnumName = json.substring(type[2].length);\n                let enumNumber = type[1][localEnumName];\n                if (typeof enumNumber === 'undefined' && ignoreUnknownFields) {\n                    return false;\n                }\n                assert(typeof enumNumber == \"number\", `Unable to parse field ${this.info.typeName}#${fieldName}, enum ${type[0]} has no value for \"${json}\".`);\n                return enumNumber;\n        }\n        assert(false, `Unable to parse field ${this.info.typeName}#${fieldName}, cannot parse enum value from ${typeof json}\".`);\n    }\n    scalar(json, type, longType, fieldName) {\n        let e;\n        try {\n            switch (type) {\n                // float, double: JSON value will be a number or one of the special string values \"NaN\", \"Infinity\", and \"-Infinity\".\n                // Either numbers or strings are accepted. Exponent notation is also accepted.\n                case ScalarType.DOUBLE:\n                case ScalarType.FLOAT:\n                    if (json === null)\n                        return .0;\n                    if (json === \"NaN\")\n                        return Number.NaN;\n                    if (json === \"Infinity\")\n                        return Number.POSITIVE_INFINITY;\n                    if (json === \"-Infinity\")\n                        return Number.NEGATIVE_INFINITY;\n                    if (json === \"\") {\n                        e = \"empty string\";\n                        break;\n                    }\n                    if (typeof json == \"string\" && json.trim().length !== json.length) {\n                        e = \"extra whitespace\";\n                        break;\n                    }\n                    if (typeof json != \"string\" && typeof json != \"number\") {\n                        break;\n                    }\n                    let float = Number(json);\n                    if (Number.isNaN(float)) {\n                        e = \"not a number\";\n                        break;\n                    }\n                    if (!Number.isFinite(float)) {\n                        // infinity and -infinity are handled by string representation above, so this is an error\n                        e = \"too large or small\";\n                        break;\n                    }\n                    if (type == ScalarType.FLOAT)\n                        assertFloat32(float);\n                    return float;\n                // int32, fixed32, uint32: JSON value will be a decimal number. Either numbers or strings are accepted.\n                case ScalarType.INT32:\n                case ScalarType.FIXED32:\n                case ScalarType.SFIXED32:\n                case ScalarType.SINT32:\n                case ScalarType.UINT32:\n                    if (json === null)\n                        return 0;\n                    let int32;\n                    if (typeof json == \"number\")\n                        int32 = json;\n                    else if (json === \"\")\n                        e = \"empty string\";\n                    else if (typeof json == \"string\") {\n                        if (json.trim().length !== json.length)\n                            e = \"extra whitespace\";\n                        else\n                            int32 = Number(json);\n                    }\n                    if (int32 === undefined)\n                        break;\n                    if (type == ScalarType.UINT32)\n                        assertUInt32(int32);\n                    else\n                        assertInt32(int32);\n                    return int32;\n                // int64, fixed64, uint64: JSON value will be a decimal string. Either numbers or strings are accepted.\n                case ScalarType.INT64:\n                case ScalarType.SFIXED64:\n                case ScalarType.SINT64:\n                    if (json === null)\n                        return reflectionLongConvert(PbLong.ZERO, longType);\n                    if (typeof json != \"number\" && typeof json != \"string\")\n                        break;\n                    return reflectionLongConvert(PbLong.from(json), longType);\n                case ScalarType.FIXED64:\n                case ScalarType.UINT64:\n                    if (json === null)\n                        return reflectionLongConvert(PbULong.ZERO, longType);\n                    if (typeof json != \"number\" && typeof json != \"string\")\n                        break;\n                    return reflectionLongConvert(PbULong.from(json), longType);\n                // bool:\n                case ScalarType.BOOL:\n                    if (json === null)\n                        return false;\n                    if (typeof json !== \"boolean\")\n                        break;\n                    return json;\n                // string:\n                case ScalarType.STRING:\n                    if (json === null)\n                        return \"\";\n                    if (typeof json !== \"string\") {\n                        e = \"extra whitespace\";\n                        break;\n                    }\n                    try {\n                        encodeURIComponent(json);\n                    }\n                    catch (e) {\n                        e = \"invalid UTF8\";\n                        break;\n                    }\n                    return json;\n                // bytes: JSON value will be the data encoded as a string using standard base64 encoding with paddings.\n                // Either standard or URL-safe base64 encoding with/without paddings are accepted.\n                case ScalarType.BYTES:\n                    if (json === null || json === \"\")\n                        return new Uint8Array(0);\n                    if (typeof json !== 'string')\n                        break;\n                    return base64decode(json);\n            }\n        }\n        catch (error) {\n            e = error.message;\n        }\n        this.assert(false, fieldName + (e ? \" - \" + e : \"\"), json);\n    }\n}\n","import { base64encode } from \"./base64\";\nimport { PbLong, PbULong } from \"./pb-long\";\nimport { ScalarType } from \"./reflection-info\";\nimport { assert, assertFloat32, assertInt32, assertUInt32 } from \"./assert\";\n/**\n * Writes proto3 messages in canonical JSON format using reflection\n * information.\n *\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n */\nexport class ReflectionJsonWriter {\n    constructor(info) {\n        var _a;\n        this.fields = (_a = info.fields) !== null && _a !== void 0 ? _a : [];\n    }\n    /**\n     * Converts the message to a JSON object, based on the field descriptors.\n     */\n    write(message, options) {\n        const json = {}, source = message;\n        for (const field of this.fields) {\n            // field is not part of a oneof, simply write as is\n            if (!field.oneof) {\n                let jsonValue = this.field(field, source[field.localName], options);\n                if (jsonValue !== undefined)\n                    json[options.useProtoFieldName ? field.name : field.jsonName] = jsonValue;\n                continue;\n            }\n            // field is part of a oneof\n            const group = source[field.oneof];\n            if (group.oneofKind !== field.localName)\n                continue; // not selected, skip\n            const opt = field.kind == 'scalar' || field.kind == 'enum'\n                ? Object.assign(Object.assign({}, options), { emitDefaultValues: true }) : options;\n            let jsonValue = this.field(field, group[field.localName], opt);\n            assert(jsonValue !== undefined);\n            json[options.useProtoFieldName ? field.name : field.jsonName] = jsonValue;\n        }\n        return json;\n    }\n    field(field, value, options) {\n        let jsonValue = undefined;\n        if (field.kind == 'map') {\n            assert(typeof value == \"object\" && value !== null);\n            const jsonObj = {};\n            switch (field.V.kind) {\n                case \"scalar\":\n                    for (const [entryKey, entryValue] of Object.entries(value)) {\n                        const val = this.scalar(field.V.T, entryValue, field.name, false, true);\n                        assert(val !== undefined);\n                        jsonObj[entryKey.toString()] = val; // JSON standard allows only (double quoted) string as property key\n                    }\n                    break;\n                case \"message\":\n                    const messageType = field.V.T();\n                    for (const [entryKey, entryValue] of Object.entries(value)) {\n                        const val = this.message(messageType, entryValue, field.name, options);\n                        assert(val !== undefined);\n                        jsonObj[entryKey.toString()] = val; // JSON standard allows only (double quoted) string as property key\n                    }\n                    break;\n                case \"enum\":\n                    const enumInfo = field.V.T();\n                    for (const [entryKey, entryValue] of Object.entries(value)) {\n                        assert(entryValue === undefined || typeof entryValue == 'number');\n                        const val = this.enum(enumInfo, entryValue, field.name, false, true, options.enumAsInteger);\n                        assert(val !== undefined);\n                        jsonObj[entryKey.toString()] = val; // JSON standard allows only (double quoted) string as property key\n                    }\n                    break;\n            }\n            if (options.emitDefaultValues || Object.keys(jsonObj).length > 0)\n                jsonValue = jsonObj;\n        }\n        else if (field.repeat) {\n            assert(Array.isArray(value));\n            const jsonArr = [];\n            switch (field.kind) {\n                case \"scalar\":\n                    for (let i = 0; i < value.length; i++) {\n                        const val = this.scalar(field.T, value[i], field.name, field.opt, true);\n                        assert(val !== undefined);\n                        jsonArr.push(val);\n                    }\n                    break;\n                case \"enum\":\n                    const enumInfo = field.T();\n                    for (let i = 0; i < value.length; i++) {\n                        assert(value[i] === undefined || typeof value[i] == 'number');\n                        const val = this.enum(enumInfo, value[i], field.name, field.opt, true, options.enumAsInteger);\n                        assert(val !== undefined);\n                        jsonArr.push(val);\n                    }\n                    break;\n                case \"message\":\n                    const messageType = field.T();\n                    for (let i = 0; i < value.length; i++) {\n                        const val = this.message(messageType, value[i], field.name, options);\n                        assert(val !== undefined);\n                        jsonArr.push(val);\n                    }\n                    break;\n            }\n            // add converted array to json output\n            if (options.emitDefaultValues || jsonArr.length > 0 || options.emitDefaultValues)\n                jsonValue = jsonArr;\n        }\n        else {\n            switch (field.kind) {\n                case \"scalar\":\n                    jsonValue = this.scalar(field.T, value, field.name, field.opt, options.emitDefaultValues);\n                    break;\n                case \"enum\":\n                    jsonValue = this.enum(field.T(), value, field.name, field.opt, options.emitDefaultValues, options.enumAsInteger);\n                    break;\n                case \"message\":\n                    jsonValue = this.message(field.T(), value, field.name, options);\n                    break;\n            }\n        }\n        return jsonValue;\n    }\n    /**\n     * Returns `null` for google.protobuf.NullValue.\n     */\n    enum(type, value, fieldName, optional, emitDefaultValues, enumAsInteger) {\n        if (type[0] == 'google.protobuf.NullValue')\n            return null;\n        if (value === undefined) {\n            assert(optional);\n            return undefined;\n        }\n        if (value === 0 && !emitDefaultValues && !optional)\n            // we require 0 to be default value for all enums\n            return undefined;\n        assert(typeof value == 'number');\n        assert(Number.isInteger(value));\n        if (enumAsInteger || !type[1].hasOwnProperty(value))\n            // if we don't now the enum value, just return the number\n            return value;\n        if (type[2])\n            // restore the dropped prefix\n            return type[2] + type[1][value];\n        return type[1][value];\n    }\n    message(type, value, fieldName, options) {\n        if (value === undefined)\n            return options.emitDefaultValues ? null : undefined;\n        return type.internalJsonWrite(value, options);\n    }\n    scalar(type, value, fieldName, optional, emitDefaultValues) {\n        if (value === undefined) {\n            assert(optional);\n            return undefined;\n        }\n        const ed = emitDefaultValues || optional;\n        // noinspection FallThroughInSwitchStatementJS\n        switch (type) {\n            // int32, fixed32, uint32: JSON value will be a decimal number. Either numbers or strings are accepted.\n            case ScalarType.INT32:\n            case ScalarType.SFIXED32:\n            case ScalarType.SINT32:\n                if (value === 0)\n                    return ed ? 0 : undefined;\n                assertInt32(value);\n                return value;\n            case ScalarType.FIXED32:\n            case ScalarType.UINT32:\n                if (value === 0)\n                    return ed ? 0 : undefined;\n                assertUInt32(value);\n                return value;\n            // float, double: JSON value will be a number or one of the special string values \"NaN\", \"Infinity\", and \"-Infinity\".\n            // Either numbers or strings are accepted. Exponent notation is also accepted.\n            case ScalarType.FLOAT:\n                assertFloat32(value);\n            case ScalarType.DOUBLE:\n                if (value === 0)\n                    return ed ? 0 : undefined;\n                assert(typeof value == 'number');\n                if (Number.isNaN(value))\n                    return 'NaN';\n                if (value === Number.POSITIVE_INFINITY)\n                    return 'Infinity';\n                if (value === Number.NEGATIVE_INFINITY)\n                    return '-Infinity';\n                return value;\n            // string:\n            case ScalarType.STRING:\n                if (value === \"\")\n                    return ed ? '' : undefined;\n                assert(typeof value == 'string');\n                return value;\n            // bool:\n            case ScalarType.BOOL:\n                if (value === false)\n                    return ed ? false : undefined;\n                assert(typeof value == 'boolean');\n                return value;\n            // JSON value will be a decimal string. Either numbers or strings are accepted.\n            case ScalarType.UINT64:\n            case ScalarType.FIXED64:\n                assert(typeof value == 'number' || typeof value == 'string' || typeof value == 'bigint');\n                let ulong = PbULong.from(value);\n                if (ulong.isZero() && !ed)\n                    return undefined;\n                return ulong.toString();\n            // JSON value will be a decimal string. Either numbers or strings are accepted.\n            case ScalarType.INT64:\n            case ScalarType.SFIXED64:\n            case ScalarType.SINT64:\n                assert(typeof value == 'number' || typeof value == 'string' || typeof value == 'bigint');\n                let long = PbLong.from(value);\n                if (long.isZero() && !ed)\n                    return undefined;\n                return long.toString();\n            // bytes: JSON value will be the data encoded as a string using standard base64 encoding with paddings.\n            // Either standard or URL-safe base64 encoding with/without paddings are accepted.\n            case ScalarType.BYTES:\n                assert(value instanceof Uint8Array);\n                if (!value.byteLength)\n                    return ed ? \"\" : undefined;\n                return base64encode(value);\n        }\n    }\n}\n","import { LongType, ScalarType } from \"./reflection-info\";\nimport { reflectionLongConvert } from \"./reflection-long-convert\";\nimport { PbLong, PbULong } from \"./pb-long\";\n/**\n * Creates the default value for a scalar type.\n */\nexport function reflectionScalarDefault(type, longType = LongType.STRING) {\n    switch (type) {\n        case ScalarType.BOOL:\n            return false;\n        case ScalarType.UINT64:\n        case ScalarType.FIXED64:\n            return reflectionLongConvert(PbULong.ZERO, longType);\n        case ScalarType.INT64:\n        case ScalarType.SFIXED64:\n        case ScalarType.SINT64:\n            return reflectionLongConvert(PbLong.ZERO, longType);\n        case ScalarType.DOUBLE:\n        case ScalarType.FLOAT:\n            return 0.0;\n        case ScalarType.BYTES:\n            return new Uint8Array(0);\n        case ScalarType.STRING:\n            return \"\";\n        default:\n            // case ScalarType.INT32:\n            // case ScalarType.UINT32:\n            // case ScalarType.SINT32:\n            // case ScalarType.FIXED32:\n            // case ScalarType.SFIXED32:\n            return 0;\n    }\n}\n","import { UnknownFieldHandler, WireType } from \"./binary-format-contract\";\nimport { LongType, ScalarType } from \"./reflection-info\";\nimport { reflectionLongConvert } from \"./reflection-long-convert\";\nimport { reflectionScalarDefault } from \"./reflection-scalar-default\";\n/**\n * Reads proto3 messages in binary format using reflection information.\n *\n * https://developers.google.com/protocol-buffers/docs/encoding\n */\nexport class ReflectionBinaryReader {\n    constructor(info) {\n        this.info = info;\n    }\n    prepare() {\n        var _a;\n        if (!this.fieldNoToField) {\n            const fieldsInput = (_a = this.info.fields) !== null && _a !== void 0 ? _a : [];\n            this.fieldNoToField = new Map(fieldsInput.map(field => [field.no, field]));\n        }\n    }\n    /**\n     * Reads a message from binary format into the target message.\n     *\n     * Repeated fields are appended. Map entries are added, overwriting\n     * existing keys.\n     *\n     * If a message field is already present, it will be merged with the\n     * new data.\n     */\n    read(reader, message, options, length) {\n        this.prepare();\n        const end = length === undefined ? reader.len : reader.pos + length;\n        while (reader.pos < end) {\n            // read the tag and find the field\n            const [fieldNo, wireType] = reader.tag(), field = this.fieldNoToField.get(fieldNo);\n            if (!field) {\n                let u = options.readUnknownField;\n                if (u == \"throw\")\n                    throw new Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.info.typeName}`);\n                let d = reader.skip(wireType);\n                if (u !== false)\n                    (u === true ? UnknownFieldHandler.onRead : u)(this.info.typeName, message, fieldNo, wireType, d);\n                continue;\n            }\n            // target object for the field we are reading\n            let target = message, repeated = field.repeat, localName = field.localName;\n            // if field is member of oneof ADT, use ADT as target\n            if (field.oneof) {\n                target = target[field.oneof];\n                // if other oneof member selected, set new ADT\n                if (target.oneofKind !== localName)\n                    target = message[field.oneof] = {\n                        oneofKind: localName\n                    };\n            }\n            // we have handled oneof above, we just have read the value into `target[localName]`\n            switch (field.kind) {\n                case \"scalar\":\n                case \"enum\":\n                    let T = field.kind == \"enum\" ? ScalarType.INT32 : field.T;\n                    let L = field.kind == \"scalar\" ? field.L : undefined;\n                    if (repeated) {\n                        let arr = target[localName]; // safe to assume presence of array, oneof cannot contain repeated values\n                        if (wireType == WireType.LengthDelimited && T != ScalarType.STRING && T != ScalarType.BYTES) {\n                            let e = reader.uint32() + reader.pos;\n                            while (reader.pos < e)\n                                arr.push(this.scalar(reader, T, L));\n                        }\n                        else\n                            arr.push(this.scalar(reader, T, L));\n                    }\n                    else\n                        target[localName] = this.scalar(reader, T, L);\n                    break;\n                case \"message\":\n                    if (repeated) {\n                        let arr = target[localName]; // safe to assume presence of array, oneof cannot contain repeated values\n                        let msg = field.T().internalBinaryRead(reader, reader.uint32(), options);\n                        arr.push(msg);\n                    }\n                    else\n                        target[localName] = field.T().internalBinaryRead(reader, reader.uint32(), options, target[localName]);\n                    break;\n                case \"map\":\n                    let [mapKey, mapVal] = this.mapEntry(field, reader, options);\n                    // safe to assume presence of map object, oneof cannot contain repeated values\n                    target[localName][mapKey] = mapVal;\n                    break;\n            }\n        }\n    }\n    /**\n     * Read a map field, expecting key field = 1, value field = 2\n     */\n    mapEntry(field, reader, options) {\n        let length = reader.uint32();\n        let end = reader.pos + length;\n        let key = undefined; // javascript only allows number or string for object properties\n        let val = undefined;\n        while (reader.pos < end) {\n            let [fieldNo, wireType] = reader.tag();\n            switch (fieldNo) {\n                case 1:\n                    if (field.K == ScalarType.BOOL)\n                        key = reader.bool().toString();\n                    else\n                        // long types are read as string, number types are okay as number\n                        key = this.scalar(reader, field.K, LongType.STRING);\n                    break;\n                case 2:\n                    switch (field.V.kind) {\n                        case \"scalar\":\n                            val = this.scalar(reader, field.V.T, field.V.L);\n                            break;\n                        case \"enum\":\n                            val = reader.int32();\n                            break;\n                        case \"message\":\n                            val = field.V.T().internalBinaryRead(reader, reader.uint32(), options);\n                            break;\n                    }\n                    break;\n                default:\n                    throw new Error(`Unknown field ${fieldNo} (wire type ${wireType}) in map entry for ${this.info.typeName}#${field.name}`);\n            }\n        }\n        if (key === undefined) {\n            let keyRaw = reflectionScalarDefault(field.K);\n            key = field.K == ScalarType.BOOL ? keyRaw.toString() : keyRaw;\n        }\n        if (val === undefined)\n            switch (field.V.kind) {\n                case \"scalar\":\n                    val = reflectionScalarDefault(field.V.T, field.V.L);\n                    break;\n                case \"enum\":\n                    val = 0;\n                    break;\n                case \"message\":\n                    val = field.V.T().create();\n                    break;\n            }\n        return [key, val];\n    }\n    scalar(reader, type, longType) {\n        switch (type) {\n            case ScalarType.INT32:\n                return reader.int32();\n            case ScalarType.STRING:\n                return reader.string();\n            case ScalarType.BOOL:\n                return reader.bool();\n            case ScalarType.DOUBLE:\n                return reader.double();\n            case ScalarType.FLOAT:\n                return reader.float();\n            case ScalarType.INT64:\n                return reflectionLongConvert(reader.int64(), longType);\n            case ScalarType.UINT64:\n                return reflectionLongConvert(reader.uint64(), longType);\n            case ScalarType.FIXED64:\n                return reflectionLongConvert(reader.fixed64(), longType);\n            case ScalarType.FIXED32:\n                return reader.fixed32();\n            case ScalarType.BYTES:\n                return reader.bytes();\n            case ScalarType.UINT32:\n                return reader.uint32();\n            case ScalarType.SFIXED32:\n                return reader.sfixed32();\n            case ScalarType.SFIXED64:\n                return reflectionLongConvert(reader.sfixed64(), longType);\n            case ScalarType.SINT32:\n                return reader.sint32();\n            case ScalarType.SINT64:\n                return reflectionLongConvert(reader.sint64(), longType);\n        }\n    }\n}\n","import { UnknownFieldHandler, WireType } from \"./binary-format-contract\";\nimport { RepeatType, ScalarType } from \"./reflection-info\";\nimport { assert } from \"./assert\";\nimport { PbLong, PbULong } from \"./pb-long\";\n/**\n * Writes proto3 messages in binary format using reflection information.\n *\n * https://developers.google.com/protocol-buffers/docs/encoding\n */\nexport class ReflectionBinaryWriter {\n    constructor(info) {\n        this.info = info;\n    }\n    prepare() {\n        if (!this.fields) {\n            const fieldsInput = this.info.fields ? this.info.fields.concat() : [];\n            this.fields = fieldsInput.sort((a, b) => a.no - b.no);\n        }\n    }\n    /**\n     * Writes the message to binary format.\n     */\n    write(message, writer, options) {\n        this.prepare();\n        for (const field of this.fields) {\n            let value, // this will be our field value, whether it is member of a oneof or not\n            emitDefault, // whether we emit the default value (only true for oneof members)\n            repeated = field.repeat, localName = field.localName;\n            // handle oneof ADT\n            if (field.oneof) {\n                const group = message[field.oneof];\n                if (group.oneofKind !== localName)\n                    continue; // if field is not selected, skip\n                value = group[localName];\n                emitDefault = true;\n            }\n            else {\n                value = message[localName];\n                emitDefault = false;\n            }\n            // we have handled oneof above. we just have to honor `emitDefault`.\n            switch (field.kind) {\n                case \"scalar\":\n                case \"enum\":\n                    let T = field.kind == \"enum\" ? ScalarType.INT32 : field.T;\n                    if (repeated) {\n                        assert(Array.isArray(value));\n                        if (repeated == RepeatType.PACKED)\n                            this.packed(writer, T, field.no, value);\n                        else\n                            for (const item of value)\n                                this.scalar(writer, T, field.no, item, true);\n                    }\n                    else if (value === undefined)\n                        assert(field.opt);\n                    else\n                        this.scalar(writer, T, field.no, value, emitDefault || field.opt);\n                    break;\n                case \"message\":\n                    if (repeated) {\n                        assert(Array.isArray(value));\n                        for (const item of value)\n                            this.message(writer, options, field.T(), field.no, item);\n                    }\n                    else {\n                        this.message(writer, options, field.T(), field.no, value);\n                    }\n                    break;\n                case \"map\":\n                    assert(typeof value == 'object' && value !== null);\n                    for (const [key, val] of Object.entries(value))\n                        this.mapEntry(writer, options, field, key, val);\n                    break;\n            }\n        }\n        let u = options.writeUnknownFields;\n        if (u !== false)\n            (u === true ? UnknownFieldHandler.onWrite : u)(this.info.typeName, message, writer);\n    }\n    mapEntry(writer, options, field, key, value) {\n        writer.tag(field.no, WireType.LengthDelimited);\n        writer.fork();\n        // javascript only allows number or string for object properties\n        // we convert from our representation to the protobuf type\n        let keyValue = key;\n        switch (field.K) {\n            case ScalarType.INT32:\n            case ScalarType.FIXED32:\n            case ScalarType.UINT32:\n            case ScalarType.SFIXED32:\n            case ScalarType.SINT32:\n                keyValue = Number.parseInt(key);\n                break;\n            case ScalarType.BOOL:\n                assert(key == 'true' || key == 'false');\n                keyValue = key == 'true';\n                break;\n        }\n        // write key, expecting key field number = 1\n        this.scalar(writer, field.K, 1, keyValue, true);\n        // write value, expecting value field number = 2\n        switch (field.V.kind) {\n            case 'scalar':\n                this.scalar(writer, field.V.T, 2, value, true);\n                break;\n            case 'enum':\n                this.scalar(writer, ScalarType.INT32, 2, value, true);\n                break;\n            case 'message':\n                this.message(writer, options, field.V.T(), 2, value);\n                break;\n        }\n        writer.join();\n    }\n    message(writer, options, handler, fieldNo, value) {\n        if (value === undefined)\n            return;\n        handler.internalBinaryWrite(value, writer.tag(fieldNo, WireType.LengthDelimited).fork(), options);\n        writer.join();\n    }\n    /**\n     * Write a single scalar value.\n     */\n    scalar(writer, type, fieldNo, value, emitDefault) {\n        let [wireType, method, isDefault] = this.scalarInfo(type, value);\n        if (!isDefault || emitDefault) {\n            writer.tag(fieldNo, wireType);\n            writer[method](value);\n        }\n    }\n    /**\n     * Write an array of scalar values in packed format.\n     */\n    packed(writer, type, fieldNo, value) {\n        if (!value.length)\n            return;\n        assert(type !== ScalarType.BYTES && type !== ScalarType.STRING);\n        // write tag\n        writer.tag(fieldNo, WireType.LengthDelimited);\n        // begin length-delimited\n        writer.fork();\n        // write values without tags\n        let [, method,] = this.scalarInfo(type);\n        for (let i = 0; i < value.length; i++)\n            writer[method](value[i]);\n        // end length delimited\n        writer.join();\n    }\n    /**\n     * Get information for writing a scalar value.\n     *\n     * Returns tuple:\n     * [0]: appropriate WireType\n     * [1]: name of the appropriate method of IBinaryWriter\n     * [2]: whether the given value is a default value\n     *\n     * If argument `value` is omitted, [2] is always false.\n     */\n    scalarInfo(type, value) {\n        let t = WireType.Varint;\n        let m;\n        let i = value === undefined;\n        let d = value === 0;\n        switch (type) {\n            case ScalarType.INT32:\n                m = \"int32\";\n                break;\n            case ScalarType.STRING:\n                d = i || !value.length;\n                t = WireType.LengthDelimited;\n                m = \"string\";\n                break;\n            case ScalarType.BOOL:\n                d = value === false;\n                m = \"bool\";\n                break;\n            case ScalarType.UINT32:\n                m = \"uint32\";\n                break;\n            case ScalarType.DOUBLE:\n                t = WireType.Bit64;\n                m = \"double\";\n                break;\n            case ScalarType.FLOAT:\n                t = WireType.Bit32;\n                m = \"float\";\n                break;\n            case ScalarType.INT64:\n                d = i || PbLong.from(value).isZero();\n                m = \"int64\";\n                break;\n            case ScalarType.UINT64:\n                d = i || PbULong.from(value).isZero();\n                m = \"uint64\";\n                break;\n            case ScalarType.FIXED64:\n                d = i || PbULong.from(value).isZero();\n                t = WireType.Bit64;\n                m = \"fixed64\";\n                break;\n            case ScalarType.BYTES:\n                d = i || !value.byteLength;\n                t = WireType.LengthDelimited;\n                m = \"bytes\";\n                break;\n            case ScalarType.FIXED32:\n                t = WireType.Bit32;\n                m = \"fixed32\";\n                break;\n            case ScalarType.SFIXED32:\n                t = WireType.Bit32;\n                m = \"sfixed32\";\n                break;\n            case ScalarType.SFIXED64:\n                d = i || PbLong.from(value).isZero();\n                t = WireType.Bit64;\n                m = \"sfixed64\";\n                break;\n            case ScalarType.SINT32:\n                m = \"sint32\";\n                break;\n            case ScalarType.SINT64:\n                d = i || PbLong.from(value).isZero();\n                m = \"sint64\";\n                break;\n        }\n        return [t, m, i || d];\n    }\n}\n","import { reflectionScalarDefault } from \"./reflection-scalar-default\";\nimport { MESSAGE_TYPE } from './message-type-contract';\n/**\n * Creates an instance of the generic message, using the field\n * information.\n */\nexport function reflectionCreate(type) {\n    const msg = {};\n    Object.defineProperty(msg, MESSAGE_TYPE, { enumerable: false, value: type });\n    for (let field of type.fields) {\n        let name = field.localName;\n        if (field.opt)\n            continue;\n        if (field.oneof)\n            msg[field.oneof] = { oneofKind: undefined };\n        else if (field.repeat)\n            msg[name] = [];\n        else\n            switch (field.kind) {\n                case \"scalar\":\n                    msg[name] = reflectionScalarDefault(field.T, field.L);\n                    break;\n                case \"enum\":\n                    // we require 0 to be default value for all enums\n                    msg[name] = 0;\n                    break;\n                case \"map\":\n                    msg[name] = {};\n                    break;\n            }\n    }\n    return msg;\n}\n","/**\n * Copy partial data into the target message.\n *\n * If a singular scalar or enum field is present in the source, it\n * replaces the field in the target.\n *\n * If a singular message field is present in the source, it is merged\n * with the target field by calling mergePartial() of the responsible\n * message type.\n *\n * If a repeated field is present in the source, its values replace\n * all values in the target array, removing extraneous values.\n * Repeated message fields are copied, not merged.\n *\n * If a map field is present in the source, entries are added to the\n * target map, replacing entries with the same key. Entries that only\n * exist in the target remain. Entries with message values are copied,\n * not merged.\n *\n * Note that this function differs from protobuf merge semantics,\n * which appends repeated fields.\n */\nexport function reflectionMergePartial(info, target, source) {\n    let fieldValue, // the field value we are working with\n    input = source, output; // where we want our field value to go\n    for (let field of info.fields) {\n        let name = field.localName;\n        if (field.oneof) {\n            const group = input[field.oneof]; // this is the oneof`s group in the source\n            if (group == undefined) { // the user is free to omit\n                continue; // we skip this field, and all other members too\n            }\n            fieldValue = group[name]; // our value comes from the the oneof group of the source\n            output = target[field.oneof]; // and our output is the oneof group of the target\n            output.oneofKind = group.oneofKind; // always update discriminator\n            if (fieldValue == undefined) {\n                delete output[name]; // remove any existing value\n                continue; // skip further work on field\n            }\n        }\n        else {\n            fieldValue = input[name]; // we are using the source directly\n            output = target; // we want our field value to go directly into the target\n            if (fieldValue == undefined) {\n                continue; // skip further work on field, existing value is used as is\n            }\n        }\n        if (field.repeat)\n            output[name].length = fieldValue.length; // resize target array to match source array\n        // now we just work with `fieldValue` and `output` to merge the value\n        switch (field.kind) {\n            case \"scalar\":\n            case \"enum\":\n                if (field.repeat)\n                    for (let i = 0; i < fieldValue.length; i++)\n                        output[name][i] = fieldValue[i]; // not a reference type\n                else\n                    output[name] = fieldValue; // not a reference type\n                break;\n            case \"message\":\n                let T = field.T();\n                if (field.repeat)\n                    for (let i = 0; i < fieldValue.length; i++)\n                        output[name][i] = T.create(fieldValue[i]);\n                else if (output[name] === undefined)\n                    output[name] = T.create(fieldValue); // nothing to merge with\n                else\n                    T.mergePartial(output[name], fieldValue);\n                break;\n            case \"map\":\n                // Map and repeated fields are simply overwritten, not appended or merged\n                switch (field.V.kind) {\n                    case \"scalar\":\n                    case \"enum\":\n                        Object.assign(output[name], fieldValue); // elements are not reference types\n                        break;\n                    case \"message\":\n                        let T = field.V.T();\n                        for (let k of Object.keys(fieldValue))\n                            output[name][k] = T.create(fieldValue[k]);\n                        break;\n                }\n                break;\n        }\n    }\n}\n","import { ScalarType } from \"./reflection-info\";\n/**\n * Determines whether two message of the same type have the same field values.\n * Checks for deep equality, traversing repeated fields, oneof groups, maps\n * and messages recursively.\n * Will also return true if both messages are `undefined`.\n */\nexport function reflectionEquals(info, a, b) {\n    if (a === b)\n        return true;\n    if (!a || !b)\n        return false;\n    for (let field of info.fields) {\n        let localName = field.localName;\n        let val_a = field.oneof ? a[field.oneof][localName] : a[localName];\n        let val_b = field.oneof ? b[field.oneof][localName] : b[localName];\n        switch (field.kind) {\n            case \"enum\":\n            case \"scalar\":\n                let t = field.kind == \"enum\" ? ScalarType.INT32 : field.T;\n                if (!(field.repeat\n                    ? repeatedPrimitiveEq(t, val_a, val_b)\n                    : primitiveEq(t, val_a, val_b)))\n                    return false;\n                break;\n            case \"map\":\n                if (!(field.V.kind == \"message\"\n                    ? repeatedMsgEq(field.V.T(), objectValues(val_a), objectValues(val_b))\n                    : repeatedPrimitiveEq(field.V.kind == \"enum\" ? ScalarType.INT32 : field.V.T, objectValues(val_a), objectValues(val_b))))\n                    return false;\n                break;\n            case \"message\":\n                let T = field.T();\n                if (!(field.repeat\n                    ? repeatedMsgEq(T, val_a, val_b)\n                    : T.equals(val_a, val_b)))\n                    return false;\n                break;\n        }\n    }\n    return true;\n}\nconst objectValues = Object.values;\nfunction primitiveEq(type, a, b) {\n    if (a === b)\n        return true;\n    if (type !== ScalarType.BYTES)\n        return false;\n    let ba = a;\n    let bb = b;\n    if (ba.length !== bb.length)\n        return false;\n    for (let i = 0; i < ba.length; i++)\n        if (ba[i] != bb[i])\n            return false;\n    return true;\n}\nfunction repeatedPrimitiveEq(type, a, b) {\n    if (a.length !== b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!primitiveEq(type, a[i], b[i]))\n            return false;\n    return true;\n}\nfunction repeatedMsgEq(type, a, b) {\n    if (a.length !== b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!type.equals(a[i], b[i]))\n            return false;\n    return true;\n}\n","import { PbLong, PbULong } from \"./pb-long\";\nimport { varint32write, varint64write } from \"./goog-varint\";\nimport { assertFloat32, assertInt32, assertUInt32 } from \"./assert\";\nconst defaultsWrite = {\n    writeUnknownFields: true,\n    writerFactory: () => new BinaryWriter(),\n};\n/**\n * Make options for writing binary data form partial options.\n */\nexport function binaryWriteOptions(options) {\n    return options ? Object.assign(Object.assign({}, defaultsWrite), options) : defaultsWrite;\n}\nexport class BinaryWriter {\n    constructor(textEncoder) {\n        /**\n         * Previous fork states.\n         */\n        this.stack = [];\n        this.textEncoder = textEncoder !== null && textEncoder !== void 0 ? textEncoder : new TextEncoder();\n        this.chunks = [];\n        this.buf = [];\n    }\n    /**\n     * Return all bytes written and reset this writer.\n     */\n    finish() {\n        this.chunks.push(new Uint8Array(this.buf)); // flush the buffer\n        let len = 0;\n        for (let i = 0; i < this.chunks.length; i++)\n            len += this.chunks[i].length;\n        let bytes = new Uint8Array(len);\n        let offset = 0;\n        for (let i = 0; i < this.chunks.length; i++) {\n            bytes.set(this.chunks[i], offset);\n            offset += this.chunks[i].length;\n        }\n        this.chunks = [];\n        return bytes;\n    }\n    /**\n     * Start a new fork for length-delimited data like a message\n     * or a packed repeated field.\n     *\n     * Must be joined later with `join()`.\n     */\n    fork() {\n        this.stack.push({ chunks: this.chunks, buf: this.buf });\n        this.chunks = [];\n        this.buf = [];\n        return this;\n    }\n    /**\n     * Join the last fork. Write its length and bytes, then\n     * return to the previous state.\n     */\n    join() {\n        // get chunk of fork\n        let chunk = this.finish();\n        // restore previous state\n        let prev = this.stack.pop();\n        if (!prev)\n            throw new Error('invalid state, fork stack empty');\n        this.chunks = prev.chunks;\n        this.buf = prev.buf;\n        // write length of chunk as varint\n        this.uint32(chunk.byteLength);\n        return this.raw(chunk);\n    }\n    /**\n     * Writes a tag (field number and wire type).\n     *\n     * Equivalent to `uint32( (fieldNo << 3 | type) >>> 0 )`.\n     *\n     * Generated code should compute the tag ahead of time and call `uint32()`.\n     */\n    tag(fieldNo, type) {\n        return this.uint32((fieldNo << 3 | type) >>> 0);\n    }\n    /**\n     * Write a chunk of raw bytes.\n     */\n    raw(chunk) {\n        if (this.buf.length) {\n            this.chunks.push(new Uint8Array(this.buf));\n            this.buf = [];\n        }\n        this.chunks.push(chunk);\n        return this;\n    }\n    /**\n     * Write a `uint32` value, an unsigned 32 bit varint.\n     */\n    uint32(value) {\n        assertUInt32(value);\n        // write value as varint 32, inlined for speed\n        while (value > 0x7f) {\n            this.buf.push((value & 0x7f) | 0x80);\n            value = value >>> 7;\n        }\n        this.buf.push(value);\n        return this;\n    }\n    /**\n     * Write a `int32` value, a signed 32 bit varint.\n     */\n    int32(value) {\n        assertInt32(value);\n        varint32write(value, this.buf);\n        return this;\n    }\n    /**\n     * Write a `bool` value, a variant.\n     */\n    bool(value) {\n        this.buf.push(value ? 1 : 0);\n        return this;\n    }\n    /**\n     * Write a `bytes` value, length-delimited arbitrary data.\n     */\n    bytes(value) {\n        this.uint32(value.byteLength); // write length of chunk as varint\n        return this.raw(value);\n    }\n    /**\n     * Write a `string` value, length-delimited data converted to UTF-8 text.\n     */\n    string(value) {\n        let chunk = this.textEncoder.encode(value);\n        this.uint32(chunk.byteLength); // write length of chunk as varint\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `float` value, 32-bit floating point number.\n     */\n    float(value) {\n        assertFloat32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setFloat32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `double` value, a 64-bit floating point number.\n     */\n    double(value) {\n        let chunk = new Uint8Array(8);\n        new DataView(chunk.buffer).setFloat64(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `fixed32` value, an unsigned, fixed-length 32-bit integer.\n     */\n    fixed32(value) {\n        assertUInt32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setUint32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `sfixed32` value, a signed, fixed-length 32-bit integer.\n     */\n    sfixed32(value) {\n        assertInt32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setInt32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `sint32` value, a signed, zigzag-encoded 32-bit varint.\n     */\n    sint32(value) {\n        assertInt32(value);\n        // zigzag encode\n        value = ((value << 1) ^ (value >> 31)) >>> 0;\n        varint32write(value, this.buf);\n        return this;\n    }\n    /**\n     * Write a `fixed64` value, a signed, fixed-length 64-bit integer.\n     */\n    sfixed64(value) {\n        let chunk = new Uint8Array(8);\n        let view = new DataView(chunk.buffer);\n        let long = PbLong.from(value);\n        view.setInt32(0, long.lo, true);\n        view.setInt32(4, long.hi, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `fixed64` value, an unsigned, fixed-length 64 bit integer.\n     */\n    fixed64(value) {\n        let chunk = new Uint8Array(8);\n        let view = new DataView(chunk.buffer);\n        let long = PbULong.from(value);\n        view.setInt32(0, long.lo, true);\n        view.setInt32(4, long.hi, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `int64` value, a signed 64-bit varint.\n     */\n    int64(value) {\n        let long = PbLong.from(value);\n        varint64write(long.lo, long.hi, this.buf);\n        return this;\n    }\n    /**\n     * Write a `sint64` value, a signed, zig-zag-encoded 64-bit varint.\n     */\n    sint64(value) {\n        let long = PbLong.from(value), \n        // zigzag encode\n        sign = long.hi >> 31, lo = (long.lo << 1) ^ sign, hi = ((long.hi << 1) | (long.lo >>> 31)) ^ sign;\n        varint64write(lo, hi, this.buf);\n        return this;\n    }\n    /**\n     * Write a `uint64` value, an unsigned 64-bit varint.\n     */\n    uint64(value) {\n        let long = PbULong.from(value);\n        varint64write(long.lo, long.hi, this.buf);\n        return this;\n    }\n}\n","import { WireType } from \"./binary-format-contract\";\nimport { PbLong, PbULong } from \"./pb-long\";\nimport { varint32read, varint64read } from \"./goog-varint\";\nconst defaultsRead = {\n    readUnknownField: true,\n    readerFactory: bytes => new BinaryReader(bytes),\n};\n/**\n * Make options for reading binary data form partial options.\n */\nexport function binaryReadOptions(options) {\n    return options ? Object.assign(Object.assign({}, defaultsRead), options) : defaultsRead;\n}\nexport class BinaryReader {\n    constructor(buf, textDecoder) {\n        this.varint64 = varint64read; // dirty cast for `this`\n        /**\n         * Read a `uint32` field, an unsigned 32 bit varint.\n         */\n        this.uint32 = varint32read; // dirty cast for `this` and access to protected `buf`\n        this.buf = buf;\n        this.len = buf.length;\n        this.pos = 0;\n        this.view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        this.textDecoder = textDecoder !== null && textDecoder !== void 0 ? textDecoder : new TextDecoder(\"utf-8\", {\n            fatal: true,\n            ignoreBOM: true,\n        });\n    }\n    /**\n     * Reads a tag - field number and wire type.\n     */\n    tag() {\n        let tag = this.uint32(), fieldNo = tag >>> 3, wireType = tag & 7;\n        if (fieldNo <= 0 || wireType < 0 || wireType > 5)\n            throw new Error(\"illegal tag: field no \" + fieldNo + \" wire type \" + wireType);\n        return [fieldNo, wireType];\n    }\n    /**\n     * Skip one element on the wire and return the skipped data.\n     * Supports WireType.StartGroup since v2.0.0-alpha.23.\n     */\n    skip(wireType) {\n        let start = this.pos;\n        // noinspection FallThroughInSwitchStatementJS\n        switch (wireType) {\n            case WireType.Varint:\n                while (this.buf[this.pos++] & 0x80) {\n                    // ignore\n                }\n                break;\n            case WireType.Bit64:\n                this.pos += 4;\n            case WireType.Bit32:\n                this.pos += 4;\n                break;\n            case WireType.LengthDelimited:\n                let len = this.uint32();\n                this.pos += len;\n                break;\n            case WireType.StartGroup:\n                // From descriptor.proto: Group type is deprecated, not supported in proto3.\n                // But we must still be able to parse and treat as unknown.\n                let t;\n                while ((t = this.tag()[1]) !== WireType.EndGroup) {\n                    this.skip(t);\n                }\n                break;\n            default:\n                throw new Error(\"cant skip wire type \" + wireType);\n        }\n        this.assertBounds();\n        return this.buf.subarray(start, this.pos);\n    }\n    /**\n     * Throws error if position in byte array is out of range.\n     */\n    assertBounds() {\n        if (this.pos > this.len)\n            throw new RangeError(\"premature EOF\");\n    }\n    /**\n     * Read a `int32` field, a signed 32 bit varint.\n     */\n    int32() {\n        return this.uint32() | 0;\n    }\n    /**\n     * Read a `sint32` field, a signed, zigzag-encoded 32-bit varint.\n     */\n    sint32() {\n        let zze = this.uint32();\n        // decode zigzag\n        return (zze >>> 1) ^ -(zze & 1);\n    }\n    /**\n     * Read a `int64` field, a signed 64-bit varint.\n     */\n    int64() {\n        return new PbLong(...this.varint64());\n    }\n    /**\n     * Read a `uint64` field, an unsigned 64-bit varint.\n     */\n    uint64() {\n        return new PbULong(...this.varint64());\n    }\n    /**\n     * Read a `sint64` field, a signed, zig-zag-encoded 64-bit varint.\n     */\n    sint64() {\n        let [lo, hi] = this.varint64();\n        // decode zig zag\n        let s = -(lo & 1);\n        lo = ((lo >>> 1 | (hi & 1) << 31) ^ s);\n        hi = (hi >>> 1 ^ s);\n        return new PbLong(lo, hi);\n    }\n    /**\n     * Read a `bool` field, a variant.\n     */\n    bool() {\n        let [lo, hi] = this.varint64();\n        return lo !== 0 || hi !== 0;\n    }\n    /**\n     * Read a `fixed32` field, an unsigned, fixed-length 32-bit integer.\n     */\n    fixed32() {\n        return this.view.getUint32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `sfixed32` field, a signed, fixed-length 32-bit integer.\n     */\n    sfixed32() {\n        return this.view.getInt32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `fixed64` field, an unsigned, fixed-length 64 bit integer.\n     */\n    fixed64() {\n        return new PbULong(this.sfixed32(), this.sfixed32());\n    }\n    /**\n     * Read a `fixed64` field, a signed, fixed-length 64-bit integer.\n     */\n    sfixed64() {\n        return new PbLong(this.sfixed32(), this.sfixed32());\n    }\n    /**\n     * Read a `float` field, 32-bit floating point number.\n     */\n    float() {\n        return this.view.getFloat32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `double` field, a 64-bit floating point number.\n     */\n    double() {\n        return this.view.getFloat64((this.pos += 8) - 8, true);\n    }\n    /**\n     * Read a `bytes` field, length-delimited arbitrary data.\n     */\n    bytes() {\n        let len = this.uint32();\n        let start = this.pos;\n        this.pos += len;\n        this.assertBounds();\n        return this.buf.subarray(start, start + len);\n    }\n    /**\n     * Read a `string` field, length-delimited data converted to UTF-8 text.\n     */\n    string() {\n        return this.textDecoder.decode(this.bytes());\n    }\n}\n","import { normalizeFieldInfo } from \"./reflection-info\";\nimport { ReflectionTypeCheck } from \"./reflection-type-check\";\nimport { ReflectionJsonReader } from \"./reflection-json-reader\";\nimport { ReflectionJsonWriter } from \"./reflection-json-writer\";\nimport { ReflectionBinaryReader } from \"./reflection-binary-reader\";\nimport { ReflectionBinaryWriter } from \"./reflection-binary-writer\";\nimport { reflectionCreate } from \"./reflection-create\";\nimport { reflectionMergePartial } from \"./reflection-merge-partial\";\nimport { typeofJsonValue } from \"./json-typings\";\nimport { jsonReadOptions, jsonWriteOptions, } from \"./json-format-contract\";\nimport { reflectionEquals } from \"./reflection-equals\";\nimport { binaryWriteOptions } from \"./binary-writer\";\nimport { binaryReadOptions } from \"./binary-reader\";\n/**\n * This standard message type provides reflection-based\n * operations to work with a message.\n */\nexport class MessageType {\n    constructor(name, fields, options) {\n        this.defaultCheckDepth = 16;\n        this.typeName = name;\n        this.fields = fields.map(normalizeFieldInfo);\n        this.options = options !== null && options !== void 0 ? options : {};\n        this.refTypeCheck = new ReflectionTypeCheck(this);\n        this.refJsonReader = new ReflectionJsonReader(this);\n        this.refJsonWriter = new ReflectionJsonWriter(this);\n        this.refBinReader = new ReflectionBinaryReader(this);\n        this.refBinWriter = new ReflectionBinaryWriter(this);\n    }\n    create(value) {\n        let message = reflectionCreate(this);\n        if (value !== undefined) {\n            reflectionMergePartial(this, message, value);\n        }\n        return message;\n    }\n    /**\n     * Clone the message.\n     *\n     * Unknown fields are discarded.\n     */\n    clone(message) {\n        let copy = this.create();\n        reflectionMergePartial(this, copy, message);\n        return copy;\n    }\n    /**\n     * Determines whether two message of the same type have the same field values.\n     * Checks for deep equality, traversing repeated fields, oneof groups, maps\n     * and messages recursively.\n     * Will also return true if both messages are `undefined`.\n     */\n    equals(a, b) {\n        return reflectionEquals(this, a, b);\n    }\n    /**\n     * Is the given value assignable to our message type\n     * and contains no [excess properties](https://www.typescriptlang.org/docs/handbook/interfaces.html#excess-property-checks)?\n     */\n    is(arg, depth = this.defaultCheckDepth) {\n        return this.refTypeCheck.is(arg, depth, false);\n    }\n    /**\n     * Is the given value assignable to our message type,\n     * regardless of [excess properties](https://www.typescriptlang.org/docs/handbook/interfaces.html#excess-property-checks)?\n     */\n    isAssignable(arg, depth = this.defaultCheckDepth) {\n        return this.refTypeCheck.is(arg, depth, true);\n    }\n    /**\n     * Copy partial data into the target message.\n     */\n    mergePartial(target, source) {\n        reflectionMergePartial(this, target, source);\n    }\n    /**\n     * Create a new message from binary format.\n     */\n    fromBinary(data, options) {\n        let opt = binaryReadOptions(options);\n        return this.internalBinaryRead(opt.readerFactory(data), data.byteLength, opt);\n    }\n    /**\n     * Read a new message from a JSON value.\n     */\n    fromJson(json, options) {\n        return this.internalJsonRead(json, jsonReadOptions(options));\n    }\n    /**\n     * Read a new message from a JSON string.\n     * This is equivalent to `T.fromJson(JSON.parse(json))`.\n     */\n    fromJsonString(json, options) {\n        let value = JSON.parse(json);\n        return this.fromJson(value, options);\n    }\n    /**\n     * Write the message to canonical JSON value.\n     */\n    toJson(message, options) {\n        return this.internalJsonWrite(message, jsonWriteOptions(options));\n    }\n    /**\n     * Convert the message to canonical JSON string.\n     * This is equivalent to `JSON.stringify(T.toJson(t))`\n     */\n    toJsonString(message, options) {\n        var _a;\n        let value = this.toJson(message, options);\n        return JSON.stringify(value, null, (_a = options === null || options === void 0 ? void 0 : options.prettySpaces) !== null && _a !== void 0 ? _a : 0);\n    }\n    /**\n     * Write the message to binary format.\n     */\n    toBinary(message, options) {\n        let opt = binaryWriteOptions(options);\n        return this.internalBinaryWrite(message, opt.writerFactory(), opt).finish();\n    }\n    /**\n     * This is an internal method. If you just want to read a message from\n     * JSON, use `fromJson()` or `fromJsonString()`.\n     *\n     * Reads JSON value and merges the fields into the target\n     * according to protobuf rules. If the target is omitted,\n     * a new instance is created first.\n     */\n    internalJsonRead(json, options, target) {\n        if (json !== null && typeof json == \"object\" && !Array.isArray(json)) {\n            let message = target !== null && target !== void 0 ? target : this.create();\n            this.refJsonReader.read(json, message, options);\n            return message;\n        }\n        throw new Error(`Unable to parse message ${this.typeName} from JSON ${typeofJsonValue(json)}.`);\n    }\n    /**\n     * This is an internal method. If you just want to write a message\n     * to JSON, use `toJson()` or `toJsonString().\n     *\n     * Writes JSON value and returns it.\n     */\n    internalJsonWrite(message, options) {\n        return this.refJsonWriter.write(message, options);\n    }\n    /**\n     * This is an internal method. If you just want to write a message\n     * in binary format, use `toBinary()`.\n     *\n     * Serializes the message in binary format and appends it to the given\n     * writer. Returns passed writer.\n     */\n    internalBinaryWrite(message, writer, options) {\n        this.refBinWriter.write(message, writer, options);\n        return writer;\n    }\n    /**\n     * This is an internal method. If you just want to read a message from\n     * binary data, use `fromBinary()`.\n     *\n     * Reads data from binary format and merges the fields into\n     * the target according to protobuf rules. If the target is\n     * omitted, a new instance is created first.\n     */\n    internalBinaryRead(reader, length, options, target) {\n        let message = target !== null && target !== void 0 ? target : this.create();\n        this.refBinReader.read(reader, message, options, length);\n        return message;\n    }\n}\n","import { lowerCamelCase } from \"@protobuf-ts/runtime\";\n/**\n * Turns PartialMethodInfo into MethodInfo.\n */\nexport function normalizeMethodInfo(method, service) {\n    var _a, _b, _c;\n    let m = method;\n    m.service = service;\n    m.localName = (_a = m.localName) !== null && _a !== void 0 ? _a : lowerCamelCase(m.name);\n    // noinspection PointlessBooleanExpressionJS\n    m.serverStreaming = !!m.serverStreaming;\n    // noinspection PointlessBooleanExpressionJS\n    m.clientStreaming = !!m.clientStreaming;\n    m.options = (_b = m.options) !== null && _b !== void 0 ? _b : {};\n    m.idempotency = (_c = m.idempotency) !== null && _c !== void 0 ? _c : undefined;\n    return m;\n}\n/**\n * Read custom method options from a generated service client.\n *\n * @deprecated use readMethodOption()\n */\nexport function readMethodOptions(service, methodName, extensionName, extensionType) {\n    var _a;\n    const options = (_a = service.methods.find((m, i) => m.localName === methodName || i === methodName)) === null || _a === void 0 ? void 0 : _a.options;\n    return options && options[extensionName] ? extensionType.fromJson(options[extensionName]) : undefined;\n}\nexport function readMethodOption(service, methodName, extensionName, extensionType) {\n    var _a;\n    const options = (_a = service.methods.find((m, i) => m.localName === methodName || i === methodName)) === null || _a === void 0 ? void 0 : _a.options;\n    if (!options) {\n        return undefined;\n    }\n    const optionVal = options[extensionName];\n    if (optionVal === undefined) {\n        return optionVal;\n    }\n    return extensionType ? extensionType.fromJson(optionVal) : optionVal;\n}\nexport function readServiceOption(service, extensionName, extensionType) {\n    const options = service.options;\n    if (!options) {\n        return undefined;\n    }\n    const optionVal = options[extensionName];\n    if (optionVal === undefined) {\n        return optionVal;\n    }\n    return extensionType ? extensionType.fromJson(optionVal) : optionVal;\n}\n","import { normalizeMethodInfo } from \"./reflection-info\";\nexport class ServiceType {\n    constructor(typeName, methods, options) {\n        this.typeName = typeName;\n        this.methods = methods.map(i => normalizeMethodInfo(i, this));\n        this.options = options !== null && options !== void 0 ? options : {};\n    }\n}\n","/**\n * An error that occurred while calling a RPC method.\n */\nexport class RpcError extends Error {\n    constructor(message, code = 'UNKNOWN', meta) {\n        super(message);\n        this.name = 'RpcError';\n        // see https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-2.html#example\n        Object.setPrototypeOf(this, new.target.prototype);\n        this.code = code;\n        this.meta = meta !== null && meta !== void 0 ? meta : {};\n    }\n    toString() {\n        const l = [this.name + ': ' + this.message];\n        if (this.code) {\n            l.push('');\n            l.push('Code: ' + this.code);\n        }\n        if (this.serviceName && this.methodName) {\n            l.push('Method: ' + this.serviceName + '/' + this.methodName);\n        }\n        let m = Object.entries(this.meta);\n        if (m.length) {\n            l.push('');\n            l.push('Meta:');\n            for (let [k, v] of m) {\n                l.push(`  ${k}: ${v}`);\n            }\n        }\n        return l.join('\\n');\n    }\n}\n","import { mergeBinaryOptions, mergeJsonOptions } from \"@protobuf-ts/runtime\";\n/**\n * Merges custom RPC options with defaults. Returns a new instance and keeps\n * the \"defaults\" and the \"options\" unmodified.\n *\n * Merges `RpcMetadata` \"meta\", overwriting values from \"defaults\" with\n * values from \"options\". Does not append values to existing entries.\n *\n * Merges \"jsonOptions\", including \"jsonOptions.typeRegistry\", by creating\n * a new array that contains types from \"options.jsonOptions.typeRegistry\"\n * first, then types from \"defaults.jsonOptions.typeRegistry\".\n *\n * Merges \"binaryOptions\".\n *\n * Merges \"interceptors\" by creating a new array that contains interceptors\n * from \"defaults\" first, then interceptors from \"options\".\n *\n * Works with objects that extend `RpcOptions`, but only if the added\n * properties are of type Date, primitive like string, boolean, or Array\n * of primitives. If you have other property types, you have to merge them\n * yourself.\n */\nexport function mergeRpcOptions(defaults, options) {\n    if (!options)\n        return defaults;\n    let o = {};\n    copy(defaults, o);\n    copy(options, o);\n    for (let key of Object.keys(options)) {\n        let val = options[key];\n        switch (key) {\n            case \"jsonOptions\":\n                o.jsonOptions = mergeJsonOptions(defaults.jsonOptions, o.jsonOptions);\n                break;\n            case \"binaryOptions\":\n                o.binaryOptions = mergeBinaryOptions(defaults.binaryOptions, o.binaryOptions);\n                break;\n            case \"meta\":\n                o.meta = {};\n                copy(defaults.meta, o.meta);\n                copy(options.meta, o.meta);\n                break;\n            case \"interceptors\":\n                o.interceptors = defaults.interceptors ? defaults.interceptors.concat(val) : val.concat();\n                break;\n        }\n    }\n    return o;\n}\nfunction copy(a, into) {\n    if (!a)\n        return;\n    let c = into;\n    for (let [k, v] of Object.entries(a)) {\n        if (v instanceof Date)\n            c[k] = new Date(v.getTime());\n        else if (Array.isArray(v))\n            c[k] = v.concat();\n        else\n            c[k] = v;\n    }\n}\n","export var DeferredState;\n(function (DeferredState) {\n    DeferredState[DeferredState[\"PENDING\"] = 0] = \"PENDING\";\n    DeferredState[DeferredState[\"REJECTED\"] = 1] = \"REJECTED\";\n    DeferredState[DeferredState[\"RESOLVED\"] = 2] = \"RESOLVED\";\n})(DeferredState || (DeferredState = {}));\n/**\n * A deferred promise. This is a \"controller\" for a promise, which lets you\n * pass a promise around and reject or resolve it from the outside.\n *\n * Warning: This class is to be used with care. Using it can make code very\n * difficult to read. It is intended for use in library code that exposes\n * promises, not for regular business logic.\n */\nexport class Deferred {\n    /**\n     * @param preventUnhandledRejectionWarning - prevents the warning\n     * \"Unhandled Promise rejection\" by adding a noop rejection handler.\n     * Working with calls returned from the runtime-rpc package in an\n     * async function usually means awaiting one call property after\n     * the other. This means that the \"status\" is not being awaited when\n     * an earlier await for the \"headers\" is rejected. This causes the\n     * \"unhandled promise reject\" warning. A more correct behaviour for\n     * calls might be to become aware whether at least one of the\n     * promises is handled and swallow the rejection warning for the\n     * others.\n     */\n    constructor(preventUnhandledRejectionWarning = true) {\n        this._state = DeferredState.PENDING;\n        this._promise = new Promise((resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n        });\n        if (preventUnhandledRejectionWarning) {\n            this._promise.catch(_ => { });\n        }\n    }\n    /**\n     * Get the current state of the promise.\n     */\n    get state() {\n        return this._state;\n    }\n    /**\n     * Get the deferred promise.\n     */\n    get promise() {\n        return this._promise;\n    }\n    /**\n     * Resolve the promise. Throws if the promise is already resolved or rejected.\n     */\n    resolve(value) {\n        if (this.state !== DeferredState.PENDING)\n            throw new Error(`cannot resolve ${DeferredState[this.state].toLowerCase()}`);\n        this._resolve(value);\n        this._state = DeferredState.RESOLVED;\n    }\n    /**\n     * Reject the promise. Throws if the promise is already resolved or rejected.\n     */\n    reject(reason) {\n        if (this.state !== DeferredState.PENDING)\n            throw new Error(`cannot reject ${DeferredState[this.state].toLowerCase()}`);\n        this._reject(reason);\n        this._state = DeferredState.REJECTED;\n    }\n    /**\n     * Resolve the promise. Ignore if not pending.\n     */\n    resolvePending(val) {\n        if (this._state === DeferredState.PENDING)\n            this.resolve(val);\n    }\n    /**\n     * Reject the promise. Ignore if not pending.\n     */\n    rejectPending(reason) {\n        if (this._state === DeferredState.PENDING)\n            this.reject(reason);\n    }\n}\n","import { Deferred, DeferredState } from \"./deferred\";\nimport { assert } from \"@protobuf-ts/runtime\";\n/**\n * A `RpcOutputStream` that you control.\n */\nexport class RpcOutputStreamController {\n    constructor() {\n        this._lis = {\n            nxt: [],\n            msg: [],\n            err: [],\n            cmp: [],\n        };\n        this._closed = false;\n    }\n    // --- RpcOutputStream callback API\n    onNext(callback) {\n        return this.addLis(callback, this._lis.nxt);\n    }\n    onMessage(callback) {\n        return this.addLis(callback, this._lis.msg);\n    }\n    onError(callback) {\n        return this.addLis(callback, this._lis.err);\n    }\n    onComplete(callback) {\n        return this.addLis(callback, this._lis.cmp);\n    }\n    addLis(callback, list) {\n        list.push(callback);\n        return () => {\n            let i = list.indexOf(callback);\n            if (i >= 0)\n                list.splice(i, 1);\n        };\n    }\n    // remove all listeners\n    clearLis() {\n        for (let l of Object.values(this._lis))\n            l.splice(0, l.length);\n    }\n    // --- Controller API\n    /**\n     * Is this stream already closed by a completion or error?\n     */\n    get closed() {\n        return this._closed !== false;\n    }\n    /**\n     * Emit message, close with error, or close successfully, but only one\n     * at a time.\n     * Can be used to wrap a stream by using the other stream's `onNext`.\n     */\n    notifyNext(message, error, complete) {\n        assert((message ? 1 : 0) + (error ? 1 : 0) + (complete ? 1 : 0) <= 1, 'only one emission at a time');\n        if (message)\n            this.notifyMessage(message);\n        if (error)\n            this.notifyError(error);\n        if (complete)\n            this.notifyComplete();\n    }\n    /**\n     * Emits a new message. Throws if stream is closed.\n     *\n     * Triggers onNext and onMessage callbacks.\n     */\n    notifyMessage(message) {\n        assert(!this.closed, 'stream is closed');\n        this.pushIt({ value: message, done: false });\n        this._lis.msg.forEach(l => l(message));\n        this._lis.nxt.forEach(l => l(message, undefined, false));\n    }\n    /**\n     * Closes the stream with an error. Throws if stream is closed.\n     *\n     * Triggers onNext and onError callbacks.\n     */\n    notifyError(error) {\n        assert(!this.closed, 'stream is closed');\n        this._closed = error;\n        this.pushIt(error);\n        this._lis.err.forEach(l => l(error));\n        this._lis.nxt.forEach(l => l(undefined, error, false));\n        this.clearLis();\n    }\n    /**\n     * Closes the stream successfully. Throws if stream is closed.\n     *\n     * Triggers onNext and onComplete callbacks.\n     */\n    notifyComplete() {\n        assert(!this.closed, 'stream is closed');\n        this._closed = true;\n        this.pushIt({ value: null, done: true });\n        this._lis.cmp.forEach(l => l());\n        this._lis.nxt.forEach(l => l(undefined, undefined, true));\n        this.clearLis();\n    }\n    /**\n     * Creates an async iterator (that can be used with `for await {...}`)\n     * to consume the stream.\n     *\n     * Some things to note:\n     * - If an error occurs, the `for await` will throw it.\n     * - If an error occurred before the `for await` was started, `for await`\n     *   will re-throw it.\n     * - If the stream is already complete, the `for await` will be empty.\n     * - If your `for await` consumes slower than the stream produces,\n     *   for example because you are relaying messages in a slow operation,\n     *   messages are queued.\n     */\n    [Symbol.asyncIterator]() {\n        // init the iterator state, enabling pushIt()\n        if (!this._itState) {\n            this._itState = { q: [] };\n        }\n        // if we are closed, we are definitely not receiving any more messages.\n        // but we can't let the iterator get stuck. we want to either:\n        // a) finish the new iterator immediately, because we are completed\n        // b) reject the new iterator, because we errored\n        if (this._closed === true)\n            this.pushIt({ value: null, done: true });\n        else if (this._closed !== false)\n            this.pushIt(this._closed);\n        // the async iterator\n        return {\n            next: () => {\n                let state = this._itState;\n                assert(state, \"bad state\"); // if we don't have a state here, code is broken\n                // there should be no pending result.\n                // did the consumer call next() before we resolved our previous result promise?\n                assert(!state.p, \"iterator contract broken\");\n                // did we produce faster than the iterator consumed?\n                // return the oldest result from the queue.\n                let first = state.q.shift();\n                if (first)\n                    return (\"value\" in first) ? Promise.resolve(first) : Promise.reject(first);\n                // we have no result ATM, but we promise one.\n                // as soon as we have a result, we must resolve promise.\n                state.p = new Deferred();\n                return state.p.promise;\n            },\n        };\n    }\n    // \"push\" a new iterator result.\n    // this either resolves a pending promise, or enqueues the result.\n    pushIt(result) {\n        let state = this._itState;\n        if (!state)\n            return;\n        // is the consumer waiting for us?\n        if (state.p) {\n            // yes, consumer is waiting for this promise.\n            const p = state.p;\n            assert(p.state == DeferredState.PENDING, \"iterator contract broken\");\n            // resolve the promise\n            (\"value\" in result) ? p.resolve(result) : p.reject(result);\n            // must cleanup, otherwise iterator.next() would pick it up again.\n            delete state.p;\n        }\n        else {\n            // we are producing faster than the iterator consumes.\n            // push result onto queue.\n            state.q.push(result);\n        }\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/**\n * A server streaming RPC call. The client provides exactly one input message\n * but the server may respond with 0, 1, or more messages.\n */\nexport class ServerStreamingCall {\n    constructor(method, requestHeaders, request, headers, response, status, trailers) {\n        this.method = method;\n        this.requestHeaders = requestHeaders;\n        this.request = request;\n        this.headers = headers;\n        this.responses = response;\n        this.status = status;\n        this.trailers = trailers;\n    }\n    /**\n     * Instead of awaiting the response status and trailers, you can\n     * just as well await this call itself to receive the server outcome.\n     * You should first setup some listeners to the `request` to\n     * see the actual messages the server replied with.\n     */\n    then(onfulfilled, onrejected) {\n        return this.promiseFinished().then(value => onfulfilled ? Promise.resolve(onfulfilled(value)) : value, reason => onrejected ? Promise.resolve(onrejected(reason)) : Promise.reject(reason));\n    }\n    promiseFinished() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let [headers, status, trailers] = yield Promise.all([this.headers, this.status, this.trailers]);\n            return {\n                method: this.method,\n                requestHeaders: this.requestHeaders,\n                request: this.request,\n                headers,\n                status,\n                trailers,\n            };\n        });\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/**\n * A unary RPC call. Unary means there is exactly one input message and\n * exactly one output message unless an error occurred.\n */\nexport class UnaryCall {\n    constructor(method, requestHeaders, request, headers, response, status, trailers) {\n        this.method = method;\n        this.requestHeaders = requestHeaders;\n        this.request = request;\n        this.headers = headers;\n        this.response = response;\n        this.status = status;\n        this.trailers = trailers;\n    }\n    /**\n     * If you are only interested in the final outcome of this call,\n     * you can await it to receive a `FinishedUnaryCall`.\n     */\n    then(onfulfilled, onrejected) {\n        return this.promiseFinished().then(value => onfulfilled ? Promise.resolve(onfulfilled(value)) : value, reason => onrejected ? Promise.resolve(onrejected(reason)) : Promise.reject(reason));\n    }\n    promiseFinished() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let [headers, response, status, trailers] = yield Promise.all([this.headers, this.response, this.status, this.trailers]);\n            return {\n                method: this.method,\n                requestHeaders: this.requestHeaders,\n                request: this.request,\n                headers,\n                response,\n                status,\n                trailers\n            };\n        });\n    }\n}\n","import { assertNever } from \"@protobuf-ts/runtime\";\n/**\n * Creates a \"stack\" of of all interceptors specified in the given `RpcOptions`.\n * Used by generated client implementations.\n * @internal\n */\nexport function stackIntercept(kind, transport, method, options, input) {\n    var _a, _b, _c, _d;\n    if (kind == \"unary\") {\n        let tail = (mtd, inp, opt) => transport.unary(mtd, inp, opt);\n        for (const curr of ((_a = options.interceptors) !== null && _a !== void 0 ? _a : []).filter(i => i.interceptUnary).reverse()) {\n            const next = tail;\n            tail = (mtd, inp, opt) => curr.interceptUnary(next, mtd, inp, opt);\n        }\n        return tail(method, input, options);\n    }\n    if (kind == \"serverStreaming\") {\n        let tail = (mtd, inp, opt) => transport.serverStreaming(mtd, inp, opt);\n        for (const curr of ((_b = options.interceptors) !== null && _b !== void 0 ? _b : []).filter(i => i.interceptServerStreaming).reverse()) {\n            const next = tail;\n            tail = (mtd, inp, opt) => curr.interceptServerStreaming(next, mtd, inp, opt);\n        }\n        return tail(method, input, options);\n    }\n    if (kind == \"clientStreaming\") {\n        let tail = (mtd, opt) => transport.clientStreaming(mtd, opt);\n        for (const curr of ((_c = options.interceptors) !== null && _c !== void 0 ? _c : []).filter(i => i.interceptClientStreaming).reverse()) {\n            const next = tail;\n            tail = (mtd, opt) => curr.interceptClientStreaming(next, mtd, opt);\n        }\n        return tail(method, options);\n    }\n    if (kind == \"duplex\") {\n        let tail = (mtd, opt) => transport.duplex(mtd, opt);\n        for (const curr of ((_d = options.interceptors) !== null && _d !== void 0 ? _d : []).filter(i => i.interceptDuplex).reverse()) {\n            const next = tail;\n            tail = (mtd, opt) => curr.interceptDuplex(next, mtd, opt);\n        }\n        return tail(method, options);\n    }\n    assertNever(kind);\n}\n/**\n * @deprecated replaced by `stackIntercept()`, still here to support older generated code\n */\nexport function stackUnaryInterceptors(transport, method, input, options) {\n    return stackIntercept(\"unary\", transport, method, options, input);\n}\n/**\n * @deprecated replaced by `stackIntercept()`, still here to support older generated code\n */\nexport function stackServerStreamingInterceptors(transport, method, input, options) {\n    return stackIntercept(\"serverStreaming\", transport, method, options, input);\n}\n/**\n * @deprecated replaced by `stackIntercept()`, still here to support older generated code\n */\nexport function stackClientStreamingInterceptors(transport, method, options) {\n    return stackIntercept(\"clientStreaming\", transport, method, options);\n}\n/**\n * @deprecated replaced by `stackIntercept()`, still here to support older generated code\n */\nexport function stackDuplexStreamingInterceptors(transport, method, options) {\n    return stackIntercept(\"duplex\", transport, method, options);\n}\n","// Copyright 2016 gRPC authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * See [grpc status_code_enum.h](https://github.com/grpc/grpc/blob/a19d8dcfb50caa81cddc25bc1a6afdd7a2f497b7/include/grpcpp/impl/codegen/status_code_enum.h#L24)\n *\n * Copyright 2020 Google LLC\n */\nexport var GrpcStatusCode;\n(function (GrpcStatusCode) {\n    /**\n     * Not an error; returned on success.\n     */\n    GrpcStatusCode[GrpcStatusCode[\"OK\"] = 0] = \"OK\";\n    /**\n     * The operation was cancelled (typically by the caller).\n     */\n    GrpcStatusCode[GrpcStatusCode[\"CANCELLED\"] = 1] = \"CANCELLED\";\n    /**\n     * Unknown error. An example of where this error may be returned is if a\n     * Status value received from another address space belongs to an error-space\n     * that is not known in this address space. Also errors raised by APIs that\n     * do not return enough error information may be converted to this error.\n     */\n    GrpcStatusCode[GrpcStatusCode[\"UNKNOWN\"] = 2] = \"UNKNOWN\";\n    /**\n     * Client specified an invalid argument. Note that this differs from\n     * FAILED_PRECONDITION. INVALID_ARGUMENT indicates arguments that are\n     * problematic regardless of the state of the system (e.g., a malformed file\n     * name).\n     */\n    GrpcStatusCode[GrpcStatusCode[\"INVALID_ARGUMENT\"] = 3] = \"INVALID_ARGUMENT\";\n    /**\n     * Deadline expired before operation could complete. For operations that\n     * change the state of the system, this error may be returned even if the\n     * operation has completed successfully. For example, a successful response\n     * from a server could have been delayed long enough for the deadline to\n     * expire.\n     */\n    GrpcStatusCode[GrpcStatusCode[\"DEADLINE_EXCEEDED\"] = 4] = \"DEADLINE_EXCEEDED\";\n    /**\n     * Some requested entity (e.g., file or directory) was not found.\n     */\n    GrpcStatusCode[GrpcStatusCode[\"NOT_FOUND\"] = 5] = \"NOT_FOUND\";\n    /**\n     * Some entity that we attempted to create (e.g., file or directory) already\n     * exists.\n     */\n    GrpcStatusCode[GrpcStatusCode[\"ALREADY_EXISTS\"] = 6] = \"ALREADY_EXISTS\";\n    /**\n     * The caller does not have permission to execute the specified operation.\n     * PERMISSION_DENIED must not be used for rejections caused by exhausting\n     * some resource (use RESOURCE_EXHAUSTED instead for those errors).\n     * PERMISSION_DENIED must not be used if the caller can not be identified\n     * (use UNAUTHENTICATED instead for those errors).\n     */\n    GrpcStatusCode[GrpcStatusCode[\"PERMISSION_DENIED\"] = 7] = \"PERMISSION_DENIED\";\n    /**\n     * The request does not have valid authentication credentials for the\n     * operation.\n     */\n    GrpcStatusCode[GrpcStatusCode[\"UNAUTHENTICATED\"] = 16] = \"UNAUTHENTICATED\";\n    /**\n     * Some resource has been exhausted, perhaps a per-user quota, or perhaps the\n     * entire file system is out of space.\n     */\n    GrpcStatusCode[GrpcStatusCode[\"RESOURCE_EXHAUSTED\"] = 8] = \"RESOURCE_EXHAUSTED\";\n    /**\n     * Operation was rejected because the system is not in a state required for\n     * the operations execution. For example, directory to be deleted may be\n     * non-empty, an rmdir operation is applied to a non-directory, etc.\n     *\n     * A litmus test that may help a service implementor in deciding\n     * between FAILED_PRECONDITION, ABORTED, and UNAVAILABLE:\n     *  (a) Use UNAVAILABLE if the client can retry just the failing call.\n     *  (b) Use ABORTED if the client should retry at a higher-level\n     *      (e.g., restarting a read-modify-write sequence).\n     *  (c) Use FAILED_PRECONDITION if the client should not retry until\n     *      the system state has been explicitly fixed. E.g., if an \"rmdir\"\n     *      fails because the directory is non-empty, FAILED_PRECONDITION\n     *      should be returned since the client should not retry unless\n     *      they have first fixed up the directory by deleting files from it.\n     *  (d) Use FAILED_PRECONDITION if the client performs conditional\n     *      REST Get/Update/Delete on a resource and the resource on the\n     *      server does not match the condition. E.g., conflicting\n     *      read-modify-write on the same resource.\n     */\n    GrpcStatusCode[GrpcStatusCode[\"FAILED_PRECONDITION\"] = 9] = \"FAILED_PRECONDITION\";\n    /**\n     * The operation was aborted, typically due to a concurrency issue like\n     * sequencer check failures, transaction aborts, etc.\n     *\n     * See litmus test above for deciding between FAILED_PRECONDITION, ABORTED,\n     * and UNAVAILABLE.\n     */\n    GrpcStatusCode[GrpcStatusCode[\"ABORTED\"] = 10] = \"ABORTED\";\n    /**\n     * Operation was attempted past the valid range. E.g., seeking or reading\n     * past end of file.\n     *\n     * Unlike INVALID_ARGUMENT, this error indicates a problem that may be fixed\n     * if the system state changes. For example, a 32-bit file system will\n     * generate INVALID_ARGUMENT if asked to read at an offset that is not in the\n     * range [0,2^32-1], but it will generate OUT_OF_RANGE if asked to read from\n     * an offset past the current file size.\n     *\n     * There is a fair bit of overlap between FAILED_PRECONDITION and\n     * OUT_OF_RANGE. We recommend using OUT_OF_RANGE (the more specific error)\n     * when it applies so that callers who are iterating through a space can\n     * easily look for an OUT_OF_RANGE error to detect when they are done.\n     */\n    GrpcStatusCode[GrpcStatusCode[\"OUT_OF_RANGE\"] = 11] = \"OUT_OF_RANGE\";\n    /**\n     * Operation is not implemented or not supported/enabled in this service.\n     */\n    GrpcStatusCode[GrpcStatusCode[\"UNIMPLEMENTED\"] = 12] = \"UNIMPLEMENTED\";\n    /**\n     * Internal errors. Means some invariants expected by underlying System has\n     * been broken. If you see one of these errors, Something is very broken.\n     */\n    GrpcStatusCode[GrpcStatusCode[\"INTERNAL\"] = 13] = \"INTERNAL\";\n    /**\n     * The service is currently unavailable. This is a most likely a transient\n     * condition and may be corrected by retrying with a backoff.\n     *\n     * See litmus test above for deciding between FAILED_PRECONDITION, ABORTED,\n     * and UNAVAILABLE.\n     */\n    GrpcStatusCode[GrpcStatusCode[\"UNAVAILABLE\"] = 14] = \"UNAVAILABLE\";\n    /**\n     * Unrecoverable data loss or corruption.\n     */\n    GrpcStatusCode[GrpcStatusCode[\"DATA_LOSS\"] = 15] = \"DATA_LOSS\";\n})(GrpcStatusCode || (GrpcStatusCode = {}));\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { base64decode, base64encode } from \"@protobuf-ts/runtime\";\nimport { RpcError } from \"@protobuf-ts/runtime-rpc\";\nimport { GrpcStatusCode } from \"./goog-grpc-status-code\";\n/**\n * Create fetch API headers for a grpc-web request.\n */\nexport function createGrpcWebRequestHeader(headers, format, timeout, meta, userAgent) {\n    // add meta as headers\n    if (meta) {\n        for (let [k, v] of Object.entries(meta)) {\n            if (typeof v == \"string\")\n                headers.append(k, v);\n            else\n                for (let i of v)\n                    headers.append(k, i);\n        }\n    }\n    // set standard headers (possibly overwriting meta)\n    headers.set('Content-Type', format === \"text\" ? \"application/grpc-web-text\" : \"application/grpc-web+proto\");\n    if (format == \"text\") {\n        // The client library should indicate to the server via the \"Accept\" header that\n        // the response stream needs to be text encoded e.g. when XHR is used or due to\n        // security policies with XHR\n        headers.set(\"Accept\", \"application/grpc-web-text\");\n    }\n    headers.set('X-Grpc-Web', \"1\");\n    if (userAgent)\n        headers.set(\"X-User-Agent\", userAgent);\n    if (typeof timeout === \"number\") {\n        if (timeout <= 0) {\n            // we raise an error ourselves because header \"grpc-timeout\" must be a positive integer\n            throw new RpcError(`timeout ${timeout} ms exceeded`, GrpcStatusCode[GrpcStatusCode.DEADLINE_EXCEEDED]);\n        }\n        headers.set('grpc-timeout', `${timeout}m`);\n    }\n    else if (timeout) {\n        const deadline = timeout.getTime();\n        const now = Date.now();\n        if (deadline <= now) {\n            // we raise an error ourselves because header \"grpc-timeout\" must be a positive integer\n            throw new RpcError(`deadline ${timeout} exceeded`, GrpcStatusCode[GrpcStatusCode.DEADLINE_EXCEEDED]);\n        }\n        headers.set('grpc-timeout', `${deadline - now}m`);\n    }\n    return headers;\n}\nexport function createGrpcWebRequestBody(message, format) {\n    let body = new Uint8Array(5 + message.length); // we need 5 bytes for frame type + message length\n    body[0] = GrpcWebFrame.DATA; // first byte is frame type\n    // 4 bytes message length\n    for (let msgLen = message.length, i = 4; i > 0; i--) {\n        body[i] = (msgLen % 256);\n        msgLen >>>= 8;\n    }\n    body.set(message, 5); // reset is message\n    return format === \"binary\" ? body : base64encode(body);\n}\nexport function readGrpcWebResponseHeader(headersOrFetchResponse, httpStatus, httpStatusText) {\n    if (arguments.length === 1) {\n        let fetchResponse = headersOrFetchResponse;\n        // Cloudflare Workers throw when the type property of a fetch response\n        // is accessed, so wrap access with try/catch. See:\n        // * https://developers.cloudflare.com/workers/runtime-apis/response/#properties\n        // * https://github.com/cloudflare/miniflare/blob/72f046e/packages/core/src/standards/http.ts#L646\n        let responseType;\n        try {\n            responseType = fetchResponse.type;\n        }\n        catch (_a) { }\n        switch (responseType) {\n            case \"error\":\n            case \"opaque\":\n            case \"opaqueredirect\":\n                // see https://developer.mozilla.org/en-US/docs/Web/API/Response/type\n                throw new RpcError(`fetch response type ${fetchResponse.type}`, GrpcStatusCode[GrpcStatusCode.UNKNOWN]);\n        }\n        return readGrpcWebResponseHeader(fetchHeadersToHttp(fetchResponse.headers), fetchResponse.status, fetchResponse.statusText);\n    }\n    let headers = headersOrFetchResponse, httpOk = httpStatus >= 200 && httpStatus < 300, responseMeta = parseMetadata(headers), [statusCode, statusDetail] = parseStatus(headers);\n    if ((statusCode === undefined || statusCode === GrpcStatusCode.OK) && !httpOk) {\n        statusCode = httpStatusToGrpc(httpStatus);\n        statusDetail = httpStatusText;\n    }\n    return [statusCode, statusDetail, responseMeta];\n}\n/**\n * Parses a grpc status (code and optional text) and meta data from response\n * trailers.\n *\n * Response trailers are expected as a byte array, but are actually just an\n * ASCII string with HTTP headers. Just pass the data of a grpc-web trailer\n * frame.\n */\nexport function readGrpcWebResponseTrailer(data) {\n    let headers = parseTrailer(data), [code, detail] = parseStatus(headers), meta = parseMetadata(headers);\n    return [code !== null && code !== void 0 ? code : GrpcStatusCode.OK, detail, meta];\n}\n/**\n * A grpc-frame type. Can be used to determine type of frame emitted by\n * `readGrpcWebResponseBody()`.\n */\nexport var GrpcWebFrame;\n(function (GrpcWebFrame) {\n    GrpcWebFrame[GrpcWebFrame[\"DATA\"] = 0] = \"DATA\";\n    GrpcWebFrame[GrpcWebFrame[\"TRAILER\"] = 128] = \"TRAILER\";\n})(GrpcWebFrame || (GrpcWebFrame = {}));\n/**\n * Parses a grpc-web response (unary or server streaming) from a fetch API\n * stream.\n *\n * Emits grpc-web frames.\n *\n * The returned promise resolves when the response is complete.\n */\nexport function readGrpcWebResponseBody(stream, contentType, onFrame) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let streamReader, base64queue = \"\", byteQueue = new Uint8Array(0), format = parseFormat(contentType);\n        // allows to read streams from the 'node-fetch' polyfill which uses\n        // node.js ReadableStream instead of the what-wg streams api ReadableStream\n        if (isReadableStream(stream)) {\n            let whatWgReadableStream = stream.getReader();\n            streamReader = {\n                next: () => whatWgReadableStream.read()\n            };\n        }\n        else {\n            streamReader = stream[Symbol.asyncIterator]();\n        }\n        while (true) {\n            let result = yield streamReader.next();\n            if (result.value !== undefined) {\n                if (format === \"text\") {\n                    // the statements below just decode base64 and append to `bytesUnread`\n                    // add incoming base64 to queue\n                    for (let i = 0; i < result.value.length; i++)\n                        base64queue += String.fromCharCode(result.value[i]);\n                    // if the base64 queue is not a multiple of 4,\n                    // we have to wait for more data\n                    let safeLen = base64queue.length - base64queue.length % 4;\n                    if (safeLen === 0)\n                        continue;\n                    // decode safe chunk of base64 and add to byte queue\n                    byteQueue = concatBytes(byteQueue, base64decode(base64queue.substring(0, safeLen)));\n                    base64queue = base64queue.substring(safeLen);\n                }\n                else {\n                    byteQueue = concatBytes(byteQueue, result.value);\n                }\n                // read all fully available data frames\n                while (byteQueue.length >= 5 && byteQueue[0] === GrpcWebFrame.DATA) {\n                    let msgLen = 0;\n                    for (let i = 1; i < 5; i++)\n                        msgLen = (msgLen << 8) + byteQueue[i];\n                    if (byteQueue.length - 5 >= msgLen) {\n                        // we have the entire message\n                        onFrame(GrpcWebFrame.DATA, byteQueue.subarray(5, 5 + msgLen));\n                        byteQueue = byteQueue.subarray(5 + msgLen);\n                    }\n                    else\n                        break; //  wait for more data\n                }\n            }\n            // exit, but emit trailer if exists\n            if (result.done) {\n                if (byteQueue.length === 0)\n                    break;\n                if (byteQueue[0] !== GrpcWebFrame.TRAILER || byteQueue.length < 5)\n                    throw new RpcError(\"premature EOF\", GrpcStatusCode[GrpcStatusCode.DATA_LOSS]);\n                onFrame(GrpcWebFrame.TRAILER, byteQueue.subarray(5));\n                break;\n            }\n        }\n    });\n}\n// internal\nconst isReadableStream = (s) => {\n    return typeof s.getReader == \"function\";\n};\n// internal\nfunction concatBytes(a, b) {\n    let n = new Uint8Array(a.length + b.length);\n    n.set(a);\n    n.set(b, a.length);\n    return n;\n}\n// determines format from response \"content-type\" value.\n// throws if value is unknown or missing.\nfunction parseFormat(contentType) {\n    // > the sender *should* always specify the message format, e.g. +proto, +json\n    //\n    // > the receiver should assume the default is \"+proto\" when the message format is\n    // > missing in Content-Type (as \"application/grpc-web\")\n    //\n    // see https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-WEB.md\n    switch (contentType) {\n        case \"application/grpc-web-text\":\n        case \"application/grpc-web-text+proto\":\n            return \"text\";\n        case \"application/grpc-web\":\n        case \"application/grpc-web+proto\":\n            return \"binary\";\n        case undefined:\n        case null:\n            throw new RpcError(\"missing response content type\", GrpcStatusCode[GrpcStatusCode.INTERNAL]);\n        default:\n            throw new RpcError(\"unexpected response content type: \" + contentType, GrpcStatusCode[GrpcStatusCode.INTERNAL]);\n    }\n}\n// returns error code on parse failure\nfunction parseStatus(headers) {\n    let code, message;\n    let m = headers['grpc-message'];\n    if (m !== undefined) {\n        if (Array.isArray(m))\n            return [GrpcStatusCode.INTERNAL, \"invalid grpc-web message\"];\n        message = m;\n    }\n    let s = headers['grpc-status'];\n    if (s !== undefined) {\n        if (Array.isArray(s))\n            return [GrpcStatusCode.INTERNAL, \"invalid grpc-web status\"];\n        code = parseInt(s, 10);\n        if (GrpcStatusCode[code] === undefined)\n            return [GrpcStatusCode.INTERNAL, \"invalid grpc-web status\"];\n    }\n    return [code, message];\n}\n// skips grpc-web headers\nfunction parseMetadata(headers) {\n    let meta = {};\n    for (let [k, v] of Object.entries(headers))\n        switch (k) {\n            case 'grpc-message':\n            case 'grpc-status':\n            case 'content-type':\n                break;\n            default:\n                meta[k] = v;\n        }\n    return meta;\n}\n// parse trailer data (ASCII) to our headers rep\nfunction parseTrailer(trailerData) {\n    let headers = {};\n    for (let chunk of String.fromCharCode.apply(String, trailerData).trim().split(\"\\r\\n\")) {\n        if (chunk == \"\")\n            continue;\n        let [key, ...val] = chunk.split(\":\");\n        const value = val.join(\":\").trim();\n        key = key.trim();\n        let e = headers[key];\n        if (typeof e == \"string\")\n            headers[key] = [e, value];\n        else if (Array.isArray(e))\n            e.push(value);\n        else\n            headers[key] = value;\n    }\n    return headers;\n}\n// fetch API to our headers rep\nfunction fetchHeadersToHttp(fetchHeaders) {\n    let headers = {};\n    fetchHeaders.forEach((value, key) => {\n        let e = headers[key];\n        if (typeof e == \"string\")\n            headers[key] = [e, value];\n        else if (Array.isArray(e))\n            e.push(value);\n        else\n            headers[key] = value;\n    });\n    return headers;\n}\n// internal\nfunction httpStatusToGrpc(httpStatus) {\n    switch (httpStatus) {\n        case 200:\n            return GrpcStatusCode.OK;\n        case 400:\n            return GrpcStatusCode.INVALID_ARGUMENT;\n        case 401:\n            return GrpcStatusCode.UNAUTHENTICATED;\n        case 403:\n            return GrpcStatusCode.PERMISSION_DENIED;\n        case 404:\n            return GrpcStatusCode.NOT_FOUND;\n        case 409:\n            return GrpcStatusCode.ABORTED;\n        case 412:\n            return GrpcStatusCode.FAILED_PRECONDITION;\n        case 429:\n            return GrpcStatusCode.RESOURCE_EXHAUSTED;\n        case 499:\n            return GrpcStatusCode.CANCELLED;\n        case 500:\n            return GrpcStatusCode.UNKNOWN;\n        case 501:\n            return GrpcStatusCode.UNIMPLEMENTED;\n        case 503:\n            return GrpcStatusCode.UNAVAILABLE;\n        case 504:\n            return GrpcStatusCode.DEADLINE_EXCEEDED;\n        default:\n            return GrpcStatusCode.UNKNOWN;\n    }\n}\n","import { Deferred, RpcError, RpcOutputStreamController, ServerStreamingCall, UnaryCall, mergeRpcOptions } from \"@protobuf-ts/runtime-rpc\";\nimport { GrpcWebFrame, createGrpcWebRequestBody, createGrpcWebRequestHeader, readGrpcWebResponseBody, readGrpcWebResponseHeader, readGrpcWebResponseTrailer } from \"./grpc-web-format\";\nimport { GrpcStatusCode } from \"./goog-grpc-status-code\";\n/**\n * Implements the grpc-web protocol, supporting text format or binary\n * format on the wire. Uses the fetch API to do the HTTP requests.\n *\n * Does not support client streaming or duplex calls because grpc-web\n * does not support them.\n */\nexport class GrpcWebFetchTransport {\n    constructor(defaultOptions) {\n        this.defaultOptions = defaultOptions;\n    }\n    mergeOptions(options) {\n        return mergeRpcOptions(this.defaultOptions, options);\n    }\n    /**\n     * Create an URI for a gRPC web call.\n     *\n     * Takes the `baseUrl` option and appends:\n     * - slash \"/\"\n     * - package name\n     * - dot \".\"\n     * - service name\n     * - slash \"/\"\n     * - method name\n     *\n     * If the service was declared without a package, the package name and dot\n     * are omitted.\n     *\n     * All names are used exactly like declared in .proto.\n     */\n    makeUrl(method, options) {\n        let base = options.baseUrl;\n        if (base.endsWith('/'))\n            base = base.substring(0, base.length - 1);\n        return `${base}/${method.service.typeName}/${method.name}`;\n    }\n    clientStreaming(method /*, options: RpcOptions*/) {\n        const e = new RpcError('Client streaming is not supported by grpc-web', GrpcStatusCode[GrpcStatusCode.UNIMPLEMENTED]);\n        e.methodName = method.name;\n        e.serviceName = method.service.typeName;\n        throw e;\n    }\n    duplex(method /*, options: RpcOptions*/) {\n        const e = new RpcError('Duplex streaming is not supported by grpc-web', GrpcStatusCode[GrpcStatusCode.UNIMPLEMENTED]);\n        e.methodName = method.name;\n        e.serviceName = method.service.typeName;\n        throw e;\n    }\n    serverStreaming(method, input, options) {\n        var _a, _b, _c, _d;\n        let opt = options, format = (_a = opt.format) !== null && _a !== void 0 ? _a : 'text', fetchInit = (_b = opt.fetchInit) !== null && _b !== void 0 ? _b : {}, url = this.makeUrl(method, opt), inputBytes = method.I.toBinary(input, opt.binaryOptions), defHeader = new Deferred(), responseStream = new RpcOutputStreamController(), responseEmptyBody = true, maybeStatus, defStatus = new Deferred(), maybeTrailer, defTrailer = new Deferred();\n        globalThis.fetch(url, Object.assign(Object.assign({}, fetchInit), { method: 'POST', headers: createGrpcWebRequestHeader(new globalThis.Headers(), format, opt.timeout, opt.meta), body: createGrpcWebRequestBody(inputBytes, format), signal: (_c = options.abort) !== null && _c !== void 0 ? _c : null // node-fetch@3.0.0-beta.9 rejects `undefined`\n         }))\n            .then(fetchResponse => {\n            let [code, detail, meta] = readGrpcWebResponseHeader(fetchResponse);\n            defHeader.resolve(meta);\n            if (code != null && code !== GrpcStatusCode.OK)\n                throw new RpcError(detail !== null && detail !== void 0 ? detail : GrpcStatusCode[code], GrpcStatusCode[code], meta);\n            if (code != null)\n                maybeStatus = {\n                    code: GrpcStatusCode[code],\n                    detail: detail !== null && detail !== void 0 ? detail : GrpcStatusCode[code]\n                };\n            return fetchResponse;\n        })\n            .then(fetchResponse => {\n            if (!fetchResponse.body)\n                throw new RpcError('missing response body', GrpcStatusCode[GrpcStatusCode.INTERNAL]);\n            return readGrpcWebResponseBody(fetchResponse.body, fetchResponse.headers.get('content-type'), (type, data) => {\n                switch (type) {\n                    case GrpcWebFrame.DATA:\n                        responseStream.notifyMessage(method.O.fromBinary(data, opt.binaryOptions));\n                        responseEmptyBody = false;\n                        break;\n                    case GrpcWebFrame.TRAILER:\n                        let code, detail;\n                        [code, detail, maybeTrailer] = readGrpcWebResponseTrailer(data);\n                        maybeStatus = {\n                            code: GrpcStatusCode[code],\n                            detail: detail !== null && detail !== void 0 ? detail : GrpcStatusCode[code]\n                        };\n                        break;\n                }\n            });\n        })\n            .then(() => {\n            if (!maybeTrailer && !responseEmptyBody)\n                throw new RpcError(`missing trailers`, GrpcStatusCode[GrpcStatusCode.DATA_LOSS]);\n            // istanbul ignore if - this should be impossible and only here to satisfy TypeScript\n            if (!maybeStatus)\n                throw new RpcError(`missing status`, GrpcStatusCode[GrpcStatusCode.INTERNAL]);\n            if (maybeStatus.code !== 'OK')\n                throw new RpcError(maybeStatus.detail, maybeStatus.code, maybeTrailer);\n            responseStream.notifyComplete();\n            defStatus.resolve(maybeStatus);\n            defTrailer.resolve(maybeTrailer || {});\n        })\n            .catch(reason => {\n            let error;\n            if (reason instanceof RpcError)\n                error = reason;\n            else if (reason instanceof Error && reason.name === 'AbortError')\n                // aborted\n                error = new RpcError(reason.message, GrpcStatusCode[GrpcStatusCode.CANCELLED]);\n            else\n                // RpcErrors are thrown by us, everything else is an internal error\n                error = new RpcError(reason instanceof Error ? reason.message : \"\" + reason, GrpcStatusCode[GrpcStatusCode.INTERNAL]);\n            error.methodName = method.name;\n            error.serviceName = method.service.typeName;\n            defHeader.rejectPending(error);\n            responseStream.notifyError(error);\n            defStatus.rejectPending(error);\n            defTrailer.rejectPending(error);\n        });\n        return new ServerStreamingCall(method, (_d = opt.meta) !== null && _d !== void 0 ? _d : {}, input, defHeader.promise, responseStream, defStatus.promise, defTrailer.promise);\n    }\n    unary(method, input, options) {\n        var _a, _b, _c, _d;\n        let opt = options, format = (_a = opt.format) !== null && _a !== void 0 ? _a : 'text', fetchInit = (_b = opt.fetchInit) !== null && _b !== void 0 ? _b : {}, url = this.makeUrl(method, opt), inputBytes = method.I.toBinary(input, opt.binaryOptions), defHeader = new Deferred(), maybeMessage, defMessage = new Deferred(), maybeStatus, defStatus = new Deferred(), maybeTrailer, defTrailer = new Deferred();\n        globalThis.fetch(url, Object.assign(Object.assign({}, fetchInit), { method: 'POST', headers: createGrpcWebRequestHeader(new globalThis.Headers(), format, opt.timeout, opt.meta), body: createGrpcWebRequestBody(inputBytes, format), signal: (_c = options.abort) !== null && _c !== void 0 ? _c : null // node-fetch@3.0.0-beta.9 rejects `undefined`\n         }))\n            .then(fetchResponse => {\n            let [code, detail, meta] = readGrpcWebResponseHeader(fetchResponse);\n            defHeader.resolve(meta);\n            if (code != null && code !== GrpcStatusCode.OK)\n                throw new RpcError(detail !== null && detail !== void 0 ? detail : GrpcStatusCode[code], GrpcStatusCode[code], meta);\n            if (code != null)\n                maybeStatus = {\n                    code: GrpcStatusCode[code],\n                    detail: detail !== null && detail !== void 0 ? detail : GrpcStatusCode[code]\n                };\n            return fetchResponse;\n        })\n            .then(fetchResponse => {\n            if (!fetchResponse.body)\n                throw new RpcError('missing response body', GrpcStatusCode[GrpcStatusCode.INTERNAL]);\n            return readGrpcWebResponseBody(fetchResponse.body, fetchResponse.headers.get('content-type'), (type, data) => {\n                switch (type) {\n                    case GrpcWebFrame.DATA:\n                        if (maybeMessage)\n                            throw new RpcError(`unary call received 2nd message`, GrpcStatusCode[GrpcStatusCode.DATA_LOSS]);\n                        maybeMessage = method.O.fromBinary(data, opt.binaryOptions);\n                        break;\n                    case GrpcWebFrame.TRAILER:\n                        let code, detail;\n                        [code, detail, maybeTrailer] = readGrpcWebResponseTrailer(data);\n                        maybeStatus = {\n                            code: GrpcStatusCode[code],\n                            detail: detail !== null && detail !== void 0 ? detail : GrpcStatusCode[code]\n                        };\n                        break;\n                }\n            });\n        })\n            .then(() => {\n            if (!maybeTrailer && maybeMessage)\n                throw new RpcError(`missing trailers`, GrpcStatusCode[GrpcStatusCode.DATA_LOSS]);\n            // istanbul ignore if - this should be impossible and only here to satisfy TypeScript\n            if (!maybeStatus)\n                throw new RpcError(`missing status`, GrpcStatusCode[GrpcStatusCode.INTERNAL]);\n            if (!maybeMessage && maybeStatus.code === 'OK')\n                throw new RpcError('expected error status', GrpcStatusCode[GrpcStatusCode.DATA_LOSS]);\n            if (!maybeMessage)\n                throw new RpcError(maybeStatus.detail, maybeStatus.code, maybeTrailer);\n            defMessage.resolve(maybeMessage);\n            if (maybeStatus.code !== 'OK')\n                throw new RpcError(maybeStatus.detail, maybeStatus.code, maybeTrailer);\n            defStatus.resolve(maybeStatus);\n            defTrailer.resolve(maybeTrailer || {});\n        })\n            .catch(reason => {\n            let error;\n            if (reason instanceof RpcError)\n                error = reason;\n            else if (reason instanceof Error && reason.name === 'AbortError')\n                // aborted\n                error = new RpcError(reason.message, GrpcStatusCode[GrpcStatusCode.CANCELLED]);\n            else\n                // RpcErrors are thrown by us, everything else is an internal error\n                error = new RpcError(reason instanceof Error ? reason.message : \"\" + reason, GrpcStatusCode[GrpcStatusCode.INTERNAL]);\n            error.methodName = method.name;\n            error.serviceName = method.service.typeName;\n            defHeader.rejectPending(error);\n            defMessage.rejectPending(error);\n            defStatus.rejectPending(error);\n            defTrailer.rejectPending(error);\n        });\n        return new UnaryCall(method, (_d = opt.meta) !== null && _d !== void 0 ? _d : {}, input, defHeader.promise, defMessage.promise, defStatus.promise, defTrailer.promise);\n    }\n}\n","/* eslint-disable */\n// @generated by protobuf-ts 2.8.0 with parameter eslint_disable\n// @generated from protobuf file \"ecs-snapshot.proto\" (package \"ecssnapshot\", syntax proto3)\n// tslint:disable\nimport { ServiceType } from \"@protobuf-ts/runtime-rpc\";\nimport type { BinaryWriteOptions } from \"@protobuf-ts/runtime\";\nimport type { IBinaryWriter } from \"@protobuf-ts/runtime\";\nimport { WireType } from \"@protobuf-ts/runtime\";\nimport type { BinaryReadOptions } from \"@protobuf-ts/runtime\";\nimport type { IBinaryReader } from \"@protobuf-ts/runtime\";\nimport { UnknownFieldHandler } from \"@protobuf-ts/runtime\";\nimport type { PartialMessage } from \"@protobuf-ts/runtime\";\nimport { reflectionMergePartial } from \"@protobuf-ts/runtime\";\nimport { MESSAGE_TYPE } from \"@protobuf-ts/runtime\";\nimport { MessageType } from \"@protobuf-ts/runtime\";\n/**\n * @generated from protobuf message ecssnapshot.ECSState\n */\nexport interface ECSState {\n  /**\n   * @generated from protobuf field: uint32 component_id_idx = 1;\n   */\n  componentIdIdx: number;\n  /**\n   * @generated from protobuf field: uint32 entity_id_idx = 2;\n   */\n  entityIdIdx: number;\n  /**\n   * @generated from protobuf field: bytes value = 3;\n   */\n  value: Uint8Array;\n}\n/**\n * @generated from protobuf message ecssnapshot.ECSStateSnapshot\n */\nexport interface ECSStateSnapshot {\n  /**\n   * @generated from protobuf field: repeated ecssnapshot.ECSState state = 1;\n   */\n  state: ECSState[];\n  /**\n   * @generated from protobuf field: repeated string stateComponents = 2;\n   */\n  stateComponents: string[];\n  /**\n   * @generated from protobuf field: repeated string stateEntities = 3;\n   */\n  stateEntities: string[];\n  /**\n   * @generated from protobuf field: string stateHash = 4;\n   */\n  stateHash: string;\n  /**\n   * @generated from protobuf field: uint32 startBlockNumber = 5;\n   */\n  startBlockNumber: number;\n  /**\n   * @generated from protobuf field: uint32 endBlockNumber = 6;\n   */\n  endBlockNumber: number;\n  /**\n   * @generated from protobuf field: string worldAddress = 7;\n   */\n  worldAddress: string;\n}\n/**\n * @generated from protobuf message ecssnapshot.Worlds\n */\nexport interface Worlds {\n  /**\n   * @generated from protobuf field: repeated string worldAddress = 1;\n   */\n  worldAddress: string[];\n}\n/**\n * The request message for the latest ECS state.\n *\n * @generated from protobuf message ecssnapshot.ECSStateRequestLatest\n */\nexport interface ECSStateRequestLatest {\n  /**\n   * @generated from protobuf field: string worldAddress = 1;\n   */\n  worldAddress: string;\n}\n/**\n * The request message for the latest block based on latest ECS state.\n *\n * @generated from protobuf message ecssnapshot.ECSStateBlockRequestLatest\n */\nexport interface ECSStateBlockRequestLatest {\n  /**\n   * @generated from protobuf field: string worldAddress = 1;\n   */\n  worldAddress: string;\n}\n/**\n * The request message for the ECS state given a block number.\n *\n * @generated from protobuf message ecssnapshot.ECSStateRequestAtBlock\n */\nexport interface ECSStateRequestAtBlock {\n  /**\n   * @generated from protobuf field: uint64 blockNumber = 1;\n   */\n  blockNumber: bigint;\n}\n/**\n * The request message for all worlds.\n *\n * @generated from protobuf message ecssnapshot.WorldsRequest\n */\nexport interface WorldsRequest {}\n/**\n * The response message containing the current state, hash of that state, and the block number of that state.\n *\n * @generated from protobuf message ecssnapshot.ECSStateReply\n */\nexport interface ECSStateReply {\n  /**\n   * @generated from protobuf field: repeated ecssnapshot.ECSState state = 1;\n   */\n  state: ECSState[];\n  /**\n   * @generated from protobuf field: repeated string stateComponents = 2;\n   */\n  stateComponents: string[];\n  /**\n   * @generated from protobuf field: repeated string stateEntities = 3;\n   */\n  stateEntities: string[];\n  /**\n   * @generated from protobuf field: string stateHash = 4;\n   */\n  stateHash: string;\n  /**\n   * @generated from protobuf field: uint32 blockNumber = 5;\n   */\n  blockNumber: number;\n}\n/**\n * @generated from protobuf message ecssnapshot.ECSStateBlockReply\n */\nexport interface ECSStateBlockReply {\n  /**\n   * @generated from protobuf field: uint32 blockNumber = 1;\n   */\n  blockNumber: number;\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass ECSState$Type extends MessageType<ECSState> {\n  constructor() {\n    super(\"ecssnapshot.ECSState\", [\n      { no: 1, name: \"component_id_idx\", kind: \"scalar\", T: 13 /*ScalarType.UINT32*/ },\n      { no: 2, name: \"entity_id_idx\", kind: \"scalar\", T: 13 /*ScalarType.UINT32*/ },\n      { no: 3, name: \"value\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ },\n    ]);\n  }\n  create(value?: PartialMessage<ECSState>): ECSState {\n    const message = { componentIdIdx: 0, entityIdIdx: 0, value: new Uint8Array(0) };\n    globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });\n    if (value !== undefined) reflectionMergePartial<ECSState>(this, message, value);\n    return message;\n  }\n  internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ECSState): ECSState {\n    let message = target ?? this.create(),\n      end = reader.pos + length;\n    while (reader.pos < end) {\n      let [fieldNo, wireType] = reader.tag();\n      switch (fieldNo) {\n        case /* uint32 component_id_idx */ 1:\n          message.componentIdIdx = reader.uint32();\n          break;\n        case /* uint32 entity_id_idx */ 2:\n          message.entityIdIdx = reader.uint32();\n          break;\n        case /* bytes value */ 3:\n          message.value = reader.bytes();\n          break;\n        default:\n          let u = options.readUnknownField;\n          if (u === \"throw\")\n            throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);\n          let d = reader.skip(wireType);\n          if (u !== false) (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);\n      }\n    }\n    return message;\n  }\n  internalBinaryWrite(message: ECSState, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {\n    /* uint32 component_id_idx = 1; */\n    if (message.componentIdIdx !== 0) writer.tag(1, WireType.Varint).uint32(message.componentIdIdx);\n    /* uint32 entity_id_idx = 2; */\n    if (message.entityIdIdx !== 0) writer.tag(2, WireType.Varint).uint32(message.entityIdIdx);\n    /* bytes value = 3; */\n    if (message.value.length) writer.tag(3, WireType.LengthDelimited).bytes(message.value);\n    let u = options.writeUnknownFields;\n    if (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n    return writer;\n  }\n}\n/**\n * @generated MessageType for protobuf message ecssnapshot.ECSState\n */\nexport const ECSState = new ECSState$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ECSStateSnapshot$Type extends MessageType<ECSStateSnapshot> {\n  constructor() {\n    super(\"ecssnapshot.ECSStateSnapshot\", [\n      { no: 1, name: \"state\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => ECSState },\n      { no: 2, name: \"stateComponents\", kind: \"scalar\", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },\n      { no: 3, name: \"stateEntities\", kind: \"scalar\", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },\n      { no: 4, name: \"stateHash\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ },\n      { no: 5, name: \"startBlockNumber\", kind: \"scalar\", T: 13 /*ScalarType.UINT32*/ },\n      { no: 6, name: \"endBlockNumber\", kind: \"scalar\", T: 13 /*ScalarType.UINT32*/ },\n      { no: 7, name: \"worldAddress\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ },\n    ]);\n  }\n  create(value?: PartialMessage<ECSStateSnapshot>): ECSStateSnapshot {\n    const message = {\n      state: [],\n      stateComponents: [],\n      stateEntities: [],\n      stateHash: \"\",\n      startBlockNumber: 0,\n      endBlockNumber: 0,\n      worldAddress: \"\",\n    };\n    globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });\n    if (value !== undefined) reflectionMergePartial<ECSStateSnapshot>(this, message, value);\n    return message;\n  }\n  internalBinaryRead(\n    reader: IBinaryReader,\n    length: number,\n    options: BinaryReadOptions,\n    target?: ECSStateSnapshot\n  ): ECSStateSnapshot {\n    let message = target ?? this.create(),\n      end = reader.pos + length;\n    while (reader.pos < end) {\n      let [fieldNo, wireType] = reader.tag();\n      switch (fieldNo) {\n        case /* repeated ecssnapshot.ECSState state */ 1:\n          message.state.push(ECSState.internalBinaryRead(reader, reader.uint32(), options));\n          break;\n        case /* repeated string stateComponents */ 2:\n          message.stateComponents.push(reader.string());\n          break;\n        case /* repeated string stateEntities */ 3:\n          message.stateEntities.push(reader.string());\n          break;\n        case /* string stateHash */ 4:\n          message.stateHash = reader.string();\n          break;\n        case /* uint32 startBlockNumber */ 5:\n          message.startBlockNumber = reader.uint32();\n          break;\n        case /* uint32 endBlockNumber */ 6:\n          message.endBlockNumber = reader.uint32();\n          break;\n        case /* string worldAddress */ 7:\n          message.worldAddress = reader.string();\n          break;\n        default:\n          let u = options.readUnknownField;\n          if (u === \"throw\")\n            throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);\n          let d = reader.skip(wireType);\n          if (u !== false) (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);\n      }\n    }\n    return message;\n  }\n  internalBinaryWrite(message: ECSStateSnapshot, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {\n    /* repeated ecssnapshot.ECSState state = 1; */\n    for (let i = 0; i < message.state.length; i++)\n      ECSState.internalBinaryWrite(message.state[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();\n    /* repeated string stateComponents = 2; */\n    for (let i = 0; i < message.stateComponents.length; i++)\n      writer.tag(2, WireType.LengthDelimited).string(message.stateComponents[i]);\n    /* repeated string stateEntities = 3; */\n    for (let i = 0; i < message.stateEntities.length; i++)\n      writer.tag(3, WireType.LengthDelimited).string(message.stateEntities[i]);\n    /* string stateHash = 4; */\n    if (message.stateHash !== \"\") writer.tag(4, WireType.LengthDelimited).string(message.stateHash);\n    /* uint32 startBlockNumber = 5; */\n    if (message.startBlockNumber !== 0) writer.tag(5, WireType.Varint).uint32(message.startBlockNumber);\n    /* uint32 endBlockNumber = 6; */\n    if (message.endBlockNumber !== 0) writer.tag(6, WireType.Varint).uint32(message.endBlockNumber);\n    /* string worldAddress = 7; */\n    if (message.worldAddress !== \"\") writer.tag(7, WireType.LengthDelimited).string(message.worldAddress);\n    let u = options.writeUnknownFields;\n    if (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n    return writer;\n  }\n}\n/**\n * @generated MessageType for protobuf message ecssnapshot.ECSStateSnapshot\n */\nexport const ECSStateSnapshot = new ECSStateSnapshot$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass Worlds$Type extends MessageType<Worlds> {\n  constructor() {\n    super(\"ecssnapshot.Worlds\", [\n      { no: 1, name: \"worldAddress\", kind: \"scalar\", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },\n    ]);\n  }\n  create(value?: PartialMessage<Worlds>): Worlds {\n    const message = { worldAddress: [] };\n    globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });\n    if (value !== undefined) reflectionMergePartial<Worlds>(this, message, value);\n    return message;\n  }\n  internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Worlds): Worlds {\n    let message = target ?? this.create(),\n      end = reader.pos + length;\n    while (reader.pos < end) {\n      let [fieldNo, wireType] = reader.tag();\n      switch (fieldNo) {\n        case /* repeated string worldAddress */ 1:\n          message.worldAddress.push(reader.string());\n          break;\n        default:\n          let u = options.readUnknownField;\n          if (u === \"throw\")\n            throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);\n          let d = reader.skip(wireType);\n          if (u !== false) (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);\n      }\n    }\n    return message;\n  }\n  internalBinaryWrite(message: Worlds, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {\n    /* repeated string worldAddress = 1; */\n    for (let i = 0; i < message.worldAddress.length; i++)\n      writer.tag(1, WireType.LengthDelimited).string(message.worldAddress[i]);\n    let u = options.writeUnknownFields;\n    if (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n    return writer;\n  }\n}\n/**\n * @generated MessageType for protobuf message ecssnapshot.Worlds\n */\nexport const Worlds = new Worlds$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ECSStateRequestLatest$Type extends MessageType<ECSStateRequestLatest> {\n  constructor() {\n    super(\"ecssnapshot.ECSStateRequestLatest\", [\n      { no: 1, name: \"worldAddress\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ },\n    ]);\n  }\n  create(value?: PartialMessage<ECSStateRequestLatest>): ECSStateRequestLatest {\n    const message = { worldAddress: \"\" };\n    globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });\n    if (value !== undefined) reflectionMergePartial<ECSStateRequestLatest>(this, message, value);\n    return message;\n  }\n  internalBinaryRead(\n    reader: IBinaryReader,\n    length: number,\n    options: BinaryReadOptions,\n    target?: ECSStateRequestLatest\n  ): ECSStateRequestLatest {\n    let message = target ?? this.create(),\n      end = reader.pos + length;\n    while (reader.pos < end) {\n      let [fieldNo, wireType] = reader.tag();\n      switch (fieldNo) {\n        case /* string worldAddress */ 1:\n          message.worldAddress = reader.string();\n          break;\n        default:\n          let u = options.readUnknownField;\n          if (u === \"throw\")\n            throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);\n          let d = reader.skip(wireType);\n          if (u !== false) (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);\n      }\n    }\n    return message;\n  }\n  internalBinaryWrite(\n    message: ECSStateRequestLatest,\n    writer: IBinaryWriter,\n    options: BinaryWriteOptions\n  ): IBinaryWriter {\n    /* string worldAddress = 1; */\n    if (message.worldAddress !== \"\") writer.tag(1, WireType.LengthDelimited).string(message.worldAddress);\n    let u = options.writeUnknownFields;\n    if (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n    return writer;\n  }\n}\n/**\n * @generated MessageType for protobuf message ecssnapshot.ECSStateRequestLatest\n */\nexport const ECSStateRequestLatest = new ECSStateRequestLatest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ECSStateBlockRequestLatest$Type extends MessageType<ECSStateBlockRequestLatest> {\n  constructor() {\n    super(\"ecssnapshot.ECSStateBlockRequestLatest\", [\n      { no: 1, name: \"worldAddress\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ },\n    ]);\n  }\n  create(value?: PartialMessage<ECSStateBlockRequestLatest>): ECSStateBlockRequestLatest {\n    const message = { worldAddress: \"\" };\n    globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });\n    if (value !== undefined) reflectionMergePartial<ECSStateBlockRequestLatest>(this, message, value);\n    return message;\n  }\n  internalBinaryRead(\n    reader: IBinaryReader,\n    length: number,\n    options: BinaryReadOptions,\n    target?: ECSStateBlockRequestLatest\n  ): ECSStateBlockRequestLatest {\n    let message = target ?? this.create(),\n      end = reader.pos + length;\n    while (reader.pos < end) {\n      let [fieldNo, wireType] = reader.tag();\n      switch (fieldNo) {\n        case /* string worldAddress */ 1:\n          message.worldAddress = reader.string();\n          break;\n        default:\n          let u = options.readUnknownField;\n          if (u === \"throw\")\n            throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);\n          let d = reader.skip(wireType);\n          if (u !== false) (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);\n      }\n    }\n    return message;\n  }\n  internalBinaryWrite(\n    message: ECSStateBlockRequestLatest,\n    writer: IBinaryWriter,\n    options: BinaryWriteOptions\n  ): IBinaryWriter {\n    /* string worldAddress = 1; */\n    if (message.worldAddress !== \"\") writer.tag(1, WireType.LengthDelimited).string(message.worldAddress);\n    let u = options.writeUnknownFields;\n    if (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n    return writer;\n  }\n}\n/**\n * @generated MessageType for protobuf message ecssnapshot.ECSStateBlockRequestLatest\n */\nexport const ECSStateBlockRequestLatest = new ECSStateBlockRequestLatest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ECSStateRequestAtBlock$Type extends MessageType<ECSStateRequestAtBlock> {\n  constructor() {\n    super(\"ecssnapshot.ECSStateRequestAtBlock\", [\n      { no: 1, name: \"blockNumber\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },\n    ]);\n  }\n  create(value?: PartialMessage<ECSStateRequestAtBlock>): ECSStateRequestAtBlock {\n    const message = { blockNumber: 0n };\n    globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });\n    if (value !== undefined) reflectionMergePartial<ECSStateRequestAtBlock>(this, message, value);\n    return message;\n  }\n  internalBinaryRead(\n    reader: IBinaryReader,\n    length: number,\n    options: BinaryReadOptions,\n    target?: ECSStateRequestAtBlock\n  ): ECSStateRequestAtBlock {\n    let message = target ?? this.create(),\n      end = reader.pos + length;\n    while (reader.pos < end) {\n      let [fieldNo, wireType] = reader.tag();\n      switch (fieldNo) {\n        case /* uint64 blockNumber */ 1:\n          message.blockNumber = reader.uint64().toBigInt();\n          break;\n        default:\n          let u = options.readUnknownField;\n          if (u === \"throw\")\n            throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);\n          let d = reader.skip(wireType);\n          if (u !== false) (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);\n      }\n    }\n    return message;\n  }\n  internalBinaryWrite(\n    message: ECSStateRequestAtBlock,\n    writer: IBinaryWriter,\n    options: BinaryWriteOptions\n  ): IBinaryWriter {\n    /* uint64 blockNumber = 1; */\n    if (message.blockNumber !== 0n) writer.tag(1, WireType.Varint).uint64(message.blockNumber);\n    let u = options.writeUnknownFields;\n    if (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n    return writer;\n  }\n}\n/**\n * @generated MessageType for protobuf message ecssnapshot.ECSStateRequestAtBlock\n */\nexport const ECSStateRequestAtBlock = new ECSStateRequestAtBlock$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass WorldsRequest$Type extends MessageType<WorldsRequest> {\n  constructor() {\n    super(\"ecssnapshot.WorldsRequest\", []);\n  }\n  create(value?: PartialMessage<WorldsRequest>): WorldsRequest {\n    const message = {};\n    globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });\n    if (value !== undefined) reflectionMergePartial<WorldsRequest>(this, message, value);\n    return message;\n  }\n  internalBinaryRead(\n    reader: IBinaryReader,\n    length: number,\n    options: BinaryReadOptions,\n    target?: WorldsRequest\n  ): WorldsRequest {\n    return target ?? this.create();\n  }\n  internalBinaryWrite(message: WorldsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {\n    let u = options.writeUnknownFields;\n    if (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n    return writer;\n  }\n}\n/**\n * @generated MessageType for protobuf message ecssnapshot.WorldsRequest\n */\nexport const WorldsRequest = new WorldsRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ECSStateReply$Type extends MessageType<ECSStateReply> {\n  constructor() {\n    super(\"ecssnapshot.ECSStateReply\", [\n      { no: 1, name: \"state\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => ECSState },\n      { no: 2, name: \"stateComponents\", kind: \"scalar\", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },\n      { no: 3, name: \"stateEntities\", kind: \"scalar\", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },\n      { no: 4, name: \"stateHash\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ },\n      { no: 5, name: \"blockNumber\", kind: \"scalar\", T: 13 /*ScalarType.UINT32*/ },\n    ]);\n  }\n  create(value?: PartialMessage<ECSStateReply>): ECSStateReply {\n    const message = { state: [], stateComponents: [], stateEntities: [], stateHash: \"\", blockNumber: 0 };\n    globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });\n    if (value !== undefined) reflectionMergePartial<ECSStateReply>(this, message, value);\n    return message;\n  }\n  internalBinaryRead(\n    reader: IBinaryReader,\n    length: number,\n    options: BinaryReadOptions,\n    target?: ECSStateReply\n  ): ECSStateReply {\n    let message = target ?? this.create(),\n      end = reader.pos + length;\n    while (reader.pos < end) {\n      let [fieldNo, wireType] = reader.tag();\n      switch (fieldNo) {\n        case /* repeated ecssnapshot.ECSState state */ 1:\n          message.state.push(ECSState.internalBinaryRead(reader, reader.uint32(), options));\n          break;\n        case /* repeated string stateComponents */ 2:\n          message.stateComponents.push(reader.string());\n          break;\n        case /* repeated string stateEntities */ 3:\n          message.stateEntities.push(reader.string());\n          break;\n        case /* string stateHash */ 4:\n          message.stateHash = reader.string();\n          break;\n        case /* uint32 blockNumber */ 5:\n          message.blockNumber = reader.uint32();\n          break;\n        default:\n          let u = options.readUnknownField;\n          if (u === \"throw\")\n            throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);\n          let d = reader.skip(wireType);\n          if (u !== false) (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);\n      }\n    }\n    return message;\n  }\n  internalBinaryWrite(message: ECSStateReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {\n    /* repeated ecssnapshot.ECSState state = 1; */\n    for (let i = 0; i < message.state.length; i++)\n      ECSState.internalBinaryWrite(message.state[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();\n    /* repeated string stateComponents = 2; */\n    for (let i = 0; i < message.stateComponents.length; i++)\n      writer.tag(2, WireType.LengthDelimited).string(message.stateComponents[i]);\n    /* repeated string stateEntities = 3; */\n    for (let i = 0; i < message.stateEntities.length; i++)\n      writer.tag(3, WireType.LengthDelimited).string(message.stateEntities[i]);\n    /* string stateHash = 4; */\n    if (message.stateHash !== \"\") writer.tag(4, WireType.LengthDelimited).string(message.stateHash);\n    /* uint32 blockNumber = 5; */\n    if (message.blockNumber !== 0) writer.tag(5, WireType.Varint).uint32(message.blockNumber);\n    let u = options.writeUnknownFields;\n    if (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n    return writer;\n  }\n}\n/**\n * @generated MessageType for protobuf message ecssnapshot.ECSStateReply\n */\nexport const ECSStateReply = new ECSStateReply$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ECSStateBlockReply$Type extends MessageType<ECSStateBlockReply> {\n  constructor() {\n    super(\"ecssnapshot.ECSStateBlockReply\", [\n      { no: 1, name: \"blockNumber\", kind: \"scalar\", T: 13 /*ScalarType.UINT32*/ },\n    ]);\n  }\n  create(value?: PartialMessage<ECSStateBlockReply>): ECSStateBlockReply {\n    const message = { blockNumber: 0 };\n    globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });\n    if (value !== undefined) reflectionMergePartial<ECSStateBlockReply>(this, message, value);\n    return message;\n  }\n  internalBinaryRead(\n    reader: IBinaryReader,\n    length: number,\n    options: BinaryReadOptions,\n    target?: ECSStateBlockReply\n  ): ECSStateBlockReply {\n    let message = target ?? this.create(),\n      end = reader.pos + length;\n    while (reader.pos < end) {\n      let [fieldNo, wireType] = reader.tag();\n      switch (fieldNo) {\n        case /* uint32 blockNumber */ 1:\n          message.blockNumber = reader.uint32();\n          break;\n        default:\n          let u = options.readUnknownField;\n          if (u === \"throw\")\n            throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);\n          let d = reader.skip(wireType);\n          if (u !== false) (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);\n      }\n    }\n    return message;\n  }\n  internalBinaryWrite(message: ECSStateBlockReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {\n    /* uint32 blockNumber = 1; */\n    if (message.blockNumber !== 0) writer.tag(1, WireType.Varint).uint32(message.blockNumber);\n    let u = options.writeUnknownFields;\n    if (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n    return writer;\n  }\n}\n/**\n * @generated MessageType for protobuf message ecssnapshot.ECSStateBlockReply\n */\nexport const ECSStateBlockReply = new ECSStateBlockReply$Type();\n/**\n * @generated ServiceType for protobuf service ecssnapshot.ECSStateSnapshotService\n */\nexport const ECSStateSnapshotService = new ServiceType(\"ecssnapshot.ECSStateSnapshotService\", [\n  { name: \"GetStateLatest\", options: {}, I: ECSStateRequestLatest, O: ECSStateReply },\n  { name: \"GetStateLatestStream\", serverStreaming: true, options: {}, I: ECSStateRequestLatest, O: ECSStateReply },\n  { name: \"GetStateBlockLatest\", options: {}, I: ECSStateBlockRequestLatest, O: ECSStateBlockReply },\n  { name: \"GetStateAtBlock\", options: {}, I: ECSStateRequestAtBlock, O: ECSStateReply },\n  { name: \"GetWorlds\", options: {}, I: WorldsRequest, O: Worlds },\n]);\n","/* eslint-disable */\n// @generated by protobuf-ts 2.8.0 with parameter eslint_disable\n// @generated from protobuf file \"ecs-snapshot.proto\" (package \"ecssnapshot\", syntax proto3)\n// tslint:disable\nimport type { RpcTransport } from \"@protobuf-ts/runtime-rpc\";\nimport type { ServiceInfo } from \"@protobuf-ts/runtime-rpc\";\nimport { ECSStateSnapshotService } from \"./ecs-snapshot\";\nimport type { Worlds } from \"./ecs-snapshot\";\nimport type { WorldsRequest } from \"./ecs-snapshot\";\nimport type { ECSStateRequestAtBlock } from \"./ecs-snapshot\";\nimport type { ECSStateBlockReply } from \"./ecs-snapshot\";\nimport type { ECSStateBlockRequestLatest } from \"./ecs-snapshot\";\nimport type { ServerStreamingCall } from \"@protobuf-ts/runtime-rpc\";\nimport { stackIntercept } from \"@protobuf-ts/runtime-rpc\";\nimport type { ECSStateReply } from \"./ecs-snapshot\";\nimport type { ECSStateRequestLatest } from \"./ecs-snapshot\";\nimport type { UnaryCall } from \"@protobuf-ts/runtime-rpc\";\nimport type { RpcOptions } from \"@protobuf-ts/runtime-rpc\";\n/**\n * The Snapshot Service definition.\n *\n * @generated from protobuf service ecssnapshot.ECSStateSnapshotService\n */\nexport interface IECSStateSnapshotServiceClient {\n  /**\n   * Requests the latest ECS state.\n   *\n   * @generated from protobuf rpc: GetStateLatest(ecssnapshot.ECSStateRequestLatest) returns (ecssnapshot.ECSStateReply);\n   */\n  getStateLatest(input: ECSStateRequestLatest, options?: RpcOptions): UnaryCall<ECSStateRequestLatest, ECSStateReply>;\n  /**\n   * Requests the latest ECS state in stream format, which will chunk the state.\n   *\n   * @generated from protobuf rpc: GetStateLatestStream(ecssnapshot.ECSStateRequestLatest) returns (stream ecssnapshot.ECSStateReply);\n   */\n  getStateLatestStream(\n    input: ECSStateRequestLatest,\n    options?: RpcOptions\n  ): ServerStreamingCall<ECSStateRequestLatest, ECSStateReply>;\n  /**\n   * Requests the latest block number based on the latest ECS state.\n   *\n   * @generated from protobuf rpc: GetStateBlockLatest(ecssnapshot.ECSStateBlockRequestLatest) returns (ecssnapshot.ECSStateBlockReply);\n   */\n  getStateBlockLatest(\n    input: ECSStateBlockRequestLatest,\n    options?: RpcOptions\n  ): UnaryCall<ECSStateBlockRequestLatest, ECSStateBlockReply>;\n  /**\n   * Requests the ECS state at specific block.\n   *\n   * @generated from protobuf rpc: GetStateAtBlock(ecssnapshot.ECSStateRequestAtBlock) returns (ecssnapshot.ECSStateReply);\n   */\n  getStateAtBlock(\n    input: ECSStateRequestAtBlock,\n    options?: RpcOptions\n  ): UnaryCall<ECSStateRequestAtBlock, ECSStateReply>;\n  /**\n   * Requests a list of known worlds based on chain state.\n   *\n   * @generated from protobuf rpc: GetWorlds(ecssnapshot.WorldsRequest) returns (ecssnapshot.Worlds);\n   */\n  getWorlds(input: WorldsRequest, options?: RpcOptions): UnaryCall<WorldsRequest, Worlds>;\n}\n/**\n * The Snapshot Service definition.\n *\n * @generated from protobuf service ecssnapshot.ECSStateSnapshotService\n */\nexport class ECSStateSnapshotServiceClient implements IECSStateSnapshotServiceClient, ServiceInfo {\n  typeName = ECSStateSnapshotService.typeName;\n  methods = ECSStateSnapshotService.methods;\n  options = ECSStateSnapshotService.options;\n  constructor(private readonly _transport: RpcTransport) {}\n  /**\n   * Requests the latest ECS state.\n   *\n   * @generated from protobuf rpc: GetStateLatest(ecssnapshot.ECSStateRequestLatest) returns (ecssnapshot.ECSStateReply);\n   */\n  getStateLatest(input: ECSStateRequestLatest, options?: RpcOptions): UnaryCall<ECSStateRequestLatest, ECSStateReply> {\n    const method = this.methods[0],\n      opt = this._transport.mergeOptions(options);\n    return stackIntercept<ECSStateRequestLatest, ECSStateReply>(\"unary\", this._transport, method, opt, input);\n  }\n  /**\n   * Requests the latest ECS state in stream format, which will chunk the state.\n   *\n   * @generated from protobuf rpc: GetStateLatestStream(ecssnapshot.ECSStateRequestLatest) returns (stream ecssnapshot.ECSStateReply);\n   */\n  getStateLatestStream(\n    input: ECSStateRequestLatest,\n    options?: RpcOptions\n  ): ServerStreamingCall<ECSStateRequestLatest, ECSStateReply> {\n    const method = this.methods[1],\n      opt = this._transport.mergeOptions(options);\n    return stackIntercept<ECSStateRequestLatest, ECSStateReply>(\"serverStreaming\", this._transport, method, opt, input);\n  }\n  /**\n   * Requests the latest block number based on the latest ECS state.\n   *\n   * @generated from protobuf rpc: GetStateBlockLatest(ecssnapshot.ECSStateBlockRequestLatest) returns (ecssnapshot.ECSStateBlockReply);\n   */\n  getStateBlockLatest(\n    input: ECSStateBlockRequestLatest,\n    options?: RpcOptions\n  ): UnaryCall<ECSStateBlockRequestLatest, ECSStateBlockReply> {\n    const method = this.methods[2],\n      opt = this._transport.mergeOptions(options);\n    return stackIntercept<ECSStateBlockRequestLatest, ECSStateBlockReply>(\"unary\", this._transport, method, opt, input);\n  }\n  /**\n   * Requests the ECS state at specific block.\n   *\n   * @generated from protobuf rpc: GetStateAtBlock(ecssnapshot.ECSStateRequestAtBlock) returns (ecssnapshot.ECSStateReply);\n   */\n  getStateAtBlock(\n    input: ECSStateRequestAtBlock,\n    options?: RpcOptions\n  ): UnaryCall<ECSStateRequestAtBlock, ECSStateReply> {\n    const method = this.methods[3],\n      opt = this._transport.mergeOptions(options);\n    return stackIntercept<ECSStateRequestAtBlock, ECSStateReply>(\"unary\", this._transport, method, opt, input);\n  }\n  /**\n   * Requests a list of known worlds based on chain state.\n   *\n   * @generated from protobuf rpc: GetWorlds(ecssnapshot.WorldsRequest) returns (ecssnapshot.Worlds);\n   */\n  getWorlds(input: WorldsRequest, options?: RpcOptions): UnaryCall<WorldsRequest, Worlds> {\n    const method = this.methods[4],\n      opt = this._transport.mergeOptions(options);\n    return stackIntercept<WorldsRequest, Worlds>(\"unary\", this._transport, method, opt, input);\n  }\n}\n","/* eslint-disable */\n// @generated by protobuf-ts 2.8.0 with parameter eslint_disable\n// @generated from protobuf file \"ecs-stream.proto\" (package \"ecsstream\", syntax proto3)\n// tslint:disable\nimport { ServiceType } from \"@protobuf-ts/runtime-rpc\";\nimport type { BinaryWriteOptions } from \"@protobuf-ts/runtime\";\nimport type { IBinaryWriter } from \"@protobuf-ts/runtime\";\nimport { WireType } from \"@protobuf-ts/runtime\";\nimport type { BinaryReadOptions } from \"@protobuf-ts/runtime\";\nimport type { IBinaryReader } from \"@protobuf-ts/runtime\";\nimport { UnknownFieldHandler } from \"@protobuf-ts/runtime\";\nimport type { PartialMessage } from \"@protobuf-ts/runtime\";\nimport { reflectionMergePartial } from \"@protobuf-ts/runtime\";\nimport { MESSAGE_TYPE } from \"@protobuf-ts/runtime\";\nimport { MessageType } from \"@protobuf-ts/runtime\";\n/**\n * @generated from protobuf message ecsstream.ECSEvent\n */\nexport interface ECSEvent {\n  /**\n   * @generated from protobuf field: string eventType = 1;\n   */\n  eventType: string;\n  /**\n   * @generated from protobuf field: string componentId = 2;\n   */\n  componentId: string;\n  /**\n   * @generated from protobuf field: string entityId = 3;\n   */\n  entityId: string;\n  /**\n   * @generated from protobuf field: bytes value = 4;\n   */\n  value: Uint8Array;\n  /**\n   * @generated from protobuf field: string tx = 5;\n   */\n  tx: string;\n}\n/**\n * Request to subscribe to an ECSStream. The required parameter is 'worldAddress', while others\n * are opt-in based on which data the client is interested in receiving.\n *\n * @generated from protobuf message ecsstream.ECSStreamBlockBundleRequest\n */\nexport interface ECSStreamBlockBundleRequest {\n  /**\n   * @generated from protobuf field: string worldAddress = 1;\n   */\n  worldAddress: string;\n  /**\n   * @generated from protobuf field: bool blockNumber = 2;\n   */\n  blockNumber: boolean;\n  /**\n   * @generated from protobuf field: bool blockHash = 3;\n   */\n  blockHash: boolean;\n  /**\n   * @generated from protobuf field: bool blockTimestamp = 4;\n   */\n  blockTimestamp: boolean;\n  /**\n   * @generated from protobuf field: bool transactionsConfirmed = 5;\n   */\n  transactionsConfirmed: boolean;\n  /**\n   * @generated from protobuf field: bool ecsEvents = 6;\n   */\n  ecsEvents: boolean;\n}\n/**\n * ECSStream response. The fields are populated based on the request which must have been sent when\n * starting the subscription.\n *\n * @generated from protobuf message ecsstream.ECSStreamBlockBundleReply\n */\nexport interface ECSStreamBlockBundleReply {\n  /**\n   * @generated from protobuf field: uint32 blockNumber = 1;\n   */\n  blockNumber: number;\n  /**\n   * @generated from protobuf field: string blockHash = 2;\n   */\n  blockHash: string;\n  /**\n   * @generated from protobuf field: uint32 blockTimestamp = 3;\n   */\n  blockTimestamp: number;\n  /**\n   * @generated from protobuf field: repeated string transactionsConfirmed = 4;\n   */\n  transactionsConfirmed: string[];\n  /**\n   * @generated from protobuf field: repeated ecsstream.ECSEvent ecsEvents = 5;\n   */\n  ecsEvents: ECSEvent[];\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass ECSEvent$Type extends MessageType<ECSEvent> {\n  constructor() {\n    super(\"ecsstream.ECSEvent\", [\n      { no: 1, name: \"eventType\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ },\n      { no: 2, name: \"componentId\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ },\n      { no: 3, name: \"entityId\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ },\n      { no: 4, name: \"value\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ },\n      { no: 5, name: \"tx\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ },\n    ]);\n  }\n  create(value?: PartialMessage<ECSEvent>): ECSEvent {\n    const message = { eventType: \"\", componentId: \"\", entityId: \"\", value: new Uint8Array(0), tx: \"\" };\n    globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });\n    if (value !== undefined) reflectionMergePartial<ECSEvent>(this, message, value);\n    return message;\n  }\n  internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ECSEvent): ECSEvent {\n    let message = target ?? this.create(),\n      end = reader.pos + length;\n    while (reader.pos < end) {\n      let [fieldNo, wireType] = reader.tag();\n      switch (fieldNo) {\n        case /* string eventType */ 1:\n          message.eventType = reader.string();\n          break;\n        case /* string componentId */ 2:\n          message.componentId = reader.string();\n          break;\n        case /* string entityId */ 3:\n          message.entityId = reader.string();\n          break;\n        case /* bytes value */ 4:\n          message.value = reader.bytes();\n          break;\n        case /* string tx */ 5:\n          message.tx = reader.string();\n          break;\n        default:\n          let u = options.readUnknownField;\n          if (u === \"throw\")\n            throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);\n          let d = reader.skip(wireType);\n          if (u !== false) (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);\n      }\n    }\n    return message;\n  }\n  internalBinaryWrite(message: ECSEvent, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {\n    /* string eventType = 1; */\n    if (message.eventType !== \"\") writer.tag(1, WireType.LengthDelimited).string(message.eventType);\n    /* string componentId = 2; */\n    if (message.componentId !== \"\") writer.tag(2, WireType.LengthDelimited).string(message.componentId);\n    /* string entityId = 3; */\n    if (message.entityId !== \"\") writer.tag(3, WireType.LengthDelimited).string(message.entityId);\n    /* bytes value = 4; */\n    if (message.value.length) writer.tag(4, WireType.LengthDelimited).bytes(message.value);\n    /* string tx = 5; */\n    if (message.tx !== \"\") writer.tag(5, WireType.LengthDelimited).string(message.tx);\n    let u = options.writeUnknownFields;\n    if (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n    return writer;\n  }\n}\n/**\n * @generated MessageType for protobuf message ecsstream.ECSEvent\n */\nexport const ECSEvent = new ECSEvent$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ECSStreamBlockBundleRequest$Type extends MessageType<ECSStreamBlockBundleRequest> {\n  constructor() {\n    super(\"ecsstream.ECSStreamBlockBundleRequest\", [\n      { no: 1, name: \"worldAddress\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ },\n      { no: 2, name: \"blockNumber\", kind: \"scalar\", T: 8 /*ScalarType.BOOL*/ },\n      { no: 3, name: \"blockHash\", kind: \"scalar\", T: 8 /*ScalarType.BOOL*/ },\n      { no: 4, name: \"blockTimestamp\", kind: \"scalar\", T: 8 /*ScalarType.BOOL*/ },\n      { no: 5, name: \"transactionsConfirmed\", kind: \"scalar\", T: 8 /*ScalarType.BOOL*/ },\n      { no: 6, name: \"ecsEvents\", kind: \"scalar\", T: 8 /*ScalarType.BOOL*/ },\n    ]);\n  }\n  create(value?: PartialMessage<ECSStreamBlockBundleRequest>): ECSStreamBlockBundleRequest {\n    const message = {\n      worldAddress: \"\",\n      blockNumber: false,\n      blockHash: false,\n      blockTimestamp: false,\n      transactionsConfirmed: false,\n      ecsEvents: false,\n    };\n    globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });\n    if (value !== undefined) reflectionMergePartial<ECSStreamBlockBundleRequest>(this, message, value);\n    return message;\n  }\n  internalBinaryRead(\n    reader: IBinaryReader,\n    length: number,\n    options: BinaryReadOptions,\n    target?: ECSStreamBlockBundleRequest\n  ): ECSStreamBlockBundleRequest {\n    let message = target ?? this.create(),\n      end = reader.pos + length;\n    while (reader.pos < end) {\n      let [fieldNo, wireType] = reader.tag();\n      switch (fieldNo) {\n        case /* string worldAddress */ 1:\n          message.worldAddress = reader.string();\n          break;\n        case /* bool blockNumber */ 2:\n          message.blockNumber = reader.bool();\n          break;\n        case /* bool blockHash */ 3:\n          message.blockHash = reader.bool();\n          break;\n        case /* bool blockTimestamp */ 4:\n          message.blockTimestamp = reader.bool();\n          break;\n        case /* bool transactionsConfirmed */ 5:\n          message.transactionsConfirmed = reader.bool();\n          break;\n        case /* bool ecsEvents */ 6:\n          message.ecsEvents = reader.bool();\n          break;\n        default:\n          let u = options.readUnknownField;\n          if (u === \"throw\")\n            throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);\n          let d = reader.skip(wireType);\n          if (u !== false) (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);\n      }\n    }\n    return message;\n  }\n  internalBinaryWrite(\n    message: ECSStreamBlockBundleRequest,\n    writer: IBinaryWriter,\n    options: BinaryWriteOptions\n  ): IBinaryWriter {\n    /* string worldAddress = 1; */\n    if (message.worldAddress !== \"\") writer.tag(1, WireType.LengthDelimited).string(message.worldAddress);\n    /* bool blockNumber = 2; */\n    if (message.blockNumber !== false) writer.tag(2, WireType.Varint).bool(message.blockNumber);\n    /* bool blockHash = 3; */\n    if (message.blockHash !== false) writer.tag(3, WireType.Varint).bool(message.blockHash);\n    /* bool blockTimestamp = 4; */\n    if (message.blockTimestamp !== false) writer.tag(4, WireType.Varint).bool(message.blockTimestamp);\n    /* bool transactionsConfirmed = 5; */\n    if (message.transactionsConfirmed !== false) writer.tag(5, WireType.Varint).bool(message.transactionsConfirmed);\n    /* bool ecsEvents = 6; */\n    if (message.ecsEvents !== false) writer.tag(6, WireType.Varint).bool(message.ecsEvents);\n    let u = options.writeUnknownFields;\n    if (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n    return writer;\n  }\n}\n/**\n * @generated MessageType for protobuf message ecsstream.ECSStreamBlockBundleRequest\n */\nexport const ECSStreamBlockBundleRequest = new ECSStreamBlockBundleRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ECSStreamBlockBundleReply$Type extends MessageType<ECSStreamBlockBundleReply> {\n  constructor() {\n    super(\"ecsstream.ECSStreamBlockBundleReply\", [\n      { no: 1, name: \"blockNumber\", kind: \"scalar\", T: 13 /*ScalarType.UINT32*/ },\n      { no: 2, name: \"blockHash\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ },\n      { no: 3, name: \"blockTimestamp\", kind: \"scalar\", T: 13 /*ScalarType.UINT32*/ },\n      {\n        no: 4,\n        name: \"transactionsConfirmed\",\n        kind: \"scalar\",\n        repeat: 2 /*RepeatType.UNPACKED*/,\n        T: 9 /*ScalarType.STRING*/,\n      },\n      { no: 5, name: \"ecsEvents\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => ECSEvent },\n    ]);\n  }\n  create(value?: PartialMessage<ECSStreamBlockBundleReply>): ECSStreamBlockBundleReply {\n    const message = { blockNumber: 0, blockHash: \"\", blockTimestamp: 0, transactionsConfirmed: [], ecsEvents: [] };\n    globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });\n    if (value !== undefined) reflectionMergePartial<ECSStreamBlockBundleReply>(this, message, value);\n    return message;\n  }\n  internalBinaryRead(\n    reader: IBinaryReader,\n    length: number,\n    options: BinaryReadOptions,\n    target?: ECSStreamBlockBundleReply\n  ): ECSStreamBlockBundleReply {\n    let message = target ?? this.create(),\n      end = reader.pos + length;\n    while (reader.pos < end) {\n      let [fieldNo, wireType] = reader.tag();\n      switch (fieldNo) {\n        case /* uint32 blockNumber */ 1:\n          message.blockNumber = reader.uint32();\n          break;\n        case /* string blockHash */ 2:\n          message.blockHash = reader.string();\n          break;\n        case /* uint32 blockTimestamp */ 3:\n          message.blockTimestamp = reader.uint32();\n          break;\n        case /* repeated string transactionsConfirmed */ 4:\n          message.transactionsConfirmed.push(reader.string());\n          break;\n        case /* repeated ecsstream.ECSEvent ecsEvents */ 5:\n          message.ecsEvents.push(ECSEvent.internalBinaryRead(reader, reader.uint32(), options));\n          break;\n        default:\n          let u = options.readUnknownField;\n          if (u === \"throw\")\n            throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);\n          let d = reader.skip(wireType);\n          if (u !== false) (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);\n      }\n    }\n    return message;\n  }\n  internalBinaryWrite(\n    message: ECSStreamBlockBundleReply,\n    writer: IBinaryWriter,\n    options: BinaryWriteOptions\n  ): IBinaryWriter {\n    /* uint32 blockNumber = 1; */\n    if (message.blockNumber !== 0) writer.tag(1, WireType.Varint).uint32(message.blockNumber);\n    /* string blockHash = 2; */\n    if (message.blockHash !== \"\") writer.tag(2, WireType.LengthDelimited).string(message.blockHash);\n    /* uint32 blockTimestamp = 3; */\n    if (message.blockTimestamp !== 0) writer.tag(3, WireType.Varint).uint32(message.blockTimestamp);\n    /* repeated string transactionsConfirmed = 4; */\n    for (let i = 0; i < message.transactionsConfirmed.length; i++)\n      writer.tag(4, WireType.LengthDelimited).string(message.transactionsConfirmed[i]);\n    /* repeated ecsstream.ECSEvent ecsEvents = 5; */\n    for (let i = 0; i < message.ecsEvents.length; i++)\n      ECSEvent.internalBinaryWrite(\n        message.ecsEvents[i],\n        writer.tag(5, WireType.LengthDelimited).fork(),\n        options\n      ).join();\n    let u = options.writeUnknownFields;\n    if (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n    return writer;\n  }\n}\n/**\n * @generated MessageType for protobuf message ecsstream.ECSStreamBlockBundleReply\n */\nexport const ECSStreamBlockBundleReply = new ECSStreamBlockBundleReply$Type();\n/**\n * @generated ServiceType for protobuf service ecsstream.ECSStreamService\n */\nexport const ECSStreamService = new ServiceType(\"ecsstream.ECSStreamService\", [\n  {\n    name: \"SubscribeToStreamLatest\",\n    serverStreaming: true,\n    options: {},\n    I: ECSStreamBlockBundleRequest,\n    O: ECSStreamBlockBundleReply,\n  },\n]);\n","/* eslint-disable */\n// @generated by protobuf-ts 2.8.0 with parameter eslint_disable\n// @generated from protobuf file \"ecs-stream.proto\" (package \"ecsstream\", syntax proto3)\n// tslint:disable\nimport type { RpcTransport } from \"@protobuf-ts/runtime-rpc\";\nimport type { ServiceInfo } from \"@protobuf-ts/runtime-rpc\";\nimport { ECSStreamService } from \"./ecs-stream\";\nimport { stackIntercept } from \"@protobuf-ts/runtime-rpc\";\nimport type { ECSStreamBlockBundleReply } from \"./ecs-stream\";\nimport type { ECSStreamBlockBundleRequest } from \"./ecs-stream\";\nimport type { ServerStreamingCall } from \"@protobuf-ts/runtime-rpc\";\nimport type { RpcOptions } from \"@protobuf-ts/runtime-rpc\";\n/**\n * The Stream Service definition.\n *\n * @generated from protobuf service ecsstream.ECSStreamService\n */\nexport interface IECSStreamServiceClient {\n  /**\n   * Opens a cursor to receive the latest ECS events and additional data specified via request.\n   *\n   * @generated from protobuf rpc: SubscribeToStreamLatest(ecsstream.ECSStreamBlockBundleRequest) returns (stream ecsstream.ECSStreamBlockBundleReply);\n   */\n  subscribeToStreamLatest(\n    input: ECSStreamBlockBundleRequest,\n    options?: RpcOptions\n  ): ServerStreamingCall<ECSStreamBlockBundleRequest, ECSStreamBlockBundleReply>;\n}\n/**\n * The Stream Service definition.\n *\n * @generated from protobuf service ecsstream.ECSStreamService\n */\nexport class ECSStreamServiceClient implements IECSStreamServiceClient, ServiceInfo {\n  typeName = ECSStreamService.typeName;\n  methods = ECSStreamService.methods;\n  options = ECSStreamService.options;\n  constructor(private readonly _transport: RpcTransport) {}\n  /**\n   * Opens a cursor to receive the latest ECS events and additional data specified via request.\n   *\n   * @generated from protobuf rpc: SubscribeToStreamLatest(ecsstream.ECSStreamBlockBundleRequest) returns (stream ecsstream.ECSStreamBlockBundleReply);\n   */\n  subscribeToStreamLatest(\n    input: ECSStreamBlockBundleRequest,\n    options?: RpcOptions\n  ): ServerStreamingCall<ECSStreamBlockBundleRequest, ECSStreamBlockBundleReply> {\n    const method = this.methods[0],\n      opt = this._transport.mergeOptions(options);\n    return stackIntercept<ECSStreamBlockBundleRequest, ECSStreamBlockBundleReply>(\n      \"serverStreaming\",\n      this._transport,\n      method,\n      opt,\n      input\n    );\n  }\n}\n","{\n  \"abi\": [\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"writer\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"authorizeWriter\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"getEntities\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256[]\",\n          \"name\": \"\",\n          \"type\": \"uint256[]\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"value\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"getEntitiesWithValue\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256[]\",\n          \"name\": \"\",\n          \"type\": \"uint256[]\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"entity\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getRawValue\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"getSchema\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string[]\",\n          \"name\": \"keys\",\n          \"type\": \"string[]\"\n        },\n        {\n          \"internalType\": \"enum LibTypes.SchemaValue[]\",\n          \"name\": \"values\",\n          \"type\": \"uint8[]\"\n        }\n      ],\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"entity\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"has\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"id\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"owner\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"indexer\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"registerIndexer\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_world\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"registerWorld\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"entity\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"remove\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"entity\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"value\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"set\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"newOwner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"transferOwnership\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"world\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"writeAccess\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    }\n  ],\n  \"methodIdentifiers\": {\n    \"authorizeWriter(address)\": \"4fef6a38\",\n    \"getEntities()\": \"31b933b9\",\n    \"getEntitiesWithValue(bytes)\": \"b361be46\",\n    \"getRawValue(uint256)\": \"b8bc073d\",\n    \"getSchema()\": \"6b122fe0\",\n    \"has(uint256)\": \"cccf7a8e\",\n    \"id()\": \"af640d0f\",\n    \"owner()\": \"8da5cb5b\",\n    \"registerIndexer(address)\": \"75c0669c\",\n    \"registerWorld(address)\": \"9d2c76b4\",\n    \"remove(uint256)\": \"4cc82215\",\n    \"set(uint256,bytes)\": \"8b282947\",\n    \"transferOwnership(address)\": \"f2fde38b\",\n    \"world()\": \"30b67baa\",\n    \"writeAccess(address)\": \"861eb905\"\n  },\n  \"rawMetadata\": \"{\\\"compiler\\\":{\\\"version\\\":\\\"0.8.13+commit.abaa5c0e\\\"},\\\"language\\\":\\\"Solidity\\\",\\\"output\\\":{\\\"abi\\\":[{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"writer\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"authorizeWriter\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"getEntities\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"uint256[]\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256[]\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"value\\\",\\\"type\\\":\\\"bytes\\\"}],\\\"name\\\":\\\"getEntitiesWithValue\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"uint256[]\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256[]\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"entity\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"getRawValue\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bytes\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"getSchema\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"string[]\\\",\\\"name\\\":\\\"keys\\\",\\\"type\\\":\\\"string[]\\\"},{\\\"internalType\\\":\\\"enum LibTypes.SchemaValue[]\\\",\\\"name\\\":\\\"values\\\",\\\"type\\\":\\\"uint8[]\\\"}],\\\"stateMutability\\\":\\\"pure\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"entity\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"has\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"bool\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bool\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"id\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"owner\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"indexer\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"registerIndexer\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"_world\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"registerWorld\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"entity\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"remove\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"entity\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"value\\\",\\\"type\\\":\\\"bytes\\\"}],\\\"name\\\":\\\"set\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"newOwner\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"transferOwnership\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"world\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"writeAccess\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"bool\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bool\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"}],\\\"devdoc\\\":{\\\"kind\\\":\\\"dev\\\",\\\"methods\\\":{\\\"authorizeWriter(address)\\\":{\\\"params\\\":{\\\"writer\\\":\\\"Address to grant write access to.\\\"}},\\\"getEntitiesWithValue(bytes)\\\":{\\\"params\\\":{\\\"value\\\":\\\"Abi-encoded value to get the list of entities with this value for.\\\"}},\\\"getRawValue(uint256)\\\":{\\\"params\\\":{\\\"entity\\\":\\\"Entity to get the raw value in this component for.\\\"}},\\\"has(uint256)\\\":{\\\"params\\\":{\\\"entity\\\":\\\"Entity to check whether it has a value in this component for.\\\"}},\\\"registerIndexer(address)\\\":{\\\"params\\\":{\\\"indexer\\\":\\\"Address of the indexer to notify when a component value is set.\\\"}},\\\"registerWorld(address)\\\":{\\\"params\\\":{\\\"_world\\\":\\\"Address of the World contract.\\\"}},\\\"remove(uint256)\\\":{\\\"params\\\":{\\\"entity\\\":\\\"Entity to remove from this component.\\\"}},\\\"set(uint256,bytes)\\\":{\\\"params\\\":{\\\"entity\\\":\\\"Entity to set the value for.\\\",\\\"value\\\":\\\"Value to set for the given entity.\\\"}},\\\"transferOwnership(address)\\\":{\\\"params\\\":{\\\"newOwner\\\":\\\"Address of the new owner.\\\"}}},\\\"version\\\":1},\\\"userdoc\\\":{\\\"kind\\\":\\\"user\\\",\\\"methods\\\":{\\\"authorizeWriter(address)\\\":{\\\"notice\\\":\\\"Grant write access to this component to the given address. Can only be called by the owner of this component.\\\"},\\\"getEntities()\\\":{\\\"notice\\\":\\\"Get a list of all entities that have a value in this component.\\\"},\\\"getEntitiesWithValue(bytes)\\\":{\\\"notice\\\":\\\"Get a list of all entities that have the specified value in this component.\\\"},\\\"getRawValue(uint256)\\\":{\\\"notice\\\":\\\"Get the raw (abi-encoded) value of the given entity in this component.\\\"},\\\"getSchema()\\\":{\\\"notice\\\":\\\"Return the keys and value types of the schema of this component.\\\"},\\\"has(uint256)\\\":{\\\"notice\\\":\\\"Check whether the given entity has a value in this component.\\\"},\\\"id()\\\":{\\\"notice\\\":\\\"Public identifier of this component \\\"},\\\"owner()\\\":{\\\"notice\\\":\\\"Get the owner of this component \\\"},\\\"registerIndexer(address)\\\":{\\\"notice\\\":\\\"Register a new indexer that gets notified when a component value is set.\\\"},\\\"registerWorld(address)\\\":{\\\"notice\\\":\\\"Register this component in the given world.\\\"},\\\"remove(uint256)\\\":{\\\"notice\\\":\\\"Remove the given entity from this component. Registers the update in the World contract. Can only be called by addresses with write access to this component.\\\"},\\\"set(uint256,bytes)\\\":{\\\"notice\\\":\\\"Set the given component value for the given entity. Registers the update in the World contract. Can only be called by addresses with write access to this component.\\\"},\\\"transferOwnership(address)\\\":{\\\"notice\\\":\\\"Transfer ownership of this component to a new owner. Can only be called by the current owner.\\\"},\\\"world()\\\":{\\\"notice\\\":\\\"Reference to the World contract this component is registered in \\\"},\\\"writeAccess(address)\\\":{\\\"notice\\\":\\\"Addresses with write access to this component \\\"}},\\\"notice\\\":\\\"Components are a key-value store from entity id to component value. They are registered in the World and register updates to their state in the World. They have an owner, who can grant write access to more addresses. (Systems that want to write to a component need to be given write access first.) Everyone has read access.\\\",\\\"version\\\":1}},\\\"settings\\\":{\\\"compilationTarget\\\":{\\\"src/Component.sol\\\":\\\"Component\\\"},\\\"evmVersion\\\":\\\"london\\\",\\\"libraries\\\":{},\\\"metadata\\\":{\\\"bytecodeHash\\\":\\\"ipfs\\\"},\\\"optimizer\\\":{\\\"enabled\\\":true,\\\"runs\\\":1000000},\\\"remappings\\\":[\\\":@openzeppelin/=../../node_modules/openzeppelin-solidity/\\\",\\\":@rari-capital/=../../node_modules/@rari-capital/\\\",\\\":abdk-libraries-solidity/=../../node_modules/abdk-libraries-solidity/\\\",\\\":base64-sol/=../../node_modules/base64-sol/\\\",\\\":ds-test/=../../node_modules/ds-test/src/\\\",\\\":forge-std/=../../node_modules/forge-std/src/\\\",\\\":hardhat/=../../node_modules/hardhat/\\\",\\\":memmove/=../../node_modules/memmove/src/\\\",\\\":openzeppelin-solidity/=../../node_modules/openzeppelin-solidity/\\\",\\\":solmate/=../../node_modules/@rari-capital/solmate/src/\\\"]},\\\"sources\\\":{\\\"../../node_modules/forge-std/src/console.sol\\\":{\\\"keccak256\\\":\\\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\\\",\\\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\\\"]},\\\"../../node_modules/memmove/src/Array.sol\\\":{\\\"keccak256\\\":\\\"0x0d7681d3392c34f811cebc9598c5e8f4eef6aba431dca9e1fa87267ba51a4515\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://0ffb5179dd40ccacadc2cb26ac99e9ea5148796f6d21413d7e0f37913831bea1\\\",\\\"dweb:/ipfs/QmfJogaoqook5JgnUZKib6w6khzViUag3EQb1EZ8aUEasQ\\\"]},\\\"../../node_modules/memmove/src/LinkedList.sol\\\":{\\\"keccak256\\\":\\\"0x2374863d39689178dda92b841e77b835ba8fa550561be23b7861d2e52c0fe8c1\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://8538ec6ca6be4e1b25b74dfd2139586fa2b9dab8d49d91428ed64dc683884598\\\",\\\"dweb:/ipfs/Qma7Z6urenqG5Dzqwe8ouGiFH37mbsJEX83tqjSq1PTnRc\\\"]},\\\"src/Component.sol\\\":{\\\"keccak256\\\":\\\"0x00b74ab0dba753d7929eb51cfd486693138402b6fb40561fd4fd27b657e6e9c1\\\",\\\"license\\\":\\\"Unlicense\\\",\\\"urls\\\":[\\\"bzz-raw://c77e94c375ff6d54713d8cde581695ab08879f5b9918262300a029dd77587f60\\\",\\\"dweb:/ipfs/QmUPJYxV72n5mMgvPR6itQFJq5S8iqbDTm9Xn7HMK6KihA\\\"]},\\\"src/LibTypes.sol\\\":{\\\"keccak256\\\":\\\"0x6e28306a3fd82d16ffaa780fd4f7dd50749cd7446c5250990855bd903b71bd8d\\\",\\\"license\\\":\\\"Unlicense\\\",\\\"urls\\\":[\\\"bzz-raw://ebde66e846ec8ff4f5676410a5bcbcee4916ad28ad5f1b53c80ccad57cfa0266\\\",\\\"dweb:/ipfs/QmWqmukE1AthrjPNke9uqzSpNFKSzshbfircbQx3waiJeA\\\"]},\\\"src/MapSet.sol\\\":{\\\"keccak256\\\":\\\"0x9bf5cd536c741f4ac730862fb49cd3d9527c7c62007b986ada5b0591859cb25c\\\",\\\"license\\\":\\\"Unlicense\\\",\\\"urls\\\":[\\\"bzz-raw://2da724933f2f22704131e39e27f64e83c214a0678b804358f822da31df4c3cf0\\\",\\\"dweb:/ipfs/QmYAbxx94WgpwWViMBmguH8UcDmcS2Mopv7tTB89Cdz1my\\\"]},\\\"src/Set.sol\\\":{\\\"keccak256\\\":\\\"0xd6ebb07ab1047aa211cefad877d4ab3f65cbe2ac824c29b5141bc381a9867e95\\\",\\\"license\\\":\\\"Unlicense\\\",\\\"urls\\\":[\\\"bzz-raw://ad9e3bb5ff1c5bfcc7ee9ecc9d2e0db11042fe281de9bac4dd93e3456127c15c\\\",\\\"dweb:/ipfs/QmWezbNuLBLP4v2UP7j3iP9f2HKM2ZwaDi173qBKsW197m\\\"]},\\\"src/interfaces/IComponent.sol\\\":{\\\"keccak256\\\":\\\"0xc653b5afc93743ae8606604d4941d085f9f25dc9f1a068e9950944e03bb1a61a\\\",\\\"license\\\":\\\"Unlicense\\\",\\\"urls\\\":[\\\"bzz-raw://dce85cd14551eb9008b05843dc3dba0243276c3e3e2f95c3a1dae2f20dd77e69\\\",\\\"dweb:/ipfs/QmViPLRuBdczDVJ96eFY2EbrDY5y1BP4igh9AfjodcMM1J\\\"]},\\\"src/interfaces/IEntityContainer.sol\\\":{\\\"keccak256\\\":\\\"0x95ae0340082f859c0c31108323048c4d179a28df905ba8384f7ab8dd95d2d6a0\\\",\\\"license\\\":\\\"Unlicense\\\",\\\"urls\\\":[\\\"bzz-raw://cbc49eba9e6b4eb603d2ae4189a83b8c9f0b858cd4236c94ebd23b8b06817378\\\",\\\"dweb:/ipfs/QmcTePiUxaua9NrUYWKPNMMPyaCxH1rMtniFkrSkTpwBak\\\"]},\\\"src/interfaces/IEntityIndexer.sol\\\":{\\\"keccak256\\\":\\\"0xd6ca557fd8afe2f16679c67857affc55eb237dbc942a6390097122c65a19a52e\\\",\\\"license\\\":\\\"Unlicense\\\",\\\"urls\\\":[\\\"bzz-raw://a1ea4345f6064267ed8ab657c945407d3c172e019664fe8ecdd069b1b7b44684\\\",\\\"dweb:/ipfs/QmNPv69EEjhA6dv1nC7VHv4JMb35Aop3We52QB5CaAGheF\\\"]},\\\"src/interfaces/IOwned.sol\\\":{\\\"keccak256\\\":\\\"0x14dd27a7fe1bdd1d17d814a40bab1886a6204ba3e45996f45cf8c6bd412e403b\\\",\\\"license\\\":\\\"Unlicense\\\",\\\"urls\\\":[\\\"bzz-raw://b4a5677a2bcc9159d4a90b66af9a888e33ac3cf3eae08f0b8548e9510131ec82\\\",\\\"dweb:/ipfs/Qmdj7Jz274wP2KevSqdpFQc4msVi9jfkrNsQvCFoHNJcDG\\\"]},\\\"src/interfaces/IUint256Component.sol\\\":{\\\"keccak256\\\":\\\"0x8846ddb1701b59f8cbf80225ea8e85bd2991ab6ee0515c011d79a265f47f93fe\\\",\\\"license\\\":\\\"Unlicense\\\",\\\"urls\\\":[\\\"bzz-raw://959ba1dcc93439c82e53a1e9858bac831a3c003eae82fc35edd931d7e7da4f77\\\",\\\"dweb:/ipfs/QmQu2vGG9bDpuTHYJNSW6aXCp4FYCVzew2XpjVjZm59CAx\\\"]},\\\"src/interfaces/IWorld.sol\\\":{\\\"keccak256\\\":\\\"0xde47447df2e0f42b66a1c9ec6432ed30cad604de2b5eb673341abb772832be80\\\",\\\"license\\\":\\\"Unlicense\\\",\\\"urls\\\":[\\\"bzz-raw://83bd8652b8531460cc580d6cd28fc8f0448ec9f032cd6581aee5298a4d0a12e9\\\",\\\"dweb:/ipfs/QmZsnaajiBVjcC6S8K39wdfnyZcH4B1FZYe2qL3p4iiwXD\\\"]},\\\"src/interfaces/Query.sol\\\":{\\\"keccak256\\\":\\\"0x3956cfb4b92afd3eccfea772480deb00ba573629bc0f36db5d948e2d168377cb\\\",\\\"license\\\":\\\"Unlicense\\\",\\\"urls\\\":[\\\"bzz-raw://1aafe610e9283e1d7b1f45ba49cf77c8cf770241eeaa5317171df30b5f114c7d\\\",\\\"dweb:/ipfs/QmYShHHJqSfkdY3vcbKS18AuBpBmfwMUzebxZbPpgZDcfq\\\"]}},\\\"version\\\":1}\",\n  \"metadata\": {\n    \"compiler\": {\n      \"version\": \"0.8.13+commit.abaa5c0e\"\n    },\n    \"language\": \"Solidity\",\n    \"output\": {\n      \"abi\": [\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"writer\",\n              \"type\": \"address\"\n            }\n          ],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\",\n          \"name\": \"authorizeWriter\"\n        },\n        {\n          \"inputs\": [],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"name\": \"getEntities\",\n          \"outputs\": [\n            {\n              \"internalType\": \"uint256[]\",\n              \"name\": \"\",\n              \"type\": \"uint256[]\"\n            }\n          ]\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"bytes\",\n              \"name\": \"value\",\n              \"type\": \"bytes\"\n            }\n          ],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"name\": \"getEntitiesWithValue\",\n          \"outputs\": [\n            {\n              \"internalType\": \"uint256[]\",\n              \"name\": \"\",\n              \"type\": \"uint256[]\"\n            }\n          ]\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"entity\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"name\": \"getRawValue\",\n          \"outputs\": [\n            {\n              \"internalType\": \"bytes\",\n              \"name\": \"\",\n              \"type\": \"bytes\"\n            }\n          ]\n        },\n        {\n          \"inputs\": [],\n          \"stateMutability\": \"pure\",\n          \"type\": \"function\",\n          \"name\": \"getSchema\",\n          \"outputs\": [\n            {\n              \"internalType\": \"string[]\",\n              \"name\": \"keys\",\n              \"type\": \"string[]\"\n            },\n            {\n              \"internalType\": \"enum LibTypes.SchemaValue[]\",\n              \"name\": \"values\",\n              \"type\": \"uint8[]\"\n            }\n          ]\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"entity\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"name\": \"has\",\n          \"outputs\": [\n            {\n              \"internalType\": \"bool\",\n              \"name\": \"\",\n              \"type\": \"bool\"\n            }\n          ]\n        },\n        {\n          \"inputs\": [],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"name\": \"id\",\n          \"outputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"\",\n              \"type\": \"uint256\"\n            }\n          ]\n        },\n        {\n          \"inputs\": [],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"name\": \"owner\",\n          \"outputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"\",\n              \"type\": \"address\"\n            }\n          ]\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"indexer\",\n              \"type\": \"address\"\n            }\n          ],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\",\n          \"name\": \"registerIndexer\"\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_world\",\n              \"type\": \"address\"\n            }\n          ],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\",\n          \"name\": \"registerWorld\"\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"entity\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\",\n          \"name\": \"remove\"\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"entity\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"bytes\",\n              \"name\": \"value\",\n              \"type\": \"bytes\"\n            }\n          ],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\",\n          \"name\": \"set\"\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"newOwner\",\n              \"type\": \"address\"\n            }\n          ],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\",\n          \"name\": \"transferOwnership\"\n        },\n        {\n          \"inputs\": [],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"name\": \"world\",\n          \"outputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"\",\n              \"type\": \"address\"\n            }\n          ]\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"\",\n              \"type\": \"address\"\n            }\n          ],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"name\": \"writeAccess\",\n          \"outputs\": [\n            {\n              \"internalType\": \"bool\",\n              \"name\": \"\",\n              \"type\": \"bool\"\n            }\n          ]\n        }\n      ],\n      \"devdoc\": {\n        \"kind\": \"dev\",\n        \"methods\": {\n          \"authorizeWriter(address)\": {\n            \"params\": {\n              \"writer\": \"Address to grant write access to.\"\n            }\n          },\n          \"getEntitiesWithValue(bytes)\": {\n            \"params\": {\n              \"value\": \"Abi-encoded value to get the list of entities with this value for.\"\n            }\n          },\n          \"getRawValue(uint256)\": {\n            \"params\": {\n              \"entity\": \"Entity to get the raw value in this component for.\"\n            }\n          },\n          \"has(uint256)\": {\n            \"params\": {\n              \"entity\": \"Entity to check whether it has a value in this component for.\"\n            }\n          },\n          \"registerIndexer(address)\": {\n            \"params\": {\n              \"indexer\": \"Address of the indexer to notify when a component value is set.\"\n            }\n          },\n          \"registerWorld(address)\": {\n            \"params\": {\n              \"_world\": \"Address of the World contract.\"\n            }\n          },\n          \"remove(uint256)\": {\n            \"params\": {\n              \"entity\": \"Entity to remove from this component.\"\n            }\n          },\n          \"set(uint256,bytes)\": {\n            \"params\": {\n              \"entity\": \"Entity to set the value for.\",\n              \"value\": \"Value to set for the given entity.\"\n            }\n          },\n          \"transferOwnership(address)\": {\n            \"params\": {\n              \"newOwner\": \"Address of the new owner.\"\n            }\n          }\n        },\n        \"version\": 1\n      },\n      \"userdoc\": {\n        \"kind\": \"user\",\n        \"methods\": {\n          \"authorizeWriter(address)\": {\n            \"notice\": \"Grant write access to this component to the given address. Can only be called by the owner of this component.\"\n          },\n          \"getEntities()\": {\n            \"notice\": \"Get a list of all entities that have a value in this component.\"\n          },\n          \"getEntitiesWithValue(bytes)\": {\n            \"notice\": \"Get a list of all entities that have the specified value in this component.\"\n          },\n          \"getRawValue(uint256)\": {\n            \"notice\": \"Get the raw (abi-encoded) value of the given entity in this component.\"\n          },\n          \"getSchema()\": {\n            \"notice\": \"Return the keys and value types of the schema of this component.\"\n          },\n          \"has(uint256)\": {\n            \"notice\": \"Check whether the given entity has a value in this component.\"\n          },\n          \"id()\": {\n            \"notice\": \"Public identifier of this component \"\n          },\n          \"owner()\": {\n            \"notice\": \"Get the owner of this component \"\n          },\n          \"registerIndexer(address)\": {\n            \"notice\": \"Register a new indexer that gets notified when a component value is set.\"\n          },\n          \"registerWorld(address)\": {\n            \"notice\": \"Register this component in the given world.\"\n          },\n          \"remove(uint256)\": {\n            \"notice\": \"Remove the given entity from this component. Registers the update in the World contract. Can only be called by addresses with write access to this component.\"\n          },\n          \"set(uint256,bytes)\": {\n            \"notice\": \"Set the given component value for the given entity. Registers the update in the World contract. Can only be called by addresses with write access to this component.\"\n          },\n          \"transferOwnership(address)\": {\n            \"notice\": \"Transfer ownership of this component to a new owner. Can only be called by the current owner.\"\n          },\n          \"world()\": {\n            \"notice\": \"Reference to the World contract this component is registered in \"\n          },\n          \"writeAccess(address)\": {\n            \"notice\": \"Addresses with write access to this component \"\n          }\n        },\n        \"version\": 1\n      }\n    },\n    \"settings\": {\n      \"remappings\": [\n        \":@openzeppelin/=../../node_modules/openzeppelin-solidity/\",\n        \":@rari-capital/=../../node_modules/@rari-capital/\",\n        \":abdk-libraries-solidity/=../../node_modules/abdk-libraries-solidity/\",\n        \":base64-sol/=../../node_modules/base64-sol/\",\n        \":ds-test/=../../node_modules/ds-test/src/\",\n        \":forge-std/=../../node_modules/forge-std/src/\",\n        \":hardhat/=../../node_modules/hardhat/\",\n        \":memmove/=../../node_modules/memmove/src/\",\n        \":openzeppelin-solidity/=../../node_modules/openzeppelin-solidity/\",\n        \":solmate/=../../node_modules/@rari-capital/solmate/src/\"\n      ],\n      \"optimizer\": {\n        \"enabled\": true,\n        \"runs\": 1000000\n      },\n      \"metadata\": {\n        \"bytecodeHash\": \"ipfs\"\n      },\n      \"compilationTarget\": {\n        \"src/Component.sol\": \"Component\"\n      },\n      \"libraries\": {}\n    },\n    \"sources\": {\n      \"../../node_modules/forge-std/src/console.sol\": {\n        \"keccak256\": \"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\n        \"urls\": [\n          \"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\n          \"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"../../node_modules/memmove/src/Array.sol\": {\n        \"keccak256\": \"0x0d7681d3392c34f811cebc9598c5e8f4eef6aba431dca9e1fa87267ba51a4515\",\n        \"urls\": [\n          \"bzz-raw://0ffb5179dd40ccacadc2cb26ac99e9ea5148796f6d21413d7e0f37913831bea1\",\n          \"dweb:/ipfs/QmfJogaoqook5JgnUZKib6w6khzViUag3EQb1EZ8aUEasQ\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"../../node_modules/memmove/src/LinkedList.sol\": {\n        \"keccak256\": \"0x2374863d39689178dda92b841e77b835ba8fa550561be23b7861d2e52c0fe8c1\",\n        \"urls\": [\n          \"bzz-raw://8538ec6ca6be4e1b25b74dfd2139586fa2b9dab8d49d91428ed64dc683884598\",\n          \"dweb:/ipfs/Qma7Z6urenqG5Dzqwe8ouGiFH37mbsJEX83tqjSq1PTnRc\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"src/Component.sol\": {\n        \"keccak256\": \"0x00b74ab0dba753d7929eb51cfd486693138402b6fb40561fd4fd27b657e6e9c1\",\n        \"urls\": [\n          \"bzz-raw://c77e94c375ff6d54713d8cde581695ab08879f5b9918262300a029dd77587f60\",\n          \"dweb:/ipfs/QmUPJYxV72n5mMgvPR6itQFJq5S8iqbDTm9Xn7HMK6KihA\"\n        ],\n        \"license\": \"Unlicense\"\n      },\n      \"src/LibTypes.sol\": {\n        \"keccak256\": \"0x6e28306a3fd82d16ffaa780fd4f7dd50749cd7446c5250990855bd903b71bd8d\",\n        \"urls\": [\n          \"bzz-raw://ebde66e846ec8ff4f5676410a5bcbcee4916ad28ad5f1b53c80ccad57cfa0266\",\n          \"dweb:/ipfs/QmWqmukE1AthrjPNke9uqzSpNFKSzshbfircbQx3waiJeA\"\n        ],\n        \"license\": \"Unlicense\"\n      },\n      \"src/MapSet.sol\": {\n        \"keccak256\": \"0x9bf5cd536c741f4ac730862fb49cd3d9527c7c62007b986ada5b0591859cb25c\",\n        \"urls\": [\n          \"bzz-raw://2da724933f2f22704131e39e27f64e83c214a0678b804358f822da31df4c3cf0\",\n          \"dweb:/ipfs/QmYAbxx94WgpwWViMBmguH8UcDmcS2Mopv7tTB89Cdz1my\"\n        ],\n        \"license\": \"Unlicense\"\n      },\n      \"src/Set.sol\": {\n        \"keccak256\": \"0xd6ebb07ab1047aa211cefad877d4ab3f65cbe2ac824c29b5141bc381a9867e95\",\n        \"urls\": [\n          \"bzz-raw://ad9e3bb5ff1c5bfcc7ee9ecc9d2e0db11042fe281de9bac4dd93e3456127c15c\",\n          \"dweb:/ipfs/QmWezbNuLBLP4v2UP7j3iP9f2HKM2ZwaDi173qBKsW197m\"\n        ],\n        \"license\": \"Unlicense\"\n      },\n      \"src/interfaces/IComponent.sol\": {\n        \"keccak256\": \"0xc653b5afc93743ae8606604d4941d085f9f25dc9f1a068e9950944e03bb1a61a\",\n        \"urls\": [\n          \"bzz-raw://dce85cd14551eb9008b05843dc3dba0243276c3e3e2f95c3a1dae2f20dd77e69\",\n          \"dweb:/ipfs/QmViPLRuBdczDVJ96eFY2EbrDY5y1BP4igh9AfjodcMM1J\"\n        ],\n        \"license\": \"Unlicense\"\n      },\n      \"src/interfaces/IEntityContainer.sol\": {\n        \"keccak256\": \"0x95ae0340082f859c0c31108323048c4d179a28df905ba8384f7ab8dd95d2d6a0\",\n        \"urls\": [\n          \"bzz-raw://cbc49eba9e6b4eb603d2ae4189a83b8c9f0b858cd4236c94ebd23b8b06817378\",\n          \"dweb:/ipfs/QmcTePiUxaua9NrUYWKPNMMPyaCxH1rMtniFkrSkTpwBak\"\n        ],\n        \"license\": \"Unlicense\"\n      },\n      \"src/interfaces/IEntityIndexer.sol\": {\n        \"keccak256\": \"0xd6ca557fd8afe2f16679c67857affc55eb237dbc942a6390097122c65a19a52e\",\n        \"urls\": [\n          \"bzz-raw://a1ea4345f6064267ed8ab657c945407d3c172e019664fe8ecdd069b1b7b44684\",\n          \"dweb:/ipfs/QmNPv69EEjhA6dv1nC7VHv4JMb35Aop3We52QB5CaAGheF\"\n        ],\n        \"license\": \"Unlicense\"\n      },\n      \"src/interfaces/IOwned.sol\": {\n        \"keccak256\": \"0x14dd27a7fe1bdd1d17d814a40bab1886a6204ba3e45996f45cf8c6bd412e403b\",\n        \"urls\": [\n          \"bzz-raw://b4a5677a2bcc9159d4a90b66af9a888e33ac3cf3eae08f0b8548e9510131ec82\",\n          \"dweb:/ipfs/Qmdj7Jz274wP2KevSqdpFQc4msVi9jfkrNsQvCFoHNJcDG\"\n        ],\n        \"license\": \"Unlicense\"\n      },\n      \"src/interfaces/IUint256Component.sol\": {\n        \"keccak256\": \"0x8846ddb1701b59f8cbf80225ea8e85bd2991ab6ee0515c011d79a265f47f93fe\",\n        \"urls\": [\n          \"bzz-raw://959ba1dcc93439c82e53a1e9858bac831a3c003eae82fc35edd931d7e7da4f77\",\n          \"dweb:/ipfs/QmQu2vGG9bDpuTHYJNSW6aXCp4FYCVzew2XpjVjZm59CAx\"\n        ],\n        \"license\": \"Unlicense\"\n      },\n      \"src/interfaces/IWorld.sol\": {\n        \"keccak256\": \"0xde47447df2e0f42b66a1c9ec6432ed30cad604de2b5eb673341abb772832be80\",\n        \"urls\": [\n          \"bzz-raw://83bd8652b8531460cc580d6cd28fc8f0448ec9f032cd6581aee5298a4d0a12e9\",\n          \"dweb:/ipfs/QmZsnaajiBVjcC6S8K39wdfnyZcH4B1FZYe2qL3p4iiwXD\"\n        ],\n        \"license\": \"Unlicense\"\n      },\n      \"src/interfaces/Query.sol\": {\n        \"keccak256\": \"0x3956cfb4b92afd3eccfea772480deb00ba573629bc0f36db5d948e2d168377cb\",\n        \"urls\": [\n          \"bzz-raw://1aafe610e9283e1d7b1f45ba49cf77c8cf770241eeaa5317171df30b5f114c7d\",\n          \"dweb:/ipfs/QmYShHHJqSfkdY3vcbKS18AuBpBmfwMUzebxZbPpgZDcfq\"\n        ],\n        \"license\": \"Unlicense\"\n      }\n    },\n    \"version\": 1\n  },\n  \"id\": 9\n}\n","{\n  \"abi\": [\n    {\n      \"inputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"constructor\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"componentId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"component\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"entity\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"ComponentValueRemoved\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"componentId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"component\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"entity\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"bytes\",\n          \"name\": \"data\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"ComponentValueSet\",\n      \"type\": \"event\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"components\",\n      \"outputs\": [\n        {\n          \"internalType\": \"contract IUint256Component\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"id\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getComponent\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"componentAddr\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"getComponentIdFromAddress\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"getNumEntities\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"systemId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getSystemAddress\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"getUniqueEntityId\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"entity\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"hasEntity\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"init\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"components\": [\n            {\n              \"internalType\": \"enum QueryType\",\n              \"name\": \"queryType\",\n              \"type\": \"uint8\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"componentId\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"bytes\",\n              \"name\": \"value\",\n              \"type\": \"bytes\"\n            }\n          ],\n          \"internalType\": \"struct WorldQueryFragment[]\",\n          \"name\": \"worldQueryFragments\",\n          \"type\": \"tuple[]\"\n        }\n      ],\n      \"name\": \"query\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256[]\",\n          \"name\": \"\",\n          \"type\": \"uint256[]\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"register\",\n      \"outputs\": [\n        {\n          \"internalType\": \"contract RegisterSystem\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"componentAddr\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"id\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"registerComponent\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"component\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"entity\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"registerComponentValueRemoved\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"component\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"entity\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"data\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"registerComponentValueSet\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"systemAddr\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"id\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"registerSystem\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"systems\",\n      \"outputs\": [\n        {\n          \"internalType\": \"contract IUint256Component\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    }\n  ],\n  \"methodIdentifiers\": {\n    \"components()\": \"ba62fbe4\",\n    \"getComponent(uint256)\": \"4f27da18\",\n    \"getComponentIdFromAddress(address)\": \"9f54f545\",\n    \"getNumEntities()\": \"d7ecf62b\",\n    \"getSystemAddress(uint256)\": \"fb3ec48b\",\n    \"getUniqueEntityId()\": \"614bfa6e\",\n    \"hasEntity(uint256)\": \"e3d12875\",\n    \"init()\": \"e1c7392a\",\n    \"query((uint8,uint256,bytes)[])\": \"687485a6\",\n    \"register()\": \"1aa3a008\",\n    \"registerComponent(address,uint256)\": \"f3034770\",\n    \"registerComponentValueRemoved(address,uint256)\": \"d803064a\",\n    \"registerComponentValueSet(address,uint256,bytes)\": \"af104e40\",\n    \"registerSystem(address,uint256)\": \"1ee444b7\",\n    \"systems()\": \"0d59332e\"\n  },\n  \"rawMetadata\": \"{\\\"compiler\\\":{\\\"version\\\":\\\"0.8.13+commit.abaa5c0e\\\"},\\\"language\\\":\\\"Solidity\\\",\\\"output\\\":{\\\"abi\\\":[{\\\"inputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"constructor\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":true,\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"componentId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"indexed\\\":true,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"component\\\",\\\"type\\\":\\\"address\\\"},{\\\"indexed\\\":true,\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"entity\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"ComponentValueRemoved\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":true,\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"componentId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"indexed\\\":true,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"component\\\",\\\"type\\\":\\\"address\\\"},{\\\"indexed\\\":true,\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"entity\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"indexed\\\":false,\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"data\\\",\\\"type\\\":\\\"bytes\\\"}],\\\"name\\\":\\\"ComponentValueSet\\\",\\\"type\\\":\\\"event\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"components\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"contract IUint256Component\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"id\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"getComponent\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"componentAddr\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"getComponentIdFromAddress\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"getNumEntities\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"systemId\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"getSystemAddress\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"getUniqueEntityId\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"entity\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"hasEntity\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"bool\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bool\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"init\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"components\\\":[{\\\"internalType\\\":\\\"enum QueryType\\\",\\\"name\\\":\\\"queryType\\\",\\\"type\\\":\\\"uint8\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"componentId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"value\\\",\\\"type\\\":\\\"bytes\\\"}],\\\"internalType\\\":\\\"struct WorldQueryFragment[]\\\",\\\"name\\\":\\\"worldQueryFragments\\\",\\\"type\\\":\\\"tuple[]\\\"}],\\\"name\\\":\\\"query\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"uint256[]\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256[]\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"register\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"contract RegisterSystem\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"componentAddr\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"id\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"registerComponent\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"component\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"entity\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"registerComponentValueRemoved\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"component\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"entity\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"data\\\",\\\"type\\\":\\\"bytes\\\"}],\\\"name\\\":\\\"registerComponentValueSet\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"systemAddr\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"id\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"registerSystem\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"systems\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"contract IUint256Component\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"}],\\\"devdoc\\\":{\\\"kind\\\":\\\"dev\\\",\\\"methods\\\":{},\\\"version\\\":1},\\\"userdoc\\\":{\\\"kind\\\":\\\"user\\\",\\\"methods\\\":{\\\"components()\\\":{\\\"notice\\\":\\\"Get the component registry Uint256Component (mapping from component address to component id)\\\"},\\\"getComponent(uint256)\\\":{\\\"notice\\\":\\\"Deprecated, but left here for backward compatibility. TODO: refactor all consumers. \\\"},\\\"getComponentIdFromAddress(address)\\\":{\\\"notice\\\":\\\"Deprecated, but left here for backward compatibility. TODO: refactor all consumers. \\\"},\\\"getSystemAddress(uint256)\\\":{\\\"notice\\\":\\\"Deprecated, but left here for backward compatibility. TODO: refactor all consumers. \\\"},\\\"getUniqueEntityId()\\\":{\\\"notice\\\":\\\"Get a new unique entity ID.\\\"},\\\"hasEntity(uint256)\\\":{\\\"notice\\\":\\\"Check whether an entity exists in this world.\\\"},\\\"init()\\\":{\\\"notice\\\":\\\"Initialize the World. Separated from the constructor to prevent circular dependencies.\\\"},\\\"query((uint8,uint256,bytes)[])\\\":{\\\"notice\\\":\\\"Helper function to execute a query with query fragments referring to a component ID instead of a component address.\\\"},\\\"registerComponent(address,uint256)\\\":{\\\"notice\\\":\\\"Register a new component in this World. ID must be unique.\\\"},\\\"registerComponentValueRemoved(address,uint256)\\\":{\\\"notice\\\":\\\"Register a component value removal. Emits the `ComponentValueRemoved` event for clients to reconstruct the state.\\\"},\\\"registerComponentValueSet(address,uint256,bytes)\\\":{\\\"notice\\\":\\\"Register a component value update. Emits the `ComponentValueSet` event for clients to reconstruct the state.\\\"},\\\"registerSystem(address,uint256)\\\":{\\\"notice\\\":\\\"Register a new system in this World. ID must be unique.\\\"},\\\"systems()\\\":{\\\"notice\\\":\\\"Get the system registry Uint256Component (mapping from system address to system id)\\\"}},\\\"notice\\\":\\\"The `World` contract is at the core of every on-chain world. Entities, components and systems are registered in the `World`. Components register updates to their state via the `registerComponentValueSet` and `registerComponentValueRemoved` methods, which emit the `ComponentValueSet` and `ComponentValueRemoved` events respectively. Clients can reconstruct the entire state (of all components) by listening to these two events, instead of having to add a separate getter or event listener for every type of data. (Have a look at the MUD network package for a TypeScript implementation of contract/client state sync.) The `World` is an ownerless and permissionless contract. Anyone can register new components and systems in the world (via the `registerComponent` and `registerSystem` methods). Clients decide which components and systems they care about.\\\",\\\"version\\\":1}},\\\"settings\\\":{\\\"compilationTarget\\\":{\\\"src/World.sol\\\":\\\"World\\\"},\\\"evmVersion\\\":\\\"london\\\",\\\"libraries\\\":{},\\\"metadata\\\":{\\\"bytecodeHash\\\":\\\"ipfs\\\"},\\\"optimizer\\\":{\\\"enabled\\\":true,\\\"runs\\\":1000000},\\\"remappings\\\":[\\\":@openzeppelin/=../../node_modules/openzeppelin-solidity/\\\",\\\":@rari-capital/=../../node_modules/@rari-capital/\\\",\\\":abdk-libraries-solidity/=../../node_modules/abdk-libraries-solidity/\\\",\\\":base64-sol/=../../node_modules/base64-sol/\\\",\\\":ds-test/=../../node_modules/ds-test/src/\\\",\\\":forge-std/=../../node_modules/forge-std/src/\\\",\\\":hardhat/=../../node_modules/hardhat/\\\",\\\":memmove/=../../node_modules/memmove/src/\\\",\\\":openzeppelin-solidity/=../../node_modules/openzeppelin-solidity/\\\",\\\":solmate/=../../node_modules/@rari-capital/solmate/src/\\\"]},\\\"sources\\\":{\\\"../../node_modules/forge-std/src/console.sol\\\":{\\\"keccak256\\\":\\\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\\\",\\\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\\\"]},\\\"../../node_modules/memmove/src/Array.sol\\\":{\\\"keccak256\\\":\\\"0x0d7681d3392c34f811cebc9598c5e8f4eef6aba431dca9e1fa87267ba51a4515\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://0ffb5179dd40ccacadc2cb26ac99e9ea5148796f6d21413d7e0f37913831bea1\\\",\\\"dweb:/ipfs/QmfJogaoqook5JgnUZKib6w6khzViUag3EQb1EZ8aUEasQ\\\"]},\\\"../../node_modules/memmove/src/LinkedList.sol\\\":{\\\"keccak256\\\":\\\"0x2374863d39689178dda92b841e77b835ba8fa550561be23b7861d2e52c0fe8c1\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://8538ec6ca6be4e1b25b74dfd2139586fa2b9dab8d49d91428ed64dc683884598\\\",\\\"dweb:/ipfs/Qma7Z6urenqG5Dzqwe8ouGiFH37mbsJEX83tqjSq1PTnRc\\\"]},\\\"src/Component.sol\\\":{\\\"keccak256\\\":\\\"0x00b74ab0dba753d7929eb51cfd486693138402b6fb40561fd4fd27b657e6e9c1\\\",\\\"license\\\":\\\"Unlicense\\\",\\\"urls\\\":[\\\"bzz-raw://c77e94c375ff6d54713d8cde581695ab08879f5b9918262300a029dd77587f60\\\",\\\"dweb:/ipfs/QmUPJYxV72n5mMgvPR6itQFJq5S8iqbDTm9Xn7HMK6KihA\\\"]},\\\"src/LibQuery.sol\\\":{\\\"keccak256\\\":\\\"0xb78d437d35151eddd49123b3bf0b50563fff4225df23beb38374c21c395c82dc\\\",\\\"license\\\":\\\"Unlicense\\\",\\\"urls\\\":[\\\"bzz-raw://d669208321aee800dd9c6845894657b0dbc27077bcbd5c53bdaa08cca6b8b35d\\\",\\\"dweb:/ipfs/QmaGzbhALNBMFDf2287yk91qaHZUSoCnQfZhwM7KPKJRjT\\\"]},\\\"src/LibTypes.sol\\\":{\\\"keccak256\\\":\\\"0x6e28306a3fd82d16ffaa780fd4f7dd50749cd7446c5250990855bd903b71bd8d\\\",\\\"license\\\":\\\"Unlicense\\\",\\\"urls\\\":[\\\"bzz-raw://ebde66e846ec8ff4f5676410a5bcbcee4916ad28ad5f1b53c80ccad57cfa0266\\\",\\\"dweb:/ipfs/QmWqmukE1AthrjPNke9uqzSpNFKSzshbfircbQx3waiJeA\\\"]},\\\"src/MapSet.sol\\\":{\\\"keccak256\\\":\\\"0x9bf5cd536c741f4ac730862fb49cd3d9527c7c62007b986ada5b0591859cb25c\\\",\\\"license\\\":\\\"Unlicense\\\",\\\"urls\\\":[\\\"bzz-raw://2da724933f2f22704131e39e27f64e83c214a0678b804358f822da31df4c3cf0\\\",\\\"dweb:/ipfs/QmYAbxx94WgpwWViMBmguH8UcDmcS2Mopv7tTB89Cdz1my\\\"]},\\\"src/Set.sol\\\":{\\\"keccak256\\\":\\\"0xd6ebb07ab1047aa211cefad877d4ab3f65cbe2ac824c29b5141bc381a9867e95\\\",\\\"license\\\":\\\"Unlicense\\\",\\\"urls\\\":[\\\"bzz-raw://ad9e3bb5ff1c5bfcc7ee9ecc9d2e0db11042fe281de9bac4dd93e3456127c15c\\\",\\\"dweb:/ipfs/QmWezbNuLBLP4v2UP7j3iP9f2HKM2ZwaDi173qBKsW197m\\\"]},\\\"src/System.sol\\\":{\\\"keccak256\\\":\\\"0x7ae9977691c03669629ef9e8251e38285465de7ef843906ff1e947711ba2e220\\\",\\\"license\\\":\\\"Unlicense\\\",\\\"urls\\\":[\\\"bzz-raw://1834ec579d16a2aa9ce39df4c749e3ea7582488c14813c0c3cc5dea1821c7126\\\",\\\"dweb:/ipfs/QmTX2x1sDRRh9RRWiN9AnTdHVKjParxZTK9ykSypmGes6Q\\\"]},\\\"src/World.sol\\\":{\\\"keccak256\\\":\\\"0x48560eb2db9d6b5bb8b6b2d47638b4d670d52ebc1613315dab62c81d50a4cbd3\\\",\\\"license\\\":\\\"Unlicense\\\",\\\"urls\\\":[\\\"bzz-raw://e14861552e94c76468a0e1fcdad4d1a4624f4469479f511a0ceee659b3b521bb\\\",\\\"dweb:/ipfs/Qmd7jzSLcSEEvgCMjivA1MEPx3nSfZ3kmPKXnB1qJe1FvM\\\"]},\\\"src/components/Uint256Component.sol\\\":{\\\"keccak256\\\":\\\"0xdcb7dd8bfb2abb244f00a4f220f8a648e4a5242c83b705fc9b7fe1b73ddbab62\\\",\\\"license\\\":\\\"Unlicense\\\",\\\"urls\\\":[\\\"bzz-raw://23fde57b9fe2c03bfa0462682fb4eaeaf7936950bff72d0762f17540b2df2b1e\\\",\\\"dweb:/ipfs/QmTGePFpJ22CLLvEZzb9ffJNQEbbFqG6ibVNFp3fJs2fJx\\\"]},\\\"src/constants.sol\\\":{\\\"keccak256\\\":\\\"0x486b309f7eadc90994db01b9e0cc9fe2271183c4c572cb8a76fe768563bcc757\\\",\\\"license\\\":\\\"Unlicense\\\",\\\"urls\\\":[\\\"bzz-raw://6cdb841c42cafb78fa8d0c22d782d925f711d59fe552369d1ac8021837246771\\\",\\\"dweb:/ipfs/QmRHdDnx7TPzaQ3rX4W8AT7e2uLA7t42houXkwx2zJ2pTL\\\"]},\\\"src/interfaces/IComponent.sol\\\":{\\\"keccak256\\\":\\\"0xc653b5afc93743ae8606604d4941d085f9f25dc9f1a068e9950944e03bb1a61a\\\",\\\"license\\\":\\\"Unlicense\\\",\\\"urls\\\":[\\\"bzz-raw://dce85cd14551eb9008b05843dc3dba0243276c3e3e2f95c3a1dae2f20dd77e69\\\",\\\"dweb:/ipfs/QmViPLRuBdczDVJ96eFY2EbrDY5y1BP4igh9AfjodcMM1J\\\"]},\\\"src/interfaces/IEntityContainer.sol\\\":{\\\"keccak256\\\":\\\"0x95ae0340082f859c0c31108323048c4d179a28df905ba8384f7ab8dd95d2d6a0\\\",\\\"license\\\":\\\"Unlicense\\\",\\\"urls\\\":[\\\"bzz-raw://cbc49eba9e6b4eb603d2ae4189a83b8c9f0b858cd4236c94ebd23b8b06817378\\\",\\\"dweb:/ipfs/QmcTePiUxaua9NrUYWKPNMMPyaCxH1rMtniFkrSkTpwBak\\\"]},\\\"src/interfaces/IEntityIndexer.sol\\\":{\\\"keccak256\\\":\\\"0xd6ca557fd8afe2f16679c67857affc55eb237dbc942a6390097122c65a19a52e\\\",\\\"license\\\":\\\"Unlicense\\\",\\\"urls\\\":[\\\"bzz-raw://a1ea4345f6064267ed8ab657c945407d3c172e019664fe8ecdd069b1b7b44684\\\",\\\"dweb:/ipfs/QmNPv69EEjhA6dv1nC7VHv4JMb35Aop3We52QB5CaAGheF\\\"]},\\\"src/interfaces/IOwned.sol\\\":{\\\"keccak256\\\":\\\"0x14dd27a7fe1bdd1d17d814a40bab1886a6204ba3e45996f45cf8c6bd412e403b\\\",\\\"license\\\":\\\"Unlicense\\\",\\\"urls\\\":[\\\"bzz-raw://b4a5677a2bcc9159d4a90b66af9a888e33ac3cf3eae08f0b8548e9510131ec82\\\",\\\"dweb:/ipfs/Qmdj7Jz274wP2KevSqdpFQc4msVi9jfkrNsQvCFoHNJcDG\\\"]},\\\"src/interfaces/ISystem.sol\\\":{\\\"keccak256\\\":\\\"0xb592e00cad8c4907f623e12ee8968b1a0d2d3233466616ce52908d97631f57bf\\\",\\\"license\\\":\\\"Unlicense\\\",\\\"urls\\\":[\\\"bzz-raw://9eaa438a69cf74ff00986908f7b38bddf67e5848ae7fb4ef1dbbf3aad42e830a\\\",\\\"dweb:/ipfs/QmXaho8gjkfA2yaU1kKSoP7xn8dBLGnq6QcgBEFfxh5tkU\\\"]},\\\"src/interfaces/IUint256Component.sol\\\":{\\\"keccak256\\\":\\\"0x8846ddb1701b59f8cbf80225ea8e85bd2991ab6ee0515c011d79a265f47f93fe\\\",\\\"license\\\":\\\"Unlicense\\\",\\\"urls\\\":[\\\"bzz-raw://959ba1dcc93439c82e53a1e9858bac831a3c003eae82fc35edd931d7e7da4f77\\\",\\\"dweb:/ipfs/QmQu2vGG9bDpuTHYJNSW6aXCp4FYCVzew2XpjVjZm59CAx\\\"]},\\\"src/interfaces/IWorld.sol\\\":{\\\"keccak256\\\":\\\"0xde47447df2e0f42b66a1c9ec6432ed30cad604de2b5eb673341abb772832be80\\\",\\\"license\\\":\\\"Unlicense\\\",\\\"urls\\\":[\\\"bzz-raw://83bd8652b8531460cc580d6cd28fc8f0448ec9f032cd6581aee5298a4d0a12e9\\\",\\\"dweb:/ipfs/QmZsnaajiBVjcC6S8K39wdfnyZcH4B1FZYe2qL3p4iiwXD\\\"]},\\\"src/interfaces/Query.sol\\\":{\\\"keccak256\\\":\\\"0x3956cfb4b92afd3eccfea772480deb00ba573629bc0f36db5d948e2d168377cb\\\",\\\"license\\\":\\\"Unlicense\\\",\\\"urls\\\":[\\\"bzz-raw://1aafe610e9283e1d7b1f45ba49cf77c8cf770241eeaa5317171df30b5f114c7d\\\",\\\"dweb:/ipfs/QmYShHHJqSfkdY3vcbKS18AuBpBmfwMUzebxZbPpgZDcfq\\\"]},\\\"src/systems/RegisterSystem.sol\\\":{\\\"keccak256\\\":\\\"0x6ea73130e6ed7dd1312f1fd8ddc6c54b5ddd6965ff9dfbd5a251d81286654fbc\\\",\\\"license\\\":\\\"Unlicense\\\",\\\"urls\\\":[\\\"bzz-raw://ddf8288a7da7de28deee21162b947eb1e2751c138f620b91d258f84484f82dff\\\",\\\"dweb:/ipfs/QmU8rgoWbfLsxMXiPt6Wc7sXaQRHRsX6Sb3hDfj1Hw9qjU\\\"]},\\\"src/utils.sol\\\":{\\\"keccak256\\\":\\\"0x296035349987e83f28a34ea95564c737c139002981b18014dd98b6dcd8b3acc5\\\",\\\"license\\\":\\\"Unlicense\\\",\\\"urls\\\":[\\\"bzz-raw://93ada04b8c804a3f65a45b1f0a648d1929607a616623803c277ad9bdc0a7867b\\\",\\\"dweb:/ipfs/QmY8vnJ4yJkBuzMSd8jkXzEAEyYAThCyuTfgrGNf5JEc6P\\\"]}},\\\"version\\\":1}\",\n  \"metadata\": {\n    \"compiler\": {\n      \"version\": \"0.8.13+commit.abaa5c0e\"\n    },\n    \"language\": \"Solidity\",\n    \"output\": {\n      \"abi\": [\n        {\n          \"inputs\": [],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"constructor\"\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"componentId\",\n              \"type\": \"uint256\",\n              \"indexed\": true\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"component\",\n              \"type\": \"address\",\n              \"indexed\": true\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"entity\",\n              \"type\": \"uint256\",\n              \"indexed\": true\n            }\n          ],\n          \"type\": \"event\",\n          \"name\": \"ComponentValueRemoved\",\n          \"anonymous\": false\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"componentId\",\n              \"type\": \"uint256\",\n              \"indexed\": true\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"component\",\n              \"type\": \"address\",\n              \"indexed\": true\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"entity\",\n              \"type\": \"uint256\",\n              \"indexed\": true\n            },\n            {\n              \"internalType\": \"bytes\",\n              \"name\": \"data\",\n              \"type\": \"bytes\",\n              \"indexed\": false\n            }\n          ],\n          \"type\": \"event\",\n          \"name\": \"ComponentValueSet\",\n          \"anonymous\": false\n        },\n        {\n          \"inputs\": [],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"name\": \"components\",\n          \"outputs\": [\n            {\n              \"internalType\": \"contract IUint256Component\",\n              \"name\": \"\",\n              \"type\": \"address\"\n            }\n          ]\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"id\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"name\": \"getComponent\",\n          \"outputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"\",\n              \"type\": \"address\"\n            }\n          ]\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"componentAddr\",\n              \"type\": \"address\"\n            }\n          ],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"name\": \"getComponentIdFromAddress\",\n          \"outputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"\",\n              \"type\": \"uint256\"\n            }\n          ]\n        },\n        {\n          \"inputs\": [],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"name\": \"getNumEntities\",\n          \"outputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"\",\n              \"type\": \"uint256\"\n            }\n          ]\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"systemId\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"name\": \"getSystemAddress\",\n          \"outputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"\",\n              \"type\": \"address\"\n            }\n          ]\n        },\n        {\n          \"inputs\": [],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"name\": \"getUniqueEntityId\",\n          \"outputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"\",\n              \"type\": \"uint256\"\n            }\n          ]\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"entity\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"name\": \"hasEntity\",\n          \"outputs\": [\n            {\n              \"internalType\": \"bool\",\n              \"name\": \"\",\n              \"type\": \"bool\"\n            }\n          ]\n        },\n        {\n          \"inputs\": [],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\",\n          \"name\": \"init\"\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"struct WorldQueryFragment[]\",\n              \"name\": \"worldQueryFragments\",\n              \"type\": \"tuple[]\",\n              \"components\": [\n                {\n                  \"internalType\": \"enum QueryType\",\n                  \"name\": \"queryType\",\n                  \"type\": \"uint8\"\n                },\n                {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"componentId\",\n                  \"type\": \"uint256\"\n                },\n                {\n                  \"internalType\": \"bytes\",\n                  \"name\": \"value\",\n                  \"type\": \"bytes\"\n                }\n              ]\n            }\n          ],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"name\": \"query\",\n          \"outputs\": [\n            {\n              \"internalType\": \"uint256[]\",\n              \"name\": \"\",\n              \"type\": \"uint256[]\"\n            }\n          ]\n        },\n        {\n          \"inputs\": [],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"name\": \"register\",\n          \"outputs\": [\n            {\n              \"internalType\": \"contract RegisterSystem\",\n              \"name\": \"\",\n              \"type\": \"address\"\n            }\n          ]\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"componentAddr\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"id\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\",\n          \"name\": \"registerComponent\"\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"component\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"entity\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\",\n          \"name\": \"registerComponentValueRemoved\"\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"component\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"entity\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"bytes\",\n              \"name\": \"data\",\n              \"type\": \"bytes\"\n            }\n          ],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\",\n          \"name\": \"registerComponentValueSet\"\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"systemAddr\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"id\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\",\n          \"name\": \"registerSystem\"\n        },\n        {\n          \"inputs\": [],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"name\": \"systems\",\n          \"outputs\": [\n            {\n              \"internalType\": \"contract IUint256Component\",\n              \"name\": \"\",\n              \"type\": \"address\"\n            }\n          ]\n        }\n      ],\n      \"devdoc\": {\n        \"kind\": \"dev\",\n        \"methods\": {},\n        \"version\": 1\n      },\n      \"userdoc\": {\n        \"kind\": \"user\",\n        \"methods\": {\n          \"components()\": {\n            \"notice\": \"Get the component registry Uint256Component (mapping from component address to component id)\"\n          },\n          \"getComponent(uint256)\": {\n            \"notice\": \"Deprecated, but left here for backward compatibility. TODO: refactor all consumers. \"\n          },\n          \"getComponentIdFromAddress(address)\": {\n            \"notice\": \"Deprecated, but left here for backward compatibility. TODO: refactor all consumers. \"\n          },\n          \"getSystemAddress(uint256)\": {\n            \"notice\": \"Deprecated, but left here for backward compatibility. TODO: refactor all consumers. \"\n          },\n          \"getUniqueEntityId()\": {\n            \"notice\": \"Get a new unique entity ID.\"\n          },\n          \"hasEntity(uint256)\": {\n            \"notice\": \"Check whether an entity exists in this world.\"\n          },\n          \"init()\": {\n            \"notice\": \"Initialize the World. Separated from the constructor to prevent circular dependencies.\"\n          },\n          \"query((uint8,uint256,bytes)[])\": {\n            \"notice\": \"Helper function to execute a query with query fragments referring to a component ID instead of a component address.\"\n          },\n          \"registerComponent(address,uint256)\": {\n            \"notice\": \"Register a new component in this World. ID must be unique.\"\n          },\n          \"registerComponentValueRemoved(address,uint256)\": {\n            \"notice\": \"Register a component value removal. Emits the `ComponentValueRemoved` event for clients to reconstruct the state.\"\n          },\n          \"registerComponentValueSet(address,uint256,bytes)\": {\n            \"notice\": \"Register a component value update. Emits the `ComponentValueSet` event for clients to reconstruct the state.\"\n          },\n          \"registerSystem(address,uint256)\": {\n            \"notice\": \"Register a new system in this World. ID must be unique.\"\n          },\n          \"systems()\": {\n            \"notice\": \"Get the system registry Uint256Component (mapping from system address to system id)\"\n          }\n        },\n        \"version\": 1\n      }\n    },\n    \"settings\": {\n      \"remappings\": [\n        \":@openzeppelin/=../../node_modules/openzeppelin-solidity/\",\n        \":@rari-capital/=../../node_modules/@rari-capital/\",\n        \":abdk-libraries-solidity/=../../node_modules/abdk-libraries-solidity/\",\n        \":base64-sol/=../../node_modules/base64-sol/\",\n        \":ds-test/=../../node_modules/ds-test/src/\",\n        \":forge-std/=../../node_modules/forge-std/src/\",\n        \":hardhat/=../../node_modules/hardhat/\",\n        \":memmove/=../../node_modules/memmove/src/\",\n        \":openzeppelin-solidity/=../../node_modules/openzeppelin-solidity/\",\n        \":solmate/=../../node_modules/@rari-capital/solmate/src/\"\n      ],\n      \"optimizer\": {\n        \"enabled\": true,\n        \"runs\": 1000000\n      },\n      \"metadata\": {\n        \"bytecodeHash\": \"ipfs\"\n      },\n      \"compilationTarget\": {\n        \"src/World.sol\": \"World\"\n      },\n      \"libraries\": {}\n    },\n    \"sources\": {\n      \"../../node_modules/forge-std/src/console.sol\": {\n        \"keccak256\": \"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\n        \"urls\": [\n          \"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\n          \"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"../../node_modules/memmove/src/Array.sol\": {\n        \"keccak256\": \"0x0d7681d3392c34f811cebc9598c5e8f4eef6aba431dca9e1fa87267ba51a4515\",\n        \"urls\": [\n          \"bzz-raw://0ffb5179dd40ccacadc2cb26ac99e9ea5148796f6d21413d7e0f37913831bea1\",\n          \"dweb:/ipfs/QmfJogaoqook5JgnUZKib6w6khzViUag3EQb1EZ8aUEasQ\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"../../node_modules/memmove/src/LinkedList.sol\": {\n        \"keccak256\": \"0x2374863d39689178dda92b841e77b835ba8fa550561be23b7861d2e52c0fe8c1\",\n        \"urls\": [\n          \"bzz-raw://8538ec6ca6be4e1b25b74dfd2139586fa2b9dab8d49d91428ed64dc683884598\",\n          \"dweb:/ipfs/Qma7Z6urenqG5Dzqwe8ouGiFH37mbsJEX83tqjSq1PTnRc\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"src/Component.sol\": {\n        \"keccak256\": \"0x00b74ab0dba753d7929eb51cfd486693138402b6fb40561fd4fd27b657e6e9c1\",\n        \"urls\": [\n          \"bzz-raw://c77e94c375ff6d54713d8cde581695ab08879f5b9918262300a029dd77587f60\",\n          \"dweb:/ipfs/QmUPJYxV72n5mMgvPR6itQFJq5S8iqbDTm9Xn7HMK6KihA\"\n        ],\n        \"license\": \"Unlicense\"\n      },\n      \"src/LibQuery.sol\": {\n        \"keccak256\": \"0xb78d437d35151eddd49123b3bf0b50563fff4225df23beb38374c21c395c82dc\",\n        \"urls\": [\n          \"bzz-raw://d669208321aee800dd9c6845894657b0dbc27077bcbd5c53bdaa08cca6b8b35d\",\n          \"dweb:/ipfs/QmaGzbhALNBMFDf2287yk91qaHZUSoCnQfZhwM7KPKJRjT\"\n        ],\n        \"license\": \"Unlicense\"\n      },\n      \"src/LibTypes.sol\": {\n        \"keccak256\": \"0x6e28306a3fd82d16ffaa780fd4f7dd50749cd7446c5250990855bd903b71bd8d\",\n        \"urls\": [\n          \"bzz-raw://ebde66e846ec8ff4f5676410a5bcbcee4916ad28ad5f1b53c80ccad57cfa0266\",\n          \"dweb:/ipfs/QmWqmukE1AthrjPNke9uqzSpNFKSzshbfircbQx3waiJeA\"\n        ],\n        \"license\": \"Unlicense\"\n      },\n      \"src/MapSet.sol\": {\n        \"keccak256\": \"0x9bf5cd536c741f4ac730862fb49cd3d9527c7c62007b986ada5b0591859cb25c\",\n        \"urls\": [\n          \"bzz-raw://2da724933f2f22704131e39e27f64e83c214a0678b804358f822da31df4c3cf0\",\n          \"dweb:/ipfs/QmYAbxx94WgpwWViMBmguH8UcDmcS2Mopv7tTB89Cdz1my\"\n        ],\n        \"license\": \"Unlicense\"\n      },\n      \"src/Set.sol\": {\n        \"keccak256\": \"0xd6ebb07ab1047aa211cefad877d4ab3f65cbe2ac824c29b5141bc381a9867e95\",\n        \"urls\": [\n          \"bzz-raw://ad9e3bb5ff1c5bfcc7ee9ecc9d2e0db11042fe281de9bac4dd93e3456127c15c\",\n          \"dweb:/ipfs/QmWezbNuLBLP4v2UP7j3iP9f2HKM2ZwaDi173qBKsW197m\"\n        ],\n        \"license\": \"Unlicense\"\n      },\n      \"src/System.sol\": {\n        \"keccak256\": \"0x7ae9977691c03669629ef9e8251e38285465de7ef843906ff1e947711ba2e220\",\n        \"urls\": [\n          \"bzz-raw://1834ec579d16a2aa9ce39df4c749e3ea7582488c14813c0c3cc5dea1821c7126\",\n          \"dweb:/ipfs/QmTX2x1sDRRh9RRWiN9AnTdHVKjParxZTK9ykSypmGes6Q\"\n        ],\n        \"license\": \"Unlicense\"\n      },\n      \"src/World.sol\": {\n        \"keccak256\": \"0x48560eb2db9d6b5bb8b6b2d47638b4d670d52ebc1613315dab62c81d50a4cbd3\",\n        \"urls\": [\n          \"bzz-raw://e14861552e94c76468a0e1fcdad4d1a4624f4469479f511a0ceee659b3b521bb\",\n          \"dweb:/ipfs/Qmd7jzSLcSEEvgCMjivA1MEPx3nSfZ3kmPKXnB1qJe1FvM\"\n        ],\n        \"license\": \"Unlicense\"\n      },\n      \"src/components/Uint256Component.sol\": {\n        \"keccak256\": \"0xdcb7dd8bfb2abb244f00a4f220f8a648e4a5242c83b705fc9b7fe1b73ddbab62\",\n        \"urls\": [\n          \"bzz-raw://23fde57b9fe2c03bfa0462682fb4eaeaf7936950bff72d0762f17540b2df2b1e\",\n          \"dweb:/ipfs/QmTGePFpJ22CLLvEZzb9ffJNQEbbFqG6ibVNFp3fJs2fJx\"\n        ],\n        \"license\": \"Unlicense\"\n      },\n      \"src/constants.sol\": {\n        \"keccak256\": \"0x486b309f7eadc90994db01b9e0cc9fe2271183c4c572cb8a76fe768563bcc757\",\n        \"urls\": [\n          \"bzz-raw://6cdb841c42cafb78fa8d0c22d782d925f711d59fe552369d1ac8021837246771\",\n          \"dweb:/ipfs/QmRHdDnx7TPzaQ3rX4W8AT7e2uLA7t42houXkwx2zJ2pTL\"\n        ],\n        \"license\": \"Unlicense\"\n      },\n      \"src/interfaces/IComponent.sol\": {\n        \"keccak256\": \"0xc653b5afc93743ae8606604d4941d085f9f25dc9f1a068e9950944e03bb1a61a\",\n        \"urls\": [\n          \"bzz-raw://dce85cd14551eb9008b05843dc3dba0243276c3e3e2f95c3a1dae2f20dd77e69\",\n          \"dweb:/ipfs/QmViPLRuBdczDVJ96eFY2EbrDY5y1BP4igh9AfjodcMM1J\"\n        ],\n        \"license\": \"Unlicense\"\n      },\n      \"src/interfaces/IEntityContainer.sol\": {\n        \"keccak256\": \"0x95ae0340082f859c0c31108323048c4d179a28df905ba8384f7ab8dd95d2d6a0\",\n        \"urls\": [\n          \"bzz-raw://cbc49eba9e6b4eb603d2ae4189a83b8c9f0b858cd4236c94ebd23b8b06817378\",\n          \"dweb:/ipfs/QmcTePiUxaua9NrUYWKPNMMPyaCxH1rMtniFkrSkTpwBak\"\n        ],\n        \"license\": \"Unlicense\"\n      },\n      \"src/interfaces/IEntityIndexer.sol\": {\n        \"keccak256\": \"0xd6ca557fd8afe2f16679c67857affc55eb237dbc942a6390097122c65a19a52e\",\n        \"urls\": [\n          \"bzz-raw://a1ea4345f6064267ed8ab657c945407d3c172e019664fe8ecdd069b1b7b44684\",\n          \"dweb:/ipfs/QmNPv69EEjhA6dv1nC7VHv4JMb35Aop3We52QB5CaAGheF\"\n        ],\n        \"license\": \"Unlicense\"\n      },\n      \"src/interfaces/IOwned.sol\": {\n        \"keccak256\": \"0x14dd27a7fe1bdd1d17d814a40bab1886a6204ba3e45996f45cf8c6bd412e403b\",\n        \"urls\": [\n          \"bzz-raw://b4a5677a2bcc9159d4a90b66af9a888e33ac3cf3eae08f0b8548e9510131ec82\",\n          \"dweb:/ipfs/Qmdj7Jz274wP2KevSqdpFQc4msVi9jfkrNsQvCFoHNJcDG\"\n        ],\n        \"license\": \"Unlicense\"\n      },\n      \"src/interfaces/ISystem.sol\": {\n        \"keccak256\": \"0xb592e00cad8c4907f623e12ee8968b1a0d2d3233466616ce52908d97631f57bf\",\n        \"urls\": [\n          \"bzz-raw://9eaa438a69cf74ff00986908f7b38bddf67e5848ae7fb4ef1dbbf3aad42e830a\",\n          \"dweb:/ipfs/QmXaho8gjkfA2yaU1kKSoP7xn8dBLGnq6QcgBEFfxh5tkU\"\n        ],\n        \"license\": \"Unlicense\"\n      },\n      \"src/interfaces/IUint256Component.sol\": {\n        \"keccak256\": \"0x8846ddb1701b59f8cbf80225ea8e85bd2991ab6ee0515c011d79a265f47f93fe\",\n        \"urls\": [\n          \"bzz-raw://959ba1dcc93439c82e53a1e9858bac831a3c003eae82fc35edd931d7e7da4f77\",\n          \"dweb:/ipfs/QmQu2vGG9bDpuTHYJNSW6aXCp4FYCVzew2XpjVjZm59CAx\"\n        ],\n        \"license\": \"Unlicense\"\n      },\n      \"src/interfaces/IWorld.sol\": {\n        \"keccak256\": \"0xde47447df2e0f42b66a1c9ec6432ed30cad604de2b5eb673341abb772832be80\",\n        \"urls\": [\n          \"bzz-raw://83bd8652b8531460cc580d6cd28fc8f0448ec9f032cd6581aee5298a4d0a12e9\",\n          \"dweb:/ipfs/QmZsnaajiBVjcC6S8K39wdfnyZcH4B1FZYe2qL3p4iiwXD\"\n        ],\n        \"license\": \"Unlicense\"\n      },\n      \"src/interfaces/Query.sol\": {\n        \"keccak256\": \"0x3956cfb4b92afd3eccfea772480deb00ba573629bc0f36db5d948e2d168377cb\",\n        \"urls\": [\n          \"bzz-raw://1aafe610e9283e1d7b1f45ba49cf77c8cf770241eeaa5317171df30b5f114c7d\",\n          \"dweb:/ipfs/QmYShHHJqSfkdY3vcbKS18AuBpBmfwMUzebxZbPpgZDcfq\"\n        ],\n        \"license\": \"Unlicense\"\n      },\n      \"src/systems/RegisterSystem.sol\": {\n        \"keccak256\": \"0x6ea73130e6ed7dd1312f1fd8ddc6c54b5ddd6965ff9dfbd5a251d81286654fbc\",\n        \"urls\": [\n          \"bzz-raw://ddf8288a7da7de28deee21162b947eb1e2751c138f620b91d258f84484f82dff\",\n          \"dweb:/ipfs/QmU8rgoWbfLsxMXiPt6Wc7sXaQRHRsX6Sb3hDfj1Hw9qjU\"\n        ],\n        \"license\": \"Unlicense\"\n      },\n      \"src/utils.sol\": {\n        \"keccak256\": \"0x296035349987e83f28a34ea95564c737c139002981b18014dd98b6dcd8b3acc5\",\n        \"urls\": [\n          \"bzz-raw://93ada04b8c804a3f65a45b1f0a648d1929607a616623803c277ad9bdc0a7867b\",\n          \"dweb:/ipfs/QmY8vnJ4yJkBuzMSd8jkXzEAEyYAThCyuTfgrGNf5JEc6P\"\n        ],\n        \"license\": \"Unlicense\"\n      }\n    },\n    \"version\": 1\n  },\n  \"id\": 16\n}\n","import { arrayToIterator, deferred, mergeIterators, transformIterator } from \"@latticexyz/utils\";\n\nconst indexedDB = self.indexedDB;\nconst VERSION = 2;\n\n/**\n * Initialize an indexedDB store.\n *\n * @param db IDBDatabase\n * @param storeId Id of the store to initialize\n */\nfunction initStore(db: IDBDatabase, storeId: string) {\n  if (!db.objectStoreNames.contains(storeId)) {\n    db.createObjectStore(storeId);\n  }\n}\n\n/**\n * Initialize an indexedDB database.\n *\n * @param dbId Id of the database to initialize.\n * @param stores Keys of the stores to initialize.\n * @param version Optional: version of the database to initialize.\n * @param idb Optional: custom indexedDB factory\n * @returns Promise resolving with IDBDatabase object\n */\nfunction initDb(dbId: string, stores: string[], version = VERSION, idb: IDBFactory = indexedDB) {\n  const [resolve, reject, promise] = deferred<IDBDatabase>();\n\n  const request = idb.open(dbId, version);\n\n  // Create store and index\n  request.onupgradeneeded = () => {\n    const db = request.result;\n    for (const store of stores) {\n      initStore(db, store);\n    }\n  };\n\n  request.onsuccess = () => {\n    const db = request.result;\n    resolve(db);\n  };\n\n  request.onerror = (error) => {\n    reject(new Error(JSON.stringify(error)));\n  };\n\n  return promise;\n}\n\ntype Stores = { [key: string]: unknown };\ntype StoreKey<S extends Stores> = keyof S & string;\n\n/**\n * Initialize an abstracted Cache object to simplify interaction with the indexedDB database.\n *\n * @param id Id of the database to initialize.\n * @param stores Keys of the stores to initialize.\n * @param version Optional: version of the database to initialize.\n * @param idb Optional: custom indexedDB factory\n * @returns Promise resolving with Cache object\n */\nexport async function initCache<S extends Stores>(\n  id: string,\n  stores: StoreKey<S>[],\n  version?: number,\n  idb?: IDBFactory\n) {\n  const db = await initDb(id, stores, version, idb);\n\n  function openStore(store: StoreKey<S>): IDBObjectStore {\n    const tx = db.transaction(store, \"readwrite\");\n    const objectStore = tx.objectStore(store);\n    return objectStore;\n  }\n\n  function set<Store extends StoreKey<S>>(store: Store, key: string, value: S[Store], ignoreResult = false) {\n    const objectStore = openStore(store);\n    const request = objectStore.put(value, key);\n\n    if (ignoreResult) return;\n\n    const [resolve, reject, promise] = deferred<void>();\n\n    request.onerror = (error) => {\n      reject(new Error(JSON.stringify(error)));\n    };\n\n    request.onsuccess = () => {\n      resolve();\n    };\n\n    return promise;\n  }\n\n  function get<Store extends StoreKey<S>>(store: Store, key: string): Promise<S[Store] | undefined> {\n    const [resolve, reject, promise] = deferred<S[Store] | undefined>();\n\n    const objectStore = openStore(store);\n    const request = objectStore.get(key);\n\n    request.onerror = (error) => {\n      reject(new Error(JSON.stringify(error)));\n    };\n\n    request.onsuccess = () => {\n      const item = request.result;\n      resolve(item);\n    };\n\n    return promise;\n  }\n\n  function remove(store: StoreKey<S>, key: string): Promise<void> {\n    const [resolve, reject, promise] = deferred<void>();\n\n    const objectStore = openStore(store);\n    const request = objectStore.delete(key);\n\n    request.onerror = (error) => {\n      reject(new Error(JSON.stringify(error)));\n    };\n\n    request.onsuccess = () => {\n      resolve();\n    };\n\n    return promise;\n  }\n\n  function keys(store: StoreKey<S>): Promise<IterableIterator<string>> {\n    const [resolve, reject, promise] = deferred<IterableIterator<string>>();\n\n    const objectStore = openStore(store);\n    const request = objectStore.getAllKeys();\n\n    request.onerror = (error) => {\n      reject(new Error(JSON.stringify(error)));\n    };\n\n    request.onsuccess = () => {\n      const rawKeys = arrayToIterator(request.result);\n      const stringKeys = transformIterator(rawKeys, (k) => k.toString());\n      resolve(stringKeys);\n    };\n\n    return promise;\n  }\n\n  function values<Store extends StoreKey<S>>(store: Store): Promise<IterableIterator<S[Store]>> {\n    const [resolve, reject, promise] = deferred<IterableIterator<S[Store]>>();\n\n    const objectStore = openStore(store);\n    const request = objectStore.getAll();\n\n    request.onerror = (error) => {\n      reject(new Error(JSON.stringify(error)));\n    };\n\n    request.onsuccess = () => {\n      resolve(arrayToIterator(request.result));\n    };\n\n    return promise;\n  }\n\n  async function entries<Store extends StoreKey<S>>(store: Store): Promise<IterableIterator<[string, S[Store]]>> {\n    const [keyIterator, valueIterator] = await Promise.all([keys(store), values(store)]);\n    return mergeIterators(keyIterator, valueIterator);\n  }\n\n  return { set, get, remove, keys, values, entries, db };\n}\n","import { Components, ComponentValue, EntityID, SchemaOf } from \"@latticexyz/recs\";\nimport { packTuple, transformIterator, unpackTuple } from \"@latticexyz/utils\";\nimport { initCache } from \"../initCache\";\nimport { ECSStateReply } from \"@latticexyz/services/protobuf/ts/ecs-snapshot/ecs-snapshot\";\nimport { NetworkComponentUpdate } from \"../types\";\nimport { BigNumber } from \"ethers\";\n\nexport type State = Map<number, ComponentValue>;\nexport type CacheStore = ReturnType<typeof createCacheStore>;\nexport type ECSCache = Awaited<ReturnType<typeof getIndexDbECSCache>>;\n\nexport function getCacheId(namespace: string, chainId: number, worldAddress: string) {\n  return `${namespace}-${chainId}-${worldAddress}`;\n}\n\nexport function createCacheStore() {\n  const components: string[] = [];\n  const componentToIndex = new Map<string, number>();\n  const entities: string[] = [];\n  const entityToIndex = new Map<string, number>();\n  const blockNumber = 0;\n  const state: State = new Map<number, ComponentValue>();\n\n  return { components, componentToIndex, entities, entityToIndex, blockNumber, state };\n}\n\nexport function storeEvent<Cm extends Components>(\n  cacheStore: CacheStore,\n  { component, entity, value, blockNumber }: Omit<NetworkComponentUpdate<Cm>, \"lastEventInTx\" | \"txHash\">\n) {\n  // Remove the 0 padding from all entityes\n  const normalizedEntity = entity[0] === \"0\" && entity[1] === \"x\" ? BigNumber.from(entity).toHexString() : entity;\n\n  const { components, entities, componentToIndex, entityToIndex, state } = cacheStore;\n\n  // Get component index\n  let componentIndex = componentToIndex.get(component);\n  if (componentIndex == null) {\n    componentIndex = components.push(component) - 1;\n    componentToIndex.set(component as string, componentIndex);\n  }\n\n  // Get entity index\n  let entityIndex = entityToIndex.get(normalizedEntity);\n  if (entityIndex == null) {\n    entityIndex = entities.push(normalizedEntity) - 1;\n    entityToIndex.set(normalizedEntity, entityIndex);\n  }\n\n  // Entity index gets the right 24 bits, component index the left 8 bits\n  const key = packTuple([componentIndex, entityIndex]);\n  if (value == null) state.delete(key);\n  else state.set(key, value);\n\n  // Set block number to one less than the last received event's block number\n  // (Events are expected to be ordered, so once a new block number appears,\n  // the previous block number is done processing)\n  cacheStore.blockNumber = blockNumber - 1;\n}\n\nexport function storeEvents<Cm extends Components>(\n  cacheStore: CacheStore,\n  events: Omit<NetworkComponentUpdate<Cm>, \"lastEventInTx\" | \"txHash\">[]\n) {\n  for (const event of events) {\n    storeEvent(cacheStore, event);\n  }\n}\n\nexport function getCacheStoreEntries<Cm extends Components>({\n  blockNumber,\n  state,\n  components,\n  entities,\n}: CacheStore): IterableIterator<NetworkComponentUpdate<Cm>> {\n  return transformIterator(state.entries(), ([key, value]) => {\n    const [componentIndex, entityIndex] = unpackTuple(key);\n    const component = components[componentIndex];\n    const entity = entities[entityIndex];\n\n    if (component == null || entity == null) {\n      throw new Error(`Unknown component / entity: ${component}, ${entity}`);\n    }\n\n    const ecsEvent: NetworkComponentUpdate<Cm> = {\n      component,\n      entity: entity as EntityID,\n      value: value as ComponentValue<SchemaOf<Cm[keyof Cm]>>,\n      lastEventInTx: false,\n      txHash: \"cache\",\n      blockNumber: blockNumber,\n    };\n\n    return ecsEvent;\n  });\n}\n\nexport function mergeCacheStores(stores: CacheStore[]): CacheStore {\n  const result = createCacheStore();\n\n  // Sort by block number (increasing)\n  const sortedStores = [...stores].sort((a, b) => a.blockNumber - b.blockNumber);\n\n  // Insert the cached events into the result store (from stores with low block number to high number)\n  for (const store of sortedStores) {\n    for (const updateEvent of getCacheStoreEntries(store)) {\n      storeEvent(result, updateEvent);\n    }\n  }\n\n  result.blockNumber = sortedStores[sortedStores.length - 1].blockNumber;\n\n  return result;\n}\n\nexport async function saveCacheStoreToIndexDb(cache: ECSCache, store: CacheStore) {\n  console.log(\"[Cache] store cache with size\", store.state.size, \"at block\", store.blockNumber);\n  await cache.set(\"ComponentValues\", \"current\", store.state);\n  await cache.set(\"Mappings\", \"components\", store.components);\n  await cache.set(\"Mappings\", \"entities\", store.entities);\n  await cache.set(\"BlockNumber\", \"current\", store.blockNumber);\n}\n\nexport async function loadIndexDbCacheStore(cache: ECSCache): Promise<CacheStore> {\n  const state = (await cache.get(\"ComponentValues\", \"current\")) ?? new Map<number, ComponentValue>();\n  const blockNumber = (await cache.get(\"BlockNumber\", \"current\")) ?? 0;\n  const components = (await cache.get(\"Mappings\", \"components\")) ?? [];\n  const entities = (await cache.get(\"Mappings\", \"entities\")) ?? [];\n  const componentToIndex = new Map<string, number>();\n  const entityToIndex = new Map<string, number>();\n\n  // Init componentToIndex map\n  for (let i = 0; i < components.length; i++) {\n    componentToIndex.set(components[i], i);\n  }\n\n  // Init entityToIndex map\n  for (let i = 0; i < entities.length; i++) {\n    entityToIndex.set(entities[i], i);\n  }\n\n  return { state, blockNumber, components, entities, componentToIndex, entityToIndex };\n}\n\nexport async function getIndexDBCacheStoreBlockNumber(cache: ECSCache): Promise<number> {\n  return (await cache.get(\"BlockNumber\", \"current\")) ?? 0;\n}\n\nexport function getIndexDbECSCache(chainId: number, worldAddress: string, version?: number, idb?: IDBFactory) {\n  return initCache<{\n    ComponentValues: State;\n    BlockNumber: number;\n    Mappings: string[];\n    Checkpoint: ECSStateReply;\n  }>(\n    getCacheId(\"ECSCache\", chainId, worldAddress), // Store a separate cache for each World contract address\n    [\"ComponentValues\", \"BlockNumber\", \"Mappings\", \"Checkpoint\"],\n    version,\n    idb\n  );\n}\n","import {\n  JsonRpcProvider,\n  WebSocketProvider,\n  Block,\n  Log,\n  Formatter,\n  BaseProvider,\n  TransactionRequest,\n} from \"@ethersproject/providers\";\nimport { callWithRetry, extractEncodedArguments, range, sleep } from \"@latticexyz/utils\";\nimport { BigNumber, Contract } from \"ethers\";\nimport { resolveProperties, defaultAbiCoder as abi } from \"ethers/lib/utils\";\nimport { Contracts, ContractTopics, ContractEvent, ContractsConfig } from \"./types\";\n\n/**\n * Await network to be reachable.\n *\n * @param provider ethers JsonRpcProvider\n * @param wssProvider ethers WebSocketProvider\n * @returns Promise resolving once the network is reachable\n */\nexport async function ensureNetworkIsUp(provider: JsonRpcProvider, wssProvider?: WebSocketProvider): Promise<void> {\n  const networkInfoPromise = () => {\n    return Promise.all([provider.getBlockNumber(), wssProvider ? wssProvider.getBlockNumber() : Promise.resolve()]);\n  };\n  await callWithRetry(networkInfoPromise, [], 10, 1000);\n  return;\n}\n\n/**\n * Fetch the latest Ethereum block\n *\n * @param provider ethers JsonRpcProvider\n * @param requireMinimumBlockNumber Minimal required block number.\n * If the latest block number is below this number, the method waits for 1300ms and tries again, for at most 10 times.\n * @returns Promise resolving with the latest Ethereum block\n */\nexport async function fetchBlock(provider: JsonRpcProvider, requireMinimumBlockNumber?: number): Promise<Block> {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  for (const _ of range(10)) {\n    const blockPromise = async () => {\n      const rawBlock = await provider.perform(\"getBlock\", {\n        includeTransactions: false,\n        blockTag: provider.formatter.blockTag(await provider._getBlockTag(\"latest\")),\n      });\n      return provider.formatter.block(rawBlock);\n    };\n    const block = await callWithRetry<Block>(blockPromise, [], 10, 1000);\n    if (requireMinimumBlockNumber && block.number < requireMinimumBlockNumber) {\n      await sleep(300);\n      continue;\n    } else {\n      return block;\n    }\n  }\n  throw new Error(\"Could not fetch a block with blockNumber \" + requireMinimumBlockNumber);\n}\n\n/**\n * Fetch logs with the given topics from a given block range.\n *\n * @param provider ethers JsonRpcProvider\n * @param topics Topics to fetch logs for\n * @param startBlockNumber Start of block range to fetch logs from (inclusive)\n * @param endBlockNumber End of block range to fetch logs from (inclusive)\n * @param contracts Contracts to fetch logs from\n * @param requireMinimumBlockNumber Minimal block number required to fetch blocks\n * @returns Promise resolving with an array of logs from the specified block range and topics\n */\nexport async function fetchLogs<C extends Contracts>(\n  provider: JsonRpcProvider,\n  topics: ContractTopics[],\n  startBlockNumber: number,\n  endBlockNumber: number,\n  contracts: ContractsConfig<C>,\n  requireMinimumBlockNumber?: number\n): Promise<Array<Log>> {\n  const getLogPromise = async (contractAddress: string, topics: string[][]): Promise<Array<Log>> => {\n    const params = await resolveProperties({\n      filter: provider._getFilter({\n        fromBlock: startBlockNumber, // inclusive\n        toBlock: endBlockNumber, // inclusive\n        address: contractAddress,\n        topics: topics,\n      }),\n    });\n    const logs: Array<Log> = await provider.perform(\"getLogs\", params);\n    logs.forEach((log) => {\n      if (log.removed == null) {\n        log.removed = false;\n      }\n    });\n    return Formatter.arrayOf(provider.formatter.filterLog.bind(provider.formatter))(logs);\n  };\n\n  const blockPromise = async () => {\n    const _blockNumber = await provider.perform(\"getBlockNumber\", {});\n    const blockNumber = BigNumber.from(_blockNumber).toNumber();\n    return blockNumber;\n  };\n\n  const getLogPromises = () => {\n    const logPromises: Array<Promise<Array<Log>>> = [];\n    for (const [k, c] of Object.entries(contracts)) {\n      const topicsForContract = topics.find((t) => t.key === k)?.topics;\n      if (topicsForContract) {\n        logPromises.push(getLogPromise(c.address, topicsForContract));\n      }\n    }\n    return logPromises;\n  };\n\n  if (requireMinimumBlockNumber) {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    for (const _ in range(10)) {\n      const call = () => Promise.all([blockPromise(), ...getLogPromises()]);\n      const [blockNumber, logs] = await callWithRetry<[number, ...Array<Array<Log>>]>(call, [], 10, 1000);\n      if (blockNumber < requireMinimumBlockNumber) {\n        await sleep(500);\n      } else {\n        return logs.flat();\n      }\n    }\n    throw new Error(\"Could not fetch logs with a required minimum block number\");\n  } else {\n    const call = () => Promise.all([...getLogPromises()]);\n    const logs = await callWithRetry<Array<Array<Log>>>(call, [], 10, 1000);\n    return logs.flat();\n  }\n}\n\n/**\n * Fetch events from block range, ordered by block, transaction index and log index\n *\n * @param provider ethers JsonRpcProvider\n * @param topics Topics to fetch events for\n * @param startBlockNumber Start of block range to fetch events from (inclusive)\n * @param endBlockNumber End of block range to fetch events from (inclusive)\n * @param contracts Contracts to fetch events from\n * @param supportsBatchQueries Set to true if the provider supports batch queries (recommended)\n * @returns Promise resolving with an array of ContractEvents\n */\nexport async function fetchEventsInBlockRange<C extends Contracts>(\n  provider: JsonRpcProvider,\n  topics: ContractTopics[],\n  startBlockNumber: number,\n  endBlockNumber: number,\n  contracts: ContractsConfig<C>,\n  supportsBatchQueries?: boolean\n): Promise<Array<ContractEvent<C>>> {\n  const logs: Array<Log> = await fetchLogs(\n    provider,\n    topics,\n    startBlockNumber,\n    endBlockNumber,\n    contracts,\n    supportsBatchQueries ? endBlockNumber : undefined\n  );\n  // console.log(`[Network] fetched ${logs.length} events from ${startBlockNumber} -> ${endBlockNumber}`);\n  // console.log(`got ${logs.length} logs from range ${startBlockNumber} -> ${endBlockNumber}`);\n  // we need to sort per block, transaction index, and log index\n  logs.sort((a: Log, b: Log) => {\n    if (a.blockNumber < b.blockNumber) {\n      return -1;\n    } else if (a.blockNumber > b.blockNumber) {\n      return 1;\n    } else {\n      if (a.transactionIndex < b.transactionIndex) {\n        return -1;\n      } else if (a.transactionIndex > b.transactionIndex) {\n        return 1;\n      } else {\n        return a.logIndex < b.logIndex ? -1 : 1;\n      }\n    }\n  });\n\n  // construct an object: address => keyof C\n  const addressToContractKey: { [key in string]: keyof C } = {};\n  for (const contractKey of Object.keys(contracts)) {\n    addressToContractKey[contracts[contractKey].address.toLowerCase()] = contractKey;\n  }\n\n  // parse the logs to get the logs description, then turn them into contract events\n  const contractEvents: Array<ContractEvent<C>> = [];\n\n  for (let i = 0; i < logs.length; i++) {\n    const log = logs[i];\n    const contractKey = addressToContractKey[log.address.toLowerCase()];\n    if (!contractKey) {\n      throw new Error(\n        \"This should not happen. An event's address is not part of the contracts dictionnary: \" + log.address\n      );\n    }\n\n    const { address, abi } = contracts[contractKey];\n    const contract = new Contract(address, abi);\n    try {\n      const logDescription = contract.interface.parseLog(log);\n\n      // Set a flag if this is the last event in this transaction\n      const lastEventInTx = logs[i + 1]?.transactionHash !== log.transactionHash;\n\n      contractEvents.push({\n        contractKey,\n        eventKey: logDescription.name,\n        args: logDescription.args,\n        txHash: log.transactionHash,\n        lastEventInTx,\n      });\n    } catch (e) {\n      console.warn(\"Error\", e);\n      console.warn(\"A log couldn't be parsed with the corresponding contract interface!\");\n    }\n  }\n\n  return contractEvents;\n}\n\n/**\n * Get the revert reason from a given transaction hash\n *\n * @param txHash Transaction hash to get the revert reason from\n * @param provider ethers Provider\n * @returns Promise resolving with revert reason string\n */\nexport async function getRevertReason(txHash: string, provider: BaseProvider): Promise<string> {\n  // Decoding the revert reason: https://docs.soliditylang.org/en/latest/control-structures.html#revert\n  const tx = await provider.getTransaction(txHash);\n  tx.gasPrice = undefined; // tx object contains both gasPrice and maxFeePerGas\n  const encodedRevertReason = await provider.call(tx as TransactionRequest);\n  const decodedRevertReason = abi.decode([\"string\"], extractEncodedArguments(encodedRevertReason));\n  return decodedRevertReason[0];\n}\n","import { JsonRpcBatchProvider, JsonRpcProvider, WebSocketProvider } from \"@ethersproject/providers\";\nimport { callWithRetry, observableToComputed, timeoutAfter } from \"@latticexyz/utils\";\nimport { IComputedValue, IObservableValue, observable, reaction, runInAction } from \"mobx\";\nimport { ensureNetworkIsUp } from \"./networkUtils\";\nimport { ProviderConfig } from \"./types\";\n\nexport type Providers = ReturnType<typeof createProvider>;\n\n/**\n * Create a JsonRpcProvider and WebsocketProvider pair\n *\n * @param config Config for the provider pair (see {@link ProviderConfig}).\n * @returns Provider pair: {\n *   json: JsonRpcProvider,\n *   ws: WebSocketProvider\n * }\n */\nexport function createProvider({ jsonRpcUrl, wsRpcUrl, options }: ProviderConfig) {\n  const providers = {\n    json: options?.batch ? new JsonRpcBatchProvider(jsonRpcUrl) : new JsonRpcProvider(jsonRpcUrl),\n    ws: wsRpcUrl ? new WebSocketProvider(wsRpcUrl) : undefined,\n  };\n\n  if (options?.pollingInterval) {\n    providers.json.pollingInterval = options.pollingInterval;\n  }\n\n  return providers;\n}\n\nexport enum ConnectionState {\n  DISCONNECTED,\n  CONNECTING,\n  CONNECTED,\n}\n\n/**\n * Creates a {@link createProvider provider pair} that automatically updates if the config changes\n * and automatically reconnects if the connection is lost.\n *\n * @param config Mobx computed provider config object (see {@link ProviderConfig}).\n * Automatically updates the returned provider pair if the config changes.\n * @returns Automatically reconnecting {@link createProvider provider pair} that updates if the config changes.\n */\nexport async function createReconnectingProvider(config: IComputedValue<ProviderConfig>) {\n  const connected = observable.box<ConnectionState>(ConnectionState.DISCONNECTED);\n  const providers = observable.box<Providers>() as IObservableValue<Providers>;\n  const disposers: (() => void)[] = [];\n\n  async function initProviders() {\n    // Abort if connection is currently being established\n    if (connected.get() === ConnectionState.CONNECTING) return;\n\n    // Invalidate current providers\n    runInAction(() => connected.set(ConnectionState.CONNECTING));\n\n    // Remove listeners from stale providers and close open connections\n    const prevProviders = providers.get();\n    prevProviders?.json.removeAllListeners();\n    prevProviders?.ws?.removeAllListeners();\n    try {\n      prevProviders?.ws?._websocket?.close();\n    } catch {\n      // Ignore errors when closing websocket that was not in an open state\n    }\n\n    const conf = config.get();\n\n    // Create new providers\n    await callWithRetry(async () => {\n      const newProviders = createProvider(conf);\n      // If the connection is not successful, this will throw an error, triggering a retry\n      !conf?.options?.skipNetworkCheck && (await ensureNetworkIsUp(newProviders.json, newProviders.ws));\n      runInAction(() => {\n        providers.set(newProviders);\n        connected.set(ConnectionState.CONNECTED);\n      });\n    });\n  }\n\n  // Create new providers if config changes\n  disposers.push(\n    reaction(\n      () => config.get(),\n      () => initProviders()\n    )\n  );\n\n  // Reconnect providers in case of error\n  disposers.push(\n    reaction(\n      () => providers.get(),\n      (currentProviders) => {\n        if (currentProviders?.ws?._websocket) {\n          currentProviders.ws._websocket.onerror = initProviders;\n          currentProviders.ws._websocket.onclose = () => {\n            // Only reconnect if closed unexpectedly\n            if (connected.get() === ConnectionState.CONNECTED) {\n              initProviders();\n            }\n          };\n        }\n      }\n    )\n  );\n\n  // Keep websocket connection alive\n  const keepAliveInterval = setInterval(async () => {\n    if (connected.get() !== ConnectionState.CONNECTED) return;\n    const currentProviders = providers.get();\n    if (!currentProviders?.ws) return;\n    try {\n      await timeoutAfter(currentProviders.ws.getBlockNumber(), 10000, \"Network Request Timed out\");\n    } catch {\n      initProviders();\n    }\n  }, 10000);\n  disposers.push(() => clearInterval(keepAliveInterval));\n\n  await initProviders();\n\n  return {\n    connected: observableToComputed(connected),\n    providers: observableToComputed(providers),\n    dispose: () => {\n      for (const disposer of disposers) disposer();\n      try {\n        providers.get()?.ws?._websocket?.close();\n      } catch {\n        // Ignore error if websocket is not on OPEN state\n      }\n    },\n  };\n}\n","import { Result } from \"@ethersproject/abi\";\nimport { Components, ComponentValue, EntityID, SchemaOf } from \"@latticexyz/recs\";\nimport { Cached } from \"@latticexyz/utils\";\nimport { BaseContract, ContractInterface } from \"ethers\";\nimport { Observable } from \"rxjs\";\n\nexport interface NetworkConfig {\n  chainId: number;\n  privateKey?: string;\n  clock: ClockConfig;\n  provider: ProviderConfig;\n  checkpointServiceUrl?: string;\n  streamServiceUrl?: string;\n  initialBlockNumber?: number;\n}\n\nexport interface ClockConfig {\n  period: number;\n  initialTime: number;\n  syncInterval: number;\n}\n\nexport type Clock = {\n  time$: Observable<number>;\n  currentTime: number;\n  lastUpdateTime: number;\n  update: (time: number, maintainStale?: boolean) => void;\n  dispose: () => void;\n};\n\nexport interface ProviderConfig {\n  jsonRpcUrl: string;\n  wsRpcUrl?: string;\n  options?: { batch?: boolean; pollingInterval?: number; skipNetworkCheck?: boolean };\n}\n\nexport type Contracts = {\n  [key: string]: BaseContract;\n};\n\nexport type ContractConfig = {\n  address: string;\n  abi: ContractInterface;\n};\n\nexport type ContractsConfig<C extends Contracts> = {\n  [key in keyof C]: ContractConfig;\n};\n\nexport type TxQueue<C extends Contracts> = Cached<C>;\n\nexport type ContractTopics = {\n  key: string;\n  topics: string[][];\n};\n\nexport type ContractEvent<C extends Contracts> = {\n  contractKey: keyof C;\n  eventKey: string;\n  args: Result;\n  txHash: string;\n  lastEventInTx: boolean;\n};\n\n// Mapping from hashed contract component id to client component key\nexport type Mappings<C extends Components> = {\n  [hashedContractId: string]: keyof C;\n};\n\nexport type NetworkComponentUpdate<C extends Components = Components> = {\n  [key in keyof C]: {\n    component: key & string;\n    value: ComponentValue<SchemaOf<C[key]>> | undefined;\n  };\n}[keyof C] & {\n  entity: EntityID;\n  lastEventInTx: boolean;\n  txHash: string;\n  blockNumber: number;\n};\n\nexport type SyncWorkerConfig<Cm extends Components = Components> = {\n  provider: ProviderConfig;\n  initialBlockNumber: number;\n  worldContract: ContractConfig;\n  disableCache?: boolean;\n  chainId: number;\n  checkpointServiceUrl?: string;\n  streamServiceUrl?: string;\n};\n\nexport enum ContractSchemaValue {\n  BOOL,\n  INT8,\n  INT16,\n  INT32,\n  INT64,\n  INT128,\n  INT256,\n  INT,\n  UINT8,\n  UINT16,\n  UINT32,\n  UINT64,\n  UINT128,\n  UINT256,\n  BYTES,\n  STRING,\n  BOOL_ARRAY,\n  INT8_ARRAY,\n  INT16_ARRAY,\n  INT32_ARRAY,\n  INT64_ARRAY,\n  INT128_ARRAY,\n  INT256_ARRAY,\n  INT_ARRAY,\n  UINT8_ARRAY,\n  UINT16_ARRAY,\n  UINT32_ARRAY,\n  UINT64_ARRAY,\n  UINT128_ARRAY,\n  UINT256_ARRAY,\n  BYTES_ARRAY,\n  STRING_ARRAY,\n}\n\nexport const ContractSchemaValueId: { [key in ContractSchemaValue]: string } = {\n  [ContractSchemaValue.BOOL]: \"bool\",\n  [ContractSchemaValue.INT8]: \"int8\",\n  [ContractSchemaValue.INT16]: \"int16\",\n  [ContractSchemaValue.INT32]: \"int32\",\n  [ContractSchemaValue.INT64]: \"int64\",\n  [ContractSchemaValue.INT128]: \"int128\",\n  [ContractSchemaValue.INT256]: \"int256\",\n  [ContractSchemaValue.INT]: \"int\",\n  [ContractSchemaValue.UINT8]: \"uint8\",\n  [ContractSchemaValue.UINT16]: \"uint16\",\n  [ContractSchemaValue.UINT32]: \"uint32\",\n  [ContractSchemaValue.UINT64]: \"uint64\",\n  [ContractSchemaValue.UINT128]: \"uint128\",\n  [ContractSchemaValue.UINT256]: \"uint256\",\n  [ContractSchemaValue.BYTES]: \"bytes\",\n  [ContractSchemaValue.STRING]: \"string\",\n  [ContractSchemaValue.BOOL_ARRAY]: \"bool[]\",\n  [ContractSchemaValue.INT8_ARRAY]: \"int8[]\",\n  [ContractSchemaValue.INT16_ARRAY]: \"int16[]\",\n  [ContractSchemaValue.INT32_ARRAY]: \"int32[]\",\n  [ContractSchemaValue.INT64_ARRAY]: \"int64[]\",\n  [ContractSchemaValue.INT128_ARRAY]: \"int128[]\",\n  [ContractSchemaValue.INT256_ARRAY]: \"int256[]\",\n  [ContractSchemaValue.INT_ARRAY]: \"int[]\",\n  [ContractSchemaValue.UINT8_ARRAY]: \"uint8[]\",\n  [ContractSchemaValue.UINT16_ARRAY]: \"uint16[]\",\n  [ContractSchemaValue.UINT32_ARRAY]: \"uint32[]\",\n  [ContractSchemaValue.UINT64_ARRAY]: \"uint64[]\",\n  [ContractSchemaValue.UINT128_ARRAY]: \"uint128[]\",\n  [ContractSchemaValue.UINT256_ARRAY]: \"uint256[]\",\n  [ContractSchemaValue.BYTES_ARRAY]: \"bytes[]\",\n  [ContractSchemaValue.STRING_ARRAY]: \"string[]\",\n};\n\nexport const ContractSchemaValueArrayToElement = {\n  [ContractSchemaValue.BOOL_ARRAY]: ContractSchemaValue.BOOL,\n  [ContractSchemaValue.INT8_ARRAY]: ContractSchemaValue.INT8,\n  [ContractSchemaValue.INT16_ARRAY]: ContractSchemaValue.INT16,\n  [ContractSchemaValue.INT32_ARRAY]: ContractSchemaValue.INT32,\n  [ContractSchemaValue.INT64_ARRAY]: ContractSchemaValue.INT64,\n  [ContractSchemaValue.INT128_ARRAY]: ContractSchemaValue.INT128,\n  [ContractSchemaValue.INT256_ARRAY]: ContractSchemaValue.INT256,\n  [ContractSchemaValue.INT_ARRAY]: ContractSchemaValue.INT,\n  [ContractSchemaValue.UINT8_ARRAY]: ContractSchemaValue.UINT8,\n  [ContractSchemaValue.UINT16_ARRAY]: ContractSchemaValue.UINT16,\n  [ContractSchemaValue.UINT32_ARRAY]: ContractSchemaValue.UINT32,\n  [ContractSchemaValue.UINT64_ARRAY]: ContractSchemaValue.UINT64,\n  [ContractSchemaValue.UINT128_ARRAY]: ContractSchemaValue.UINT128,\n  [ContractSchemaValue.UINT256_ARRAY]: ContractSchemaValue.INT256,\n  [ContractSchemaValue.BYTES_ARRAY]: ContractSchemaValue.BYTES,\n  [ContractSchemaValue.STRING_ARRAY]: ContractSchemaValue.STRING,\n} as { [key in ContractSchemaValue]: ContractSchemaValue };\n\nexport type ContractSchemaValueTypes = {\n  [ContractSchemaValue.BOOL]: boolean;\n  [ContractSchemaValue.INT8]: number;\n  [ContractSchemaValue.INT16]: number;\n  [ContractSchemaValue.INT32]: number;\n  [ContractSchemaValue.INT64]: string;\n  [ContractSchemaValue.INT128]: string;\n  [ContractSchemaValue.INT256]: string;\n  [ContractSchemaValue.INT]: string;\n  [ContractSchemaValue.UINT8]: number;\n  [ContractSchemaValue.UINT16]: number;\n  [ContractSchemaValue.UINT32]: number;\n  [ContractSchemaValue.UINT64]: string;\n  [ContractSchemaValue.UINT128]: string;\n  [ContractSchemaValue.UINT256]: string;\n  [ContractSchemaValue.BYTES]: string;\n  [ContractSchemaValue.STRING]: string;\n  [ContractSchemaValue.BOOL_ARRAY]: boolean[];\n  [ContractSchemaValue.INT8_ARRAY]: number[];\n  [ContractSchemaValue.INT16_ARRAY]: number[];\n  [ContractSchemaValue.INT32_ARRAY]: number[];\n  [ContractSchemaValue.INT64_ARRAY]: string[];\n  [ContractSchemaValue.INT128_ARRAY]: string[];\n  [ContractSchemaValue.INT256_ARRAY]: string[];\n  [ContractSchemaValue.INT_ARRAY]: string[];\n  [ContractSchemaValue.UINT8_ARRAY]: number[];\n  [ContractSchemaValue.UINT16_ARRAY]: number[];\n  [ContractSchemaValue.UINT32_ARRAY]: number[];\n  [ContractSchemaValue.UINT64_ARRAY]: string[];\n  [ContractSchemaValue.UINT128_ARRAY]: string[];\n  [ContractSchemaValue.UINT256_ARRAY]: string[];\n  [ContractSchemaValue.BYTES_ARRAY]: string[];\n  [ContractSchemaValue.STRING_ARRAY]: string[];\n};\n","import { BigNumber } from \"ethers\";\nimport { BytesLike, defaultAbiCoder as abi } from \"ethers/lib/utils\";\nimport {\n  ContractSchemaValue,\n  ContractSchemaValueArrayToElement,\n  ContractSchemaValueId,\n  ContractSchemaValueTypes,\n} from \"./types\";\n\nexport function flattenValue<V extends ContractSchemaValue>(\n  value: BigNumber | BigNumber[] | number | number[] | boolean | boolean[] | string | string[],\n  valueType: V\n): ContractSchemaValueTypes[V] {\n  // If value is array, recursively flatten elements\n  if (Array.isArray(value))\n    return value.map((v) =>\n      flattenValue(v, ContractSchemaValueArrayToElement[valueType])\n    ) as unknown as ContractSchemaValueTypes[V]; // Typescript things it is possible we return a nested array, but it is not\n\n  // Value is already flat\n  if (typeof value === \"number\" || typeof value === \"string\" || typeof value === \"boolean\")\n    return value as ContractSchemaValueTypes[V];\n\n  // The value returned by abi.decode is Hexable but not a ethers.BigNumber\n  value = BigNumber.from(value);\n\n  // Value is a representable number\n  if (\n    [\n      ContractSchemaValue.INT8,\n      ContractSchemaValue.INT16,\n      ContractSchemaValue.INT32,\n      ContractSchemaValue.UINT8,\n      ContractSchemaValue.UINT16,\n      ContractSchemaValue.UINT32,\n    ].includes(valueType)\n  ) {\n    return value.toNumber() as ContractSchemaValueTypes[V];\n  }\n\n  // Value should be represented as a hex string\n  if (\n    [\n      ContractSchemaValue.INT64,\n      ContractSchemaValue.INT128,\n      ContractSchemaValue.INT256,\n      ContractSchemaValue.UINT64,\n      ContractSchemaValue.UINT128,\n      ContractSchemaValue.UINT256,\n      ContractSchemaValue.BYTES,\n    ].includes(valueType)\n  ) {\n    return value.toHexString() as ContractSchemaValueTypes[V];\n  }\n\n  // Value should be represented a plain string\n  if ([ContractSchemaValue.STRING].includes(valueType)) {\n    return value.toString() as ContractSchemaValueTypes[V];\n  }\n\n  throw new Error(\"Unknown value type\");\n}\n\n/**\n * Construct a decoder function from given keys and valueTypes.\n * The consumer is responsible for providing a type D matching the keys and valueTypes.\n *\n * @param keys Keys of the component value schema.\n * @param valueTypes Value types if the component value schema.\n * @returns Function to decode encoded hex value to component value.\n */\nexport function createDecoder<D extends { [key: string]: unknown }>(\n  keys: (keyof D)[],\n  valueTypes: ContractSchemaValue[]\n): (data: BytesLike) => D {\n  return (data: BytesLike) => {\n    // Decode data with the schema values provided by the component\n    const decoded = abi.decode(\n      valueTypes.map((valueType) => ContractSchemaValueId[valueType]),\n      data\n    );\n\n    // Now keys and valueTypes lengths must match\n    if (keys.length !== valueTypes.length) {\n      throw new Error(\"Component schema keys and values length does not match\");\n    }\n\n    // Construct the client component value\n    const result: Partial<{ [key in keyof D]: unknown }> = {};\n    for (let i = 0; i < keys.length; i++) {\n      result[keys[i]] = flattenValue(decoded[i], valueTypes[i]);\n    }\n\n    return result as D;\n  };\n}\n","import { ethers, VoidSigner } from \"ethers\";\nimport { ContractTopics } from \"./types\";\nimport { Contracts } from \"./types\";\n\nexport type TopicsConfig<C extends Contracts> = {\n  [ContractType in keyof C]: {\n    abi: ethers.ContractInterface;\n    topics: (keyof C[ContractType][\"filters\"])[];\n  };\n};\n\nexport function createTopics<C extends Contracts>(config: TopicsConfig<C>): ContractTopics[] {\n  const contractTopics: ContractTopics[] = [];\n  for (const key of Object.keys(config)) {\n    const { abi, topics } = config[key];\n    const dummyContract = new ethers.Contract(\n      ethers.constants.AddressZero,\n      abi,\n      new VoidSigner(ethers.constants.AddressZero)\n    ) as C[typeof key];\n    const contractTopic = [\n      topics\n        .map((t) => dummyContract.filters[t as string]().topics)\n        .map((topicsOrUndefined) => (topicsOrUndefined || [])[0]),\n    ] as Array<Array<string>>;\n    contractTopics.push({\n      key,\n      topics: contractTopic,\n    });\n  }\n  return contractTopics;\n}\n","import { EntityID } from \"@latticexyz/recs\";\n\nexport enum SyncState {\n  CONNECTING,\n  INITIAL,\n  LIVE,\n}\n\nexport const GodID = \"0x060d\" as EntityID;\n","import { JsonRpcProvider } from \"@ethersproject/providers\";\nimport { EntityID, ComponentValue, Components } from \"@latticexyz/recs\";\nimport { to256BitString, awaitPromise, range } from \"@latticexyz/utils\";\nimport { GrpcWebFetchTransport } from \"@protobuf-ts/grpcweb-transport\";\nimport { BytesLike, Contract, BigNumber } from \"ethers\";\nimport { Observable, map, concatMap, of, from } from \"rxjs\";\nimport { createDecoder } from \"../createDecoder\";\nimport { createTopics } from \"../createTopics\";\nimport { fetchEventsInBlockRange } from \"../networkUtils\";\nimport { ECSStateReply } from \"@latticexyz/services/protobuf/ts/ecs-snapshot/ecs-snapshot\";\nimport { ECSStateSnapshotServiceClient } from \"@latticexyz/services/protobuf/ts/ecs-snapshot/ecs-snapshot.client\";\nimport { ECSStreamServiceClient } from \"@latticexyz/services/protobuf/ts/ecs-stream/ecs-stream.client\";\nimport { NetworkComponentUpdate, ContractConfig } from \"../types\";\nimport { CacheStore, createCacheStore, storeEvent, storeEvents } from \"./CacheStore\";\nimport { abi as ComponentAbi } from \"@latticexyz/solecs/abi/Component.json\";\nimport { abi as WorldAbi } from \"@latticexyz/solecs/abi/World.json\";\nimport { Component, World } from \"@latticexyz/solecs/types/ethers-contracts\";\nimport { SyncState } from \"./constants\";\nimport { ECSStreamBlockBundleReply } from \"@latticexyz/services/protobuf/ts/ecs-stream/ecs-stream\";\n\n/**\n * Create a ECSStateSnapshotServiceClient\n * @param url ECSStateSnapshotService URL\n * @returns ECSStateSnapshotServiceClient\n */\nexport function createSnapshotClient(url: string): ECSStateSnapshotServiceClient {\n  const transport = new GrpcWebFetchTransport({ baseUrl: url, format: \"binary\" });\n  return new ECSStateSnapshotServiceClient(transport);\n}\n\n/**\n * Create a ECSStreamServiceClient\n * @param url ECSStreamService URL\n * @returns ECSStreamServiceClient\n */\nexport function createStreamClient(url: string): ECSStreamServiceClient {\n  const transport = new GrpcWebFetchTransport({ baseUrl: url, format: \"binary\" });\n  return new ECSStreamServiceClient(transport);\n}\n\n/**\n * Return the snapshot block number.\n *\n * @param snapshotClient ECSStateSnapshotServiceClient\n * @param worldAddress Address of the World contract to get the snapshot for.\n * @returns Snapsot block number\n */\nexport async function getSnapshotBlockNumber(\n  snapshotClient: ECSStateSnapshotServiceClient | undefined,\n  worldAddress: string\n): Promise<number> {\n  let blockNumber = -1;\n  if (!snapshotClient) return blockNumber;\n  try {\n    const { response } = await snapshotClient.getStateBlockLatest({ worldAddress });\n    blockNumber = response.blockNumber;\n  } catch (e) {\n    console.error(e);\n  }\n  return blockNumber;\n}\n\n/**\n * Load from the remote snapshot service.\n *\n * @param snapshotClient ECSStateSnapshotServiceClient\n * @param worldAddress Address of the World contract to get the snapshot for.\n * @param decode Function to decode raw component values ({@link createDecode}).\n * @returns Promise resolving with {@link CacheStore} containing the snapshot state.\n */\nexport async function fetchSnapshot(\n  snapshotClient: ECSStateSnapshotServiceClient,\n  worldAddress: string,\n  decode: ReturnType<typeof createDecode>\n): Promise<CacheStore> {\n  const cacheStore = createCacheStore();\n\n  try {\n    const { response } = await snapshotClient.getStateLatest({ worldAddress });\n    await reduceFetchedState(response, cacheStore, decode);\n  } catch (e) {\n    console.error(e);\n  }\n\n  return cacheStore;\n}\n\n/**\n * Load from the remote snapshot service in chunks via a stream.\n *\n * @param snapshotClient ECSStateSnapshotServiceClient\n * @param worldAddress Address of the World contract to get the snapshot for.\n * @param decode Function to decode raw component values ({@link createDecode}).\n * @returns Promise resolving with {@link CacheStore} containing the snapshot state.\n */\nexport async function fetchSnapshotChunked(\n  snapshotClient: ECSStateSnapshotServiceClient,\n  worldAddress: string,\n  decode: ReturnType<typeof createDecode>\n): Promise<CacheStore> {\n  const cacheStore = createCacheStore();\n\n  try {\n    const stream = snapshotClient.getStateLatestStream({ worldAddress });\n    for await (const responseChunk of stream.responses) {\n      await reduceFetchedState(responseChunk, cacheStore, decode);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n\n  return cacheStore;\n}\n\n/**\n * Reduces a snapshot response by storing corresponding ECS events into the cache store.\n *\n * @param response ECSStateReply\n * @param cacheStore {@link CacheStore} to store snapshot state into.\n * @param decode Function to decode raw component values ({@link createDecode}).\n * @returns Promise resolving once state is reduced into {@link CacheStore}.\n */\nexport async function reduceFetchedState(\n  response: ECSStateReply,\n  cacheStore: CacheStore,\n  decode: ReturnType<typeof createDecode>\n): Promise<void> {\n  const { state, blockNumber, stateComponents, stateEntities } = response;\n\n  for (const { componentIdIdx, entityIdIdx, value: rawValue } of state) {\n    const component = to256BitString(stateComponents[componentIdIdx]);\n    const entity = stateEntities[entityIdIdx] as EntityID;\n    const value = await decode(component, rawValue);\n    storeEvent(cacheStore, { component, entity, value, blockNumber });\n  }\n}\n\n/**\n * Create a RxJS stream of {@link NetworkComponentUpdate}s by subscribing to a\n * gRPC streaming service.\n *\n * @param streamServiceUrl URL of the gPRC stream service to subscribe to.\n * @param worldAddress Contract address of the World contract to subscribe to.\n * @param transformWorldEvents Function to transform World events from a stream service ({@link createTransformWorldEventsFromStream}).\n * @returns Stream of {@link NetworkComponentUpdate}s.\n */\nexport function createLatestEventStreamService(\n  streamServiceUrl: string,\n  worldAddress: string,\n  transformWorldEvents: ReturnType<typeof createTransformWorldEventsFromStream>\n) {\n  const streamServiceClient = createStreamClient(streamServiceUrl);\n  const stream = streamServiceClient.subscribeToStreamLatest({\n    worldAddress,\n    blockNumber: true,\n    blockHash: true,\n    blockTimestamp: true,\n    transactionsConfirmed: false, // do not need txs since each ECSEvent contains the hash\n    ecsEvents: true,\n  });\n\n  // Turn stream responses into rxjs NetworkComponentUpdate\n  return from(stream.responses).pipe(\n    map(async (responseChunk) => {\n      const events = await transformWorldEvents(responseChunk);\n      console.log(`[SyncWorker] got ${events.length} events from block ${responseChunk.blockNumber}`);\n      return events;\n    }),\n    awaitPromise(),\n    concatMap((v) => of(...v))\n  );\n}\n\n/**\n * Create a RxJS stream of {@link NetworkComponentUpdate}s by listening to new\n * blocks from the blockNumber$ stream and fetching the corresponding block\n * from the connected RPC.\n *\n * @dev Only use if {@link createLatestEventStreamRPC} is not available.\n *\n * @param blockNumber$ Block number stream\n * @param fetchWorldEvents Function to fetch World events in a block range ({@link createFetchWorldEventsInBlockRange}).\n * @returns Stream of {@link NetworkComponentUpdate}s.\n */\nexport function createLatestEventStreamRPC(\n  blockNumber$: Observable<number>,\n  fetchWorldEvents: ReturnType<typeof createFetchWorldEventsInBlockRange>\n): Observable<NetworkComponentUpdate> {\n  let lastSyncedBlockNumber: number | undefined;\n\n  return blockNumber$.pipe(\n    map(async (blockNumber) => {\n      const from =\n        lastSyncedBlockNumber == null || lastSyncedBlockNumber >= blockNumber ? blockNumber : lastSyncedBlockNumber + 1;\n      const to = blockNumber;\n      lastSyncedBlockNumber = to;\n      const events = await fetchWorldEvents(from, to);\n      console.log(`[SyncWorker] fetched ${events.length} events from block range ${from} -> ${to}`);\n      return events;\n    }),\n    awaitPromise(),\n    concatMap((v) => of(...v))\n  );\n}\n\n/**\n * Fetch ECS events from contracts in the given block range.\n *\n * @param fetchWorldEvents Function to fetch World events in a block range ({@link createFetchWorldEventsInBlockRange}).\n * @param fromBlockNumber Start of block range (inclusive).\n * @param toBlockNumber End of block range (inclusive).\n * @param interval Chunk fetching the blocks in intervals to avoid overwhelming the client.\n * @returns Promise resolving with array containing the contract ECS events in the given block range.\n */\nexport async function fetchEventsInBlockRangeChunked(\n  fetchWorldEvents: ReturnType<typeof createFetchWorldEventsInBlockRange>,\n  fromBlockNumber: number,\n  toBlockNumber: number,\n  interval = 50,\n  setLoadingState?: (state: SyncState, msg: string, percentage: number) => void\n): Promise<NetworkComponentUpdate<Components>[]> {\n  const events: NetworkComponentUpdate<Components>[] = [];\n  const delta = toBlockNumber - fromBlockNumber;\n  const numSteps = Math.ceil(delta / interval);\n  const steps = [...range(numSteps, interval, fromBlockNumber)];\n\n  for (let i = 0; i < steps.length; i++) {\n    const from = steps[i];\n    const to = i === steps.length - 1 ? toBlockNumber : steps[i + 1] - 1;\n    const chunkEvents = await fetchWorldEvents(from, to);\n\n    if (setLoadingState) {\n      setLoadingState(\n        SyncState.INITIAL,\n        `Fetching state from block ${fromBlockNumber} to ${toBlockNumber} (${i * interval}/${delta})`,\n        80\n      );\n    }\n\n    console.log(`[SyncWorker] initial sync fetched ${events.length} events from block range ${from} -> ${to}`);\n\n    events.push(...chunkEvents);\n  }\n\n  return events;\n}\n\n/**\n * Fetch ECS state from contracts in the given block range.\n *\n * @param fetchWorldEvents Function to fetch World events in a block range ({@link createFetchWorldEventsInBlockRange}).\n * @param fromBlockNumber Start of block range (inclusive).\n * @param toBlockNumber End of block range (inclusive).\n * @param interval Chunk fetching the blocks in intervals to avoid overwhelming the client.\n * @returns Promise resolving with {@link CacheStore} containing the contract ECS state in the given block range.\n */\nexport async function fetchStateInBlockRange(\n  fetchWorldEvents: ReturnType<typeof createFetchWorldEventsInBlockRange>,\n  fromBlockNumber: number,\n  toBlockNumber: number,\n  interval = 50,\n  setLoadingState?: (state: SyncState, msg: string, percentage: number) => void\n): Promise<CacheStore> {\n  const cacheStore = createCacheStore();\n\n  const events = await fetchEventsInBlockRangeChunked(\n    fetchWorldEvents,\n    fromBlockNumber,\n    toBlockNumber,\n    interval,\n    setLoadingState\n  );\n\n  storeEvents(cacheStore, events);\n\n  return cacheStore;\n}\n\n// Creates a function to decode raw component values\n/**\n * Create a function to decode raw component values.\n * Fetches component schemas from the contracts and caches them.\n *\n * @param worldConfig Contract address and interface of the World contract\n * @param provider ethers JsonRpcProvider\n * @returns Function to decode raw component values using their contract component id\n */\nexport function createDecode(worldConfig: ContractConfig, provider: JsonRpcProvider) {\n  const decoders: { [key: string]: (data: BytesLike) => ComponentValue } = {};\n  const world = new Contract(worldConfig.address, worldConfig.abi, provider) as World;\n\n  async function decode(componentId: string, data: BytesLike, componentAddress?: string): Promise<ComponentValue> {\n    // Create the decoder if it doesn't exist yet\n    if (!decoders[componentId]) {\n      const address = componentAddress || (await world.getComponent(componentId));\n      console.log(\"Creating decoder for\", address);\n      const component = new Contract(address, ComponentAbi, provider) as Component;\n      const [keys, values] = await component.getSchema();\n      decoders[componentId] = createDecoder(keys, values);\n    }\n\n    // Decode the raw value\n    return decoders[componentId](data);\n  }\n\n  return decode;\n}\n\n/**\n * Create World contract topics for the `ComponentValueSet` and `ComponentValueRemoved` events.\n * @returns World contract topics for the `ComponentValueSet` and `ComponentValueRemoved` events.\n */\nexport function createWorldTopics() {\n  return createTopics<{ World: World }>({\n    World: { abi: WorldAbi, topics: [\"ComponentValueSet\", \"ComponentValueRemoved\"] },\n  });\n}\n\n/**\n * Create a function to fetch World contract events in a given block range.\n * @param provider ethers JsonRpcProvider\n * @param worldConfig Contract address and interface of the World contract.\n * @param batch Set to true if the provider supports batch queries (recommended).\n * @param decode Function to decode raw component values ({@link createDecode})\n * @returns Function to fetch World contract events in a given block range.\n */\nexport function createFetchWorldEventsInBlockRange(\n  provider: JsonRpcProvider,\n  worldConfig: ContractConfig,\n  batch: boolean | undefined,\n  decode: ReturnType<typeof createDecode>\n) {\n  const topics = createWorldTopics();\n\n  // Fetches World events in the provided block range (including from and to)\n  return async (from: number, to: number) => {\n    const contractsEvents = await fetchEventsInBlockRange(provider, topics, from, to, { World: worldConfig }, batch);\n    const ecsEvents: NetworkComponentUpdate[] = [];\n\n    for (const event of contractsEvents) {\n      const { lastEventInTx, txHash, args } = event;\n      const {\n        component: address,\n        entity: entityId,\n        data,\n        componentId: rawComponentId,\n      } = args as unknown as {\n        component: string;\n        entity: BigNumber;\n        data: string;\n        componentId: BigNumber;\n      };\n\n      const component = to256BitString(BigNumber.from(rawComponentId).toHexString());\n      const entity = BigNumber.from(entityId).toHexString() as EntityID;\n      const blockNumber = to;\n\n      const ecsEvent = {\n        component,\n        entity,\n        value: undefined,\n        blockNumber,\n        lastEventInTx,\n        txHash,\n      };\n\n      if (event.eventKey === \"ComponentValueRemoved\") {\n        ecsEvents.push(ecsEvent);\n      }\n\n      if (event.eventKey === \"ComponentValueSet\") {\n        const value = await decode(component, data, address);\n        ecsEvents.push({ ...ecsEvent, value });\n      }\n    }\n\n    return ecsEvents;\n  };\n}\n\n/**\n * Create a function to transform World contract events from a stream service response chunk.\n * @param decode Function to decode raw component values ({@link createDecode})\n * @returns Function to transform World contract events from a stream service.\n */\nexport function createTransformWorldEventsFromStream(decode: ReturnType<typeof createDecode>) {\n  return async (message: ECSStreamBlockBundleReply) => {\n    const { blockNumber, ecsEvents } = message;\n\n    const convertedEcsEvents: NetworkComponentUpdate[] = [];\n\n    for (let i = 0; i < ecsEvents.length; i++) {\n      const ecsEvent = ecsEvents[i];\n\n      const rawComponentId = ecsEvent.componentId;\n      const entityId = ecsEvent.entityId;\n      const txHash = ecsEvent.tx;\n\n      const component = to256BitString(BigNumber.from(rawComponentId).toHexString());\n      const entity = to256BitString(BigNumber.from(entityId).toHexString()) as EntityID;\n\n      const value = ecsEvent.value ? await decode(component, ecsEvent.value) : undefined;\n\n      // Since ECS events are coming in ordered over the wire, we check if the following event has a\n      // different transaction then the current, which would mean an event associated with another\n      // tx\n      const lastEventInTx = ecsEvents[i + 1]?.tx !== ecsEvent.tx;\n\n      convertedEcsEvents.push({\n        component,\n        entity,\n        value,\n        blockNumber,\n        lastEventInTx,\n        txHash,\n      });\n    }\n\n    return convertedEcsEvents;\n  };\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { stretch } from \"@latticexyz/utils\";\nimport { IComputedValue, reaction } from \"mobx\";\nimport { concat, concatMap, EMPTY, endWith, filter, map, range, ReplaySubject, take } from \"rxjs\";\nimport { Providers } from \"./createProvider\";\n\n/**\n * Creates a stream of block numbers based on the `block` event of the currently connected provider.\n *\n * @param providers Mobx computed providers object (created by {@link createReconnectingProvider}).\n * @param options\n * @returns Stream of block numbers based on connected provider's `block` event.\n */\nexport function createBlockNumberStream(\n  providers: IComputedValue<Providers | undefined>,\n  options?: {\n    initialSync?: {\n      initialBlockNumber: number;\n      interval: number;\n    };\n  }\n) {\n  const blockNumberEvent$ = new ReplaySubject<number>(1);\n\n  const initialSync$ = options?.initialSync\n    ? blockNumberEvent$.pipe(\n        take(1), // Take the first block number\n        filter((blockNr) => blockNr > (options.initialSync!.initialBlockNumber || 0)), // Only do inital sync if the first block number we receive is larger than the block number to start from\n        concatMap((blockNr) => {\n          // Create a stepped range that ends with the current number\n          const blocksToSync = blockNr - options.initialSync!.initialBlockNumber;\n          return range(0, Math.ceil(blocksToSync / options.initialSync!.interval)).pipe(\n            map((i) => options.initialSync!.initialBlockNumber + i * options.initialSync!.interval),\n            endWith(blockNr)\n          );\n        }),\n        stretch(50) // Stretch processing of block number to one every 32 milliseconds (during initial sync)\n      )\n    : EMPTY;\n\n  const dispose = reaction(\n    () => providers.get(),\n    (currProviders) => {\n      const provider = currProviders?.ws || currProviders?.json;\n      provider?.on(\"block\", (blockNumber: number) => blockNumberEvent$.next(blockNumber));\n    },\n    { fireImmediately: true }\n  );\n\n  const blockNumber$ = concat(initialSync$, blockNumberEvent$);\n\n  return { blockNumber$, dispose };\n}\n","import { awaitStreamValue, DoWork, keccak256, streamToDefinedComputed } from \"@latticexyz/utils\";\nimport { Observable, Subject } from \"rxjs\";\nimport { NetworkComponentUpdate, SyncWorkerConfig } from \"../types\";\nimport { Components, ComponentValue, SchemaOf } from \"@latticexyz/recs\";\nimport {\n  createCacheStore,\n  getCacheStoreEntries,\n  getIndexDBCacheStoreBlockNumber,\n  getIndexDbECSCache,\n  loadIndexDbCacheStore,\n  saveCacheStoreToIndexDb,\n  storeEvent,\n  storeEvents,\n} from \"./CacheStore\";\nimport { createReconnectingProvider } from \"../createProvider\";\nimport { computed } from \"mobx\";\nimport {\n  createSnapshotClient,\n  createDecode,\n  createFetchWorldEventsInBlockRange,\n  getSnapshotBlockNumber,\n  fetchSnapshotChunked,\n  createLatestEventStreamRPC,\n  createLatestEventStreamService,\n  createTransformWorldEventsFromStream,\n  fetchEventsInBlockRangeChunked,\n} from \"./syncUtils\";\nimport { createBlockNumberStream } from \"../createBlockNumberStream\";\nimport { GodID, SyncState } from \"./constants\";\nexport type Output<Cm extends Components> = NetworkComponentUpdate<Cm>;\n\nexport class SyncWorker<Cm extends Components> implements DoWork<SyncWorkerConfig<Cm>, Output<Cm>> {\n  private input$ = new Subject<SyncWorkerConfig<Cm>>();\n  private output$ = new Subject<Output<Cm>>();\n\n  constructor() {\n    this.init();\n  }\n\n  /**\n   * Pass a loading state component update to the main thread.\n   * Can be used to indicate the initial loading state on a loading screen.\n   * @param state {@link SyncState}\n   * @param msg Message to describe the current loading step.\n   * @param percentage Number between 0 and 100 to describe the loading progress.\n   * @param blockNumber Optional: block number to pass in the component update.\n   */\n  private setLoadingState(state: SyncState, msg: string, percentage: number, blockNumber = 0) {\n    const update: Output<Cm> = {\n      component: keccak256(\"component.LoadingState\"),\n      value: { state, msg, percentage } as unknown as ComponentValue<SchemaOf<Cm[keyof Cm]>>,\n      entity: GodID,\n      txHash: \"worker\",\n      lastEventInTx: false,\n      blockNumber,\n    };\n\n    this.output$.next(update);\n  }\n\n  /**\n   * Start the sync process.\n   *\n   * 1. Get config\n   * 2. Load initial state\n   *   2.1 Get cache block number\n   *   2.2 Get snapshot block number\n   *   2.3 Load from more recent source\n   * 3. Cach up to current block number by requesting events from RPC ( -> TODO: Replace with own service)\n   * 4. Keep in sync\n   *  4.1 If available keep in sync with streaming service\n   *  4.2 Else keep in sync with RPC\n   */\n  private async init() {\n    this.setLoadingState(SyncState.CONNECTING, \"Connecting...\", 0);\n\n    // Turn config into variable accessible outside the stream\n    const computedConfig = await streamToDefinedComputed(this.input$);\n    const {\n      checkpointServiceUrl,\n      streamServiceUrl,\n      chainId,\n      worldContract,\n      provider: { options: providerOptions },\n      initialBlockNumber,\n    } = computedConfig.get();\n\n    // Set up\n    const { providers } = await createReconnectingProvider(computed(() => computedConfig.get().provider));\n    const provider = providers.get().json;\n    const snapshotClient = checkpointServiceUrl ? createSnapshotClient(checkpointServiceUrl) : undefined;\n    const indexDbCache = await getIndexDbECSCache(chainId, worldContract.address);\n    const decode = createDecode(worldContract, provider);\n    const fetchWorldEvents = createFetchWorldEventsInBlockRange(\n      provider,\n      worldContract,\n      providerOptions?.batch,\n      decode\n    );\n    const transformWorldEvents = createTransformWorldEventsFromStream(decode);\n\n    // Start syncing current events, but only start streaming to output once gap between initial state and current block is closed\n\n    console.log(\"[SyncWorker] start initial sync\");\n    this.setLoadingState(SyncState.INITIAL, \"Starting initial sync\", 0);\n    let passLiveEventsToOutput = false;\n    const cacheStore = { current: createCacheStore() };\n    const { blockNumber$ } = createBlockNumberStream(providers);\n    const latestEvent$ = streamServiceUrl\n      ? createLatestEventStreamService(streamServiceUrl, worldContract.address, transformWorldEvents)\n      : createLatestEventStreamRPC(blockNumber$, fetchWorldEvents);\n    const initialLiveEvents: NetworkComponentUpdate<Components>[] = [];\n\n    latestEvent$.subscribe((event) => {\n      // If initial sync is in progress, temporary store the events to apply later\n      if (!passLiveEventsToOutput) return initialLiveEvents.push(event);\n\n      // Store cache to indexdb every block\n      if (event.blockNumber > cacheStore.current.blockNumber + 1)\n        saveCacheStoreToIndexDb(indexDbCache, cacheStore.current);\n\n      storeEvent(cacheStore.current, event);\n      this.output$.next(event as Output<Cm>);\n    });\n    const streamStartBlockNumberPromise = awaitStreamValue(blockNumber$);\n\n    // Load initial state from cache or snapshot service\n    this.setLoadingState(SyncState.INITIAL, \"Fetching cache block number\", 20);\n    const cacheBlockNumber = await getIndexDBCacheStoreBlockNumber(indexDbCache);\n    const snapshotBlockNumber = await getSnapshotBlockNumber(snapshotClient, worldContract.address);\n    console.log(\n      `[SyncWorker] cache block: ${cacheBlockNumber}, snapshot block: ${snapshotBlockNumber}, start sync at ${initialBlockNumber}`\n    );\n    let initialState = createCacheStore();\n    if (initialBlockNumber > Math.max(cacheBlockNumber, snapshotBlockNumber)) {\n      initialState.blockNumber = initialBlockNumber;\n    } else {\n      const syncFromSnapshot = snapshotClient && snapshotBlockNumber > cacheBlockNumber + 100; // Load from cache if the snapshot is less than 100 blocks newer than the cache\n\n      if (syncFromSnapshot) {\n        this.setLoadingState(SyncState.INITIAL, \"Fetching initial state from snapshot\", 50);\n        initialState = await fetchSnapshotChunked(snapshotClient, worldContract.address, decode);\n      } else {\n        this.setLoadingState(SyncState.INITIAL, \"Fetching initial state from cache\", 50);\n        initialState = await loadIndexDbCacheStore(indexDbCache);\n      }\n\n      console.log(`[SyncWorker] got ${initialState.state.size} items from ${syncFromSnapshot ? \"snapshot\" : \"cache\"}`);\n    }\n\n    // Load events from gap between initial state and current block number from RPC\n    const streamStartBlockNumber = await streamStartBlockNumberPromise;\n    this.setLoadingState(\n      SyncState.INITIAL,\n      `Fetching state from block ${initialState.blockNumber} to ${streamStartBlockNumber}`,\n      80\n    );\n\n    const gapStateEvents = await fetchEventsInBlockRangeChunked(\n      fetchWorldEvents,\n      initialState.blockNumber,\n      streamStartBlockNumber,\n      50,\n      this.setLoadingState.bind(this)\n    );\n\n    console.log(\n      `[SyncWorker] got ${gapStateEvents.length} items from block range ${initialState.blockNumber} -> ${streamStartBlockNumber}`\n    );\n\n    // Merge initial state, gap state and live events since initial sync started\n    storeEvents(initialState, [...gapStateEvents, ...initialLiveEvents]);\n    cacheStore.current = initialState;\n    console.log(`[SyncWorker] initial sync state size: ${cacheStore.current.state.size}`);\n\n    this.setLoadingState(SyncState.INITIAL, `Initializing with ${cacheStore.current.state.size} state entries`, 90);\n\n    // Pass current cacheStore to output and start passing live events\n    for (const update of getCacheStoreEntries(cacheStore.current)) {\n      this.output$.next(update as Output<Cm>);\n    }\n\n    // Save initial state to cache\n    saveCacheStoreToIndexDb(indexDbCache, cacheStore.current);\n\n    // Let the client know loading is complete\n    this.setLoadingState(SyncState.LIVE, `Streaming live events`, 100, cacheStore.current.blockNumber);\n    passLiveEventsToOutput = true;\n  }\n\n  public work(input$: Observable<SyncWorkerConfig<Cm>>): Observable<Output<Cm>> {\n    input$.subscribe(this.input$);\n    return this.output$.asObservable();\n  }\n}\n",null,"import { runWorker } from \"@latticexyz/utils\";\nimport { SyncWorker } from \"./SyncWorker\";\n\nconsole.log(\"Starting Sync Worker\");\nrunWorker(new SyncWorker());\n",null],"names":["module1","exports","assert","val","msg","Error","inherits","ctor","superCtor","super_","TempCtor","prototype","constructor","BN","number","base","endian","isBN","this","negative","words","length","red","_init","Buffer","wordSize","window","parcelRequire","e","parseHex4Bits","string","index","c","charCodeAt","parseHexByte","lowerBound","r","parseBase","str","start","end","mul","b","len","Math","min","i","move","dest","src","num","Array","isArray","max","left","right","cmp","_initNumber","_initArray","toString","replace","_parseHex","_parseBase","toArray","ceil","j","w","off","_strip","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","_move","clone","_expand","size","_normSign","Symbol","for","inspect","e1","zeros","groupSizes","groupBases","padding","out","carry","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","smallMulTo","self","a","lo","k","ncarry","rword","maxJ","ArrayType","byteLength","reqLength","res","allocUnsafe","allocate","_toArrayLikeLE","position","shift","_toArrayLikeBE","clz32","_countBits","t","_zeroBits","bitLength","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","add","sub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","x","y","mulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","mulp","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","toBitArray","q","iushln","bits","carryMask","newCarry","ishln","iushrn","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","acc","modn","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","name","tmp","_tmp","K256","call","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","undefined","strip","input","output","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u","module","$6k2y8","$bd83261506ddda7f$var$logger","$5t9tT","Logger","$56Tv7","version","$bd83261506ddda7f$var$arrayifyInteger","value","result","unshift","$bd83261506ddda7f$var$unarrayifyInteger","data","offset","$bd83261506ddda7f$var$_encode","object","payload","forEach","child","concat","isBytesLike","throwArgumentError","slice","arrayify","length1","$bd83261506ddda7f$export$c564cdbbe6da493","hexlify","$bd83261506ddda7f$var$_decodeChildren","childOffset","decoded","$bd83261506ddda7f$var$_decode","push","consumed","throwError","errors","BUFFER_OVERRUN","lengthLength","lengthLength1","length2","length3","$bd83261506ddda7f$export$2f872c0f2117be69","bytes","$49a696a17ed28496$var$logger","$9Efue","$49a696a17ed28496$var$isHexable","toHexString","$49a696a17ed28496$var$addSlice","array","args","arguments","Uint8Array","apply","$49a696a17ed28496$export$9a14abb1a440cd5e","$49a696a17ed28496$export$b02a40aff8e4ad18","$49a696a17ed28496$export$c6fabfbfd097fc30","$49a696a17ed28496$var$isInteger","v","$49a696a17ed28496$export$3131421a7d01b4fb","options","checkSafeUint53","parseInt","String","allowMissingPrefix","substring","hex","hexPad","result1","$49a696a17ed28496$export$ee1b3e54f0441b22","items","objects","map","item","reduce","accum","set","$49a696a17ed28496$export$a8f4574d0e56446c","$49a696a17ed28496$export$3cdc770bf8b2ed3d","match","$49a696a17ed28496$var$HexCharacters","$49a696a17ed28496$export$2b0d6b5fbe698c70","floor","toLowerCase","$49a696a17ed28496$export$13882f896d3c0683","$49a696a17ed28496$export$15da666eba198c18","endOffset","$49a696a17ed28496$export$6d4b99629b38754a","$49a696a17ed28496$export$6916af760a341dd3","trimmed","$49a696a17ed28496$export$967bc0082a978949","$49a696a17ed28496$export$e9c46a54370b47e8","$49a696a17ed28496$export$7fb170f1e457988f","signature","_vs","recoveryParam","yParityAndS","compact","vs","recId","vs1","$49a696a17ed28496$export$71bb9d78a59bbe25","$ejixc","$3fb703f026fbbb73$var$_permanentCensorErrors","$3fb703f026fbbb73$var$_censorErrors","$3fb703f026fbbb73$var$LogLevels","debug","default","info","warning","error","$3fb703f026fbbb73$var$_logLevel","$3fb703f026fbbb73$var$_globalLogger","$3fb703f026fbbb73$var$_normalizeError","missing","form","normalize","join","fromCharCode","message","$3fb703f026fbbb73$var$_checkNormalize","$3fb703f026fbbb73$export$243e62d78d3b544d","LogLevel","$3fb703f026fbbb73$export$d4e71bc0b80dc0fb","ErrorCode","$3fb703f026fbbb73$var$HEX","$3fb703f026fbbb73$export$efa9a398d6368992","Object","defineProperty","enumerable","writable","_log","logLevel","level","console","log","levels","DEBUG","INFO","warn","WARNING","makeError","code","params","UNKNOWN_ERROR","messageDetails","keys","key","JSON","stringify","reason","url","NUMERIC_FAULT","fault","CALL_EXCEPTION","INSUFFICIENT_FUNDS","MISSING_NEW","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","TRANSACTION_REPLACED","UNPREDICTABLE_GAS_LIMIT","INVALID_ARGUMENT","argument","condition","assertArgument","checkNormalize","UNSUPPORTED_OPERATION","operation","checkArgumentCount","count","expectedCount","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","checkNew","target","kind","checkAbstract","static","censorship","permanent","globalLogger","$a6b137997544d704$export$83d89fbfd8236492","$7063dcc77b8ca770$export$83d89fbfd8236492","$3b88909ee49f07f5$export$83d89fbfd8236492","$d77d25209b4c1e73$export$2f872c0f2117be69","textData","atob","$d77d25209b4c1e73$export$c564cdbbe6da493","btoa","$d9e4b97773179f52$export$69f1b2dcda23c5f8","$d9e4b97773179f52$export$45b10814cc054894","$d9e4b97773179f52$export$7ea66e3774a60b67","$d9e4b97773179f52$export$34a52f00f601f6f1","$d9e4b97773179f52$export$812b0cbd5e8a72ab","$d9e4b97773179f52$export$f24f9e11d63bb314","$d9e4b97773179f52$export$b71357c7e07ca1f1","$d9e4b97773179f52$export$2e58a4b541fdcbe8","$d9e4b97773179f52$export$183b950bde9faab8","$d9e4b97773179f52$export$4785c77169fea59e","$d9e4b97773179f52$export$242a185dfcffac5b","$d9e4b97773179f52$export$58c04ae0ae31877d","$d9e4b97773179f52$export$d058ca695f8c6f11","$d9e4b97773179f52$export$a1efd7fc3e986367","$d9e4b97773179f52$export$bbfea4a2b5abaab4","$d9e4b97773179f52$export$97ad4afc7de86152","$d9e4b97773179f52$export$ce4673d9a79f6a4b","$d9e4b97773179f52$export$786cc99fc6eedc0b","$d9e4b97773179f52$export$45c59b9a1848dd0","$d9e4b97773179f52$export$50d8f613e76d3034","$d9e4b97773179f52$export$b8e83683c60ee162","$d9e4b97773179f52$export$aeeb51790d1bcc4a","$d9e4b97773179f52$export$bb7c616f719ad9c","$d9e4b97773179f52$export$4d63290824f9d7df","$d9e4b97773179f52$export$2f64ceb90ef28ea1","$d9e4b97773179f52$export$8d2089d465f6d10d","$d9e4b97773179f52$var$isSurrogatePair","$d9e4b97773179f52$var$htonl","$d9e4b97773179f52$var$zero2","$d9e4b97773179f52$var$zero8","$5YlUS","enc","$amOaW","d","buf","pos","ah","al","bh","bl","ch","cl","dh","dl","eh","el","$78c2e1461ed6430b$var$assert","equal","create","configurable","$26a6effc57174dbc$export$8687658379b577e6","$26a6effc57174dbc$var$BlockHash","pending","pendingTotal","blockSize","outSize","hmacStrength","padLength","_delta8","_delta32","update","$iHQbG","join32","_update","digest","_pad","_digest","$2587775f8d43b025$export$5091bdda49ba90f5","$2587775f8d43b025$export$97b70509d4e397ea","$2587775f8d43b025$export$bced8d2aada2d1c9","$2587775f8d43b025$export$612d47d55dedde45","$2587775f8d43b025$export$a888d2532e6dc7bb","$6f7f3b1ce8985b6b$var$rotl32","rotl32","$6f7f3b1ce8985b6b$var$sum32","sum32","$6f7f3b1ce8985b6b$var$sum32_5","sum32_5","$6f7f3b1ce8985b6b$var$ft_1","$egbnb","ft_1","$6f7f3b1ce8985b6b$var$BlockHash","$3jK8M","BlockHash","$6f7f3b1ce8985b6b$var$sha1_K","$6f7f3b1ce8985b6b$var$SHA1","W","toHex32","split32","$a61b61c1896ead06$export$5a92649d7ddb9f63","$a61b61c1896ead06$export$c6d0d020c3a6269","$a61b61c1896ead06$export$eb90c27fca05f956","$a61b61c1896ead06$export$14a4a98e063b1999","$a61b61c1896ead06$export$d20cecfa1564c686","$a61b61c1896ead06$export$44fd472a12fc6db","$a61b61c1896ead06$export$1ed238bb6ea1dd47","$a61b61c1896ead06$var$rotr32","rotr32","$a61b61c1896ead06$var$ch32","$a61b61c1896ead06$var$maj32","$a61b61c1896ead06$var$p32","$3ad34c578765a53c$var$SHA224","$5ewsm","$3cf76fc0cd1dccd3$var$sum32","$3cf76fc0cd1dccd3$var$sum32_4","sum32_4","$3cf76fc0cd1dccd3$var$sum32_5","$3cf76fc0cd1dccd3$var$ch32","ch32","$3cf76fc0cd1dccd3$var$maj32","maj32","$3cf76fc0cd1dccd3$var$s0_256","s0_256","$3cf76fc0cd1dccd3$var$s1_256","s1_256","$3cf76fc0cd1dccd3$var$g0_256","g0_256","$3cf76fc0cd1dccd3$var$g1_256","g1_256","$3cf76fc0cd1dccd3$var$BlockHash","$3cf76fc0cd1dccd3$var$sha256_K","$3cf76fc0cd1dccd3$var$SHA256","f","T1","T2","$f6d4c421fe543a8b$var$SHA384","$b6V1q","$816c7c9ee113c92f$var$rotr64_hi","rotr64_hi","$816c7c9ee113c92f$var$rotr64_lo","rotr64_lo","$816c7c9ee113c92f$var$shr64_hi","shr64_hi","$816c7c9ee113c92f$var$shr64_lo","shr64_lo","$816c7c9ee113c92f$var$sum64","sum64","$816c7c9ee113c92f$var$sum64_hi","sum64_hi","$816c7c9ee113c92f$var$sum64_lo","sum64_lo","$816c7c9ee113c92f$var$sum64_4_hi","sum64_4_hi","$816c7c9ee113c92f$var$sum64_4_lo","sum64_4_lo","$816c7c9ee113c92f$var$sum64_5_hi","sum64_5_hi","$816c7c9ee113c92f$var$sum64_5_lo","sum64_5_lo","$816c7c9ee113c92f$var$BlockHash","$816c7c9ee113c92f$var$sha512_K","$816c7c9ee113c92f$var$SHA512","$816c7c9ee113c92f$var$ch64_hi","xh","xl","yh","yl","zh","$816c7c9ee113c92f$var$ch64_lo","zl","$816c7c9ee113c92f$var$maj64_hi","$816c7c9ee113c92f$var$maj64_lo","$816c7c9ee113c92f$var$s0_512_hi","$816c7c9ee113c92f$var$s0_512_lo","$816c7c9ee113c92f$var$s1_512_hi","$816c7c9ee113c92f$var$s1_512_lo","$816c7c9ee113c92f$var$g0_512_hi","$816c7c9ee113c92f$var$g0_512_lo","$816c7c9ee113c92f$var$g1_512_hi","$816c7c9ee113c92f$var$g1_512_lo","_prepareBlock","c0_hi","c0_lo","c1_hi","c1_lo","c2_hi","c2_lo","c3_hi","c3_lo","fh","fl","gh","gl","hh","hl","c4_hi","c4_lo","T1_hi","T1_lo","T2_hi","T2_lo","$809711ff36fa186c$export$d1cea0ee4e3f0d3e","$809711ff36fa186c$var$rotl32","$809711ff36fa186c$var$sum32","$809711ff36fa186c$var$sum32_3","sum32_3","$809711ff36fa186c$var$sum32_4","$809711ff36fa186c$var$BlockHash","$809711ff36fa186c$var$RIPEMD160","$809711ff36fa186c$var$f","$809711ff36fa186c$var$K","$809711ff36fa186c$var$Kh","E","Ah","Bh","Ch","Dh","Eh","T","$809711ff36fa186c$var$r","$809711ff36fa186c$var$s","$809711ff36fa186c$var$rh","$809711ff36fa186c$var$sh","$635bca46f353aee6$var$Hmac","hash","Hash","inner","outer","$4b08503421352fcc$var$die","mockGlobal","_len","_key","assign","objectPrototype","EMPTY_ARRAY","globalThis","EMPTY_OBJECT","$parcel$global","hasProxy","$4b08503421352fcc$var$assign","assertProxies","$4b08503421352fcc$var$getDescriptor","die","$4b08503421352fcc$var$defineProperty","$4b08503421352fcc$var$objectPrototype","warnAboutProxyRequirement","$4b08503421352fcc$var$EMPTY_ARRAY","freeze","globalState","$4b08503421352fcc$var$EMPTY_OBJECT","$4b08503421352fcc$var$hasProxy","Proxy","$4b08503421352fcc$var$plainObjectString","$4b08503421352fcc$var$assertProxies","invoked","isStringish","func","$4b08503421352fcc$var$noop","$4b08503421352fcc$var$isFunction","fn","isObject","$4b08503421352fcc$var$isStringish","isPlainObject","proto","protoConstructor","isGenerator","$4b08503421352fcc$var$isPlainObject","addHiddenProp","propName","hasOwnProperty","$4b08503421352fcc$var$isGenerator","obj","addHiddenFinalProp","displayName","createInstanceofPredicate","$4b08503421352fcc$var$addHiddenFinalProp","isES6Map","$4b08503421352fcc$var$createInstanceofPredicate","theClass","hasGetOwnPropertySymbols","$4b08503421352fcc$var$isES6Map","filter","thing","$4b08503421352fcc$var$isES6Set","Set","$4b08503421352fcc$var$hasGetOwnPropertySymbols","getOwnPropertySymbols","getOwnPropertyDescriptors","Reflect","ownKeys","getOwnPropertyNames","storedAnnotationsSymbol","decorator","storeAnnotation","done","hasProp","fieldName","assertNotDecorated","isOverride","$4b08503421352fcc$var$storedAnnotationsSymbol","annotation","property","$mobx","Atom","isBeingObserved_","observers_","adm","actionDescriptor","createActionDescriptor","onBOL","name_","reportChanged","startBatch","propagateChanged","endBatch","lastAccessedBy_","lowestObserverState_","$4b08503421352fcc$var$IDerivationState_","NOT_TRACKING_","onBUOL","isAtom","onBecomeObservedHandler","onBecomeUnobservedHandler","listener","_proto","onBUO","identityComparer","deepEqual","$4b08503421352fcc$var$reportObserved","comparer","identity","structural","shallow","shallowComparer","deepEnhancer","$4b08503421352fcc$var$isAtom","$4b08503421352fcc$var$Atom","observable","arg3","$4b08503421352fcc$var$ON_BECOME_OBSERVED","$4b08503421352fcc$export$f8586f6f22b9cba9","atom","$4b08503421352fcc$export$d9328cbeeb64e882","isES6Set","$4b08503421352fcc$var$deepEqual","isAction","shallowEnhancer","autoAction","deep","$4b08503421352fcc$export$5ab46cbf6120b33a","referenceEnhancer","$4b08503421352fcc$export$8c23365ce94ba925","override","$4b08503421352fcc$export$ccc7b0636abaffc3","$4b08503421352fcc$export$b8aa795084cbf86b","make_","descriptor","newValue","$4b08503421352fcc$var$OVERRIDE","safeDescriptors","assertActionDescriptor","$4b08503421352fcc$var$make_$1","extend_","$4b08503421352fcc$var$extend_$1","source","_this$options_","options_","bound","target_","$4b08503421352fcc$export$b956e38827fca970","$4b08503421352fcc$var$createActionDescriptor","createFlowAnnotation","annotationType_","proxyTrap","_annotation$options_$","_annotation$options_$2","_annotation$options_4","_adm$proxy_2","_ref2","$4b08503421352fcc$var$globalState","_adm$proxy_","_annotation$options_","isFlow","flowDescriptor","createFlowDescriptor","_annotation$options_2","_annotation$options_3","proxy_","isPlainObject_","assertFlowDescriptor","$4b08503421352fcc$var$make_$2","isMobXFlow","$4b08503421352fcc$var$hasProp","$4b08503421352fcc$var$createFlowDescriptor","$4b08503421352fcc$var$extend_$2","createComputedAnnotation","_this$options_2","assertComputedDescriptor","bind","get","$4b08503421352fcc$var$createComputedAnnotation","assertObservableDescriptor","defineObservableProperty_","autoAnnotation","createAutoAnnotation","defineComputedProperty_","$4b08503421352fcc$var$_extends","$4b08503421352fcc$var$createObservableAnnotation","$4b08503421352fcc$var$make_$4","$4b08503421352fcc$var$extend_$4","_this$options_$enhanc","enhancer","$4b08503421352fcc$var$deepEnhancer","$4b08503421352fcc$var$createAutoAnnotation","actionAnnotation","$4b08503421352fcc$var$extend_$5","observableAnnotation","_this$options_3","_this$options_4","createAction","autoBind","OBSERVABLE","OBSERVABLE_REF","defaultCreateObservableOptions","ref","defaultDecorator","asCreateObservableOptions","_this$options_5","observableDecoratorAnnotation","createObservableAnnotation","defineProperty_","observableShallowAnnotation","$4b08503421352fcc$var$createAction","getEnhancerFromOptions","_this$options_6","getAnnotationFromOptions","$4b08503421352fcc$var$defaultCreateObservableOptions","isObservable","$4b08503421352fcc$var$observableAnnotation","$4b08503421352fcc$var$observableRefAnnotation","$4b08503421352fcc$var$referenceEnhancer","$4b08503421352fcc$var$observableShallowAnnotation","getEnhancerFromAnnotation","$4b08503421352fcc$export$31960fb081a18155","$4b08503421352fcc$export$f5afceff386badf9","$4b08503421352fcc$export$27a7faddcfd44960","$4b08503421352fcc$export$da6b063694cb52c1","createActionAnnotation","$4b08503421352fcc$var$observableStructAnnotation","oldValue","$4b08503421352fcc$var$observableDecoratorAnnotation","$4b08503421352fcc$var$createDecoratorAnnotation","observableFactories","$4b08503421352fcc$var$createObservable","ObservableSet","$4b08503421352fcc$export$5cd057a6046189f9","createDecoratorAnnotation","struct","observableStructAnnotation","createObservable","COMPUTED_STRUCT","arg2","computedStructAnnotation","box","$4b08503421352fcc$var$storeAnnotation","$4b08503421352fcc$var$_getDescriptor","$4b08503421352fcc$var$ObservableValue","$4b08503421352fcc$var$getEnhancerFromOptions","equals","opts","$4b08503421352fcc$var$asCreateObservableOptions","ComputedValue","$4b08503421352fcc$var$createLegacyArray","$4b08503421352fcc$var$createObservableArray","initialValues","computed","currentActionId","nextActionId","isFunctionNameConfigurable","tmpNameDescriptor","props","decorators","useProxies","proxy","$4b08503421352fcc$var$asObservableObject","_target$$mobx","_target$$mobx$proxy_","dehanceValue_","dehancer","$4b08503421352fcc$var$objectProxyTraps","$4b08503421352fcc$var$asDynamicObservableObject","$4b08503421352fcc$var$computedAnnotation","$4b08503421352fcc$var$COMPUTED","runInfo","_startAction","arg1","canRunAsDerivation","_endAction","$4b08503421352fcc$var$ComputedValue","notifySpy_","$4b08503421352fcc$var$computedStructAnnotation","$4b08503421352fcc$var$currentActionId","$4b08503421352fcc$var$isFunctionNameConfigurable","$4b08503421352fcc$var$_getDescriptor$config","$4b08503421352fcc$var$tmpNameDescriptor","untrackedStart","prevAllowStateChanges_","prevAllowStateReads_","runAsAction_","actionName","prevDerivation_","startTime_","actionId_","parentActionId_","scope","allowStateChangesStart","allowStateChanges","allowStateChangesEnd","runAsAction","$4b08503421352fcc$var$startBatch","$4b08503421352fcc$var$allowStateChangesStart","CREATE","ObservableValue","$4b08503421352fcc$var$nextActionId","notifySpy","error_","allowStateReadsEnd","hasUnreportedChange_","interceptors_","changeListeners_","suppressReactionErrors","$4b08503421352fcc$export$e510c5d1ea4358b1","value_","$4b08503421352fcc$var$allowStateChangesEnd","isSpyEnabled","checkIfStateModificationsAreAllowed","_Atom","change","_this","setNewValue_","hasListeners","type","UPDATE","interceptChange","reportObserved","intercept_","registerInterceptor","prepareNewValue_","fireImmediately","observableKind","$4b08503421352fcc$var$interceptChange","registerListener","$4b08503421352fcc$var$UPDATE","UNCHANGED","valueOf","$4b08503421352fcc$var$hasListeners","$4b08503421352fcc$var$notifyListeners","isObservableValue","handler","$4b08503421352fcc$var$registerInterceptor","observe_","dependenciesState_","IDerivationState_","observing_","newObserving_","isPendingUnobservation_","diffValue_","unboundDepsCount_","isComputing_","isRunningSetter_","setter_","isTracing_","TraceMode","equals_","requiresReaction_","$4b08503421352fcc$var$_Symbol$toPrimitive$1","toPrimitive","isComputingDerivation","isCaughtException","runId_","UP_TO_DATE_","triggeredBy_","trackAndCompute","derivation","wasSuspended","$4b08503421352fcc$var$TraceMode","changed","keepAlive_","computeValue_","track","trackDerivedFunction","scope_","compareStructural","requiresReaction","CaughtException","POSSIBLY_STALE_","dispose","onBO","clearObserving","autorun","inBatch","prevTrackingContext","trackingContext","untrackedEnd","STALE_","reportExceptionInDerivation_","errorHandler_","$4b08503421352fcc$var$propagateChangeConfirmed","firstTime","prevValue","$4b08503421352fcc$var$shouldCompute","prevU","warnAboutUntrackedRead_","cause","isComputedValue","$4b08503421352fcc$var$trackDerivedFunction","disableErrorBoundaries","$4b08503421352fcc$var$CaughtException","suspend_","prevAllowStateReads","prevUntracked","obs","changeDependenciesStateTo0","trackingDerivation","bindDependencies","lowestNewObservingDerivationState","dep","i0","$4b08503421352fcc$var$untrackedStart","$4b08503421352fcc$var$isComputedValue","observing","$4b08503421352fcc$var$untrackedEnd","prevObserving","$4b08503421352fcc$var$changeDependenciesStateTo0","onBecomeStale_","context","runId","prevTracking","allowStateReadsStart","allowStateReads","MobXGlobals","pendingReactions","isRunningReactions","globalReactionErrorHandlers","computedRequiresReaction","reactionRequiresObservable","$4b08503421352fcc$var$removeObserver","_dep","observableRequiresReaction","verifyProxies","_dep2","canMergeGlobalState","isolateCalled","global","__mobxGlobals","$4b08503421352fcc$var$bindDependencies","$4b08503421352fcc$export$c7b7fb1b2b410642","__mobxInstanceCount","$4b08503421352fcc$export$8c437e4d572e2f99","action","isolateGlobalState","getGlobal","getGlobalState","$4b08503421352fcc$export$84c93b6404d77e6f","hasObservers","$4b08503421352fcc$var$MobXGlobals","removeObserver","mobxGuid","queueForUnobservation","enforceActions","$4b08503421352fcc$var$canMergeGlobalState","pendingUnobservations","global1","$4b08503421352fcc$var$addObserver","node","logTraceInfo","$4b08503421352fcc$var$queueForUnobservation","printDepTree","tree","lines","Reaction","$4b08503421352fcc$var$endBatch","requiresObservable_","onInvalidate_","isDisposed_","isTrackPending_","isScheduled_","runReactions","isScheduled","runReaction_","$4b08503421352fcc$var$propagateChanged","isRunning_","onReactionError","idx","reactionScheduler","NONE","runReactionsHelper","allReactions","iterations","schedule_","remainingReactions","$4b08503421352fcc$var$runReactions","isReaction","setReactionScheduler","baseScheduler","spyReport","listeners","spyReportStart","END_EVENT","spyReportEnd","ACTION","prevReaction","ACTION_BOUND","AUTOACTION","AUTOACTION_BOUND","DEFAULT_ACTION_NAME","actionBoundAnnotation","autoActionAnnotation","createActionFactory","isFunction","$4b08503421352fcc$var$clearObserving","runInAction","executeAction","enterBreakPoint","interceptors","BREAK","LOG","$4b08503421352fcc$export$357889f174732d38","requiresObservable","$4b08503421352fcc$var$runReactionsHelper","view","run","reaction","createSchedulerFromOptions","splice","expression","$4b08503421352fcc$var$AUTOACTION","$4b08503421352fcc$var$DEFAULT_ACTION_NAME","errorHandler","$4b08503421352fcc$var$actionAnnotation","$4b08503421352fcc$var$createActionAnnotation","$4b08503421352fcc$var$ACTION","$4b08503421352fcc$var$autoActionBoundAnnotation","ON_BECOME_OBSERVED","ON_BECOME_UNOBSERVED","$4b08503421352fcc$var$createActionFactory","interceptHook","hook","$4b08503421352fcc$var$autoActionAnnotation","listenersKey","hookListeners","$4b08503421352fcc$export$31eb53bd5b582a97","ALWAYS","OBSERVED","$4b08503421352fcc$export$4abd31caebb0bb24","_opts$name","_opts","scheduler","delay","$4b08503421352fcc$export$d2ae4167a30cf6bb","onError","extendObservable","properties","annotations","descriptors","asObservableObject","reactionRunner","getDependencyTree","nodeToDependencyTree","$4b08503421352fcc$var$actionBoundAnnotation","$4b08503421352fcc$var$run","$4b08503421352fcc$var$createSchedulerFromOptions","dependencies","$4b08503421352fcc$export$7203b476385689ae","getAtom","_opts$name2","nodeToObserverTree","baseFn","pendingPromise","runSync","generatorId","FlowCancellationError","flowBoundAnnotation","flowAnnotation","flow","nextValue","generator","effectAction","reject","$4b08503421352fcc$export$25fc416d10fa1afa","cb","Promise","$4b08503421352fcc$export$59d8134e963031bd","$4b08503421352fcc$var$getOwnPropertyDescriptors","$4b08503421352fcc$export$f246528900dd4467","interceptReads","propOrHandler","isObservableMap","$4b08503421352fcc$var$generatorId","_isObservable","isObservableObject","$4b08503421352fcc$var$flowAnnotation","$4b08503421352fcc$var$createFlowAnnotation","$4b08503421352fcc$var$flowBoundAnnotation","isObservableArray","values","gen","promise","resolve","stepId","isObservableSet","entries","onRejected","err","then","cancel","$4b08503421352fcc$var$cancelPromise","_res","yieldedPromise","rejector","toJSHelper","__alreadySeen","values_","has","$4b08503421352fcc$var$isReaction","$4b08503421352fcc$var$getAtomFromArgs","listenable","thisArg","makeObservable","$4b08503421352fcc$var$getAdm","remove","setArrayLength_","has_","get_","preventExtensions","_getAdm$set_","ObservableArrayAdministration","set_","deleteProperty","owned_","atom_","enhancer_","lastKnownLength_","$4b08503421352fcc$var$hasInterceptors","interceptable","dehanceValues_","$4b08503421352fcc$var$once","indexOf","added","addedCount","removedCount","newLength","$4b08503421352fcc$var$registerListener","currentLength","updateArrayLength_","oldLength","legacyMode_","oldItems","newItems","isNaN","$4b08503421352fcc$var$arrayExtensions","notifyArrayChildUpdate_","notify","notifyArraySplice_","debugObjectName","SPLICE","removed","newV","oldV","notifyListeners","hasInterceptors","spliceWithArray_","createObservableArray","owned","arrayTraps","arrayExtensions","clear","deleteCount","lengthDelta","spliceWithArray","spliceItemsIntoValues_","_this$values_","pop","reverse","sort","$4b08503421352fcc$var$SPLICE","addArrayExtension","simpleFunc","mapLikeFunc","reduceLikeFunc","funcName","funcFactory","dehancedValues","$4b08503421352fcc$var$ObservableArrayAdministration","currentValue","$4b08503421352fcc$var$arrayTraps","isObservableArrayAdministration","ObservableMapMarker","ADD","DELETE","ObservableMap","keysAtom_","createAtom","data_","hasMap_","Map","merge","_len2","_key2","newEntry","entry","_len3","_key3","hasKey","$4b08503421352fcc$var$addArrayExtension","element","addValue_","_this2","_this3","callback","$4b08503421352fcc$var$simpleFunc","transaction","$4b08503421352fcc$var$mapLikeFunc","$4b08503421352fcc$var$reduceLikeFunc","$4b08503421352fcc$var$ADD","iterator","initialData","$4b08503421352fcc$var$ObservableMapMarker","makeIterable","$4b08503421352fcc$export$2e17fe64ec9a826e","updateValue_","other","$4b08503421352fcc$var$DELETE","$4b08503421352fcc$export$2d62d2646dd2fb3c","_this3$hasMap_$get","replacementMap","convertToMap","keysReportChangedCalled","_change","deleted","keyExisted","_this4","_this4$hasMap_$get","iter2","iter1","orderedData","self1","_keys$next","$4b08503421352fcc$var$makeIterable","_keys$next2","$4b08503421352fcc$var$_Symbol$iterator","dataStructure","_step","_iterator","_step$value","ObservableSetMarker","symbols","propertyIsEnumerable","_this6","_step2","_iterator2","$4b08503421352fcc$var$_createForOfIteratorHelperLoose","_step3","observableValues","nextIndex","$4b08503421352fcc$var$convertToMap","_this7","_iterator3","_step4","_iterator4","_value","_step4$value","_value2","next1","next2","from","$4b08503421352fcc$var$_Symbol$toStringTag","$4b08503421352fcc$export$db1c0901f08fc6fd","toStringTag","$4b08503421352fcc$var$ObservableSetMarker","callbackFn","defaultAnnotation_","appliedAnnotations_","pendingKeys_","getObservablePropValue_","_change2","outcome","assertAnnotable","$4b08503421352fcc$var$_Symbol$toStringTag$1","$4b08503421352fcc$export$2235f602a7a77c81","notifyPropertyAddition_","delete_","deleteOutcome","cachedDescriptor","_this$target_$storedA","getPrototypeOf","$4b08503421352fcc$var$recordAnnotationApplied","ObservableObjectAdministration","isObservableObjectAdministration","getCachedObservablePropDescriptor","descriptorCache","$4b08503421352fcc$var$getCachedObservablePropDescriptor","recordAnnotationApplied","requestedAnnotationType","ENTRY_0","StubArray","__proto__","inherit","LegacyObservableArray","arrays","_this$pendingKeys_","_getDescriptor","prop","_this$pendingKeys_$ge","createArrayBufferItem","reserveArrayBuffer","OBSERVABLE_ARRAY_BUFFER_SIZE","_this$pendingKeys_2","_this$pendingKeys_2$g","ownKeys_","getAdministration","$4b08503421352fcc$var$ownKeys","_options$name","depth","_options$defaultDecor","$4b08503421352fcc$var$addHiddenProp","$4b08503421352fcc$var$isObservableObjectAdministration","$4b08503421352fcc$var$ObservableObjectAdministration","$4b08503421352fcc$var$descriptorCache","setObservablePropValue_","className","_adm$target_$storedAn","$4b08503421352fcc$var$createArrayEntryDescriptor","$4b08503421352fcc$var$OBSERVABLE_ARRAY_BUFFER_SIZE","setPrototypeOf","_StubArray","_Symbol$toStringTag","_Symbol$iterator","unwrap","areArrays","$4b08503421352fcc$var$_assertThisInitialized","aCtor","bCtor","$4b08503421352fcc$var$ENTRY_0","aStack","bStack","isAnnotation","$4b08503421352fcc$var$createArrayBufferItem","$4b08503421352fcc$var$LegacyObservableArray","__MOBX_DEVTOOLS_GLOBAL_HOOK__","spy","extras","getDebugName","getSelf","_ref","$6dc58564861bca13$var$push","arr","newArr","$6dc58564861bca13$var$trapNames","$6dc58564861bca13$var$keys","getOwnPropertyDescriptor","$4fb1349756486974$var$extendStatics","$4fb1349756486974$export$a8ba968b8961cb8a","TypeError","__","$4fb1349756486974$export$1050f835b63b671e","_arguments","P","fulfilled","step","rejected","$4fb1349756486974$export$67ebef60e6f28a6","body","label","sent","verb","throw","return","op","ops","trys","$4fb1349756486974$export$19a8beecd37a4c45","$4fb1349756486974$export$8d051b38c9118094","ar","$4fb1349756486974$export$1216008129fb82ed","to","pack","$4fb1349756486974$export$10c90e4f7922046c","asyncIterator","resume","fulfill","settle","$4fb1349756486974$export$e3b29a3d6162315f","$c9ff2271fb300251$export$f6e2535fb5126e54","$6940d7a991c52e0c$export$128a15b65d1b6041","createImpl","ctorFunc","instance","stack","$1e205bedb31c7281$export$c9648b76fd580c34","_super","$42e24444f28cbc87$export$dae3f38077fc36c0","$6cae262a70d0f23c$export$f55210826850c514","Subscription","initialTeardown","closed","_parentage","_finalizers","empty","unsubscribe","_parentage_1","_parentage_1_1","initialFinalizer","_finalizers_1","_finalizers_1_1","finalizer","$6cae262a70d0f23c$var$execFinalizer","teardown","_hasParent","_addParent","_a","parent","includes","_removeParent","EMPTY","$6cae262a70d0f23c$export$610f9c3ca1a38dd8","$6cae262a70d0f23c$export$4f9221cbada3c4fc","$ef64e773383d7ecd$export$e506a1d27d1eaa20","onUnhandledError","onStoppedNotification","useDeprecatedSynchronousErrorHandling","useDeprecatedNextContext","$408622acc8eb2c9a$export$365aa6bd3c788e3d","setTimeout","timeout","_i","delegate","clearTimeout","handle","$96699f7d2649f053$export$ebf645db02d3e99f","$9eb07ad52f5a164a$export$8793edee2d425525","$0009cbba9bd80413$export$b7f97edb34bc1f87","$0009cbba9bd80413$export$9c8f6e8d39c60cf3","$0009cbba9bd80413$export$ff9346b0d1d30313","$2b16df69904e95b1$var$context","$2b16df69904e95b1$export$d974811edc77eafa","isRoot","errorThrown","$0ed9b90fb7b12193$export$60959659b2c22881","Subscriber","destination","isStopped","$0ed9b90fb7b12193$export$88d395d20619a0af","complete","$0ed9b90fb7b12193$export$94eeb6a328cab6c7","$0ed9b90fb7b12193$var$handleStoppedNotification","_next","_error","_complete","$0ed9b90fb7b12193$var$_bind","Function","$0ed9b90fb7b12193$var$bind","$0ed9b90fb7b12193$var$ConsumerObserver","ConsumerObserver","partialObserver","$0ed9b90fb7b12193$var$handleUnhandledError","SafeSubscriber","observerOrNext","context_1","notification","subscriber","$d973efc463b0293a$export$5ab46cbf6120b33a","$49fa48a23865d06b$export$f0954fd7d5368655","$7d078d9dd8fe3b58$export$a4627e546088548d","fns","$7d078d9dd8fe3b58$export$71f88a61afaa14d7","$3935d6c8bb135f1d$export$77cea355fa80b5f4","Observable","subscribe","_subscribe","lift","operator","$3935d6c8bb135f1d$var$isObserver","_trySubscribe","sink","promiseCtor","$3935d6c8bb135f1d$var$getPromiseCtor","pipe","operations","toPromise","$f0deae175f83c553$export$f708eee25634bc80","$423da6fe4736ab97$export$b6bbab5a9b109038","Subject","currentObservers","observers","hasError","thrownError","subject","$423da6fe4736ab97$export$155189cde295587d","_throwIfClosed","_b","_c","_checkFinalizedStatuses","_innerSubscribe","asObservable","AnonymousSubject","$d6fac17335e7c696$export$c1895ea2d519a677","now","Date","$efcded7b38db33d9$export$915d2682b0aa0991","ReplaySubject","_bufferSize","_windowTime","_timestampProvider","Infinity","_buffer","_infiniteTimeWindow","_trimBuffer","subscription","adjustedBufferSize","last","$411d6cbf3d902efa$export$871731df685d7753","init","$411d6cbf3d902efa$export$ebec8610810318c5","liftedSource","$8dac53ef6ef2d2bf$export$b9e075132cc6937f","onNext","onComplete","onFinalize","$8dac53ef6ef2d2bf$export$8fbbf0c4d80268e5","OperatorSubscriber","shouldUnsubscribe","err1","closed_1","$2c976212357eeff7$export$871de8747c9eaa88","project","$0a76ef40a99eab86$export$1e2f57719e155213","$420ed9ec2d2ebb94$export$4369c812aac99591","$c74db32e47845d31$export$48c0cddbc99c45c2","$7c6882a8e53550a4$export$edb10ab8dd75a915","$4f0a533f94aec33b$export$7cbe71b9fa263484","$bf81ee129f62dd19$export$6f58e2338da23f4d","$fe3476520c4f22ad$export$9652023d9040757","$eb7eea8d765f01c1$export$cf4785e597badab3","readableStream","reader","getReader","read","releaseLock","$eb7eea8d765f01c1$export$c088ffafdba7405f","$ba4f9c7c17986224$export$6a9cfa3ebc765910","$ba4f9c7c17986224$export$e073fccf36d78cc1","iterable","iterable_1","iterable_1_1","asyncIterable","asyncIterable_1","asyncIterable_1_1","$ba4f9c7c17986224$var$process","catch","$33ce4e5114d67341$export$a2b7447487315232","parentSubscription","work","repeat","scheduleSubscription","schedule","$80e5503b61856128$export$600918ebaa9e0a1b","concurrent","onBeforeNext","expand","innerSubScheduler","additionalFinalizer","buffer","active","isComplete","checkComplete","outerNext","doInnerSub","innerComplete","innerValue","bufferedValue","$9255afbec849c02b$export$6b9f6c0d32c093f9","resultSelector","ii","$0f938dd9016ba849$export$b314777ae20abca9","$cb909cbd29ad9834$export$187e35932e88c15c","$49b3a7b775bc741d$var$last","$49b3a7b775bc741d$export$29534b2f653ae592","$c9f416ccb3b75ba2$export$9007f49c319d1ac7","$67d99257701e5a1a$export$1eb44d8f5f64733b","$e41b37e1509bbf78$export$ed8bd553a12b6a30","$c86fa7487df4c380$export$fc9afd948577f0a8","$e13d3007b5504a28$export$b34673931371729a","$cc6cecd8fa530754$export$2b75c58ab9b5b766","$37d6fbe742ec7f50$export$7c7f0979b56a32f3","$52d31ba90c064c06$export$3385251aeecad28a","$561d2b6c5b2b243d$export$49c44dfc2bb21d70","$a28345e09a6a2f5a$export$6788812c4e6611e6","$e729474076455d01$export$ee1b3e54f0441b22","$56db2074d4e6b5a1$export$ccb33e29d92c9a58","$04d655fbc72c92c1$var$isArray","$04d655fbc72c92c1$export$559affaa48f4288d","$04d655fbc72c92c1$var$callOrApply","$e3c60b9d67f82256$var$nodeEventEmitterMethods","$e3c60b9d67f82256$var$eventTargetMethods","$e3c60b9d67f82256$var$jqueryMethods","$e3c60b9d67f82256$export$a36e16046ae8f1bb","eventName","addEventListener","removeEventListener","$e3c60b9d67f82256$var$isEventTarget","methodName","addListener","removeListener","$e3c60b9d67f82256$var$isNodeStyleEventEmitter","$e3c60b9d67f82256$var$toCommonHandlerRegistry","on","$e3c60b9d67f82256$var$isJQueryStyleEventEmitter","subTarget","$2cd1f382358425bb$export$ba255e9e49e00608","$b0276acc98fe7802$export$d02631cccf789723","$17c0688905cee5ab$export$c28c8388be0ab31a","$268aba0eee664a64$export$e19cd5f9376f8cee","Action","state","$2028e824a830cac5$export$f0ca5e16f6f68711","setInterval","clearInterval","$0f7a66a069cf6e03$export$b5369ffd7cb2211b","AsyncAction","id","recycleAsyncId","requestAsyncId","_id","flush","_scheduler","execute","_execute","_delay","errorValue","errored","actions","$ba93bf99d9588309$export$d3e54bb8584cda7c","Scheduler","schedulerActionCtor","$8813f5c5eb447143$export$8d6b71a2b178fc32","AsyncScheduler","SchedulerAction","_active","_scheduled","$8813f5c5eb447143$export$12af436354f1a4f7","$cdc09a647b8789ad$export$b7df5d561049483a","seen","$cc61b10280a81af9$export$e0eaf3a86c03b2ad","$8d934192a0bc187f$export$286ca829307725c9","delayDurationSelector","subscriptionDelay","$42e0b20b3479772f$export$9dc4ecf953986f04","dueTime","intervalOrScheduler","intervalDuration","due","$e7b289a5c8b993f3$export$1391212d75b2ee65","duration","$c5ca2c270c8733b6$export$23c7d6c8dcd743fe","$d74df353ad8767b3$export$3dea766d36a8935f","predicate","$3c519e62e9da911b$export$78f6d1b1dbcda304","$1512f69d33da4a6c$export$e4ca6d7b7a6dcf9b","defaultValue","hasValue","$88d97f50b2a8dca1$export$c8ea5e9f84346833","errorFactory","$88d97f50b2a8dca1$var$defaultErrorFactory","$8dc77211164877b0$export$43128fadae87b74a","hasDefaultValue","$8c3939c0fc1e20b1$export$30fc204bc7867c02","accumulator","seed","hasSeed","emitOnNext","emitBeforeComplete","hasState","$8d95bbbe0d9c497b$export$c87d910e63d22ed6","$kC2i5","$43bb8a0398e6da97$export$83d89fbfd8236492","$ae124b8799e7a462$var$BN","$parcel$interopDefault","$ae124b8799e7a462$var$logger","$ae124b8799e7a462$var$_constructorGuard","$ae124b8799e7a462$var$MAX_SAFE","$ae124b8799e7a462$export$a3d0a7fa9b65683b","$ae124b8799e7a462$export$d97aa349ed20696","isBigNumber","isHexString","isBytes","$ae124b8799e7a462$var$_warnedToStringRadix","constructorGuard","_hex","_isBigNumber","$ae124b8799e7a462$var$toBigNumber","$ae124b8799e7a462$var$toBN","$ae124b8799e7a462$var$throwFault","isNegative","shr","toBigInt","BigInt","$ae124b8799e7a462$var$toHex","anyValue","hex1","$8215465243c459e2$var$logger","$8215465243c459e2$var$_constructorGuard","$8215465243c459e2$var$Zero","$8215465243c459e2$var$NegativeOne","$8215465243c459e2$var$throwFault","$8215465243c459e2$var$zeros","$8215465243c459e2$var$getMultiplier","decimals","$8215465243c459e2$export$cc011b843b5d69f2","multiplier","fraction","whole","$8215465243c459e2$export$1b039987e86d7269","comps","wholeValue","fractionValue","wei","$8215465243c459e2$export$1f3ec5b8f47ebd4d","signed","_multiplier","check","$8215465243c459e2$export$d4693c66c2213e45","format","_isFixedNumber","_checkFormat","addUnsafe","fromValue","subUnsafe","mulUnsafe","divUnsafe","hasFraction","$8215465243c459e2$var$ONE","toFormat","ceiling","factor","bump","$8215465243c459e2$var$BUMP","hexZeroPad","toUnsafeFloat","parseFloat","fromString","fixedFormat","numeric","decimal","fromBytes","$6b4aba42916d81ba$var$logger","$6b4aba42916d81ba$export$104236534534f9be","$6b4aba42916d81ba$export$f695fbbf3cdaaf47","$6b4aba42916d81ba$export$d503dd157d963b60","promises","all","$6b4aba42916d81ba$export$ae5a316ba623b73a","$6b4aba42916d81ba$export$9c13236873b118a5","$6b4aba42916d81ba$var$opaque","bigint","boolean","function","$6b4aba42916d81ba$var$_isFrozen","isFrozen","$6b4aba42916d81ba$var$_deepCopy","$6b4aba42916d81ba$export$6c40052bed430212","$6b4aba42916d81ba$export$393edc798c47379d","$e70b42732f1d6643$export$83d89fbfd8236492","$1cc0949a1b910e26$var$logger","$1cc0949a1b910e26$var$_constructorGuard","$1cc0949a1b910e26$var$ModifiersBytes","calldata","memory","storage","$1cc0949a1b910e26$var$ModifiersNest","$1cc0949a1b910e26$var$checkModifier","$1cc0949a1b910e26$var$populate","$6b4aba42916d81ba$exports","defineReadOnly","$1cc0949a1b910e26$export$f010f239efc4d445","sighash","minimal","full","json","$1cc0949a1b910e26$var$paramTypeArray","RegExp","$1cc0949a1b910e26$export$426dc07f493a4c47","arrayLength","arrayChildren","fromObject","components","baseType","_isParamType","indexed","comp","parse","allowIndexed","isParamType","$1cc0949a1b910e26$var$verifyType","param","originalParam","newNode","allowType","allowParams","allowName","allowArray","sibling","readArray","$1cc0949a1b910e26$var$parseParamType","$1cc0949a1b910e26$var$parseParams","allowIndex","trim","$1cc0949a1b910e26$var$splitNesting","$1cc0949a1b910e26$export$ffb0004e005737fa","_isFragment","isFragment","$1cc0949a1b910e26$export$8d576c928b93668f","$1cc0949a1b910e26$export$958548f08bac2833","$1cc0949a1b910e26$export$3ac5c9504f801ea4","$1cc0949a1b910e26$export$2c42c6d543aa9b59","anonymous","inputs","isEventFragment","$1cc0949a1b910e26$var$verifyIdentifier","$1cc0949a1b910e26$var$regexParen","modifier","$1cc0949a1b910e26$var$parseGas","gas","$1cc0949a1b910e26$var$parseModifiers","constant","payable","stateMutability","$1cc0949a1b910e26$var$verifyState","isConstructorFragment","parens","outputs","isFunctionFragment","returns","$1cc0949a1b910e26$var$checkForbidden","fragment","sig","isErrorFragment","$1cc0949a1b910e26$var$regexIdentifier","$b9b5443fe5fd170f$var$logger","$b9b5443fe5fd170f$export$5546b9ec21157cc2","checkErrors","path","childPath","$b9b5443fe5fd170f$export$2c0c39526f8bad46","localName","dynamic","_throwError","$b9b5443fe5fd170f$export$d7a960146e1a269e","_data","_dataLength","_padding","hexConcat","_writeData","appendWriter","writer","writeBytes","paddingOffset","_getValue","writeValue","writeUpdatableValue","$b9b5443fe5fd170f$export$2f7a2f0e90c07dc4","coerceFunc","allowLoose","_offset","coerce","_coerceFunc","_peekBytes","loose","alignedLength","subReader","readBytes","readValue","$c037c2eca661934a$var$cachedSetTimeout","$c037c2eca661934a$var$cachedClearTimeout","$c037c2eca661934a$var$process","$c037c2eca661934a$exports","$c037c2eca661934a$var$defaultSetTimout","$c037c2eca661934a$var$defaultClearTimeout","$c037c2eca661934a$var$runTimeout","fun","$c037c2eca661934a$var$currentQueue","$c037c2eca661934a$var$queue","$c037c2eca661934a$var$draining","$c037c2eca661934a$var$queueIndex","$c037c2eca661934a$var$cleanUpNextTick","$c037c2eca661934a$var$drainQueue","marker","$c037c2eca661934a$var$runClearTimeout","$c037c2eca661934a$var$Item","$c037c2eca661934a$var$noop","nextTick","title","browser","env","argv","versions","once","removeAllListeners","emit","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","INPUT_ERROR","WINDOW","root","JS_SHA3_NO_WINDOW","WEB_WORKER","JS_SHA3_NO_NODE_JS","COMMON_JS","JS_SHA3_NO_COMMON_JS","$302ac710e41cdec3$exports","AMD","define","amd","ARRAY_BUFFER","JS_SHA3_NO_ARRAY_BUFFER","ArrayBuffer","HEX_CHARS","CSHAKE_PADDING","SHIFT","RC","BITS","SHAKE_BITS","OUTPUT_TYPES","CSHAKE_BYTEPAD","JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW","isView","createOutputMethod","outputType","Keccak","createShakeOutputMethod","outputBits","createCshakeOutputMethod","methods","createKmacOutputMethod","createOutputMethods","method","createMethod","algorithms","bytepad","Kmac","methodNames","algorithm","newMethodName","blocks","reset","finalized","block","blockCount","byteCount","outputBlocks","extraBytes","notString","lastByteIndex","encode","encodeString","strs","paddingBytes","finalize","arrayBuffer","Uint32Array","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","b10","b11","b12","b13","b14","b15","b16","b17","b18","b19","b20","b21","b22","b23","b24","b25","b26","b27","b28","b29","b30","b31","b32","b33","b34","b35","b36","b37","b38","b39","b40","b41","b42","b43","b44","b45","b46","b47","b48","b49","$dce440b952bffef9$export$f8151fce47ad1c35","keccak_256","$200590d51b4bff55$var$logger","$200590d51b4bff55$var$getChecksumAddress","address","chars","expanded","hashed","i1","toUpperCase","$200590d51b4bff55$var$ibanLookup","$200590d51b4bff55$var$safeDigits","log10","LN10","$200590d51b4bff55$var$ibanChecksum","checksum","$200590d51b4bff55$export$88411125f012957a","$200590d51b4bff55$export$977e255126d763d6","$200590d51b4bff55$export$962c4ddada9f668f","base36","$200590d51b4bff55$export$b7fbffef12272e40","nonce","stripZeros","hexDataSlice","$ggLI3","$200590d51b4bff55$export$e0b22d96621f73a2","salt","initCodeHash","hexDataLength","$8ef38da45c7d1869$export$59dbbded7775bfe7","super","decode","$436a14014fa06a1a$export$87c41d1139a03fa2","coder","$261bd9b73b89d029$var$logger","$261bd9b73b89d029$export$2a703dbb0cb35339","coders","arrayValues","unique","staticWriter","dynamicWriter","updateFuncs","dynamicOffset","updateFunc","baseOffset","$261bd9b73b89d029$export$417857010dc9287f","baseReader","offsetReader","error1","uniqueNames","$261bd9b73b89d029$export$88bc419d2df11f54","defaultChild","$bc9c83850c76ef7f$export$fe9118d6c093150c","$614dfc2bde35fc4b$export$db9eadd8df12ad2e","$614dfc2bde35fc4b$export$e5823e9574df18d2","$9a17d0c3d6263f3c$export$7dec9db68e6bcf5a","$fc0d5f1783f43ba9$export$70982cadf2d6b4ec","$3ff4af1a8f24f333$export$badd13187c087617","$181d5d2d2b5dbae9$export$c83ef0909a6ddeec","$181d5d2d2b5dbae9$export$aaef8a3eae948f03","$181d5d2d2b5dbae9$export$9aa05a5866350bcf","$181d5d2d2b5dbae9$export$9276dd97bf62cc8d","$181d5d2d2b5dbae9$export$c8db55bd7405209e","$181d5d2d2b5dbae9$export$1b53890de5aabdd0","$181d5d2d2b5dbae9$export$963c9b9317b80aaf","$181d5d2d2b5dbae9$export$6f8dbb07ebe6d738","$6b644602accd8b27$export$71c2e4e213dcb7f2","$32589f7fc31f1c4c$export$c7e79fcb6f8ac048","$9c529eb0999bed3e$export$b934dc8cfe13938c","maxUintValue","bounds","$27ae82e01bf9f2e2$var$logger","$27ae82e01bf9f2e2$export$c6986442964129f5","UnicodeNormalizationForm","$27ae82e01bf9f2e2$export$c285fa6ac15ff6a6","Utf8ErrorReason","$27ae82e01bf9f2e2$var$ignoreFunc","badCodepoint","BAD_PREFIX","UNEXPECTED_CONTINUE","OVERRUN","$27ae82e01bf9f2e2$export$c6e2180c5bb5bc05","ignore","OVERLONG","$27ae82e01bf9f2e2$var$getUtf8CodePoints","extraLength","overlongMask","nextChar","MISSING_CONTINUE","OUT_OF_RANGE","UTF16_SURROGATE","$27ae82e01bf9f2e2$export$8feeb310b4b4752f","pair","$27ae82e01bf9f2e2$var$escapeChar","$27ae82e01bf9f2e2$export$a7a0ec15960b9055","codePoint","$27ae82e01bf9f2e2$export$232e1dab03132235","codePoints","$27ae82e01bf9f2e2$export$7643a1dc2c38d5eb","$27ae82e01bf9f2e2$export$ae470a36a31b28c2","$8c3feb26920af16a$export$b97e949c0076e971","text","$8c3feb26920af16a$export$49340cb8f3954db8","$f8a4262fdaa838ef$var$createTable","$f8a4262fdaa838ef$var$createRangeTable","$f8a4262fdaa838ef$var$matchMap","ranges","range","$f8a4262fdaa838ef$var$Table_A_1_ranges","$f8a4262fdaa838ef$var$Table_B_1_flags","$f8a4262fdaa838ef$var$Table_B_2_ranges","$f8a4262fdaa838ef$var$Table_B_2_lut_abs","$f8a4262fdaa838ef$var$Table_B_2_lut_rel","$f8a4262fdaa838ef$var$Table_B_2_complex","$f8a4262fdaa838ef$var$Table_C_ranges","$f8a4262fdaa838ef$export$94f0b6f93c619bc","codes","codesTableB2","codepoint","$f8a4262fdaa838ef$export$9630a1f26a43b76c","NFKC","$a73ffa267c6621e5$export$2d1b854518731426","$ebb8d65f2a9fcf22$export$e9fceba8f110fea6","types","$1d42fd8c75fe0810$var$logger","$1d42fd8c75fe0810$var$paramTypeBytes","$1d42fd8c75fe0810$var$paramTypeNumber","$1d42fd8c75fe0810$export$fe041e1a83d3efc6","_getCoder","component","size1","_getWordSize","_getReader","_getWriter","getDefaultValue","$1d42fd8c75fe0810$export$51d1cfcdb913adff","$7b9c6d82f851bd44$export$d560c7e4a29451c2","$9325189f24beb755$export$83d89fbfd8236492","$a862e8a58382823c$var$flat","flatDeep","$a862e8a58382823c$export$671d8b4ebc0c42ad","$a862e8a58382823c$export$2cda812f22276871","u16","symbol_count","skip","pos_payload","read_width","read_buffer","read_bit","FULL","HALF","QRTR","MASK","register","low","$a862e8a58382823c$export$956eeed0f8f2ceff","$a862e8a58382823c$export$a785de3a2a8dd1aa","$a862e8a58382823c$var$read_ascending","$a862e8a58382823c$var$read_deltas","$a862e8a58382823c$export$9303bf4e1ede4914","lookup","vX","vN","$a862e8a58382823c$var$read_counts","$a862e8a58382823c$var$read_transposed","fill","$a862e8a58382823c$var$read_linear_table","dx","dy","$a862e8a58382823c$export$e9011071590ab431","ys","j_dy","$a862e8a58382823c$var$read_replacement_table","$68155a5060691822$var$r","$iv2BK","$68155a5060691822$var$VALID","$68155a5060691822$var$IGNORED","$68155a5060691822$var$MAPPED","$a862e8a58382823c$var$fromEntries","$68155a5060691822$var$EMOJI_ROOT","sorted","branches","temp","valid","fe0f","$68155a5060691822$var$explode_cp","$68155a5060691822$var$filter_fe0f","cps","cp","$68155a5060691822$export$5252e54b57fcf4fd","lastIndexOf","every","$68155a5060691822$export$499f715881831a51","emoji_filter","emoji","$68155a5060691822$var$consume_emoji_reversed","fromCodePoint","$68155a5060691822$var$normalize","eaten","saved","find","save","$1b7dff0ce6257132$var$logger","$1b7dff0ce6257132$var$Zeros","$1b7dff0ce6257132$var$checkComponent","$1b7dff0ce6257132$var$ensNameSplit","$1b7dff0ce6257132$export$cce2300886e7ace6","$1b7dff0ce6257132$export$91d651ee363e1209","$1b7dff0ce6257132$export$6c0a8cdae51cb512","$9eadbb2c4bee844b$export$d4c241cec96564c1","$227f915234a696ed$var$logger","$227f915234a696ed$var$padding","$227f915234a696ed$var$NegativeOne","$227f915234a696ed$var$Zero","$227f915234a696ed$var$One","$227f915234a696ed$var$MaxUint256","$227f915234a696ed$var$hexTrue","$227f915234a696ed$var$hexFalse","$227f915234a696ed$var$domainFieldTypes","chainId","verifyingContract","$227f915234a696ed$var$domainFieldNames","$227f915234a696ed$var$checkString","$227f915234a696ed$var$domainChecks","$227f915234a696ed$var$getBaseEncoder","boundsUpper","boundsLower","match1","width1","padOffset","$227f915234a696ed$var$hexPadRight","$227f915234a696ed$var$encodeType","fields","$227f915234a696ed$export$458ab927ae635c3","deepCopy","links","parents","subtypes","field","primaryTypes","checkCircular","found","subtype","primaryType","name1","st","_types","getEncoder","encoder","_encoderCache","_getEncoder","subEncoder","encodedType","encodeType","encodeData","hashStruct","_visit","visit","domain","domainFields","EIP712Domain","hashDomain","resolveName","shallowCopy","ensCache","domainValues","domainTypes","typesWithDomain","$150f52be77862072$var$logger","$150f52be77862072$export$c2ab6499be98b3c5","Description","$150f52be77862072$export$7a3223b0fadb690b","$150f52be77862072$export$cfba08fc0e40e2ab","$150f52be77862072$export$8ef99100a3c56f8c","_isIndexed","$150f52be77862072$var$BuiltinErrors","$150f52be77862072$var$wrapAccessError","wrap","$150f52be77862072$export$48cefb51a4e315b2","fragments","abi","getStatic","bucket","deploy","functions","events","eventFragment","getFunction","nameOrSignatureOrSighash","getSighash","matching","getEvent","nameOrSignatureOrTopic","topichash","getEventTopic","getError","_decodeParams","_abiCoder","_encodeParams","encodeDeploy","decodeErrorResult","encodeErrorResult","decodeFunctionData","functionFragment","encodeFunctionData","decodeFunctionResult","errorArgs","errorName","errorSignature","selector","builtin","error2","encodeFunctionResult","encodeFilterTopics","topics","encodeTopic","encodeEventLog","dataTypes","dataValues","decodeEventLog","topicHash","expected","nonIndexed","resultIndexed","resultNonIndexed","nonIndexedIndex","indexedIndex","parseTransaction","tx","parseLog","topic","parseError","hexData","errorFragment","_isInterface","$032f28b70aa2b219$var$logger","$032f28b70aa2b219$export$406ece1549ccd00e","_isForkEvent","$032f28b70aa2b219$export$2881499e37b75b9a","getFeeData","gasPrice","resolveProperties","getBlock","getGasPrice","lastBaseFeePerGas","maxFeePerGas","maxPriorityFeePerGas","baseFeePerGas","_isProvider","$58c29d65f5507f10$var$logger","$58c29d65f5507f10$var$allowedTransactionKeys","$58c29d65f5507f10$var$forwardErrors","$58c29d65f5507f10$export$fdf54fdde81cc9f0","getBalance","blockTag","_checkProvider","provider","getAddress","getTransactionCount","estimateGas","checkTransaction","sendTransaction","populateTransaction","signedTx","signTransaction","getChainId","getNetwork","$58c29d65f5507f10$var$__awaiter","hasEip1559","feeData","gasLimit","results","_isSigner","$58c29d65f5507f10$export$7dbc56d9b9612bad","_fail","signMessage","_signTypedData","connect","$d97353d913be7ca2$var$hash","$d97353d913be7ca2$exports","utils","common","sha","ripemd","hmac","sha1","sha256","sha224","sha384","sha512","ripemd160","$8da0363f9992b5ee$var$minimalisticAssert","$8da0363f9992b5ee$var$assert","zero2","toHex","minAssert","minUtils","getNAF","naf","getJSF","k1","k2","jsf","m8","d1","d2","u1","u2","m14","m24","cachedProperty","computer","parseBytes","intFromLE","$qhafA","$8da0363f9992b5ee$var$getNAF","$8da0363f9992b5ee$var$getJSF","$8da0363f9992b5ee$var$BaseCurve","conf","zero","two","pointFromJSON","gRed","_wnafT1","_wnafT2","_wnafT3","_wnafT4","_bitLength","adjustCount","redN","_maxwellTrick","$8da0363f9992b5ee$var$base","$8da0363f9992b5ee$var$BasePoint","curve","precomputed","point","validate","_fixedNafMul","doubles","_getDoubles","I","nafW","repr","jpoint","mixedAdd","points","toP","_wnafMul","nafPoints","_getNAFPoints","dblp","_wnafMulAdd","defW","coeffs","jacobianResult","wndWidth","comb","toJ","ja","jb","BasePoint","decodePoint","pointFromX","encodeCompressed","_encode","getX","getY","precompute","power","beta","_getBeta","_hasDoubles","dbl","$8da0363f9992b5ee$var$ShortCurve","Base","tinv","zeroA","threeA","endo","_getEndomorphism","_endoWnafT1","_endoWnafT2","$8da0363f9992b5ee$var$short_1","$8da0363f9992b5ee$var$Point","isRed","inf","$8da0363f9992b5ee$var$JPoint","zOne","lambda","betas","_getEndoRoots","lambdas","basis","vec","_getEndoBasis","ntinv","prevR","aprxSqrt","y1","y2","len1","_endoSplit","v1","v2","p1","p2","q1","q2","ax","rhs","_endoWnafMulAdd","npoints","ncoeffs","fromJSON","pre","endoMul","obj2point","isInfinity","nx","ny","ys1","dyinv","mulAdd","jmulAdd","_precompute","negate","zinv","zinv2","ay","pz2","z2","s1","s2","h2","h3","nz","jx","jy","jz","jz4","jyd","jx2","jyd2","jyd4","t1","t2","dny","_zeroDbl","_threeDbl","_dbl","xx","yy","yyyy","yyyy8","gamma","alpha","beta4","beta8","ggamma8","jy2","jxd4","jyd8","trpl","zz","mm","ee","yyu4","kbase","z3","pz3","eqXToP","zs","xc","require$$0","short","require$$1","edwards","curves","PresetCurve","defineCurve","crash","$8da0363f9992b5ee$var$HmacDRBG","predResist","minEntropy","_reseed","reseedInterval","K","V","entropy","entropyEnc","nonceEnc","pers","persEnc","$8da0363f9992b5ee$var$hmacDrbg","_hmac","kmac","reseed","addEnc","generate","$8da0363f9992b5ee$var$KeyPair","ec","priv","pub","_importPrivate","privEnc","_importPublic","pubEnc","$8da0363f9992b5ee$var$key","fromPublic","fromPrivate","getPublic","getPrivate","derive","sign","verify","$8da0363f9992b5ee$var$Signature","_importDER","$8da0363f9992b5ee$var$signature","$8da0363f9992b5ee$var$Position","place","$8da0363f9992b5ee$var$getLength","initial","octetLen","$8da0363f9992b5ee$var$rmPadding","$8da0363f9992b5ee$var$constructLength","octets","LN2","slen","toDER","backHalf","$8da0363f9992b5ee$var$rand","$8da0363f9992b5ee$var$EC","nh","$8da0363f9992b5ee$var$ec","keyPair","KeyPair","keyFromPrivate","keyFromPublic","genKeyPair","drbg","HmacDRBG","ns2","_truncateToN","truncOnly","bkey","ns1","iter","kp","kpX","canonical","Signature","sinv","recoverPubKey","isYOdd","isSecondKey","rInv","getKeyRecoveryParam","Q","Qprime","EC","elliptic","rand","require$$2","require$$3","eddsa","$bf98b73ca082045c$var$logger","$bf98b73ca082045c$var$_curve","$bf98b73ca082045c$var$getCurve","$8da0363f9992b5ee$export$129fe12d32abc311","$bf98b73ca082045c$export$21643ca94aed3e83","privateKey","_addPoint","p0","publicKey","signDigest","digestBytes","splitSignature","computeSharedSecret","otherKey","otherKeyPair","$bf98b73ca082045c$export$4a89473d39301224","_isSigningKey","$bf98b73ca082045c$export$952dd09fbe0232b7","rs","compressed","signingKey","$7050b85c2a3d7ae6$var$logger","$7050b85c2a3d7ae6$export$80349e05e0724e11","TransactionTypes","$7050b85c2a3d7ae6$var$handleAddress","$7050b85c2a3d7ae6$var$handleNumber","$7050b85c2a3d7ae6$var$transactionFields","maxLength","$7050b85c2a3d7ae6$var$allowedTransactionKeys","$7050b85c2a3d7ae6$export$e67e2732ba9803f9","$7050b85c2a3d7ae6$export$23cc18f96d8510e2","$7050b85c2a3d7ae6$var$formatNumber","$7050b85c2a3d7ae6$var$accessSetify","addr","storageKeys","storageKey","$7050b85c2a3d7ae6$export$6c8662b1600dce2","localeCompare","$7050b85c2a3d7ae6$var$formatAccessList","$7050b85c2a3d7ae6$var$_serializeEip1559","accessList","$7050b85c2a3d7ae6$var$_serializeEip2930","$7050b85c2a3d7ae6$export$dfdc1655ccc5b9cb","checkProperties","raw","fieldInfo","$7050b85c2a3d7ae6$var$_serialize","transactionType","$7050b85c2a3d7ae6$var$_parseEipSignature","serialize","recid","$7050b85c2a3d7ae6$export$98e6a39c04603d36","rawTransaction","$7050b85c2a3d7ae6$var$_parse","$7050b85c2a3d7ae6$var$_parseEip2930","$7050b85c2a3d7ae6$var$_parseEip1559","$96296c1cf92aabcc$var$logger","$96296c1cf92aabcc$var$allowedTransactionKeys","customData","ccipReadEnabled","$96296c1cf92aabcc$var$resolveName","resolver","nameOrPromise","$96296c1cf92aabcc$var$resolveAddresses","paramType","$96296c1cf92aabcc$var$populateTransaction","contract","overrides","signer","$96296c1cf92aabcc$var$__awaiter","resolved","resolvedAddress","interface","intrinsic","roValue","leftovers","$96296c1cf92aabcc$var$addContractWait","wait","confirmations","receipt","logs","event","parsed","eventSignature","blockHash","getTransaction","transactionHash","getTransactionReceipt","$96296c1cf92aabcc$var$buildCall","collapseSimple","signerOrProvider","deployTransaction","_deployed","$96296c1cf92aabcc$var$buildDefault","txRequest","$96296c1cf92aabcc$var$buildSend","$96296c1cf92aabcc$var$getEventTag","$96296c1cf92aabcc$var$RunningEvent","tag","_listeners","listenerCount","argsCopy","prepareEvent","getEmit","$96296c1cf92aabcc$var$ErrorRunningEvent","$96296c1cf92aabcc$var$FragmentRunningEvent","contractInterface","decodeError","$96296c1cf92aabcc$var$WildcardRunningEvent","$96296c1cf92aabcc$export$304faa4fc17528db","addressOrName","$58c29d65f5507f10$exports","Signer","isSigner","$032f28b70aa2b219$exports","Provider","isProvider","uniqueFilters","filters","uniqueSignatures","callStatic","$96296c1cf92aabcc$var$buildPopulate","$96296c1cf92aabcc$var$buildEstimate","signatures","isInterface","deployed","_deployedPromise","getCode","contractAddress","fallback","VoidSigner","attach","isIndexed","_normalizeRunningEvent","runningEvent","_runningEvents","_getRunningEvent","fragment1","_checkRunningEvents","_wrappedEmits","_wrapEvent","_addEventListener","wrappedEmit","queryFilter","fromBlockOrBlockhash","toBlock","fromBlock","getLogs","runningEvent1","$96296c1cf92aabcc$export$8517d80acf00e19a","$96296c1cf92aabcc$export$505569a6bf584fd9","bytecode","bytecodeHex","getDeployTransaction","unsignedTx","getContract","compilerOutput","evm","getInterface","$c7867db7dd59721a$export$240043ab8e806ec7","alphabet","charAt","_alphabetMap","digits","_leader","byte","$c7867db7dd59721a$export$45a587635c9954b2","$b9ce3f53cb264d08$export$d2a8849cfb277c","SupportedAlgorithm","$b567a02c70423e48$var$logger","$b567a02c70423e48$export$d1cea0ee4e3f0d3e","$b567a02c70423e48$export$bced8d2aada2d1c9","$b567a02c70423e48$export$a888d2532e6dc7bb","$b567a02c70423e48$export$967075d2f3b8e7ff","$9841a6152564a668$export$448fa22aedc9dbca","password","keylen","hashAlgorithm","hLen","DK","block1","U","destPos","$84e810540b043cee$export$af88d00dbe7f521","$84e810540b043cee$export$4d9531a8ddb0ebca","locale","mnemonic","wordlist","getWord","getWordIndex","lang","$3c5684cdcfc52b99$var$wordlist","$3c5684cdcfc52b99$var$loadWords","$3c5684cdcfc52b99$export$a2c9518710cf1f49","$f3abd8a8b52c7186$export$e8e1b4711c2d1939","en","$e40e6660432d1523$var$logger","$e40e6660432d1523$var$N","$e40e6660432d1523$var$MasterSecret","$e40e6660432d1523$var$HardenedBit","$e40e6660432d1523$var$getUpperMask","$e40e6660432d1523$var$bytes32","$e40e6660432d1523$var$base58check","$e40e6660432d1523$var$getWordlist","$e40e6660432d1523$var$_constructorGuard","$e40e6660432d1523$export$d48ad89f7e11a603","$e40e6660432d1523$export$b68640c53e22b952","parentFingerprint","chainCode","mnemonicOrPath","compressedPublicKey","extendedKey","neuter","_derive","IL","IR","ki","Ki","srcMnemonic","phrase","fingerprint","derivePath","index1","seedArray","$e40e6660432d1523$export$4becd65eb23312e6","$e40e6660432d1523$export$135e090d58b310ca","_fromSeed","$e40e6660432d1523$export$3dee74f1204ab09f","NFKD","entropyBits","checksumMask","indices","remainingBits","checksumBits","$e40e6660432d1523$export$5eea3393c6119c80","$e40e6660432d1523$export$22b80e4f9eff636d","$7c5621ba8c52306d$var$logger","$7c5621ba8c52306d$var$anyGlobal","$7c5621ba8c52306d$var$getGlobal","$7c5621ba8c52306d$var$crypto","crypto","msCrypto","$7c5621ba8c52306d$export$5f828d93ff035aa8","getRandomValues","$f2abf0490942d075$export$e6c7296801b9b341","random","checkInt","checkInts","arrayish","coerceArray","arg","createArray","copyArray","sourceArray","targetArray","targetStart","sourceStart","sourceEnd","Hex","convertUtf8","toBytes","encodeURI","substr","convertHex","numberOfRounds","rcon","S","Si","T3","T4","T5","T6","T7","T8","U1","U2","U3","U4","convertToInt32","AES","_prepare","rounds","_Ke","_Kd","roundKeyCount","KC","tk","tt","rconpointer","encrypt","plaintext","decrypt","ciphertext","ModeOfOperationECB","description","_aes","ModeOfOperationCBC","iv","_lastCipherblock","ModeOfOperationCFB","segmentSize","_shiftRegister","xorSegment","encrypted","ModeOfOperationOFB","_lastPrecipher","_lastPrecipherIndex","Counter","initialValue","_counter","setValue","setBytes","increment","ModeOfOperationCTR","counter","_remainingCounter","_remainingCounterIndex","$30db244c0f382401$exports","ModeOfOperation","ecb","cbc","cfb","ofb","ctr","utf8","pkcs7","pad","padder","_arrayTest","$36967e0cacbe34b6$export$83d89fbfd8236492","$ecf0bb8777640065$export$2cde08bde0cfd932","hexString","$ecf0bb8777640065$export$67752b99d3bc61c6","$ecf0bb8777640065$export$350bd33120f7413e","$ecf0bb8777640065$export$5a5c1dbd910e2c32","currentChild","matchingChild","$ecf0bb8777640065$export$ec7b18ebad55a3a9","randomBytes","$be1e12c1136b5fd6$var$logger","$be1e12c1136b5fd6$export$93a76d16f88f2b3","isCrowdsaleAccount","_isCrowdsaleAccount","$be1e12c1136b5fd6$export$e85a0c9a1067c5d3","ethaddr","encseed","encryptedSeed","aesCbc","seedHex","$394167a799c6b16f$export$724d6cf6b9fd8578","$394167a799c6b16f$export$67dc926b8e68b2d8","$394167a799c6b16f$export$9a68ee9f8f3afd38","MAX_VALUE","SHA256","h0","h1","h4","h5","h6","h7","bytesLeft","bitLenHi","bitLenLo","numZeros","PBKDF2_HMAC_SHA256_OneIter","dkLen","innerLen","outerKey","dk","incrementCounter","blockmix_salsa8","BY","Yi","_X","arraycopy","blockxor","salsa20_8","R","srcPos","checkBufferish","ensureInteger","_scrypt","XY","totalOps","Bi","currentOp","lastPercent10","stop","limit","setImmediate","incrementalSMix","steps","percent10","i2","percent101","i3","derivedKey","lib","scrypt","progressCallback","lastProgress","progress","syncScrypt","$39160ef1d9344af6$exports","$b9aee36f2d9ca177$var$logger","$b9aee36f2d9ca177$var$hasMnemonic","$b9aee36f2d9ca177$export$cf9dc4fd6dde0315","isKeystoreAccount","_isKeystoreAccount","$b9aee36f2d9ca177$var$_getAccount","aesCtr","$b9aee36f2d9ca177$var$_decrypt","mnemonicKey","account","mnemonicCiphertext","mnemonicIv","mnemonicCounter","mnemonicAesCtr","fromMnemonic","$b9aee36f2d9ca177$var$pbkdf2Sync","passwordBytes","prfFunc","$b9aee36f2d9ca177$var$pbkdf2","$b9aee36f2d9ca177$var$_computeKdfKey","pbkdf2Func","scryptFunc","kdf","salt1","prf","dkLen1","$b9aee36f2d9ca177$export$9bd2c37889ee5e36","$b9aee36f2d9ca177$export$e85a0c9a1067c5d3","$b9aee36f2d9ca177$export$5b0f6292f11d1d18","client","uuidRandom","uuid","macPrefix","mac","cipher","cipherparams","kdfparams","dklen","timestamp","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","gethFilename","$e8cb6a5c6311a4dd$export$e74fcde37488267a","$b9aee36f2d9ca177$exports","$e8cb6a5c6311a4dd$export$7a81c437a678891a","decryptSync","$1036a35395b12221$var$logger","$1036a35395b12221$export$bcca3ea514774656","$1036a35395b12221$var$hasMnemonic","isSigningKey","signingKey1","_mnemonic","_signingKey","joinSignature","populated","$227f915234a696ed$exports","TypedDataEncoder","resolveNames","extraEntropy","$1036a35395b12221$export$228d0e772cc158cb","$1036a35395b12221$export$3603b1c1bcd76798","$f8d13963b6b65ead$var$logger","$f8d13963b6b65ead$var$ethDefaultProvider","network","providers","providerList","InfuraProvider","infura","EtherscanProvider","etherscan","AlchemyProvider","alchemy","PocketProvider","pocket","error3","CloudflareProvider","cloudflare","error4","AnkrProvider","ankr","skip1","provider1","error5","FallbackProvider","quorum","renetwork","$f8d13963b6b65ead$var$etcDefaultProvider","JsonRpcProvider","$f8d13963b6b65ead$var$homestead","ensAddress","_defaultProvider","$f8d13963b6b65ead$var$ropsten","$f8d13963b6b65ead$var$classicMordor","$f8d13963b6b65ead$var$networks","unspecified","homestead","mainnet","morden","ropsten","testnet","rinkeby","kovan","goerli","kintsugi","sepolia","classic","classicMorden","classicMordor","classicTestnet","classicKotti","xdai","matic","maticmum","optimism","arbitrum","bnb","bnbt","$f8d13963b6b65ead$export$7de4970ebfd8206d","standard","standard1","standard2","defaultProvider","$dd73536fc9692f6b$export$94df0e59ebebf4a7","href","request","headers","skipFetchSetup","cache","credentials","redirect","referrer","fetchOptions","response","fetch","statusCode","status","statusMessage","statusText","$4ba6852361706d63$var$logger","$4ba6852361706d63$var$staller","$4ba6852361706d63$var$bodyify","$4ba6852361706d63$export$e37fa27017c6c012","connection","processFunc","attemptLimit","throttleLimit","throttleCallback","throttleSlotInterval","errorPassThrough","allow304","allowGzip","user","allowInsecureAuthentication","authorization","reData","dataMatch","SERVER_ERROR","requestBody","requestMethod","flatHeaders","header","runningTimeout","timer","TIMEOUT","runningFetch","attempt","$dd73536fc9692f6b$exports","getUrl","location","tryAgain","stall","retryAfter","serverError","throttleRetry","tryAgain1","race","$4ba6852361706d63$export$6d71b655afe1638d","updated","$4ba6852361706d63$export$e0c10349b2c5e1d4","interval","retryLimit","oncePoll","onceBlock","$9492a795f2bd363c$var$ALPHABET","$9492a795f2bd363c$var$ALPHABET_MAP","$9492a795f2bd363c$var$z","$9492a795f2bd363c$var$x","$9492a795f2bd363c$var$polymodStep","$9492a795f2bd363c$var$prefixChk","prefix","chk","$9492a795f2bd363c$var$__decode","LIMIT","lowered","uppered","wordChars","$9492a795f2bd363c$var$convert","inBits","outBits","maxV","$9492a795f2bd363c$exports","decodeUnsafe","toWordsUnsafe","toWords","fromWordsUnsafe","fromWords","$fb0b0e8aa01ee454$export$83d89fbfd8236492","$3b4568a20d8c1158$var$logger","$3b4568a20d8c1158$export$a06636add2a09fd8","formats","getDefaultFormats","bigNumber","allowNull","blockNumber","transactionIndex","uint256","creates","transactionRequest","receiptLog","arrayOf","logIndex","gasUsed","logsBloom","cumulativeGasUsed","effectiveGasPrice","parentHash","difficulty","miner","extraData","transactions","blockWithTransactions","transactionResponse","filterLog","allowFalsish","strict","callAddress","hexValue","_block","author","_difficulty","chainId1","networkId","value1","byzantium","checkKey","checkValue","nullValue","replaceValue","$3b4568a20d8c1158$export$3091239f5b20b896","isCommunityResource","$3b4568a20d8c1158$export$d93d5f61c2498b6","$3b4568a20d8c1158$var$throttleMessage","$3b4568a20d8c1158$export$4c41bd49e82e82ab","$6b7b949824ed4bf5$var$logger","$6b7b949824ed4bf5$var$checkTopic","$6b7b949824ed4bf5$var$serializeTopics","$6b7b949824ed4bf5$var$getEventTag","ForkEvent","isForkEvent","$6b7b949824ed4bf5$var$getTime","getTime","$6b7b949824ed4bf5$var$stall","$6b7b949824ed4bf5$var$PollableEvents","$6b7b949824ed4bf5$export$d61e24a684f9e51","_lastBlockNumber","_inflight","pollable","$6b7b949824ed4bf5$var$coinInfos","symbol","p2pkh","p2sh","ilk","$6b7b949824ed4bf5$var$bytes32ify","$6b7b949824ed4bf5$var$base58Encode","$6b7b949824ed4bf5$var$matcherIpfs","$6b7b949824ed4bf5$var$matchers","$6b7b949824ed4bf5$var$_parseString","$6b7b949824ed4bf5$var$_parseBytes","$6b7b949824ed4bf5$var$getIpfsLink","link","$6b7b949824ed4bf5$var$numPad","padded","$6b7b949824ed4bf5$var$bytesPad","$6b7b949824ed4bf5$var$encodeBytes","datas","$6b7b949824ed4bf5$export$8b4c839865b08288","formatter","supportsWildcard","_supportsEip2544","_fetch","parameters","_fetchBytes","_getAddress","coinType","hexBytes","coinInfo","getAvatar","linkage","content","avatar","getText","scheme","owner","_resolvedAddress","tokenId","tokenOwner","balance","metadataUrl","metadata","$4ba6852361706d63$exports","fetchJson","imageUrl","image","getContentHash","ipfs","ipns","swarm","skynet","urlSafe","keyBytes","$6b7b949824ed4bf5$var$defaultFormatter","$6b7b949824ed4bf5$var$nextPollId","$6b7b949824ed4bf5$export$ff3f6dd83125ac45","_events","_emitted","disableCcipRead","getFormatter","anyNetwork","detectNetwork","_networkPromise","_ready","knownNetwork","_maxInternalBlockNumber","_maxFilterBlockRange","_pollingInterval","_fastQueryDate","_network","ready","poll","NETWORK_ERROR","ccipReadFetch","urls","sender","errorMessages","errorMessage","_getInternalBlockNumber","maxAge","_internalBlockNumber","internalBlockNumber","respTime","reqTime","checkInternalBlockNumber","perform","networkError","_setFastBlockNumber","pollId","runners","pollingInterval","previousBlockNumber","eventBlockNumber","runner","minFromBlock","runner1","resetEventsBlock","polling","currentNetwork","_fastBlockNumber","_fastBlockNumberPromise","detectedNetwork","_poller","_bootstrapPoll","_getFastBlockNumber","getBlockNumber","waitForTransaction","_waitForTransaction","replaceable","cancelFuncs","alreadyDone","minedHandler","lastBlockNumber","startBlock","scannedBlock","replaceHandler","$6b7b949824ed4bf5$var$__awaiter","mined","getBlockWithTransactions","ti","cancelled","replacement","_wrapTransaction","unref","_getBlockTag","getStorageAt","expectedHash","returnedHash","confirms","signedTransaction","hexTx","_getTransactionRequest","_getFilter","_call","redirects","txSender","urlsOffset","urlsLength","urlsData","callbackSelector","ccipResult","_getBlock","blockHashOrBlockTag","includeTransactions","blockNumber1","blockWithTxs","getEtherPrice","getResolver","currentName","_getResolver","addrData","lookupAddress","resolverAddr","nameOrAddress","resolverAddress","avatar1","NOT_IMPLEMENTED","_startEvent","_stopEvent","stopped","eventTag","$69de893e60e90f9b$var$logger","$69de893e60e90f9b$var$errorGas","$69de893e60e90f9b$var$spelunk","requireData","$69de893e60e90f9b$var$checkError","responseText","$69de893e60e90f9b$var$timer","$69de893e60e90f9b$var$getResult","$69de893e60e90f9b$var$getLowerCase","$69de893e60e90f9b$var$_constructorGuard","$69de893e60e90f9b$export$5f7b5fca3508545a","addressOrIndex","connectUnchecked","$69de893e60e90f9b$var$UncheckedJsonRpcSigner","_address","_index","send","accounts","sendUncheckedTransaction","fromAddress","estimate","$69de893e60e90f9b$var$__awaiter","hexlifyTransaction","ACTION_REJECTED","messageData","_legacySignMessage","getPayload","unlock","$69de893e60e90f9b$var$allowedTransactionKeys","$69de893e60e90f9b$export$da28308012bf6748","$6b7b949824ed4bf5$exports","BaseProvider","networkOrReady","_nextId","_cache","_eventLoopCache","_uncachedDetectNetwork","getSigner","getUncheckedSigner","listAccounts","jsonrpc","prepareRequest","hexlifyTransaction1","_startPending","_pendingFilter","pendingFilter","filterId","hashes","seq","allowExtra","allowed","$dbcca12b5ae85bf9$export$3909fb301d3dc8c9","WebSocket","logger","$016517be7248ebc2$var$logger","$016517be7248ebc2$var$NextId","$016517be7248ebc2$export$bfafe629242f30bd","$69de893e60e90f9b$exports","_wsReady","websocket","onopen","_requests","onmessage","messageEvent","_subs","fauxPoll","_websocket","_detectNetwork","rid","subIdPromise","_subIds","subId","emitReceipt","destroy","readyState","CONNECTING","onerror","close","$c11f78fec1c67120$var$logger","$c11f78fec1c67120$export$b3d647c1c29df44d","$c11f78fec1c67120$export$664128d6239ccf96","apiKey","$b80482bd5f523b7a$var$logger","$b80482bd5f523b7a$var$defaultApiKey","$b80482bd5f523b7a$export$f6c13301c7b76371","$016517be7248ebc2$exports","WebSocketProvider","$b80482bd5f523b7a$export$999cc40da3fbc6f","$c11f78fec1c67120$exports","UrlJsonRpcProvider","host","$0121540adc2b4364$var$logger","$0121540adc2b4364$var$defaultApiKey","$0121540adc2b4364$var$getHost","$0121540adc2b4364$export$72783b2aefa72a45","projectSecret","$8fdfc10d4ec29648$var$logger","$8fdfc10d4ec29648$export$7113381f8f264fc0","$1ab70ff28185c772$var$logger","$1ab70ff28185c772$var$getTransactionPostData","maxFeePerGs","$1ab70ff28185c772$var$getResult","$1ab70ff28185c772$var$getJsonResult","$1ab70ff28185c772$var$checkLogTag","$1ab70ff28185c772$var$checkError","$1ab70ff28185c772$export$dd1d942a536c7912","getBaseUrl","query","baseUrl","getPostUrl","getPostData","apikey","post","procFunc","payloadStr","txhash","postData","postData1","topic0","ethusd","getHistory","endBlock","startblock","endblock","timeStamp","$48b629a8f713c29d$var$logger","$48b629a8f713c29d$var$now","$48b629a8f713c29d$var$checkNetworks","networks","$48b629a8f713c29d$var$median","maxDelta","middle","$48b629a8f713c29d$var$serialize","$48b629a8f713c29d$var$nextRid","$48b629a8f713c29d$var$stall","$48b629a8f713c29d$var$ForwardErrors","$48b629a8f713c29d$var$ForwardProperties","$48b629a8f713c29d$var$exposeDebugConfig","config","weight","$48b629a8f713c29d$var$getProcessFunc","configs","_highestBlockNumber","tally","$48b629a8f713c29d$var$normalizedTally","$48b629a8f713c29d$var$waitForSync","$48b629a8f713c29d$var$getRunner","currentBlockNumber","$48b629a8f713c29d$export$cb1d0beacb55feb7","providerConfigs","configOrProvider","stallTimeout","priority","first","t0","inflightWeight","staller","backend","waiting","getPromise","results1","errorCode","$5e0df7da99403111$export$fbe151f90a1ece01","$ce572eb022448eb5$var$logger","$ce572eb022448eb5$var$defaultProjectId","$ce572eb022448eb5$export$dd168a807d60da4f","$ce572eb022448eb5$export$60ff1a559b5c6ebd","projectId","apiKeyObj","$8b99c46015bee638$export$5a16092bf20edf97","_pendingBatch","inflightRequest","_pendingBatchAggregator","batch","inflight","$d8f47f43c4b131da$var$logger","$d8f47f43c4b131da$export$8235cbce3ce273bd","$ee967c6d3833d196$var$logger","$ee967c6d3833d196$var$defaultApplicationId","$ee967c6d3833d196$export$58bb47e42f6b092e","applicationId","loadBalancer","applicationSecretKey","$85df7714377c8989$var$logger","$85df7714377c8989$var$_nextId","$85df7714377c8989$var$buildWeb3LegacyFetcher","sendFunc","fetcher","$85df7714377c8989$export$d05096c9fd9d936d","jsonRpcFetchFunc","subprovider","isMetaMask","$85df7714377c8989$var$buildEip1193Fetcher","sendAsync","$a30923d875f6270e$var$logger","$a30923d875f6270e$export$4f77a1d3c1ac6642","$48b629a8f713c29d$exports","$8fdfc10d4ec29648$exports","$1ab70ff28185c772$exports","$1f913fdcb02e861d$var$regexBytes","$1f913fdcb02e861d$var$regexNumber","$1f913fdcb02e861d$var$regexArray","$1f913fdcb02e861d$var$logger","$1f913fdcb02e861d$var$_pack","zeroPad","$1f913fdcb02e861d$export$2a703dbb0cb35339","tight","$1f913fdcb02e861d$export$f8151fce47ad1c35","$1f913fdcb02e861d$export$bced8d2aada2d1c9","$e750e344e1431833$var$logger","$e750e344e1431833$var$names","$e750e344e1431833$export$de1294767e6ef661","suffix","formatted","$e750e344e1431833$export$bd39b96f71da1885","unitName","$e750e344e1431833$export$203ae30b4f6490b3","$e750e344e1431833$export$11bc63b4c03ea518","$e750e344e1431833$export$642c4e67bbdc0bc7","ether","$35c4062ad9a531e8$export$83d89fbfd8236492","$977e1f54a6126596$export$af88d00dbe7f521","anyGlobal","_ethers","$977e1f54a6126596$exports","$08ac1ed1fdc38cba$exports","$08ac1ed1fdc38cba$var$base64","$08ac1ed1fdc38cba$var$__importStar","base64","hexStripZeros","$08ac1ed1fdc38cba$var$RLP","$af01d6ba913efef1$export$b37aab7cecdd910a","rj","$af01d6ba913efef1$export$c5ab927018e48ed7","$af01d6ba913efef1$export$1726ea10b1063b9f","spacingDelayMs","timestampProvider","curr","timeDelta","$af01d6ba913efef1$export$a1835851dbf3472f","$4b08503421352fcc$export$2983e091f1a1e8e2","async","$af01d6ba913efef1$export$20d422aa515aa265","stream$","$4b08503421352fcc$export$832370e58be26204","computedValue","$af01d6ba913efef1$export$fe4ea8c4392aed8d","$af01d6ba913efef1$export$ccdc01a1740c3d06","RLP","$1036a35395b12221$exports","verifyMessage","verifyTypedData","_fetchData","$af01d6ba913efef1$export$e772c8ff12451969","$af01d6ba913efef1$export$d02631cccf789723","$af01d6ba913efef1$export$d08f2cb7b46325ee","ms","$af01d6ba913efef1$export$3d72b92ce2fbee37","timeoutMsg","$af01d6ba913efef1$export$77f8b3f78e17f705","maxRetries","retryInterval","process","$af01d6ba913efef1$export$a110d95e992bd193","$af01d6ba913efef1$export$cb4f46f0c52cabc4","$af01d6ba913efef1$export$f4e80869b1e1267e","$af01d6ba913efef1$export$80217d4285ef0118","numbers","bitsPerNumber","packed","$af01d6ba913efef1$export$2a703dbb0cb35339","$af01d6ba913efef1$export$bc183bce5da8d5c","padStart","$af01d6ba913efef1$export$3d019e3cb2017ae2","$af01d6ba913efef1$export$1aab31943c5a2429","$43932abd5682c1d2$var$encTable","$43932abd5682c1d2$var$decTable","$43932abd5682c1d2$export$afb15ede80c42aab","base64Str","es","bytePos","groupPos","subarray","$43932abd5682c1d2$export$4e633de97d65d1c8","$f6e551492ddbac48$export$2ef2fdbd18d3e030","$f6e551492ddbac48$export$e5d73eed61ade2af","WireType","UnknownFieldHandler","onRead","typeName","fieldNo","wireType","is","no","onWrite","list","uf","$33333e64681f5552$var$defaultsWrite","emitDefaultValues","enumAsInteger","useProtoFieldName","prettySpaces","$33333e64681f5552$var$defaultsRead","ignoreUnknownFields","$33333e64681f5552$export$e2108da0709719eb","$33333e64681f5552$export$d0f2f49f029d6c38","$33333e64681f5552$export$77bed8bb514232ab","typeRegistry","$8461b325ad035656$export$87130b6dd9721cee","$3264c39a35c814e4$export$2bcb3d1403ab3e47","snakeCase","capNext","sb","test","$e9411576bdf9d2f9$export$d40a369a25702af0","ScalarType","$e9411576bdf9d2f9$export$a3fb1069ae3b8bb4","LongType","$e9411576bdf9d2f9$export$3c05d9da25cb7a9","RepeatType","$e9411576bdf9d2f9$export$447fc6430fb31fd6","_d","jsonName","NO","opt","oneof","$e537f1186d4bbc81$export$dcaa6868190faa1b","any","oneofKind","$53b866d0cca88c38$export$909924fefdf89590","prepare","req","known","oneofs","allowExcessProperties","some","group","field1","repeated","scalars","L","scalar","INT32","messages","mapKeys","isAssignable","longType","argType","UINT64","FIXED64","INT64","SFIXED64","SINT64","BIGINT","NUMBER","BOOL","STRING","BYTES","DOUBLE","FLOAT","Number","isInteger","FIXED32","SFIXED32","SINT32","UINT32","$3c28f556d7448ce8$export$664ede5272d59144","$3076a88ecb34c129$export$e5171d1968013adb","lowBits","highBits","assertBounds","middleByte","shift1","$3076a88ecb34c129$export$ff01ce396ff3d61f","hasNext","splitBits","hasMoreBits","hasNext1","byte1","$3076a88ecb34c129$var$TWO_PWR_32_DBL","$3076a88ecb34c129$export$2696d481002c7488","dec","minus","add1e6digit","begin","digit1e6","$3076a88ecb34c129$export$bd6d13315e46b1b7","bitsLow","bitsHigh","high","digitA","digitB","digitC","decimalFrom1e7","digit1e7","needLeadingZeros","partial","$3076a88ecb34c129$export$77a3057e70db7f11","$3076a88ecb34c129$export$7138ea6223338e60","$7fed647bc62e8ca8$var$BI","dv","DataView","getBigInt64","getBigUint64","setBigInt64","setBigUint64","MIN","MAX","UMIN","UMAX","$7fed647bc62e8ca8$var$detectBi","$7fed647bc62e8ca8$var$assertBi","bi","$7fed647bc62e8ca8$var$RE_DECIMAL_STR","$7fed647bc62e8ca8$var$TWO_PWR_32_DBL","$7fed647bc62e8ca8$var$SharedPbLong","isSafeInteger","$7fed647bc62e8ca8$export$2d16819998fb891c","ZERO","getInt32","setInt32","$7fed647bc62e8ca8$export$458c11e435f8bbac","pbl","$8e1a787900d11e92$export$a7a9523472993e97","$8e1a787900d11e92$export$cbadc5a7223772a8","$8e1a787900d11e92$export$6ef88129b876fe31","$8e1a787900d11e92$export$2e87d29058d6f62e","$8e1a787900d11e92$export$bc199b1875ae7ece","isFinite","$e9cc65ea3806553c$export$dad3e19c395b0f8a","long","$822f67573b6f4855$export$673b047513356c73","fMap","fieldsInput","jsonValue","what","oneofsHandled","jsonKey","fieldObj","jsonObjKey","jsonObjValue","internalJsonRead","enum","fieldArr","jsonItem","val1","val2","localEnumName","enumNumber","NaN","POSITIVE_INFINITY","NEGATIVE_INFINITY","float","int32","encodeURIComponent","$3b66ad95a49473ac$export$b2626b487dec7942","write","jsonValue1","jsonObj","entryKey","entryValue","messageType","entryKey1","entryValue1","enumInfo","entryKey2","entryValue2","jsonArr","val3","enumInfo1","val4","messageType1","val5","optional","internalJsonWrite","ed","ulong","$9d4a460538c74555$export$7e70a6dbbc0779b1","$4fed8491f0c66b25$export$95f9a0270cc163dd","fieldNoToField","readUnknownField","LengthDelimited","uint32","arr1","internalBinaryRead","mapKey","mapVal","mapEntry","bool","keyRaw","double","int64","uint64","fixed64","fixed32","sfixed32","sfixed64","sint32","sint64","$66278d7190cad2fe$export$6d3debc51ae57d55","emitDefault","PACKED","item1","writeUnknownFields","fork","keyValue","internalBinaryWrite","isDefault","scalarInfo","Varint","Bit64","Bit32","$ff115b987c88f4da$export$190e272bed773d84","$e40d8124da647e90$export$222be1b8ba523a3a","fieldValue","mergePartial","$f0a8501e95da905e$export$3c5f0d0c49971ab2","val_a","val_b","$f0a8501e95da905e$var$repeatedPrimitiveEq","$f0a8501e95da905e$var$primitiveEq","$f0a8501e95da905e$var$repeatedMsgEq","$f0a8501e95da905e$var$objectValues","ba","bb","$e7f011d5ba5044a4$var$defaultsWrite","writerFactory","$e7f011d5ba5044a4$export$b6da98667e5e554f","$e7f011d5ba5044a4$export$3d48eca60a8fb7e4","textEncoder","TextEncoder","chunks","finish","chunk","setFloat32","setFloat64","setUint32","$87a4b812f133ab61$var$defaultsRead","readerFactory","$87a4b812f133ab61$export$76c443c41c20b286","$87a4b812f133ab61$export$970bd8e9fb5f0092","textDecoder","varint64","byteOffset","TextDecoder","fatal","ignoreBOM","StartGroup","EndGroup","RangeError","zze","getUint32","getFloat32","getFloat64","$e58bee54f74d9896$export$80edbf15fa61a4db","defaultCheckDepth","refTypeCheck","refJsonReader","refJsonWriter","refBinReader","refBinWriter","fromBinary","fromJson","fromJsonString","toJson","toJsonString","toBinary","$ef53950bf3c5fdbc$export$be413f38429b6a36","service","serverStreaming","clientStreaming","idempotency","$2f3ca2d5791f664c$export$a2897b486520c8f3","$a9216c54c01fcb54$export$5460eff990f31920","meta","serviceName","$f1ecf128f594b8e1$export$7c5fc00899236162","defaults","$f1ecf128f594b8e1$var$copy","jsonOptions","binaryOptions","into","$4b081051eb795da1$export$b3d0de17b6bbc646","DeferredState","$4b081051eb795da1$export$85f6557964517f1a","preventUnhandledRejectionWarning","_state","PENDING","_promise","_resolve","_reject","RESOLVED","REJECTED","resolvePending","rejectPending","$f6f31c467ccea076$export$cc1536039657db9b","_lis","nxt","_closed","addLis","onMessage","clearLis","notifyNext","notifyMessage","notifyError","notifyComplete","pushIt","_itState","$22f7964c4fcca5e1$var$__awaiter","$22f7964c4fcca5e1$export$54d297b886bf2ed","requestHeaders","trailers","responses","onfulfilled","onrejected","promiseFinished","$c1a91c7892c2007d$var$__awaiter","$c1a91c7892c2007d$export$9a440373637fd860","$4657bfdb87973be7$export$762bd1dd98f14729","transport","tail","mtd","inp","unary","interceptUnary","tail1","curr1","interceptServerStreaming","tail2","curr2","interceptClientStreaming","tail3","duplex","curr3","interceptDuplex","next3","$20234a69850c1659$export$68f8bc8a5b33041d","GrpcStatusCode","$a1575e6ad5c63bae$export$4e3e3e486ed9f5d1","GrpcWebFrame","$a1575e6ad5c63bae$var$__awaiter","$a1575e6ad5c63bae$export$641c599a9a5454a9","userAgent","append","DEADLINE_EXCEEDED","deadline","$a1575e6ad5c63bae$export$d52335670bfdafe1","DATA","msgLen","$a1575e6ad5c63bae$export$2ebba9492f07daa","headersOrFetchResponse","httpStatus","httpStatusText","responseType","fetchResponse","UNKNOWN","$a1575e6ad5c63bae$var$fetchHeadersToHttp","httpOk","responseMeta","$a1575e6ad5c63bae$var$parseMetadata","statusDetail","$a1575e6ad5c63bae$var$parseStatus","OK","$a1575e6ad5c63bae$var$httpStatusToGrpc","$a1575e6ad5c63bae$export$c01a6ab999ab488e","trailerData","$a1575e6ad5c63bae$var$parseTrailer","detail","$a1575e6ad5c63bae$export$58dcfd844f357880","stream","contentType","onFrame","streamReader","base64queue","byteQueue","INTERNAL","$a1575e6ad5c63bae$var$parseFormat","$a1575e6ad5c63bae$var$isReadableStream","whatWgReadableStream","safeLen","$a1575e6ad5c63bae$var$concatBytes","TRAILER","DATA_LOSS","fetchHeaders","UNAUTHENTICATED","PERMISSION_DENIED","NOT_FOUND","ABORTED","FAILED_PRECONDITION","RESOURCE_EXHAUSTED","CANCELLED","UNIMPLEMENTED","UNAVAILABLE","$3f538273e45fe924$export$9be068e9f3481a8","defaultOptions","mergeOptions","makeUrl","endsWith","maybeStatus","maybeTrailer","fetchInit","inputBytes","defHeader","responseStream","responseEmptyBody","defStatus","defTrailer","$a1575e6ad5c63bae$exports","createGrpcWebRequestHeader","Headers","createGrpcWebRequestBody","signal","abort","readGrpcWebResponseHeader","readGrpcWebResponseBody","O","readGrpcWebResponseTrailer","$22f7964c4fcca5e1$exports","ServerStreamingCall","maybeMessage","defMessage","$c1a91c7892c2007d$exports","UnaryCall","$4eabfef5527e8a39$export$ec97628372f4ab6c","componentIdIdx","entityIdIdx","stateComponents","stateEntities","stateHash","startBlockNumber","endBlockNumber","worldAddress","$4eabfef5527e8a39$export$2b5cea6c48fbdd25","$4eabfef5527e8a39$export$58aa9e692cebfd2e","$4eabfef5527e8a39$export$74206fc4ff84132","$4eabfef5527e8a39$export$4e5b7eaa93f5106b","$4eabfef5527e8a39$export$3ba502109ebd5763","$4eabfef5527e8a39$export$383cc886cc76bf15","$4eabfef5527e8a39$export$a9ffe2dd4345bf6e","$65af6609ef36bb72$export$4490e5fcc464b2c2","_transport","getStateLatest","getStateLatestStream","getStateBlockLatest","getStateAtBlock","getWorlds","$047bd35bffcb4bad$export$1d8617334c1af8c7","eventType","componentId","entityId","$047bd35bffcb4bad$export$7e625491fff42c57","blockTimestamp","transactionsConfirmed","ecsEvents","$047bd35bffcb4bad$export$d13de1f9e97f8f85","$4b92f2ced779a683$export$614a2c052e5ad7b9","subscribeToStreamLatest","$3d8eff121fb98adc$exports","$6788d34515ace175$exports","$34360dab3a2e8d3d$var$$37e051c17dc8d57f$var$indexedDB","indexedDB","$34360dab3a2e8d3d$var$$37e051c17dc8d57f$var$initStore","db","storeId","objectStoreNames","contains","createObjectStore","$34360dab3a2e8d3d$var$$37e051c17dc8d57f$export$4008f5b66f9e0b3c","stores","idb","dbId","open","onupgradeneeded","store","onsuccess","$34360dab3a2e8d3d$var$$37e051c17dc8d57f$var$initDb","openStore","objectStore","getAllKeys","stringKeys","getAll","ignoreResult","put","delete","keyIterator","valueIterator","iteratorA","iteratorB","nextA","nextB","$34360dab3a2e8d3d$var$$d3790d4c408d3ccd$export$36d5eab18646e34","namespace","$34360dab3a2e8d3d$var$$d3790d4c408d3ccd$export$98f1a20e3cf58471","componentToIndex","entities","entityToIndex","$34360dab3a2e8d3d$var$$d3790d4c408d3ccd$export$c452b55e9ad3f100","cacheStore","entity","normalizedEntity","componentIndex","entityIndex","$34360dab3a2e8d3d$var$$d3790d4c408d3ccd$export$e8bfd1501bf919b","$34360dab3a2e8d3d$var$$d3790d4c408d3ccd$export$10d53f278b56c1f9","shiftedPacked","keep","$af01d6ba913efef1$export$417857010dc9287f","lastEventInTx","txHash","$34360dab3a2e8d3d$var$$d3790d4c408d3ccd$export$f289377cad8eff8e","sortedStores","updateEvent","$34360dab3a2e8d3d$var$$d3790d4c408d3ccd$export$5f30852bcfcd8fd1","$34360dab3a2e8d3d$var$$d3790d4c408d3ccd$export$85ffbe50b201dba7","$34360dab3a2e8d3d$var$$d3790d4c408d3ccd$export$3757ed05bed63822","$34360dab3a2e8d3d$var$$d3790d4c408d3ccd$export$7a03e216dc636754","$34360dab3a2e8d3d$var$$eddd38fbb391f1b1$export$8fcbafd86baafc46","wssProvider","$34360dab3a2e8d3d$var$$eddd38fbb391f1b1$export$457bade2606c5b8","requireMinimumBlockNumber","blockPromise","rawBlock","$34360dab3a2e8d3d$var$$eddd38fbb391f1b1$export$b9fcc8145a518db4","contracts","getLogPromise","_blockNumber","getLogPromises","logPromises","topicsForContract","flat","call1","$34360dab3a2e8d3d$var$$eddd38fbb391f1b1$export$b8a57384d8c3eb18","supportsBatchQueries","addressToContractKey","contractKey","contractEvents","contractKey1","$96296c1cf92aabcc$exports","Contract","logDescription","eventKey","$34360dab3a2e8d3d$var$$eddd38fbb391f1b1$export$2d25b6777145d181","encodedRevertReason","defaultAbiCoder","$34360dab3a2e8d3d$var$$eaf2ef6fc5985657$export$500fbc0cd14cdbaa","jsonRpcUrl","wsRpcUrl","$34360dab3a2e8d3d$var$$eaf2ef6fc5985657$export$cd9c3c6bf535afc9","ConnectionState","$34360dab3a2e8d3d$var$$eaf2ef6fc5985657$export$2fe80484dc101cea","connected","DISCONNECTED","disposers","initProviders","prevProviders","newProviders","skipNetworkCheck","CONNECTED","currentProviders","onclose","keepAliveInterval","disposer","$34360dab3a2e8d3d$var$$38062e4c1898990e$export$20842336fd38cf1b","ContractSchemaValue","$34360dab3a2e8d3d$var$$38062e4c1898990e$export$306d21f7c1c30f07","INT8","INT16","INT128","INT256","INT","UINT8","UINT16","UINT128","UINT256","BOOL_ARRAY","INT8_ARRAY","INT16_ARRAY","INT32_ARRAY","INT64_ARRAY","INT128_ARRAY","INT256_ARRAY","INT_ARRAY","UINT8_ARRAY","UINT16_ARRAY","UINT32_ARRAY","UINT64_ARRAY","UINT128_ARRAY","UINT256_ARRAY","BYTES_ARRAY","STRING_ARRAY","$34360dab3a2e8d3d$var$$38062e4c1898990e$export$a501dcbfe48e972a","$34360dab3a2e8d3d$var$$13c58f8a4772d7e8$export$3b0b6c7b986ae9fe","valueType","$34360dab3a2e8d3d$var$$13c58f8a4772d7e8$export$f8c898e83b60faaa","valueTypes","$34360dab3a2e8d3d$var$$20922c2c18bed770$export$3d98eea197b73972","contractTopics","dummyContract","constants","AddressZero","contractTopic","topicsOrUndefined","$34360dab3a2e8d3d$var$$703df1239256a806$export$8c8eabe8748e941e","SyncState","$34360dab3a2e8d3d$var$$703df1239256a806$export$190ba0b68cfb3678","$34360dab3a2e8d3d$var$$274bae85b9c0c4fe$export$ba971d7104b36697","$34360dab3a2e8d3d$var$$274bae85b9c0c4fe$export$9a03464c96a587bc","$34360dab3a2e8d3d$var$$274bae85b9c0c4fe$export$34b33142e8b4b07","snapshotClient","$34360dab3a2e8d3d$var$$274bae85b9c0c4fe$export$5240cd1ce19f1856","$34360dab3a2e8d3d$var$$274bae85b9c0c4fe$export$ce399b8d5ba8fffb","$34360dab3a2e8d3d$var$$274bae85b9c0c4fe$export$bccf13dcb08b8a08","responseChunk","rawValue","$34360dab3a2e8d3d$var$$274bae85b9c0c4fe$export$72defde817ebbb8a","streamServiceUrl","transformWorldEvents","$34360dab3a2e8d3d$var$$274bae85b9c0c4fe$export$43c05b8ea935797c","blockNumber$","fetchWorldEvents","lastSyncedBlockNumber","$34360dab3a2e8d3d$var$$274bae85b9c0c4fe$export$ec9bf642fda28205","fromBlockNumber","toBlockNumber","setLoadingState","numSteps","chunkEvents","INITIAL","$34360dab3a2e8d3d$var$$274bae85b9c0c4fe$export$4543c3155dec6c4b","$34360dab3a2e8d3d$var$$274bae85b9c0c4fe$export$731f08e8f7451db","worldConfig","decoders","world","componentAddress","getComponent","getSchema","$34360dab3a2e8d3d$var$$274bae85b9c0c4fe$export$7c48e9fa31b7244f","World","$34360dab3a2e8d3d$var$$274bae85b9c0c4fe$export$d0aba65dea8bc8f1","contractsEvents","rawComponentId","ecsEvent","$34360dab3a2e8d3d$var$$274bae85b9c0c4fe$export$6c8acbfd41d9fcaf","convertedEcsEvents","$34360dab3a2e8d3d$var$$e843cd491b0a5396$export$a9fed1203c093fcc","blockNumberEvent$","initialSync$","initialSync","blockNr","initialBlockNumber","blocksToSync","currProviders","$34360dab3a2e8d3d$var$$33cd1094447e870f$export$4e85ff91a10f4ce4","input$","output$","percentage","keccak256Bytes","toUtf8Bytes","computedConfig","checkpointServiceUrl","worldContract","providerOptions","indexDbCache","passLiveEventsToOutput","latestEvent$","initialLiveEvents","streamStartBlockNumberPromise","cacheBlockNumber","snapshotBlockNumber","initialState","syncFromSnapshot","streamStartBlockNumber","gapStateEvents","LIVE","worker","postMessage"],"version":3,"file":"Sync.worker.ea8ce4e4.0c368890.js.map"}