// SPDX-License-Identifier: Unlicense
pragma solidity >=0.8.0;
import { IUint256Component } from "solecs/interfaces/IUint256Component.sol";
import { getAddressById } from "solecs/utils.sol";

import { ItemPrototypeComponent, ID as ItemPrototypeComponentID } from "../components/ItemPrototypeComponent.sol";

uint256 constant AirID = uint256(keccak256("block.Air"));
uint256 constant GrassID = uint256(keccak256("block.Grass"));
uint256 constant DirtID = uint256(keccak256("block.Dirt"));
uint256 constant LogID = uint256(keccak256("block.Log"));
uint256 constant StoneID = uint256(keccak256("block.Stone"));
uint256 constant SandID = uint256(keccak256("block.Sand"));
uint256 constant WaterID = uint256(keccak256("block.Water"));
uint256 constant CobblestoneID = uint256(keccak256("block.Cobblestone"));
uint256 constant CoalID = uint256(keccak256("block.Coal"));
uint256 constant CraftingID = uint256(keccak256("block.Crafting"));
uint256 constant IronID = uint256(keccak256("block.Iron"));
uint256 constant GoldID = uint256(keccak256("block.Gold"));
uint256 constant DiamondID = uint256(keccak256("block.Diamond"));
uint256 constant LeavesID = uint256(keccak256("block.Leaves"));
uint256 constant PlanksID = uint256(keccak256("block.Planks"));
uint256 constant RedFlowerID = uint256(keccak256("block.RedFlower"));
uint256 constant GrassPlantID = uint256(keccak256("block.GrassPlant"));
uint256 constant OrangeFlowerID = uint256(keccak256("block.OrangeFlower"));
uint256 constant MagentaFlowerID = uint256(keccak256("block.MagentaFlower"));
uint256 constant LightBlueFlowerID = uint256(keccak256("block.LightBlueFlower"));
uint256 constant LimeFlowerID = uint256(keccak256("block.LimeFlower"));
uint256 constant PinkFlowerID = uint256(keccak256("block.PinkFlower"));
uint256 constant GrayFlowerID = uint256(keccak256("block.GrayFlower"));
uint256 constant LightGrayFlowerID = uint256(keccak256("block.LightGrayFlower"));
uint256 constant CyanFlowerID = uint256(keccak256("block.CyanFlower"));
uint256 constant PurpleFlowerID = uint256(keccak256("block.PurpleFlower"));
uint256 constant BlueFlowerID = uint256(keccak256("block.BlueFlower"));
uint256 constant GreenFlowerID = uint256(keccak256("block.GreenFlower"));
uint256 constant BlackFlowerID = uint256(keccak256("block.BlackFlower"));
uint256 constant KelpID = uint256(keccak256("block.Kelp"));
uint256 constant WoolID = uint256(keccak256("block.Wool"));
uint256 constant SnowID = uint256(keccak256("block.Snow"));
uint256 constant ClayID = uint256(keccak256("block.Clay"));
uint256 constant BedrockID = uint256(keccak256("block.Bedrock"));

function defineBlocks(ItemPrototypeComponent itemPrototype) {
  itemPrototype.set(AirID);
  itemPrototype.set(GrassID);
  itemPrototype.set(DirtID);
  itemPrototype.set(LogID);
  itemPrototype.set(StoneID);
  itemPrototype.set(SandID);
  itemPrototype.set(WaterID);
  itemPrototype.set(CobblestoneID);
  itemPrototype.set(CoalID);
  itemPrototype.set(CraftingID);
  itemPrototype.set(IronID);
  itemPrototype.set(GoldID);
  itemPrototype.set(DiamondID);
  itemPrototype.set(LeavesID);
  itemPrototype.set(PlanksID);
  itemPrototype.set(RedFlowerID);
  itemPrototype.set(GrassPlantID);
  itemPrototype.set(OrangeFlowerID);
  itemPrototype.set(MagentaFlowerID);
  itemPrototype.set(LightBlueFlowerID);
  itemPrototype.set(LimeFlowerID);
  itemPrototype.set(PinkFlowerID);
  itemPrototype.set(GrayFlowerID);
  itemPrototype.set(LightGrayFlowerID);
  itemPrototype.set(CyanFlowerID);
  itemPrototype.set(PurpleFlowerID);
  itemPrototype.set(BlueFlowerID);
  itemPrototype.set(GreenFlowerID);
  itemPrototype.set(BlackFlowerID);
  itemPrototype.set(KelpID);
  itemPrototype.set(WoolID);
  itemPrototype.set(SnowID);
  itemPrototype.set(ClayID);
  itemPrototype.set(BedrockID);
}
